

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Thu Jun 25 23:14:44 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F2580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    94  0000                     
    95                           	psect	smallconst
    96  000600                     __psmallconst:
    97                           	opt stack 0
    98  000600                     _vscp_deviceURL:
    99                           	opt stack 0
   100  000600  77                 	db	119
   101  000601  77                 	db	119
   102  000602  77                 	db	119
   103  000603  2E                 	db	46
   104  000604  65                 	db	101
   105  000605  75                 	db	117
   106  000606  72                 	db	114
   107  000607  6F                 	db	111
   108  000608  73                 	db	115
   109  000609  6F                 	db	111
   110  00060A  75                 	db	117
   111  00060B  72                 	db	114
   112  00060C  63                 	db	99
   113  00060D  65                 	db	101
   114  00060E  2E                 	db	46
   115  00060F  73                 	db	115
   116  000610  65                 	db	101
   117  000611  2F                 	db	47
   118  000612  62                 	db	98
   119  000613  65                 	db	101
   120  000614  69                 	db	105
   121  000615  6A                 	db	106
   122  000616  69                 	db	105
   123  000617  6E                 	db	110
   124  000618  67                 	db	103
   125  000619  5F                 	db	95
   126  00061A  32                 	db	50
   127  00061B  2E                 	db	46
   128  00061C  78                 	db	120
   129  00061D  6D                 	db	109
   130  00061E  6C                 	db	108
   131  00061F  00                 	db	0
   132  000620                     __end_of_vscp_deviceURL:
   133                           	opt stack 0
   134  0000                     _BRGCON1	set	3952
   135  0000                     _BRGCON2	set	3953
   136  0000                     _BRGCON3	set	3954
   137  0000                     _BSEL0	set	3576
   138  0000                     _CANCON	set	3951
   139  0000                     _CIOCON	set	3955
   140  0000                     _ECANCON	set	3959
   141  0000                     _EEADR	set	4009
   142  0000                     _EECON1bits	set	4006
   143  0000                     _EECON2	set	4007
   144  0000                     _EEDATA	set	4008
   145  0000                     _INTCON2bits	set	4081
   146  0000                     _INTCONbits	set	4082
   147  0000                     _LATAbits	set	3977
   148  0000                     _LATBbits	set	3978
   149  0000                     _LATCbits	set	3979
   150  0000                     _MSEL0	set	3568
   151  0000                     _MSEL1	set	3569
   152  0000                     _MSEL2	set	3570
   153  0000                     _PORTA	set	3968
   154  0000                     _PORTB	set	3969
   155  0000                     _PORTC	set	3970
   156  0000                     _PORTCbits	set	3970
   157  0000                     _RXB1CONbits	set	3920
   158  0000                     _RXF0EIDH	set	3842
   159  0000                     _RXF0EIDL	set	3843
   160  0000                     _RXF0SIDH	set	3840
   161  0000                     _RXF0SIDL	set	3841
   162  0000                     _RXF1EIDH	set	3846
   163  0000                     _RXF1EIDL	set	3847
   164  0000                     _RXF1SIDL	set	3845
   165  0000                     _RXFBCON0	set	3552
   166  0000                     _RXFBCON1	set	3553
   167  0000                     _RXFBCON2	set	3554
   168  0000                     _RXFBCON3	set	3555
   169  0000                     _RXFBCON4	set	3556
   170  0000                     _RXFBCON5	set	3557
   171  0000                     _RXFBCON6	set	3558
   172  0000                     _RXFBCON7	set	3559
   173  0000                     _RXFCON0	set	3540
   174  0000                     _RXFCON1	set	3541
   175  0000                     _RXM0EIDH	set	3866
   176  0000                     _RXM0EIDL	set	3867
   177  0000                     _RXM0SIDH	set	3864
   178  0000                     _RXM0SIDL	set	3865
   179  0000                     _RXM1EIDH	set	3870
   180  0000                     _RXM1EIDL	set	3871
   181  0000                     _RXM1SIDL	set	3869
   182  0000                     _T0CON	set	4053
   183  0000                     _T0CONbits	set	4053
   184  0000                     _TMR0H	set	4055
   185  0000                     _TMR0L	set	4054
   186  0000                     _TRISA	set	3986
   187  0000                     _TRISB	set	3987
   188  0000                     _TRISC	set	3988
   189  0000                     _B0RXFUL	set	28935
   190  0000                     _B0TXEN	set	28610
   191  0000                     _B1RXFUL	set	29063
   192  0000                     _B1TXEN	set	28611
   193  0000                     _B2RXFUL	set	29191
   194  0000                     _B2TXEN	set	28612
   195  0000                     _B3RXFUL	set	29319
   196  0000                     _B3TXEN	set	28613
   197  0000                     _B4RXFUL	set	29447
   198  0000                     _B4TXEN	set	28614
   199  0000                     _B5RXFUL	set	29575
   200  0000                     _B5TXEN	set	28615
   201  0000                     _FIFOEMPTY	set	31655
   202  0000                     _IRXIF	set	32039
   203  0000                     _MDSEL0	set	31678
   204  0000                     _MDSEL1	set	31679
   205  0000                     _RXB0FILHIT0	set	31488
   206  0000                     _RXB0FUL	set	31495
   207  0000                     _RXB0IF	set	32032
   208  0000                     _RXB0OVFL	set	31655
   209  0000                     _RXB1IF	set	32033
   210  0000                     _RXB1OVFL	set	31654
   211  0000                     _RXF1EN	set	28321
   212  0000                     _RXM0EXIDM	set	30923
   213  0000                     _RXM1EXIDEN	set	30955
   214  0000                     _B0CON	set	3616
   215  0000                     _B1CON	set	3632
   216  0000                     _B2CON	set	3648
   217  0000                     _B3CON	set	3664
   218  0000                     _B4CON	set	3680
   219  0000                     _B5CON	set	3696
   220  0000                     _RXB0CON	set	3936
   221  0000                     _RXB1CON	set	3920
   222  0000                     _RXF1SIDH	set	3844
   223  0000                     _RXM1SIDH	set	3868
   224  0000                     _TXB0CON	set	3904
   225  0000                     _TXB1CON	set	3888
   226  0000                     _TXB2CON	set	3872
   227  000620  00                 	db	0	; dummy byte at the end
   228  0000                     
   229                           	psect	nvBANK0
   230  0000FF                     __pnvBANK0:
   231                           	opt stack 0
   232  0000FF                     ___DCDelay:
   233                           	opt stack 0
   234  0000FF                     	ds	1
   235                           
   236                           ; #config settings
   237  0000                     
   238                           	psect	cinit
   239  006DCC                     __pcinit:
   240                           	opt stack 0
   241  006DCC                     start_initialization:
   242                           	opt stack 0
   243  006DCC                     __initialization:
   244                           	opt stack 0
   245                           
   246                           ; Clear objects allocated to BANK1 (20 bytes)
   247  006DCC  EE01  F026         	lfsr	0,__pbssBANK1
   248  006DD0  0E14               	movlw	20
   249  006DD2                     clear_0:
   250  006DD2  6AEE               	clrf	postinc0,c
   251  006DD4  06E8               	decf	wreg,f,c
   252  006DD6  E1FD               	bnz	clear_0
   253                           
   254                           ; Clear objects allocated to BANK0 (66 bytes)
   255  006DD8  EE00  F0BD         	lfsr	0,__pbssBANK0
   256  006DDC  0E42               	movlw	66
   257  006DDE                     clear_1:
   258  006DDE  6AEE               	clrf	postinc0,c
   259  006DE0  06E8               	decf	wreg,f,c
   260  006DE2  E1FD               	bnz	clear_1
   261                           
   262                           ; Clear objects allocated to COMRAM (21 bytes)
   263  006DE4  EE00  F036         	lfsr	0,__pbssCOMRAM
   264  006DE8  0E15               	movlw	21
   265  006DEA                     clear_2:
   266  006DEA  6AEE               	clrf	postinc0,c
   267  006DEC  06E8               	decf	wreg,f,c
   268  006DEE  E1FD               	bnz	clear_2
   269  006DF0                     end_of_initialization:
   270                           	opt stack 0
   271  006DF0                     __end_of__initialization:
   272                           	opt stack 0
   273  006DF0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   274  006DF2  6EF8               	movwf	tblptru,c
   275  006DF4  0100               	movlb	0
   276  006DF6  EFDF  F02C         	goto	_main	;jump to C main() function
   277                           tblptru	equ	0xFF8
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           
   281                           	psect	bssCOMRAM
   282  000036                     __pbssCOMRAM:
   283                           	opt stack 0
   284  000036                     _vscp_page_select:
   285                           	opt stack 0
   286  000036                     	ds	2
   287  000038                     _vscp_timer:
   288                           	opt stack 0
   289  000038                     	ds	2
   290  00003A                     _vscp_guid_reset:
   291                           	opt stack 0
   292  00003A                     	ds	1
   293  00003B                     _vscp_initledfunc:
   294                           	opt stack 0
   295  00003B                     	ds	1
   296  00003C                     _vscp_probe_address:
   297                           	opt stack 0
   298  00003C                     	ds	1
   299  00003D                     _vscp_statuscnt:
   300                           	opt stack 0
   301  00003D                     	ds	1
   302  00003E                     _vscp_omsg:
   303                           	opt stack 0
   304  00003E                     	ds	13
   305                           tblptru	equ	0xFF8
   306                           postinc0	equ	0xFEE
   307                           wreg	equ	0xFE8
   308                           
   309                           	psect	bssBANK0
   310  0000BD                     __pbssBANK0:
   311                           	opt stack 0
   312  0000BD                     _channel_protection_timer:
   313                           	opt stack 0
   314  0000BD                     	ds	20
   315  0000D1                     _measurement_clock:
   316                           	opt stack 0
   317  0000D1                     	ds	4
   318  0000D5                     _channel_pulse_flags:
   319                           	opt stack 0
   320  0000D5                     	ds	2
   321  0000D7                     _current_iostate:
   322                           	opt stack 0
   323  0000D7                     	ds	2
   324  0000D9                     _vscp_configtimer:
   325                           	opt stack 0
   326  0000D9                     	ds	2
   327  0000DB                     __ECANRxFilterHitInfo:
   328                           	opt stack 0
   329  0000DB                     	ds	1
   330  0000DC                     __IT_DATA:
   331                           	opt stack 0
   332  0000DC                     	ds	1
   333  0000DD                     __IT_ID:
   334                           	opt stack 0
   335  0000DD                     	ds	1
   336  0000DE                     __IT_INT_MASK:
   337                           	opt stack 0
   338  0000DE                     	ds	1
   339  0000DF                     __IT_SAVE_BSR:
   340                           	opt stack 0
   341  0000DF                     	ds	1
   342  0000E0                     __IT_SAVE_STATUS:
   343                           	opt stack 0
   344  0000E0                     	ds	1
   345  0000E1                     __IT_SAVE_WREG:
   346                           	opt stack 0
   347  0000E1                     	ds	1
   348  0000E2                     ___DCByte:
   349                           	opt stack 0
   350  0000E2                     	ds	1
   351  0000E3                     _hours:
   352                           	opt stack 0
   353  0000E3                     	ds	1
   354  0000E4                     _minutes:
   355                           	opt stack 0
   356  0000E4                     	ds	1
   357  0000E5                     _seconds:
   358                           	opt stack 0
   359  0000E5                     	ds	1
   360  0000E6                     _sendTimer:
   361                           	opt stack 0
   362  0000E6                     	ds	1
   363  0000E7                     _vscp_alarmstatus:
   364                           	opt stack 0
   365  0000E7                     	ds	1
   366  0000E8                     _vscp_errorcnt:
   367                           	opt stack 0
   368  0000E8                     	ds	1
   369  0000E9                     _vscp_hour:
   370                           	opt stack 0
   371  0000E9                     	ds	1
   372  0000EA                     _vscp_initbtncnt:
   373                           	opt stack 0
   374  0000EA                     	ds	1
   375  0000EB                     _vscp_minute:
   376                           	opt stack 0
   377  0000EB                     	ds	1
   378  0000EC                     _vscp_nickname:
   379                           	opt stack 0
   380  0000EC                     	ds	1
   381  0000ED                     _vscp_node_state:
   382                           	opt stack 0
   383  0000ED                     	ds	1
   384  0000EE                     _vscp_node_substate:
   385                           	opt stack 0
   386  0000EE                     	ds	1
   387  0000EF                     _vscp_probe_cnt:
   388                           	opt stack 0
   389  0000EF                     	ds	1
   390  0000F0                     _vscp_second:
   391                           	opt stack 0
   392  0000F0                     	ds	1
   393  0000F1                     _vscp_imsg:
   394                           	opt stack 0
   395  0000F1                     	ds	14
   396                           tblptru	equ	0xFF8
   397                           postinc0	equ	0xFEE
   398                           wreg	equ	0xFE8
   399                           
   400                           	psect	bssBANK1
   401  000126                     __pbssBANK1:
   402                           	opt stack 0
   403  000126                     _channel_pulse_timer:
   404                           	opt stack 0
   405  000126                     	ds	20
   406                           tblptru	equ	0xFF8
   407                           postinc0	equ	0xFEE
   408                           wreg	equ	0xFE8
   409                           
   410                           	psect	cstackBANK1
   411  000100                     __pcstackBANK1:
   412                           	opt stack 0
   413  000100                     ??_doApplicationOneSecondWork:
   414  000100                     vscp_handleProtocolEvent@page_save:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x0
   418  000100                     	ds	2
   419  000102                     vscp_handleProtocolEvent@page_save_1404:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x2
   423  000102                     	ds	2
   424  000104                     vscp_handleProtocolEvent@offset:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x4
   428  000104                     	ds	1
   429  000105                     vscp_handleProtocolEvent@pos:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x5
   433  000105                     	ds	1
   434  000106                     vscp_handleProtocolEvent@bytes:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x6
   438  000106                     	ds	1
   439  000107                     vscp_handleProtocolEvent@len:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x7
   443  000107                     	ds	1
   444  000108                     vscp_handleProtocolEvent@pos_1393:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x8
   448  000108                     	ds	1
   449  000109                     vscp_handleProtocolEvent@len_1394:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x9
   453  000109                     	ds	1
   454  00010A                     vscp_handleProtocolEvent@bytes_this_time:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0xA
   458  00010A                     	ds	1
   459  00010B                     vscp_handleProtocolEvent@cb:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0xB
   463  00010B                     	ds	1
   464  00010C                     vscp_handleProtocolEvent@i_1403:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0xC
   468  00010C                     	ds	1
   469  00010D                     vscp_handleProtocolEvent@k:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0xD
   473  00010D                     	ds	1
   474  00010E                     vscp_handleProtocolEvent@i_1392:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0xE
   478  00010E                     	ds	1
   479  00010F                     vscp_handleProtocolEvent@byte:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0xF
   483  00010F                     	ds	1
   484  000110                     vscp_handleProtocolEvent@bytes_1399:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x10
   488  000110                     	ds	2
   489  000112                     vscp_handleProtocolEvent@i_1395:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x12
   493  000112                     	ds	1
   494  000113                     vscp_handleProtocolEvent@i:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x13
   498  000113                     	ds	1
   499  000114                     vscp_handleProtocolEvent@j:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x14
   503  000114                     	ds	17
   504  000125                     ??_main:
   505                           
   506                           ; 0 bytes @ 0x25
   507  000125                     	ds	1
   508                           tblptru	equ	0xFF8
   509                           postinc0	equ	0xFEE
   510                           wreg	equ	0xFE8
   511                           
   512                           	psect	cstackBANK0
   513  000060                     __pcstackBANK0:
   514                           	opt stack 0
   515  000060                     ??_init_app_ram:
   516  000060                     ??_calculateSetFilterMask:
   517  000060                     ?_getVSCPFrame:
   518                           	opt stack 0
   519  000060                     getVSCPFrame@pvscpclass:
   520                           	opt stack 0
   521  000060                     ECANSendMessage@pb:
   522                           	opt stack 0
   523                           
   524                           ; 18 bytes @ 0x0
   525  000060                     	ds	2
   526  000062                     getVSCPFrame@pvscptype:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x2
   530  000062                     	ds	2
   531  000064                     getVSCPFrame@pNodeId:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x4
   535  000064                     	ds	2
   536  000066                     getVSCPFrame@pPriority:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x6
   540  000066                     	ds	2
   541  000068                     getVSCPFrame@pSize:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x8
   545  000068                     	ds	2
   546  00006A                     getVSCPFrame@pData:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0xA
   550  00006A                     	ds	2
   551  00006C                     ??_getVSCPFrame:
   552                           
   553                           ; 0 bytes @ 0xC
   554  00006C                     	ds	4
   555  000070                     getVSCPFrame@id:
   556                           	opt stack 0
   557                           
   558                           ; 4 bytes @ 0x10
   559  000070                     	ds	2
   560  000072                     ECANSendMessage@mode:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x12
   564  000072                     	ds	1
   565  000073                     ECANSendMessage@buffers:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x13
   569  000073                     	ds	1
   570  000074                     ECANSendMessage@j:
   571                           	opt stack 0
   572  000074                     vscp_getEvent@rv:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x14
   576  000074                     	ds	1
   577  000075                     ECANSendMessage@tempBSEL0:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x15
   581  000075                     	ds	1
   582  000076                     ECANSendMessage@tempPtr:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x16
   586  000076                     	ds	2
   587  000078                     ECANSendMessage@temp:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x18
   591  000078                     	ds	1
   592  000079                     ECANSendMessage@i:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x19
   596  000079                     	ds	1
   597  00007A                     ECANSendMessage@ptr:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x1A
   601  00007A                     	ds	2
   602  00007C                     ?_sendCANFrame:
   603                           	opt stack 0
   604  00007C                     sendCANFrame@id:
   605                           	opt stack 0
   606                           
   607                           ; 4 bytes @ 0x1C
   608  00007C                     	ds	4
   609  000080                     sendCANFrame@dlc:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x20
   613  000080                     	ds	1
   614  000081                     sendCANFrame@pdata:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x21
   618  000081                     	ds	2
   619  000083                     ?_sendVSCPFrame:
   620                           	opt stack 0
   621  000083                     sendVSCPFrame@vscpclass:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x23
   625  000083                     	ds	2
   626  000085                     sendVSCPFrame@vscptype:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0x25
   630  000085                     	ds	1
   631  000086                     sendVSCPFrame@nodeid:
   632                           	opt stack 0
   633                           
   634                           ; 1 bytes @ 0x26
   635  000086                     	ds	1
   636  000087                     sendVSCPFrame@priority:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x27
   640  000087                     	ds	1
   641  000088                     sendVSCPFrame@size:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x28
   645  000088                     	ds	1
   646  000089                     sendVSCPFrame@pData:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x29
   650  000089                     	ds	2
   651  00008B                     ??_sendVSCPFrame:
   652                           
   653                           ; 0 bytes @ 0x2B
   654  00008B                     	ds	20
   655  00009F                     SendInformationEvent@data:
   656                           	opt stack 0
   657                           
   658                           ; 3 bytes @ 0x3F
   659  00009F                     	ds	3
   660  0000A2                     ?_doActionOff:
   661                           	opt stack 0
   662  0000A2                     ?_doActionOn:
   663                           	opt stack 0
   664  0000A2                     ?_doActionStatus:
   665                           	opt stack 0
   666  0000A2                     ?_doActionToggle:
   667                           	opt stack 0
   668  0000A2                     ?_vscp_writeAppReg:
   669                           	opt stack 0
   670  0000A2                     vscp_writeAppReg@reg:
   671                           	opt stack 0
   672  0000A2                     doActionOn@dmflags:
   673                           	opt stack 0
   674  0000A2                     doActionOff@dmflags:
   675                           	opt stack 0
   676  0000A2                     doActionStatus@dmflags:
   677                           	opt stack 0
   678  0000A2                     doActionToggle@dmflags:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x42
   682  0000A2                     	ds	1
   683  0000A3                     vscp_writeAppReg@val:
   684                           	opt stack 0
   685  0000A3                     doActionOn@arg:
   686                           	opt stack 0
   687  0000A3                     doActionOff@arg:
   688                           	opt stack 0
   689  0000A3                     doActionStatus@arg:
   690                           	opt stack 0
   691  0000A3                     doActionToggle@arg:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x43
   695  0000A3                     	ds	1
   696  0000A4                     ??_doActionOff:
   697  0000A4                     ??_doActionOn:
   698  0000A4                     ??_doActionStatus:
   699  0000A4                     ??_doActionToggle:
   700  0000A4                     ??_vscp_writeAppReg:
   701                           
   702                           ; 0 bytes @ 0x44
   703  0000A4                     	ds	2
   704  0000A6                     doActionOff@val:
   705                           	opt stack 0
   706  0000A6                     doActionStatus@val:
   707                           	opt stack 0
   708  0000A6                     doActionToggle@val:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x46
   712  0000A6                     	ds	1
   713  0000A7                     doActionOff@i:
   714                           	opt stack 0
   715  0000A7                     doActionStatus@bOn:
   716                           	opt stack 0
   717  0000A7                     doActionToggle@bOn:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0x47
   721  0000A7                     	ds	1
   722  0000A8                     vscp_writeAppReg@val_1166:
   723                           	opt stack 0
   724  0000A8                     doActionOn@val:
   725                           	opt stack 0
   726  0000A8                     doActionStatus@i:
   727                           	opt stack 0
   728  0000A8                     doActionToggle@i:
   729                           	opt stack 0
   730  0000A8                     doApplicationOneSecondWork@iodirections:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x48
   734  0000A8                     	ds	1
   735  0000A9                     vscp_writeAppReg@bInfoEvent:
   736                           	opt stack 0
   737  0000A9                     doActionOn@i:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x49
   741  0000A9                     	ds	1
   742  0000AA                     ??_doDM:
   743  0000AA                     doApplicationOneSecondWork@bOn:
   744                           	opt stack 0
   745  0000AA                     vscp_writeAppReg@rv:
   746                           	opt stack 0
   747                           
   748                           ; 1 bytes @ 0x4A
   749  0000AA                     	ds	1
   750  0000AB                     doApplicationOneSecondWork@ctrlreg:
   751                           	opt stack 0
   752  0000AB                     vscp_writeAppReg@bOn:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0x4B
   756  0000AB                     	ds	1
   757  0000AC                     ?_vscp_writeRegister:
   758                           	opt stack 0
   759  0000AC                     doApplicationOneSecondWork@i:
   760                           	opt stack 0
   761  0000AC                     vscp_writeRegister@reg:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x4C
   765  0000AC                     	ds	1
   766  0000AD                     vscp_writeRegister@value:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x4D
   770  0000AD                     	ds	1
   771  0000AE                     ??_vscp_handleProtocolEvent:
   772                           
   773                           ; 0 bytes @ 0x4E
   774  0000AE                     	ds	2
   775  0000B0                     doDM@class_filter:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x50
   779  0000B0                     	ds	2
   780  0000B2                     doDM@class_mask:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x52
   784  0000B2                     	ds	2
   785  0000B4                     doDM@type_filter:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0x54
   789  0000B4                     	ds	1
   790  0000B5                     doDM@type_mask:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x55
   794  0000B5                     	ds	1
   795  0000B6                     _doDM$2282:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x56
   799  0000B6                     	ds	1
   800  0000B7                     _doDM$2283:
   801                           	opt stack 0
   802                           
   803                           ; 1 bytes @ 0x57
   804  0000B7                     	ds	1
   805  0000B8                     _doDM$2284:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x58
   809  0000B8                     	ds	1
   810  0000B9                     _doDM$2285:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x59
   814  0000B9                     	ds	1
   815  0000BA                     _doDM$2286:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x5A
   819  0000BA                     	ds	1
   820  0000BB                     doDM@dmflags:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x5B
   824  0000BB                     	ds	1
   825  0000BC                     doDM@i:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x5C
   829  0000BC                     	ds	1
   830                           tblptru	equ	0xFF8
   831                           postinc0	equ	0xFEE
   832                           wreg	equ	0xFE8
   833                           
   834                           	psect	cstackCOMRAM
   835  000001                     __pcstackCOMRAM:
   836                           	opt stack 0
   837  000001                     ?i1_WriteTimer0:
   838                           	opt stack 0
   839  000001                     i1WriteTimer0@timer0:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0x0
   843  000001                     	ds	2
   844  000003                     i1WriteTimer0@timer:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0x2
   848  000003                     	ds	2
   849  000005                     ??_interrupt_at_low_vector:
   850                           
   851                           ; 0 bytes @ 0x4
   852  000005                     	ds	17
   853  000016                     ?_ECANSetOperationMode:
   854                           	opt stack 0
   855  000016                     ?__CANIDToRegs:
   856                           	opt stack 0
   857  000016                     ?__RegsToCANID:
   858                           	opt stack 0
   859  000016                     ?_WriteTimer0:
   860                           	opt stack 0
   861  000016                     ?_Write_b_eep:
   862                           	opt stack 0
   863  000016                     ??_vscp_error:
   864  000016                     ?_OpenTimer0:
   865                           	opt stack 0
   866  000016                     ?_vscp_getMatrixInfo:
   867                           	opt stack 0
   868  000016                     ?_Read_b_eep:
   869                           	opt stack 0
   870  000016                     ?_vscp_getMDF_URL:
   871                           	opt stack 0
   872  000016                     ?__ECANPointBuffer:
   873                           	opt stack 0
   874  000016                     ?___awmod:
   875                           	opt stack 0
   876  000016                     ?_vscp_getFamilyCode:
   877                           	opt stack 0
   878  000016                     ?_vscp_getFamilyType:
   879                           	opt stack 0
   880  000016                     ECANSetOperationMode@mode:
   881                           	opt stack 0
   882  000016                     __ECANPointBuffer@b:
   883                           	opt stack 0
   884  000016                     vscp_getMDF_URL@idx:
   885                           	opt stack 0
   886  000016                     OpenTimer0@config:
   887                           	opt stack 0
   888  000016                     __CANIDToRegs@ptr:
   889                           	opt stack 0
   890  000016                     __RegsToCANID@ptr:
   891                           	opt stack 0
   892  000016                     Read_b_eep@badd:
   893                           	opt stack 0
   894  000016                     Write_b_eep@badd:
   895                           	opt stack 0
   896  000016                     WriteTimer0@timer0:
   897                           	opt stack 0
   898  000016                     ___awmod@dividend:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x15
   902  000016                     	ds	1
   903  000017                     ??_ECANInitialize:
   904  000017                     
   905                           ; 0 bytes @ 0x16
   906  000017                     	ds	1
   907  000018                     ??_vscp_init:
   908  000018                     ?_doActionPulse:
   909                           	opt stack 0
   910  000018                     ??_vscp_getMatrixInfo:
   911  000018                     ?_vscp_readAppReg:
   912                           	opt stack 0
   913  000018                     ?_vscp_getGUID:
   914                           	opt stack 0
   915  000018                     ?_vscp_getUserID:
   916                           	opt stack 0
   917  000018                     ?_vscp_getManufacturerId:
   918                           	opt stack 0
   919  000018                     init_app_ram@dir:
   920                           	opt stack 0
   921  000018                     vscp_readAppReg@reg:
   922                           	opt stack 0
   923  000018                     doActionPulse@dmflags:
   924                           	opt stack 0
   925  000018                     vscp_getGUID@idx:
   926                           	opt stack 0
   927  000018                     vscp_getUserID@idx:
   928                           	opt stack 0
   929  000018                     vscp_getManufacturerId@idx:
   930                           	opt stack 0
   931  000018                     Write_b_eep@bdat:
   932                           	opt stack 0
   933  000018                     __RegsToCANID@val:
   934                           	opt stack 0
   935  000018                     __ECANPointBuffer@pt:
   936                           	opt stack 0
   937  000018                     WriteTimer0@timer:
   938                           	opt stack 0
   939  000018                     ___awmod@divisor:
   940                           	opt stack 0
   941  000018                     __CANIDToRegs@val:
   942                           	opt stack 0
   943                           
   944                           ; 4 bytes @ 0x17
   945  000018                     	ds	1
   946  000019                     ??_Write_b_eep:
   947  000019                     ??_vscp_readAppReg:
   948  000019                     init_app_ram@i:
   949                           	opt stack 0
   950  000019                     doActionPulse@arg:
   951                           	opt stack 0
   952  000019                     vscp_getMatrixInfo@i:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0x18
   956  000019                     	ds	1
   957  00001A                     ??_init:
   958  00001A                     ??_doActionPulse:
   959  00001A                     ??___awmod:
   960  00001A                     ?_vscp_readStdReg:
   961                           	opt stack 0
   962  00001A                     __RegsToCANID@type:
   963                           	opt stack 0
   964  00001A                     vscp_readAppReg@rv:
   965                           	opt stack 0
   966  00001A                     vscp_readStdReg@reg:
   967                           	opt stack 0
   968  00001A                     Write_b_eep@GIE_BIT_VAL:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x19
   972  00001A                     	ds	1
   973  00001B                     ??__RegsToCANID:
   974  00001B                     ??_init_app_eeprom:
   975  00001B                     ??_vscp_readStdReg:
   976  00001B                     ?_vscp_setGUID:
   977                           	opt stack 0
   978  00001B                     ?_vscp_setManufacturerId:
   979                           	opt stack 0
   980  00001B                     ?_vscp_writeNicknamePermanent:
   981                           	opt stack 0
   982  00001B                     ?_vscp_setUserID:
   983                           	opt stack 0
   984  00001B                     ?_vscp_setSegmentCRC:
   985                           	opt stack 0
   986  00001B                     ?_vscp_setControlByte:
   987                           	opt stack 0
   988  00001B                     ?_vscp_goBootloaderMode:
   989                           	opt stack 0
   990  00001B                     vscp_setGUID@idx:
   991                           	opt stack 0
   992  00001B                     vscp_setManufacturerId@idx:
   993                           	opt stack 0
   994  00001B                     vscp_writeNicknamePermanent@nickname:
   995                           	opt stack 0
   996  00001B                     vscp_setUserID@idx:
   997                           	opt stack 0
   998  00001B                     vscp_setSegmentCRC@crc:
   999                           	opt stack 0
  1000  00001B                     vscp_setControlByte@ctrl:
  1001                           	opt stack 0
  1002  00001B                     vscp_goBootloaderMode@algorithm:
  1003                           	opt stack 0
  1004  00001B                     ___awmod@counter:
  1005                           	opt stack 0
  1006                           
  1007                           ; 1 bytes @ 0x1A
  1008  00001B                     	ds	1
  1009  00001C                     ??_vscp_check_pstorage:
  1010  00001C                     ??_vscp_goBootloaderMode:
  1011  00001C                     ??_vscp_handleHeartbeat:
  1012  00001C                     ??_vscp_handleSetNickname:
  1013  00001C                     ??_vscp_handleDropNickname:
  1014  00001C                     __CANIDToRegs@type:
  1015                           	opt stack 0
  1016  00001C                     init_app_eeprom@j:
  1017                           	opt stack 0
  1018  00001C                     vscp_setGUID@data:
  1019                           	opt stack 0
  1020  00001C                     vscp_setManufacturerId@data:
  1021                           	opt stack 0
  1022  00001C                     vscp_setUserID@data:
  1023                           	opt stack 0
  1024  00001C                     ___awmod@sign:
  1025                           	opt stack 0
  1026                           
  1027                           ; 1 bytes @ 0x1B
  1028  00001C                     	ds	1
  1029  00001D                     ??__CANIDToRegs:
  1030  00001D                     init_app_eeprom@i:
  1031                           	opt stack 0
  1032  00001D                     vscp_handleDropNickname@bytes:
  1033                           	opt stack 0
  1034  00001D                     __RegsToCANID@Value:
  1035                           	opt stack 0
  1036                           
  1037                           ; 2 bytes @ 0x1C
  1038  00001D                     	ds	1
  1039  00001E                     ?_vscp_writeStdReg:
  1040                           	opt stack 0
  1041  00001E                     doActionPulse@val:
  1042                           	opt stack 0
  1043  00001E                     vscp_writeStdReg@reg:
  1044                           	opt stack 0
  1045                           
  1046                           ; 1 bytes @ 0x1D
  1047  00001E                     	ds	1
  1048  00001F                     ?_ECANReceiveMessage:
  1049                           	opt stack 0
  1050  00001F                     doActionPulse@i:
  1051                           	opt stack 0
  1052  00001F                     vscp_writeStdReg@value:
  1053                           	opt stack 0
  1054  00001F                     ECANReceiveMessage@id:
  1055                           	opt stack 0
  1056  00001F                     __CANIDToRegs@Value:
  1057                           	opt stack 0
  1058                           
  1059                           ; 2 bytes @ 0x1E
  1060  00001F                     	ds	1
  1061  000020                     ??_vscp_writeStdReg:
  1062  000020                     vscp_readStdReg@code:
  1063                           	opt stack 0
  1064                           
  1065                           ; 4 bytes @ 0x1F
  1066  000020                     	ds	1
  1067  000021                     ?_ECANSendMessage:
  1068                           	opt stack 0
  1069  000021                     ECANReceiveMessage@data:
  1070                           	opt stack 0
  1071  000021                     ECANSendMessage@id:
  1072                           	opt stack 0
  1073  000021                     calculateSetFilterMask@rowmask:
  1074                           	opt stack 0
  1075                           
  1076                           ; 4 bytes @ 0x20
  1077  000021                     	ds	2
  1078  000023                     ECANReceiveMessage@dataLen:
  1079                           	opt stack 0
  1080                           
  1081                           ; 2 bytes @ 0x22
  1082  000023                     	ds	1
  1083  000024                     vscp_writeStdReg@rv:
  1084                           	opt stack 0
  1085  000024                     vscp_readStdReg@code_1377:
  1086                           	opt stack 0
  1087                           
  1088                           ; 4 bytes @ 0x23
  1089  000024                     	ds	1
  1090  000025                     calculateSetFilterMask@lastOID:
  1091                           	opt stack 0
  1092  000025                     ECANSendMessage@data:
  1093                           	opt stack 0
  1094  000025                     ECANReceiveMessage@msgFlags:
  1095                           	opt stack 0
  1096                           
  1097                           ; 2 bytes @ 0x24
  1098  000025                     	ds	1
  1099  000026                     calculateSetFilterMask@mask:
  1100                           	opt stack 0
  1101                           
  1102                           ; 4 bytes @ 0x25
  1103  000026                     	ds	1
  1104  000027                     ??_ECANReceiveMessage:
  1105  000027                     ECANSendMessage@dataLen:
  1106                           	opt stack 0
  1107                           
  1108                           ; 1 bytes @ 0x26
  1109  000027                     	ds	1
  1110  000028                     ECANSendMessage@msgFlags:
  1111                           	opt stack 0
  1112  000028                     vscp_readStdReg@idx:
  1113                           	opt stack 0
  1114  000028                     ECANReceiveMessage@savedPtr:
  1115                           	opt stack 0
  1116                           
  1117                           ; 2 bytes @ 0x27
  1118  000028                     	ds	1
  1119  000029                     ??_ECANSendMessage:
  1120  000029                     vscp_readStdReg@idx_1378:
  1121                           	opt stack 0
  1122                           
  1123                           ; 1 bytes @ 0x28
  1124  000029                     	ds	1
  1125  00002A                     ??_sendCANFrame:
  1126  00002A                     ECANReceiveMessage@i:
  1127                           	opt stack 0
  1128  00002A                     vscp_readStdReg@rv:
  1129                           	opt stack 0
  1130  00002A                     calculateSetFilterMask@filter:
  1131                           	opt stack 0
  1132                           
  1133                           ; 4 bytes @ 0x29
  1134  00002A                     	ds	1
  1135  00002B                     ?_vscp_readRegister:
  1136                           	opt stack 0
  1137  00002B                     ECANReceiveMessage@mode:
  1138                           	opt stack 0
  1139  00002B                     sendCANFrame@rv:
  1140                           	opt stack 0
  1141  00002B                     vscp_readRegister@reg:
  1142                           	opt stack 0
  1143                           
  1144                           ; 1 bytes @ 0x2A
  1145  00002B                     	ds	1
  1146  00002C                     ECANReceiveMessage@temp:
  1147                           	opt stack 0
  1148  00002C                     sendVSCPFrame@id:
  1149                           	opt stack 0
  1150                           
  1151                           ; 4 bytes @ 0x2B
  1152  00002C                     	ds	1
  1153  00002D                     ECANReceiveMessage@ptr:
  1154                           	opt stack 0
  1155                           
  1156                           ; 2 bytes @ 0x2C
  1157  00002D                     	ds	1
  1158  00002E                     calculateSetFilterMask@rowfilter:
  1159                           	opt stack 0
  1160                           
  1161                           ; 4 bytes @ 0x2D
  1162  00002E                     	ds	1
  1163  00002F                     ?_getCANFrame:
  1164                           	opt stack 0
  1165  00002F                     getCANFrame@pid:
  1166                           	opt stack 0
  1167                           
  1168                           ; 2 bytes @ 0x2E
  1169  00002F                     	ds	1
  1170  000030                     ?_SendInformationEvent:
  1171                           	opt stack 0
  1172  000030                     SendInformationEvent@idx:
  1173                           	opt stack 0
  1174  000030                     vscp_sendEvent@rv:
  1175                           	opt stack 0
  1176                           
  1177                           ; 1 bytes @ 0x2F
  1178  000030                     	ds	1
  1179  000031                     ??_vscp_goActiveState:
  1180  000031                     ?_vscp_sendHeartBeat:
  1181                           	opt stack 0
  1182  000031                     ??_vscp_newNodeOnline:
  1183  000031                     SendInformationEvent@eventClass:
  1184                           	opt stack 0
  1185  000031                     vscp_sendHeartBeat@zone:
  1186                           	opt stack 0
  1187  000031                     getCANFrame@pdlc:
  1188                           	opt stack 0
  1189                           
  1190                           ; 2 bytes @ 0x30
  1191  000031                     	ds	1
  1192  000032                     ??_vscp_handleProbeState:
  1193  000032                     SendInformationEvent@eventTypeId:
  1194                           	opt stack 0
  1195  000032                     calculateSetFilterMask@j:
  1196                           	opt stack 0
  1197  000032                     vscp_sendHeartBeat@subzone:
  1198                           	opt stack 0
  1199                           
  1200                           ; 1 bytes @ 0x31
  1201  000032                     	ds	1
  1202  000033                     ??_SendInformationEvent:
  1203  000033                     ??_vscp_sendHeartBeat:
  1204  000033                     calculateSetFilterMask@i:
  1205                           	opt stack 0
  1206  000033                     getCANFrame@pdata:
  1207                           	opt stack 0
  1208                           
  1209                           ; 2 bytes @ 0x32
  1210  000033                     	ds	1
  1211  000034                     ??_vscp_doOneSecondWork:
  1212                           
  1213                           ; 0 bytes @ 0x33
  1214  000034                     	ds	1
  1215  000035                     getCANFrame@flags:
  1216                           	opt stack 0
  1217                           
  1218                           ; 1 bytes @ 0x34
  1219  000035                     	ds	1
  1220  000036                     tblptru	equ	0xFF8
  1221                           postinc0	equ	0xFEE
  1222                           wreg	equ	0xFE8
  1223                           
  1224                           ; 0 bytes @ 0x35
  1225 ;;
  1226 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1227 ;;
  1228 ;; *************** function _main *****************
  1229 ;; Defined at:
  1230 ;;		line 189 in file "../main.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  b               1    0        unsigned char 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;		None               void
  1237 ;; Registers used:
  1238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1244 ;;      Params:         0       0       0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0       0       0
  1246 ;;      Temps:          0       0       1       0       0       0       0
  1247 ;;      Totals:         0       0       1       0       0       0       0
  1248 ;;Total ram usage:        1 bytes
  1249 ;; Hardware stack levels required when called:   10
  1250 ;; This function calls:
  1251 ;;		_init
  1252 ;;		_vscp_check_pstorage
  1253 ;;		_init_app_eeprom
  1254 ;;		_init_app_ram
  1255 ;;		_vscp_init
  1256 ;;		_Busy_eep
  1257 ;;		_Write_b_eep
  1258 ;;		_vscp_getEvent
  1259 ;;		_vscp_goActiveState
  1260 ;;		_vscp_handleProbeState
  1261 ;;		_vscp_handleProtocolEvent
  1262 ;;		_doDM
  1263 ;;		_vscp_error
  1264 ;;		_vscp_doOneSecondWork
  1265 ;;		_doApplicationOneSecondWork
  1266 ;;		_doWork
  1267 ;; This function is called by:
  1268 ;;		Startup code after reset
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           	psect	text0
  1273  0059BE                     __ptext0:
  1274                           	opt stack 0
  1275  0059BE                     _main:
  1276                           	opt stack 20
  1277                           
  1278                           ;main.c: 190: unsigned char b;
  1279                           ;main.c: 192: init();
  1280                           
  1281                           ;incstack = 0
  1282                           ;incstack = 0
  1283  0059BE  EC92  F035         	call	_init	;wreg free
  1284                           
  1285                           ;main.c: 196: if ( !vscp_check_pstorage() ) {
  1286  0059C2  EC96  F036         	call	_vscp_check_pstorage	;wreg free
  1287  0059C6  0900               	iorlw	0
  1288  0059C8  B4D8               	btfsc	status,2,c
  1289                           
  1290                           ;main.c: 199: init_app_eeprom();
  1291  0059CA  ECFF  F02B         	call	_init_app_eeprom	;wreg free
  1292                           
  1293                           ;main.c: 201: }
  1294                           ;main.c: 204: init_app_ram();
  1295  0059CE  EC44  F023         	call	_init_app_ram	;wreg free
  1296                           
  1297                           ;main.c: 207: vscp_init();
  1298  0059D2  EC0F  F033         	call	_vscp_init	;wreg free
  1299  0059D6                     l407:
  1300  0059D6  0004               	clrwdt		;# 
  1301                           
  1302                           ;main.c: 213: if ( ( vscp_initbtncnt > 250 ) &&
  1303                           ;main.c: 214: ( 0x01 != vscp_node_state ) ) {
  1304  0059D8  0EFA               	movlw	250
  1305  0059DA  0100               	movlb	0	; () banked
  1306  0059DC  0100               	movlb	0	; () banked
  1307  0059DE  65EA               	cpfsgt	_vscp_initbtncnt& (0+255),b	;volatile
  1308  0059E0  D018               	goto	l9098
  1309                           
  1310                           ; BSR set to: 0
  1311  0059E2  0100               	movlb	0	; () banked
  1312  0059E4  0100               	movlb	0	; () banked
  1313  0059E6  05ED               	decf	_vscp_node_state& (0+255),w,b
  1314  0059E8  B4D8               	btfsc	status,2,c
  1315  0059EA  D013               	goto	l9098
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;main.c: 217: vscp_nickname = 0xff;
  1319  0059EC  0100               	movlb	0	; () banked
  1320  0059EE  0100               	movlb	0	; () banked
  1321  0059F0  69EC               	setf	_vscp_nickname& (0+255),b
  1322                           
  1323                           ; BSR set to: 0
  1324                           ;main.c: 218: (Busy_eep(), Write_b_eep(0x01,0xff));
  1325  0059F2  EC10  F038         	call	_Busy_eep	;wreg free
  1326  0059F6  0E00               	movlw	0
  1327  0059F8  6E17               	movwf	?_Write_b_eep+1,c
  1328  0059FA  0E01               	movlw	1
  1329  0059FC  6E16               	movwf	?_Write_b_eep,c
  1330  0059FE  0101               	movlb	1	; () banked
  1331  005A00  6F25               	movwf	??_main& (0+255),b
  1332  005A02  0EFF               	movlw	255
  1333  005A04  6E18               	movwf	?_Write_b_eep+2,c
  1334  005A06  0101               	movlb	1	; () banked
  1335  005A08  5125               	movf	??_main& (0+255),w,b
  1336  005A0A  EC40  F036         	call	_Write_b_eep	;wreg free
  1337                           
  1338                           ;main.c: 219: vscp_init();
  1339  005A0E  EC0F  F033         	call	_vscp_init	;wreg free
  1340  005A12                     l9098:
  1341                           
  1342                           ;main.c: 221: }
  1343                           ;main.c: 224: vscp_imsg.flags = 0;
  1344  005A12  0101               	movlb	1	; () banked
  1345  005A14  6F25               	movwf	??_main& (0+255),b
  1346  005A16  0E00               	movlw	0
  1347  005A18  0100               	movlb	0	; () banked
  1348  005A1A  0100               	movlb	0	; () banked
  1349  005A1C  6FF1               	movwf	_vscp_imsg& (0+255),b
  1350  005A1E  0101               	movlb	1	; () banked
  1351  005A20  5125               	movf	??_main& (0+255),w,b
  1352                           
  1353                           ; BSR set to: 1
  1354                           ;main.c: 225: vscp_getEvent();
  1355  005A22  EC77  F034         	call	_vscp_getEvent	;wreg free
  1356                           
  1357                           ;main.c: 227: switch ( vscp_node_state ) {
  1358  005A26  D034               	goto	l9124
  1359  005A28                     l9102:
  1360                           
  1361                           ;main.c: 232: if (0xff == vscp_nickname) {
  1362  005A28  0100               	movlb	0	; () banked
  1363  005A2A  0100               	movlb	0	; () banked
  1364  005A2C  29EC               	incf	_vscp_nickname& (0+255),w,b
  1365  005A2E  A4D8               	btfss	status,2,c
  1366  005A30  D004               	goto	l9106
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;main.c: 234: vscp_node_state = 0x01;
  1370  005A32  0101               	movlb	1	; () banked
  1371  005A34  6F25               	movwf	??_main& (0+255),b
  1372  005A36  0E01               	movlw	1
  1373  005A38  D025               	goto	L1
  1374  005A3A                     l9106:
  1375                           
  1376                           ;main.c: 236: else {
  1377                           ;main.c: 238: vscp_node_state = 0x03;
  1378  005A3A  0101               	movlb	1	; () banked
  1379  005A3C  6F25               	movwf	??_main& (0+255),b
  1380  005A3E  0E03               	movlw	3
  1381  005A40  0100               	movlb	0	; () banked
  1382  005A42  0100               	movlb	0	; () banked
  1383  005A44  6FED               	movwf	_vscp_node_state& (0+255),b
  1384  005A46  0101               	movlb	1	; () banked
  1385  005A48  5125               	movf	??_main& (0+255),w,b
  1386                           
  1387                           ; BSR set to: 1
  1388                           ;main.c: 239: vscp_goActiveState();
  1389  005A4A  ECCD  F036         	call	_vscp_goActiveState	;wreg free
  1390  005A4E  D033               	goto	l9126
  1391  005A50                     l9110:
  1392                           
  1393                           ;main.c: 244: vscp_handleProbeState();
  1394  005A50  EC2D  F02F         	call	_vscp_handleProbeState	;wreg free
  1395                           
  1396                           ;main.c: 245: break;
  1397  005A54  D030               	goto	l9126
  1398  005A56                     l9112:
  1399                           
  1400                           ;main.c: 248: vscp_goActiveState();
  1401  005A56  ECCD  F036         	call	_vscp_goActiveState	;wreg free
  1402                           
  1403                           ;main.c: 249: break;
  1404  005A5A  D02D               	goto	l9126
  1405  005A5C                     l416:
  1406                           
  1407                           ; BSR set to: 0
  1408                           ;main.c: 254: if (vscp_imsg.flags & 0x80) {
  1409  005A5C  0100               	movlb	0	; () banked
  1410  005A5E  0100               	movlb	0	; () banked
  1411  005A60  AFF1               	btfss	_vscp_imsg& (0+255),7,b
  1412  005A62  D029               	goto	l9126
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;main.c: 256: if ( 0 == vscp_imsg.vscp_class ) {
  1416  005A64  0100               	movlb	0	; () banked
  1417  005A66  0100               	movlb	0	; () banked
  1418  005A68  51F4               	movf	(_vscp_imsg+3)& (0+255),w,b
  1419  005A6A  11F3               	iorwf	(_vscp_imsg+2)& (0+255),w,b
  1420  005A6C  B4D8               	btfsc	status,2,c
  1421                           
  1422                           ; BSR set to: 0
  1423                           ;main.c: 259: vscp_handleProtocolEvent();
  1424  005A6E  EC57  F00F         	call	_vscp_handleProtocolEvent	;wreg free
  1425                           
  1426                           ;main.c: 261: }
  1427                           ;main.c: 263: doDM();
  1428  005A72  ECFE  F020         	call	_doDM	;wreg free
  1429  005A76  D01F               	goto	l9126
  1430  005A78                     l9118:
  1431                           
  1432                           ;main.c: 269: vscp_error();
  1433  005A78  EC06  F038         	call	_vscp_error	;wreg free
  1434                           
  1435                           ;main.c: 270: break;
  1436  005A7C  D01C               	goto	l9126
  1437  005A7E                     l9120:
  1438                           
  1439                           ;main.c: 273: vscp_node_state = 0x00;
  1440  005A7E  0101               	movlb	1	; () banked
  1441  005A80  6F25               	movwf	??_main& (0+255),b
  1442  005A82  0E00               	movlw	0
  1443  005A84                     L1:
  1444  005A84  0100               	movlb	0	; () banked
  1445  005A86  0100               	movlb	0	; () banked
  1446  005A88  6FED               	movwf	_vscp_node_state& (0+255),b
  1447  005A8A  0101               	movlb	1	; () banked
  1448  005A8C  5125               	movf	??_main& (0+255),w,b
  1449                           
  1450                           ;main.c: 274: break;
  1451  005A8E  D013               	goto	l9126
  1452  005A90                     l9124:
  1453  005A90  0100               	movlb	0	; () banked
  1454  005A92  0100               	movlb	0	; () banked
  1455  005A94  51ED               	movf	_vscp_node_state& (0+255),w,b
  1456                           
  1457                           ; Switch size 1, requested type "space"
  1458                           ; Number of cases is 5, Range of values is 0 to 4
  1459                           ; switch strategies available:
  1460                           ; Name         Instructions Cycles
  1461                           ; simple_byte           16     9 (average)
  1462                           ;	Chosen strategy is simple_byte
  1463  005A96  0A00               	xorlw	0	; case 0
  1464  005A98  B4D8               	btfsc	status,2,c
  1465  005A9A  D7C6               	goto	l9102
  1466  005A9C  0A01               	xorlw	1	; case 1
  1467  005A9E  B4D8               	btfsc	status,2,c
  1468  005AA0  D7D7               	goto	l9110
  1469  005AA2  0A03               	xorlw	3	; case 2
  1470  005AA4  B4D8               	btfsc	status,2,c
  1471  005AA6  D7D7               	goto	l9112
  1472  005AA8  0A01               	xorlw	1	; case 3
  1473  005AAA  B4D8               	btfsc	status,2,c
  1474  005AAC  D7D7               	goto	l416
  1475  005AAE  0A07               	xorlw	7	; case 4
  1476  005AB0  B4D8               	btfsc	status,2,c
  1477  005AB2  D7E2               	goto	l9118
  1478  005AB4  D7E4               	goto	l9120
  1479  005AB6                     l9126:
  1480                           
  1481                           ;main.c: 279: if ( measurement_clock > 1000 ) {
  1482  005AB6  0EE9               	movlw	233
  1483  005AB8  0100               	movlb	0	; () banked
  1484  005ABA  0100               	movlb	0	; () banked
  1485  005ABC  5DD1               	subwf	_measurement_clock& (0+255),w,b	;volatile
  1486  005ABE  0E03               	movlw	3
  1487  005AC0  0100               	movlb	0	; () banked
  1488  005AC2  59D2               	subwfb	(_measurement_clock+1)& (0+255),w,b	;volatile
  1489  005AC4  0E00               	movlw	0
  1490  005AC6  0100               	movlb	0	; () banked
  1491  005AC8  59D3               	subwfb	(_measurement_clock+2)& (0+255),w,b	;volatile
  1492  005ACA  0E00               	movlw	0
  1493  005ACC  0100               	movlb	0	; () banked
  1494  005ACE  0100               	movlb	0	; () banked
  1495  005AD0  59D4               	subwfb	(_measurement_clock+3)& (0+255),w,b	;volatile
  1496  005AD2  A0D8               	btfss	status,0,c
  1497  005AD4  D019               	goto	l9138
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;main.c: 281: measurement_clock = 0;
  1501  005AD6  0E00               	movlw	0
  1502  005AD8  0100               	movlb	0	; () banked
  1503  005ADA  0100               	movlb	0	; () banked
  1504  005ADC  6FD1               	movwf	_measurement_clock& (0+255),b	;volatile
  1505  005ADE  0E00               	movlw	0
  1506  005AE0  0100               	movlb	0	; () banked
  1507  005AE2  6FD2               	movwf	(_measurement_clock+1)& (0+255),b	;volatile
  1508  005AE4  0E00               	movlw	0
  1509  005AE6  0100               	movlb	0	; () banked
  1510  005AE8  6FD3               	movwf	(_measurement_clock+2)& (0+255),b	;volatile
  1511  005AEA  0E00               	movlw	0
  1512  005AEC  0100               	movlb	0	; () banked
  1513  005AEE  6FD4               	movwf	(_measurement_clock+3)& (0+255),b	;volatile
  1514                           
  1515                           ; BSR set to: 0
  1516                           ;main.c: 282: sendTimer++;
  1517  005AF0  0100               	movlb	0	; () banked
  1518  005AF2  0100               	movlb	0	; () banked
  1519  005AF4  2BE6               	incf	_sendTimer& (0+255),f,b
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;main.c: 285: vscp_doOneSecondWork();
  1523  005AF6  ECE1  F033         	call	_vscp_doOneSecondWork	;wreg free
  1524                           
  1525                           ;main.c: 289: if ( 0x03 == vscp_node_state ) {
  1526  005AFA  0100               	movlb	0	; () banked
  1527  005AFC  0100               	movlb	0	; () banked
  1528  005AFE  51ED               	movf	_vscp_node_state& (0+255),w,b
  1529  005B00  0A03               	xorlw	3
  1530  005B02  B4D8               	btfsc	status,2,c
  1531                           
  1532                           ; BSR set to: 0
  1533                           ;main.c: 292: doApplicationOneSecondWork();
  1534  005B04  EC68  F016         	call	_doApplicationOneSecondWork	;wreg free
  1535  005B08                     l9138:
  1536                           
  1537                           ;main.c: 294: }
  1538                           ;main.c: 296: }
  1539                           ;main.c: 299: if ( seconds > 59 ) {
  1540  005B08  0E3B               	movlw	59
  1541  005B0A  0100               	movlb	0	; () banked
  1542  005B0C  0100               	movlb	0	; () banked
  1543  005B0E  65E5               	cpfsgt	_seconds& (0+255),b
  1544  005B10  D028               	goto	l9154
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;main.c: 301: seconds = 0;
  1548  005B12  0101               	movlb	1	; () banked
  1549  005B14  6F25               	movwf	??_main& (0+255),b
  1550  005B16  0E00               	movlw	0
  1551  005B18  0100               	movlb	0	; () banked
  1552  005B1A  0100               	movlb	0	; () banked
  1553  005B1C  6FE5               	movwf	_seconds& (0+255),b
  1554  005B1E  0101               	movlb	1	; () banked
  1555  005B20  5125               	movf	??_main& (0+255),w,b
  1556                           
  1557                           ; BSR set to: 1
  1558                           ;main.c: 302: minutes++;
  1559  005B22  0100               	movlb	0	; () banked
  1560  005B24  0100               	movlb	0	; () banked
  1561  005B26  2BE4               	incf	_minutes& (0+255),f,b
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;main.c: 304: if ( minutes > 59 ) {
  1565  005B28  0E3B               	movlw	59
  1566  005B2A  0100               	movlb	0	; () banked
  1567  005B2C  0100               	movlb	0	; () banked
  1568  005B2E  65E4               	cpfsgt	_minutes& (0+255),b
  1569  005B30  D00B               	goto	l9150
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;main.c: 305: minutes = 0;
  1573  005B32  0101               	movlb	1	; () banked
  1574  005B34  6F25               	movwf	??_main& (0+255),b
  1575  005B36  0E00               	movlw	0
  1576  005B38  0100               	movlb	0	; () banked
  1577  005B3A  0100               	movlb	0	; () banked
  1578  005B3C  6FE4               	movwf	_minutes& (0+255),b
  1579  005B3E  0101               	movlb	1	; () banked
  1580  005B40  5125               	movf	??_main& (0+255),w,b
  1581                           
  1582                           ; BSR set to: 1
  1583                           ;main.c: 306: hours++;
  1584  005B42  0100               	movlb	0	; () banked
  1585  005B44  0100               	movlb	0	; () banked
  1586  005B46  2BE3               	incf	_hours& (0+255),f,b
  1587  005B48                     l9150:
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;main.c: 307: }
  1591                           ;main.c: 309: if ( hours > 23 ) hours = 0;
  1592  005B48  0E17               	movlw	23
  1593  005B4A  0100               	movlb	0	; () banked
  1594  005B4C  0100               	movlb	0	; () banked
  1595  005B4E  65E3               	cpfsgt	_hours& (0+255),b
  1596  005B50  D008               	goto	l9154
  1597                           
  1598                           ; BSR set to: 0
  1599  005B52  0101               	movlb	1	; () banked
  1600  005B54  6F25               	movwf	??_main& (0+255),b
  1601  005B56  0E00               	movlw	0
  1602  005B58  0100               	movlb	0	; () banked
  1603  005B5A  0100               	movlb	0	; () banked
  1604  005B5C  6FE3               	movwf	_hours& (0+255),b
  1605  005B5E  0101               	movlb	1	; () banked
  1606  005B60  5125               	movf	??_main& (0+255),w,b
  1607  005B62                     l9154:
  1608                           
  1609                           ;main.c: 311: }
  1610                           ;main.c: 313: doWork();
  1611  005B62  EC1F  F038         	call	_doWork	;wreg free
  1612  005B66  D737               	goto	l407
  1613  005B68                     __end_of_main:
  1614                           	opt stack 0
  1615                           tblptru	equ	0xFF8
  1616                           postinc0	equ	0xFEE
  1617                           wreg	equ	0xFE8
  1618                           status	equ	0xFD8
  1619                           
  1620 ;; *************** function _doWork *****************
  1621 ;; Defined at:
  1622 ;;		line 995 in file "../main.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;		None
  1627 ;; Return value:  Size  Location     Type
  1628 ;;		None               void
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1636 ;;      Params:         0       0       0       0       0       0       0
  1637 ;;      Locals:         0       0       0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0
  1639 ;;      Totals:         0       0       0       0       0       0       0
  1640 ;;Total ram usage:        0 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; Hardware stack levels required when called:    2
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_main
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text1
  1651  00703E                     __ptext1:
  1652                           	opt stack 0
  1653  00703E                     _doWork:
  1654                           	opt stack 27
  1655                           
  1656                           ;main.c: 997: ;
  1657                           
  1658                           ;incstack = 0
  1659                           ;incstack = 0
  1660  00703E  0012               	return	
  1661  007040                     __end_of_doWork:
  1662                           	opt stack 0
  1663                           tblptru	equ	0xFF8
  1664                           postinc0	equ	0xFEE
  1665                           wreg	equ	0xFE8
  1666                           status	equ	0xFD8
  1667                           
  1668 ;; *************** function _doApplicationOneSecondWork *****************
  1669 ;; Defined at:
  1670 ;;		line 573 in file "../main.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;		None
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  iodirections    2   72[BANK0 ] unsigned short 
  1675 ;;  i               1   76[BANK0 ] unsigned char 
  1676 ;;  ctrlreg         1   75[BANK0 ] unsigned char 
  1677 ;;  bOn             1   74[BANK0 ] enum E15660
  1678 ;; Return value:  Size  Location     Type
  1679 ;;		None               void
  1680 ;; Registers used:
  1681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1687 ;;      Params:         0       0       0       0       0       0       0
  1688 ;;      Locals:         0       5       0       0       0       0       0
  1689 ;;      Temps:          0       0      37       0       0       0       0
  1690 ;;      Totals:         0       5      37       0       0       0       0
  1691 ;;Total ram usage:       42 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    8
  1694 ;; This function calls:
  1695 ;;		_Read_b_eep
  1696 ;;		_SendInformationEvent
  1697 ;;		_doActionOff
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text2
  1704  002CD0                     __ptext2:
  1705                           	opt stack 0
  1706  002CD0                     _doApplicationOneSecondWork:
  1707                           	opt stack 21
  1708                           
  1709                           ;main.c: 575: uint8_t i;
  1710                           ;main.c: 576: uint16_t iodirections;
  1711                           ;main.c: 577: uint8_t ctrlreg;
  1712                           ;main.c: 578: BOOL bOn = 0;
  1713                           
  1714                           ;incstack = 0
  1715                           ;incstack = 0
  1716  002CD0  0101               	movlb	1	; () banked
  1717  002CD2  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  1718  002CD4  0E00               	movlw	0
  1719  002CD6  0100               	movlb	0	; () banked
  1720  002CD8  0100               	movlb	0	; () banked
  1721  002CDA  6FAA               	movwf	doApplicationOneSecondWork@bOn& (0+255),b
  1722  002CDC  0101               	movlb	1	; () banked
  1723  002CDE  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  1724                           
  1725                           ; BSR set to: 1
  1726                           ;main.c: 581: iodirections = ( Read_b_eep(0x43 + 12) << 8 ) +
  1727                           ;main.c: 582: Read_b_eep(0x43 + 13);
  1728  002CE0  0E00               	movlw	0
  1729  002CE2  6E17               	movwf	?_Read_b_eep+1,c
  1730  002CE4  0E50               	movlw	80
  1731  002CE6  6E16               	movwf	?_Read_b_eep,c
  1732  002CE8  ECD8  F037         	call	_Read_b_eep	;wreg free
  1733  002CEC  0101               	movlb	1	; () banked
  1734  002CEE  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  1735  002CF0  0E00               	movlw	0
  1736  002CF2  6E17               	movwf	?_Read_b_eep+1,c
  1737  002CF4  0E4F               	movlw	79
  1738  002CF6  6E16               	movwf	?_Read_b_eep,c
  1739  002CF8  ECD8  F037         	call	_Read_b_eep	;wreg free
  1740  002CFC  0101               	movlb	1	; () banked
  1741  002CFE  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  1742  002D00  0101               	movlb	1	; () banked
  1743  002D02  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  1744  002D04  0101               	movlb	1	; () banked
  1745  002D06  6F03               	movwf	(??_doApplicationOneSecondWork+3)& (0+255),b
  1746  002D08  6B02               	clrf	(??_doApplicationOneSecondWork+2)& (0+255),b
  1747  002D0A  0101               	movlb	1	; () banked
  1748  002D0C  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  1749  002D0E  0101               	movlb	1	; () banked
  1750  002D10  2502               	addwf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  1751  002D12  0100               	movlb	0	; () banked
  1752  002D14  0100               	movlb	0	; () banked
  1753  002D16  6FA8               	movwf	doApplicationOneSecondWork@iodirections& (0+255),b
  1754  002D18  0101               	movlb	1	; () banked
  1755  002D1A  0E00               	movlw	0
  1756  002D1C  0101               	movlb	1	; () banked
  1757  002D1E  2103               	addwfc	(??_doApplicationOneSecondWork+3)& (0+255),w,b
  1758  002D20  0100               	movlb	0	; () banked
  1759  002D22  6FA9               	movwf	(doApplicationOneSecondWork@iodirections+1)& (0+255),b
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;main.c: 584: for ( i = 0; i < 10; i++ ) {
  1763  002D24  0101               	movlb	1	; () banked
  1764  002D26  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  1765  002D28  0E00               	movlw	0
  1766  002D2A  0100               	movlb	0	; () banked
  1767  002D2C  0100               	movlb	0	; () banked
  1768  002D2E  6FAC               	movwf	doApplicationOneSecondWork@i& (0+255),b
  1769  002D30  0101               	movlb	1	; () banked
  1770  002D32  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  1771  002D34  D3B1               	goto	L21
  1772  002D36                     l10068:
  1773                           
  1774                           ; BSR set to: 0
  1775                           ;main.c: 586: if ( iodirections & ( 1 << i ) ) {
  1776  002D36  C0AC  F100         	movff	doApplicationOneSecondWork@i,??_doApplicationOneSecondWork
  1777  002D3A  0E01               	movlw	1
  1778  002D3C  0101               	movlb	1	; () banked
  1779  002D3E  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  1780  002D40  6B02               	clrf	(??_doApplicationOneSecondWork+2)& (0+255),b
  1781  002D42  0101               	movlb	1	; () banked
  1782  002D44  2B00               	incf	??_doApplicationOneSecondWork& (0+255),f,b
  1783  002D46  D004               	goto	u11684
  1784  002D48                     u11685:
  1785  002D48  90D8               	bcf	status,0,c
  1786  002D4A  0101               	movlb	1	; () banked
  1787  002D4C  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  1788  002D4E  3702               	rlcf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  1789  002D50                     u11684:
  1790  002D50  0101               	movlb	1	; () banked
  1791  002D52  2F00               	decfsz	??_doApplicationOneSecondWork& (0+255),f,b
  1792  002D54  D7F9               	goto	u11685
  1793  002D56  0100               	movlb	0	; () banked
  1794  002D58  0100               	movlb	0	; () banked
  1795  002D5A  51A8               	movf	doApplicationOneSecondWork@iodirections& (0+255),w,b
  1796  002D5C  0101               	movlb	1	; () banked
  1797  002D5E  1701               	andwf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  1798  002D60  0100               	movlb	0	; () banked
  1799  002D62  0100               	movlb	0	; () banked
  1800  002D64  51A9               	movf	(doApplicationOneSecondWork@iodirections+1)& (0+255),w,b
  1801  002D66  0101               	movlb	1	; () banked
  1802  002D68  1702               	andwf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  1803  002D6A  0101               	movlb	1	; () banked
  1804  002D6C  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  1805  002D6E  1101               	iorwf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  1806  002D70  B4D8               	btfsc	status,2,c
  1807  002D72  D10E               	goto	l10110
  1808                           
  1809                           ; BSR set to: 1
  1810                           ;main.c: 591: ctrlreg = Read_b_eep(0x43 + 34 + i);
  1811  002D74  0E65               	movlw	101
  1812  002D76  0100               	movlb	0	; () banked
  1813  002D78  0100               	movlb	0	; () banked
  1814  002D7A  25AC               	addwf	doApplicationOneSecondWork@i& (0+255),w,b
  1815  002D7C  6E16               	movwf	?_Read_b_eep,c
  1816  002D7E  6A17               	clrf	?_Read_b_eep+1,c
  1817  002D80  0E00               	movlw	0
  1818  002D82  2217               	addwfc	?_Read_b_eep+1,f,c
  1819  002D84  ECD8  F037         	call	_Read_b_eep	;wreg free
  1820  002D88  0100               	movlb	0	; () banked
  1821  002D8A  0100               	movlb	0	; () banked
  1822  002D8C  6FAB               	movwf	doApplicationOneSecondWork@ctrlreg& (0+255),b
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;main.c: 594: if ( !( ctrlreg & 0x80 ) ) continue;
  1826  002D8E  0100               	movlb	0	; () banked
  1827  002D90  0100               	movlb	0	; () banked
  1828  002D92  AFAB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),7,b
  1829  002D94  D37E               	goto	l10220
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;main.c: 597: if ( ctrlreg & 0x01 ) {
  1833                           
  1834                           ; BSR set to: 0
  1835  002D96  0100               	movlb	0	; () banked
  1836  002D98  0100               	movlb	0	; () banked
  1837  002D9A  A1AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),0,b
  1838  002D9C  D044               	goto	l10084
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;main.c: 599: if ( !( current_iostate & ( 1 << i ) ) ) {
  1842  002D9E  C0AC  F100         	movff	doApplicationOneSecondWork@i,??_doApplicationOneSecondWork
  1843  002DA2  0E01               	movlw	1
  1844  002DA4  0101               	movlb	1	; () banked
  1845  002DA6  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  1846  002DA8  6B02               	clrf	(??_doApplicationOneSecondWork+2)& (0+255),b
  1847  002DAA  0101               	movlb	1	; () banked
  1848  002DAC  2B00               	incf	??_doApplicationOneSecondWork& (0+255),f,b
  1849  002DAE  D004               	goto	u11724
  1850  002DB0                     u11725:
  1851  002DB0  90D8               	bcf	status,0,c
  1852  002DB2  0101               	movlb	1	; () banked
  1853  002DB4  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  1854  002DB6  3702               	rlcf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  1855  002DB8                     u11724:
  1856  002DB8  0101               	movlb	1	; () banked
  1857  002DBA  2F00               	decfsz	??_doApplicationOneSecondWork& (0+255),f,b
  1858  002DBC  D7F9               	goto	u11725
  1859  002DBE  0100               	movlb	0	; () banked
  1860  002DC0  0100               	movlb	0	; () banked
  1861  002DC2  51D7               	movf	_current_iostate& (0+255),w,b
  1862  002DC4  0101               	movlb	1	; () banked
  1863  002DC6  1701               	andwf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  1864  002DC8  0100               	movlb	0	; () banked
  1865  002DCA  0100               	movlb	0	; () banked
  1866  002DCC  51D8               	movf	(_current_iostate+1)& (0+255),w,b
  1867  002DCE  0101               	movlb	1	; () banked
  1868  002DD0  1702               	andwf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  1869  002DD2  0101               	movlb	1	; () banked
  1870  002DD4  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  1871  002DD6  1101               	iorwf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  1872  002DD8  A4D8               	btfss	status,2,c
  1873  002DDA  D025               	goto	l10084
  1874                           
  1875                           ; BSR set to: 1
  1876                           ;main.c: 600: if ( ctrlreg & 0x04 ) {
  1877  002DDC  0100               	movlb	0	; () banked
  1878  002DDE  0100               	movlb	0	; () banked
  1879  002DE0  A5AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),2,b
  1880  002DE2  D011               	goto	l10082
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;main.c: 601: SendInformationEvent(i, 20,
  1884                           ;main.c: 602: 3 );
  1885  002DE4  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  1886  002DE8  0101               	movlb	1	; () banked
  1887  002DEA  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  1888  002DEC  0E14               	movlw	20
  1889  002DEE  6E31               	movwf	?_SendInformationEvent+1,c
  1890  002DF0  0101               	movlb	1	; () banked
  1891  002DF2  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  1892  002DF4  0101               	movlb	1	; () banked
  1893  002DF6  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  1894  002DF8  0E03               	movlw	3
  1895  002DFA  6E32               	movwf	?_SendInformationEvent+2,c
  1896  002DFC  0101               	movlb	1	; () banked
  1897  002DFE  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  1898  002E00  ECFC  F034         	call	_SendInformationEvent	;wreg free
  1899                           
  1900                           ;main.c: 603: }
  1901  002E04  D010               	goto	l10084
  1902  002E06                     l10082:
  1903                           
  1904                           ;main.c: 604: else {
  1905                           ;main.c: 605: SendInformationEvent(i, 30,
  1906                           ;main.c: 606: 5 );
  1907  002E06  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  1908  002E0A  0101               	movlb	1	; () banked
  1909  002E0C  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  1910  002E0E  0E1E               	movlw	30
  1911  002E10  6E31               	movwf	?_SendInformationEvent+1,c
  1912  002E12  0101               	movlb	1	; () banked
  1913  002E14  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  1914  002E16  0101               	movlb	1	; () banked
  1915  002E18  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  1916  002E1A  0E05               	movlw	5
  1917  002E1C  6E32               	movwf	?_SendInformationEvent+2,c
  1918  002E1E  0101               	movlb	1	; () banked
  1919  002E20  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  1920  002E22  ECFC  F034         	call	_SendInformationEvent	;wreg free
  1921  002E26                     l10084:
  1922                           
  1923                           ;main.c: 607: }
  1924                           ;main.c: 608: }
  1925                           ;main.c: 609: }
  1926                           ;main.c: 612: if ( ctrlreg & 0x02 ) {
  1927  002E26  0100               	movlb	0	; () banked
  1928  002E28  0100               	movlb	0	; () banked
  1929  002E2A  A3AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),1,b
  1930  002E2C  D044               	goto	l10094
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;main.c: 614: if ( current_iostate & ( 1 << i ) ) {
  1934  002E2E  C0AC  F100         	movff	doApplicationOneSecondWork@i,??_doApplicationOneSecondWork
  1935  002E32  0E01               	movlw	1
  1936  002E34  0101               	movlb	1	; () banked
  1937  002E36  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  1938  002E38  6B02               	clrf	(??_doApplicationOneSecondWork+2)& (0+255),b
  1939  002E3A  0101               	movlb	1	; () banked
  1940  002E3C  2B00               	incf	??_doApplicationOneSecondWork& (0+255),f,b
  1941  002E3E  D004               	goto	u11764
  1942  002E40                     u11765:
  1943  002E40  90D8               	bcf	status,0,c
  1944  002E42  0101               	movlb	1	; () banked
  1945  002E44  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  1946  002E46  3702               	rlcf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  1947  002E48                     u11764:
  1948  002E48  0101               	movlb	1	; () banked
  1949  002E4A  2F00               	decfsz	??_doApplicationOneSecondWork& (0+255),f,b
  1950  002E4C  D7F9               	goto	u11765
  1951  002E4E  0100               	movlb	0	; () banked
  1952  002E50  0100               	movlb	0	; () banked
  1953  002E52  51D7               	movf	_current_iostate& (0+255),w,b
  1954  002E54  0101               	movlb	1	; () banked
  1955  002E56  1701               	andwf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  1956  002E58  0100               	movlb	0	; () banked
  1957  002E5A  0100               	movlb	0	; () banked
  1958  002E5C  51D8               	movf	(_current_iostate+1)& (0+255),w,b
  1959  002E5E  0101               	movlb	1	; () banked
  1960  002E60  1702               	andwf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  1961  002E62  0101               	movlb	1	; () banked
  1962  002E64  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  1963  002E66  1101               	iorwf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  1964  002E68  B4D8               	btfsc	status,2,c
  1965  002E6A  D025               	goto	l10094
  1966                           
  1967                           ; BSR set to: 1
  1968                           ;main.c: 615: if ( ctrlreg & 0x04 ) {
  1969  002E6C  0100               	movlb	0	; () banked
  1970  002E6E  0100               	movlb	0	; () banked
  1971  002E70  A5AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),2,b
  1972  002E72  D011               	goto	l10092
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;main.c: 616: SendInformationEvent( i,
  1976                           ;main.c: 617: 20,
  1977                           ;main.c: 618: 4 );
  1978  002E74  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  1979  002E78  0101               	movlb	1	; () banked
  1980  002E7A  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  1981  002E7C  0E14               	movlw	20
  1982  002E7E  6E31               	movwf	?_SendInformationEvent+1,c
  1983  002E80  0101               	movlb	1	; () banked
  1984  002E82  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  1985  002E84  0101               	movlb	1	; () banked
  1986  002E86  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  1987  002E88  0E04               	movlw	4
  1988  002E8A  6E32               	movwf	?_SendInformationEvent+2,c
  1989  002E8C  0101               	movlb	1	; () banked
  1990  002E8E  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  1991  002E90  ECFC  F034         	call	_SendInformationEvent	;wreg free
  1992                           
  1993                           ;main.c: 619: }
  1994  002E94  D010               	goto	l10094
  1995  002E96                     l10092:
  1996                           
  1997                           ;main.c: 620: else {
  1998                           ;main.c: 621: SendInformationEvent( i,
  1999                           ;main.c: 622: 30,
  2000                           ;main.c: 623: 6 );
  2001  002E96  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  2002  002E9A  0101               	movlb	1	; () banked
  2003  002E9C  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2004  002E9E  0E1E               	movlw	30
  2005  002EA0  6E31               	movwf	?_SendInformationEvent+1,c
  2006  002EA2  0101               	movlb	1	; () banked
  2007  002EA4  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2008  002EA6  0101               	movlb	1	; () banked
  2009  002EA8  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2010  002EAA  0E06               	movlw	6
  2011  002EAC  6E32               	movwf	?_SendInformationEvent+2,c
  2012  002EAE  0101               	movlb	1	; () banked
  2013  002EB0  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2014  002EB2  ECFC  F034         	call	_SendInformationEvent	;wreg free
  2015  002EB6                     l10094:
  2016                           
  2017                           ;main.c: 624: }
  2018                           ;main.c: 625: }
  2019                           ;main.c: 626: }
  2020                           ;main.c: 629: if ( ctrlreg & 0x10 ) {
  2021  002EB6  0100               	movlb	0	; () banked
  2022  002EB8  0100               	movlb	0	; () banked
  2023  002EBA  A9AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),4,b
  2024  002EBC  D032               	goto	l10102
  2025                           
  2026                           ; BSR set to: 0
  2027                           ;main.c: 631: if ( !( current_iostate & ( 1 << i ) ) ) {
  2028  002EBE  C0AC  F100         	movff	doApplicationOneSecondWork@i,??_doApplicationOneSecondWork
  2029  002EC2  0E01               	movlw	1
  2030  002EC4  0101               	movlb	1	; () banked
  2031  002EC6  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2032  002EC8  6B02               	clrf	(??_doApplicationOneSecondWork+2)& (0+255),b
  2033  002ECA  0101               	movlb	1	; () banked
  2034  002ECC  2B00               	incf	??_doApplicationOneSecondWork& (0+255),f,b
  2035  002ECE  D004               	goto	u11804
  2036  002ED0                     u11805:
  2037  002ED0  90D8               	bcf	status,0,c
  2038  002ED2  0101               	movlb	1	; () banked
  2039  002ED4  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2040  002ED6  3702               	rlcf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  2041  002ED8                     u11804:
  2042  002ED8  0101               	movlb	1	; () banked
  2043  002EDA  2F00               	decfsz	??_doApplicationOneSecondWork& (0+255),f,b
  2044  002EDC  D7F9               	goto	u11805
  2045  002EDE  0100               	movlb	0	; () banked
  2046  002EE0  0100               	movlb	0	; () banked
  2047  002EE2  51D7               	movf	_current_iostate& (0+255),w,b
  2048  002EE4  0101               	movlb	1	; () banked
  2049  002EE6  1701               	andwf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2050  002EE8  0100               	movlb	0	; () banked
  2051  002EEA  0100               	movlb	0	; () banked
  2052  002EEC  51D8               	movf	(_current_iostate+1)& (0+255),w,b
  2053  002EEE  0101               	movlb	1	; () banked
  2054  002EF0  1702               	andwf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  2055  002EF2  0101               	movlb	1	; () banked
  2056  002EF4  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  2057  002EF6  1101               	iorwf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2058  002EF8  A4D8               	btfss	status,2,c
  2059  002EFA  D013               	goto	l10102
  2060                           
  2061                           ; BSR set to: 1
  2062                           ;main.c: 632: SendInformationEvent( i, 1,
  2063                           ;main.c: 633: 2 );
  2064  002EFC  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  2065  002F00  0101               	movlb	1	; () banked
  2066  002F02  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2067  002F04  0E01               	movlw	1
  2068  002F06  6E31               	movwf	?_SendInformationEvent+1,c
  2069  002F08  0101               	movlb	1	; () banked
  2070  002F0A  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2071  002F0C  0101               	movlb	1	; () banked
  2072  002F0E  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2073  002F10  0E02               	movlw	2
  2074  002F12  6E32               	movwf	?_SendInformationEvent+2,c
  2075  002F14  0101               	movlb	1	; () banked
  2076  002F16  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2077  002F18  ECFC  F034         	call	_SendInformationEvent	;wreg free
  2078                           
  2079                           ;main.c: 634: vscp_alarmstatus |= 0x02;
  2080  002F1C  0100               	movlb	0	; () banked
  2081  002F1E  0100               	movlb	0	; () banked
  2082  002F20  83E7               	bsf	_vscp_alarmstatus& (0+255),1,b
  2083  002F22                     l10102:
  2084                           
  2085                           ;main.c: 635: }
  2086                           ;main.c: 636: }
  2087                           ;main.c: 639: if ( ctrlreg & 0x08 ) {
  2088  002F22  0100               	movlb	0	; () banked
  2089  002F24  0100               	movlb	0	; () banked
  2090  002F26  A7AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),3,b
  2091  002F28  D2B4               	goto	l10220
  2092                           
  2093                           ; BSR set to: 0
  2094                           ;main.c: 641: if ( current_iostate & ( 1 << i ) ) {
  2095  002F2A  C0AC  F100         	movff	doApplicationOneSecondWork@i,??_doApplicationOneSecondWork
  2096  002F2E  0E01               	movlw	1
  2097  002F30  0101               	movlb	1	; () banked
  2098  002F32  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2099  002F34  6B02               	clrf	(??_doApplicationOneSecondWork+2)& (0+255),b
  2100  002F36  0101               	movlb	1	; () banked
  2101  002F38  2B00               	incf	??_doApplicationOneSecondWork& (0+255),f,b
  2102  002F3A  D004               	goto	u11834
  2103  002F3C                     u11835:
  2104  002F3C  90D8               	bcf	status,0,c
  2105  002F3E  0101               	movlb	1	; () banked
  2106  002F40  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2107  002F42  3702               	rlcf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  2108  002F44                     u11834:
  2109  002F44  0101               	movlb	1	; () banked
  2110  002F46  2F00               	decfsz	??_doApplicationOneSecondWork& (0+255),f,b
  2111  002F48  D7F9               	goto	u11835
  2112  002F4A  0100               	movlb	0	; () banked
  2113  002F4C  0100               	movlb	0	; () banked
  2114  002F4E  51D7               	movf	_current_iostate& (0+255),w,b
  2115  002F50  0101               	movlb	1	; () banked
  2116  002F52  1701               	andwf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2117  002F54  0100               	movlb	0	; () banked
  2118  002F56  0100               	movlb	0	; () banked
  2119  002F58  51D8               	movf	(_current_iostate+1)& (0+255),w,b
  2120  002F5A  0101               	movlb	1	; () banked
  2121  002F5C  1702               	andwf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  2122  002F5E  0101               	movlb	1	; () banked
  2123  002F60  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  2124  002F62  1101               	iorwf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2125  002F64  B4D8               	btfsc	status,2,c
  2126  002F66  D295               	goto	l10220
  2127                           
  2128                           ; BSR set to: 1
  2129                           ;main.c: 642: SendInformationEvent( i, 1,
  2130                           ;main.c: 643: 2 );
  2131  002F68  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  2132  002F6C  0101               	movlb	1	; () banked
  2133  002F6E  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2134  002F70  0E01               	movlw	1
  2135  002F72  6E31               	movwf	?_SendInformationEvent+1,c
  2136  002F74  0101               	movlb	1	; () banked
  2137  002F76  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2138  002F78  0101               	movlb	1	; () banked
  2139  002F7A  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2140  002F7C  0E02               	movlw	2
  2141  002F7E  6E32               	movwf	?_SendInformationEvent+2,c
  2142  002F80  0101               	movlb	1	; () banked
  2143  002F82  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2144  002F84  ECFC  F034         	call	_SendInformationEvent	;wreg free
  2145                           
  2146                           ;main.c: 644: vscp_alarmstatus |= 0x04;
  2147  002F88  0100               	movlb	0	; () banked
  2148  002F8A  0100               	movlb	0	; () banked
  2149  002F8C  85E7               	bsf	_vscp_alarmstatus& (0+255),2,b
  2150  002F8E  D281               	goto	l10220
  2151  002F90                     l10110:
  2152                           
  2153                           ;main.c: 649: else {
  2154                           ;main.c: 654: ctrlreg = Read_b_eep(0x43 + 24 + i);
  2155  002F90  0E5B               	movlw	91
  2156  002F92  0100               	movlb	0	; () banked
  2157  002F94  0100               	movlb	0	; () banked
  2158  002F96  25AC               	addwf	doApplicationOneSecondWork@i& (0+255),w,b
  2159  002F98  6E16               	movwf	?_Read_b_eep,c
  2160  002F9A  6A17               	clrf	?_Read_b_eep+1,c
  2161  002F9C  0E00               	movlw	0
  2162  002F9E  2217               	addwfc	?_Read_b_eep+1,f,c
  2163  002FA0  ECD8  F037         	call	_Read_b_eep	;wreg free
  2164  002FA4  0100               	movlb	0	; () banked
  2165  002FA6  0100               	movlb	0	; () banked
  2166  002FA8  6FAB               	movwf	doApplicationOneSecondWork@ctrlreg& (0+255),b
  2167                           
  2168                           ; BSR set to: 0
  2169                           ;main.c: 657: if ( !( ctrlreg & 0x80 ) ) continue;
  2170  002FAA  0100               	movlb	0	; () banked
  2171  002FAC  0100               	movlb	0	; () banked
  2172  002FAE  AFAB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),7,b
  2173  002FB0  D270               	goto	l10220
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;main.c: 661: if ( channel_protection_timer[ i ] ) {
  2177                           
  2178                           ; BSR set to: 0
  2179                           
  2180                           ; BSR set to: 0
  2181  002FB2  0100               	movlb	0	; () banked
  2182  002FB4  0100               	movlb	0	; () banked
  2183  002FB6  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2184  002FB8  0D02               	mullw	2
  2185  002FBA  0100               	movlb	0	; () banked
  2186  002FBC  0EBD               	movlw	low _channel_protection_timer
  2187  002FBE  24F3               	addwf	prodl,w,c
  2188  002FC0  6ED9               	movwf	fsr2l,c
  2189  002FC2  0100               	movlb	0	; () banked
  2190  002FC4  0E00               	movlw	high _channel_protection_timer
  2191  002FC6  20F4               	addwfc	prodh,w,c
  2192  002FC8  6EDA               	movwf	fsr2h,c
  2193  002FCA  50DE               	movf	postinc2,w,c
  2194  002FCC  10DD               	iorwf	postdec2,w,c
  2195  002FCE  B4D8               	btfsc	status,2,c
  2196  002FD0  D063               	goto	l10130
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;main.c: 663: channel_protection_timer[ i ]--;
  2200  002FD2  0100               	movlb	0	; () banked
  2201  002FD4  0100               	movlb	0	; () banked
  2202  002FD6  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2203  002FD8  0D02               	mullw	2
  2204  002FDA  0100               	movlb	0	; () banked
  2205  002FDC  0EBD               	movlw	low _channel_protection_timer
  2206  002FDE  24F3               	addwf	prodl,w,c
  2207  002FE0  6ED9               	movwf	fsr2l,c
  2208  002FE2  0100               	movlb	0	; () banked
  2209  002FE4  0E00               	movlw	high _channel_protection_timer
  2210  002FE6  20F4               	addwfc	prodh,w,c
  2211  002FE8  6EDA               	movwf	fsr2h,c
  2212  002FEA  06DE               	decf	postinc2,f,c
  2213  002FEC  0E00               	movlw	0
  2214  002FEE  5ADD               	subwfb	postdec2,f,c
  2215                           
  2216                           ;main.c: 666: if (!channel_protection_timer[ i ] &&
  2217                           ;main.c: 667: ( Read_b_eep(0x43 + 24 + i) &
  2218                           ;main.c: 668: 0x04 ) ) {
  2219  002FF0  0100               	movlb	0	; () banked
  2220  002FF2  0100               	movlb	0	; () banked
  2221  002FF4  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2222  002FF6  0D02               	mullw	2
  2223  002FF8  0100               	movlb	0	; () banked
  2224  002FFA  0EBD               	movlw	low _channel_protection_timer
  2225  002FFC  24F3               	addwf	prodl,w,c
  2226  002FFE  6ED9               	movwf	fsr2l,c
  2227  003000  0100               	movlb	0	; () banked
  2228  003002  0E00               	movlw	high _channel_protection_timer
  2229  003004  20F4               	addwfc	prodh,w,c
  2230  003006  6EDA               	movwf	fsr2h,c
  2231  003008  50DE               	movf	postinc2,w,c
  2232  00300A  10DD               	iorwf	postdec2,w,c
  2233  00300C  A4D8               	btfss	status,2,c
  2234  00300E  D077               	goto	l10132
  2235                           
  2236                           ; BSR set to: 0
  2237  003010  0E5B               	movlw	91
  2238  003012  0100               	movlb	0	; () banked
  2239  003014  0100               	movlb	0	; () banked
  2240  003016  25AC               	addwf	doApplicationOneSecondWork@i& (0+255),w,b
  2241  003018  6E16               	movwf	?_Read_b_eep,c
  2242  00301A  6A17               	clrf	?_Read_b_eep+1,c
  2243  00301C  0E00               	movlw	0
  2244  00301E  2217               	addwfc	?_Read_b_eep+1,f,c
  2245  003020  ECD8  F037         	call	_Read_b_eep	;wreg free
  2246  003024  0101               	movlb	1	; () banked
  2247  003026  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2248  003028  0101               	movlb	1	; () banked
  2249  00302A  A500               	btfss	??_doApplicationOneSecondWork& (0+255),2,b
  2250  00302C  D068               	goto	l10132
  2251                           
  2252                           ; BSR set to: 1
  2253                           ;main.c: 671: doActionOff(0, (1 << i));
  2254  00302E  0101               	movlb	1	; () banked
  2255  003030  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2256  003032  0E00               	movlw	0
  2257  003034  0100               	movlb	0	; () banked
  2258  003036  0100               	movlb	0	; () banked
  2259  003038  6FA2               	movwf	?_doActionOff& (0+255),b
  2260  00303A  0101               	movlb	1	; () banked
  2261  00303C  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2262  00303E  C0AC  F101         	movff	doApplicationOneSecondWork@i,??_doApplicationOneSecondWork+1
  2263  003042  0E01               	movlw	1
  2264  003044  0101               	movlb	1	; () banked
  2265  003046  6F02               	movwf	(??_doApplicationOneSecondWork+2)& (0+255),b
  2266  003048  0101               	movlb	1	; () banked
  2267  00304A  2B01               	incf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2268  00304C  D003               	goto	u11894
  2269  00304E                     u11895:
  2270  00304E  0101               	movlb	1	; () banked
  2271  003050  90D8               	bcf	status,0,c
  2272  003052  3702               	rlcf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  2273  003054                     u11894:
  2274  003054  0101               	movlb	1	; () banked
  2275  003056  2F01               	decfsz	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2276  003058  D7FA               	goto	u11895
  2277  00305A  0101               	movlb	1	; () banked
  2278  00305C  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  2279  00305E  0100               	movlb	0	; () banked
  2280  003060  0100               	movlb	0	; () banked
  2281  003062  6FA3               	movwf	(?_doActionOff+1)& (0+255),b
  2282  003064  ECEF  F031         	call	_doActionOff	;wreg free
  2283                           
  2284                           ;main.c: 674: if (ctrlreg & 0x02) {
  2285  003068  0100               	movlb	0	; () banked
  2286  00306A  0100               	movlb	0	; () banked
  2287  00306C  A3AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),1,b
  2288  00306E  D010               	goto	l10128
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;main.c: 675: SendInformationEvent( i,
  2292                           ;main.c: 676: 1,
  2293                           ;main.c: 677: 2);
  2294  003070  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  2295  003074  0101               	movlb	1	; () banked
  2296  003076  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2297  003078  0E01               	movlw	1
  2298  00307A  6E31               	movwf	?_SendInformationEvent+1,c
  2299  00307C  0101               	movlb	1	; () banked
  2300  00307E  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2301  003080  0101               	movlb	1	; () banked
  2302  003082  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2303  003084  0E02               	movlw	2
  2304  003086  6E32               	movwf	?_SendInformationEvent+2,c
  2305  003088  0101               	movlb	1	; () banked
  2306  00308A  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2307  00308C  ECFC  F034         	call	_SendInformationEvent	;wreg free
  2308  003090                     l10128:
  2309                           
  2310                           ;main.c: 678: }
  2311                           ;main.c: 680: vscp_alarmstatus |= 0x01;
  2312  003090  0100               	movlb	0	; () banked
  2313  003092  0100               	movlb	0	; () banked
  2314  003094  81E7               	bsf	_vscp_alarmstatus& (0+255),0,b
  2315  003096  D033               	goto	l10132
  2316  003098                     l10130:
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;main.c: 684: else {
  2320                           ;main.c: 686: channel_protection_timer[ i ] =
  2321                           ;main.c: 687: Read_b_eep(0x43 + 46 + 20 + i) * 256 +
  2322                           ;main.c: 689: Read_b_eep(0x43 + 46 + 21 + i);
  2323  003098  0E85               	movlw	133
  2324  00309A  0100               	movlb	0	; () banked
  2325  00309C  0100               	movlb	0	; () banked
  2326  00309E  25AC               	addwf	doApplicationOneSecondWork@i& (0+255),w,b
  2327  0030A0  6E16               	movwf	?_Read_b_eep,c
  2328  0030A2  6A17               	clrf	?_Read_b_eep+1,c
  2329  0030A4  0E00               	movlw	0
  2330  0030A6  2217               	addwfc	?_Read_b_eep+1,f,c
  2331  0030A8  ECD8  F037         	call	_Read_b_eep	;wreg free
  2332  0030AC  0101               	movlb	1	; () banked
  2333  0030AE  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2334  0030B0  0101               	movlb	1	; () banked
  2335  0030B2  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2336  0030B4  0101               	movlb	1	; () banked
  2337  0030B6  6F02               	movwf	(??_doApplicationOneSecondWork+2)& (0+255),b
  2338  0030B8  6B01               	clrf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2339  0030BA  0E86               	movlw	134
  2340  0030BC  0100               	movlb	0	; () banked
  2341  0030BE  0100               	movlb	0	; () banked
  2342  0030C0  25AC               	addwf	doApplicationOneSecondWork@i& (0+255),w,b
  2343  0030C2  6E16               	movwf	?_Read_b_eep,c
  2344  0030C4  6A17               	clrf	?_Read_b_eep+1,c
  2345  0030C6  0E00               	movlw	0
  2346  0030C8  2217               	addwfc	?_Read_b_eep+1,f,c
  2347  0030CA  ECD8  F037         	call	_Read_b_eep	;wreg free
  2348  0030CE  0101               	movlb	1	; () banked
  2349  0030D0  6F03               	movwf	(??_doApplicationOneSecondWork+3)& (0+255),b
  2350  0030D2  0101               	movlb	1	; () banked
  2351  0030D4  5103               	movf	(??_doApplicationOneSecondWork+3)& (0+255),w,b
  2352  0030D6  0101               	movlb	1	; () banked
  2353  0030D8  2701               	addwf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2354  0030DA  0E00               	movlw	0
  2355  0030DC  2302               	addwfc	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  2356  0030DE  0100               	movlb	0	; () banked
  2357  0030E0  0100               	movlb	0	; () banked
  2358  0030E2  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2359  0030E4  0D02               	mullw	2
  2360  0030E6  0100               	movlb	0	; () banked
  2361  0030E8  0EBD               	movlw	low _channel_protection_timer
  2362  0030EA  24F3               	addwf	prodl,w,c
  2363  0030EC  6ED9               	movwf	fsr2l,c
  2364  0030EE  0100               	movlb	0	; () banked
  2365  0030F0  0E00               	movlw	high _channel_protection_timer
  2366  0030F2  20F4               	addwfc	prodh,w,c
  2367  0030F4  6EDA               	movwf	fsr2h,c
  2368  0030F6  C101  FFDE         	movff	??_doApplicationOneSecondWork+1,postinc2
  2369  0030FA  C102  FFDD         	movff	??_doApplicationOneSecondWork+2,postdec2
  2370  0030FE                     l10132:
  2371                           
  2372                           ;main.c: 691: }
  2373                           ;main.c: 694: if ( channel_pulse_flags & (1 << i) ) {
  2374  0030FE  C0AC  F100         	movff	doApplicationOneSecondWork@i,??_doApplicationOneSecondWork
  2375  003102  0E01               	movlw	1
  2376  003104  0101               	movlb	1	; () banked
  2377  003106  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2378  003108  6B02               	clrf	(??_doApplicationOneSecondWork+2)& (0+255),b
  2379  00310A  0101               	movlb	1	; () banked
  2380  00310C  2B00               	incf	??_doApplicationOneSecondWork& (0+255),f,b
  2381  00310E  D004               	goto	u11914
  2382  003110                     u11915:
  2383  003110  90D8               	bcf	status,0,c
  2384  003112  0101               	movlb	1	; () banked
  2385  003114  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2386  003116  3702               	rlcf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  2387  003118                     u11914:
  2388  003118  0101               	movlb	1	; () banked
  2389  00311A  2F00               	decfsz	??_doApplicationOneSecondWork& (0+255),f,b
  2390  00311C  D7F9               	goto	u11915
  2391  00311E  0100               	movlb	0	; () banked
  2392  003120  0100               	movlb	0	; () banked
  2393  003122  51D5               	movf	_channel_pulse_flags& (0+255),w,b
  2394  003124  0101               	movlb	1	; () banked
  2395  003126  1701               	andwf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2396  003128  0100               	movlb	0	; () banked
  2397  00312A  0100               	movlb	0	; () banked
  2398  00312C  51D6               	movf	(_channel_pulse_flags+1)& (0+255),w,b
  2399  00312E  0101               	movlb	1	; () banked
  2400  003130  1702               	andwf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  2401  003132  0101               	movlb	1	; () banked
  2402  003134  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  2403  003136  1101               	iorwf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2404  003138  B4D8               	btfsc	status,2,c
  2405  00313A  D1AB               	goto	l10220
  2406                           
  2407                           ; BSR set to: 1
  2408                           ;main.c: 696: if ( channel_pulse_timer[ i ] ) {
  2409  00313C  0100               	movlb	0	; () banked
  2410  00313E  0100               	movlb	0	; () banked
  2411  003140  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2412  003142  0D02               	mullw	2
  2413  003144  0101               	movlb	1	; () banked
  2414  003146  0E26               	movlw	low _channel_pulse_timer
  2415  003148  24F3               	addwf	prodl,w,c
  2416  00314A  6ED9               	movwf	fsr2l,c
  2417  00314C  0101               	movlb	1	; () banked
  2418  00314E  0E01               	movlw	high _channel_pulse_timer
  2419  003150  20F4               	addwfc	prodh,w,c
  2420  003152  6EDA               	movwf	fsr2h,c
  2421  003154  50DE               	movf	postinc2,w,c
  2422  003156  10DD               	iorwf	postdec2,w,c
  2423  003158  B4D8               	btfsc	status,2,c
  2424  00315A  D154               	goto	l10218
  2425                           
  2426                           ; BSR set to: 1
  2427                           ;main.c: 698: channel_pulse_timer[ i ]--;
  2428  00315C  0100               	movlb	0	; () banked
  2429  00315E  0100               	movlb	0	; () banked
  2430  003160  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2431  003162  0D02               	mullw	2
  2432  003164  0101               	movlb	1	; () banked
  2433  003166  0E26               	movlw	low _channel_pulse_timer
  2434  003168  24F3               	addwf	prodl,w,c
  2435  00316A  6ED9               	movwf	fsr2l,c
  2436  00316C  0101               	movlb	1	; () banked
  2437  00316E  0E01               	movlw	high _channel_pulse_timer
  2438  003170  20F4               	addwfc	prodh,w,c
  2439  003172  6EDA               	movwf	fsr2h,c
  2440  003174  06DE               	decf	postinc2,f,c
  2441  003176  0E00               	movlw	0
  2442  003178  5ADD               	subwfb	postdec2,f,c
  2443                           
  2444                           ;main.c: 701: if ( !channel_pulse_timer[ i ] ) {
  2445  00317A  0100               	movlb	0	; () banked
  2446  00317C  0100               	movlb	0	; () banked
  2447  00317E  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2448  003180  0D02               	mullw	2
  2449  003182  0101               	movlb	1	; () banked
  2450  003184  0E26               	movlw	low _channel_pulse_timer
  2451  003186  24F3               	addwf	prodl,w,c
  2452  003188  6ED9               	movwf	fsr2l,c
  2453  00318A  0101               	movlb	1	; () banked
  2454  00318C  0E01               	movlw	high _channel_pulse_timer
  2455  00318E  20F4               	addwfc	prodh,w,c
  2456  003190  6EDA               	movwf	fsr2h,c
  2457  003192  50DE               	movf	postinc2,w,c
  2458  003194  10DD               	iorwf	postdec2,w,c
  2459  003196  B4D8               	btfsc	status,2,c
  2460  003198  D048               	goto	l10202
  2461  00319A  D17B               	goto	l10220
  2462  00319C                     l488:
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;main.c: 706: if ( LATBbits.LATB0 ) {
  2466  00319C  A08A               	btfss	3978,0,c	;volatile
  2467  00319E  D002               	goto	l489
  2468                           
  2469                           ; BSR set to: 0
  2470                           ;main.c: 707: LATBbits.LATB0 = 0;
  2471  0031A0  908A               	bcf	3978,0,c	;volatile
  2472  0031A2  D005               	goto	L29
  2473  0031A4                     l489:
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;main.c: 710: else {
  2477                           ;main.c: 711: LATBbits.LATB0 = 1;
  2478  0031A4  808A               	bsf	3978,0,c	;volatile
  2479  0031A6  D038               	goto	L26
  2480  0031A8                     l492:
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;main.c: 717: if ( LATBbits.LATB1 ) {
  2484  0031A8  A28A               	btfss	3978,1,c	;volatile
  2485  0031AA  D005               	goto	l493
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;main.c: 718: LATBbits.LATB1 = 0;
  2489  0031AC  928A               	bcf	3978,1,c	;volatile
  2490  0031AE                     L29:
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;main.c: 719: bOn = 0;
  2494  0031AE  0101               	movlb	1	; () banked
  2495  0031B0  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2496  0031B2  0E00               	movlw	0
  2497  0031B4  D034               	goto	L20
  2498  0031B6                     l493:
  2499                           
  2500                           ; BSR set to: 0
  2501                           ;main.c: 721: else {
  2502                           ;main.c: 722: LATBbits.LATB1 = 1;
  2503  0031B6  828A               	bsf	3978,1,c	;volatile
  2504  0031B8  D02F               	goto	L26
  2505  0031BA                     l495:
  2506                           
  2507                           ; BSR set to: 0
  2508                           ;main.c: 728: if ( LATCbits.LATC3 ) {
  2509  0031BA  A68B               	btfss	3979,3,c	;volatile
  2510  0031BC  D002               	goto	l496
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;main.c: 729: LATCbits.LATC3 = 0;
  2514  0031BE  968B               	bcf	3979,3,c	;volatile
  2515  0031C0  D7F6               	goto	L29
  2516  0031C2                     l496:
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;main.c: 732: else {
  2520                           ;main.c: 733: LATCbits.LATC3 = 1;
  2521  0031C2  868B               	bsf	3979,3,c	;volatile
  2522  0031C4  D029               	goto	L26
  2523  0031C6                     l498:
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;main.c: 739: if ( LATCbits.LATC4 ) {
  2527  0031C6  A88B               	btfss	3979,4,c	;volatile
  2528  0031C8  D002               	goto	l499
  2529                           
  2530                           ; BSR set to: 0
  2531                           ;main.c: 740: LATCbits.LATC4 = 0;
  2532  0031CA  988B               	bcf	3979,4,c	;volatile
  2533  0031CC  D7F0               	goto	L29
  2534  0031CE                     l499:
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;main.c: 743: else {
  2538                           ;main.c: 744: LATCbits.LATC4 = 1;
  2539  0031CE  888B               	bsf	3979,4,c	;volatile
  2540  0031D0  D023               	goto	L26
  2541  0031D2                     l501:
  2542                           
  2543                           ; BSR set to: 0
  2544                           ;main.c: 750: if ( LATCbits.LATC5 ) {
  2545  0031D2  AA8B               	btfss	3979,5,c	;volatile
  2546  0031D4  D002               	goto	l502
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;main.c: 751: LATCbits.LATC5 = 0;
  2550  0031D6  9A8B               	bcf	3979,5,c	;volatile
  2551  0031D8  D7EA               	goto	L29
  2552  0031DA                     l502:
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;main.c: 754: else {
  2556                           ;main.c: 755: LATCbits.LATC5 = 1;
  2557  0031DA  8A8B               	bsf	3979,5,c	;volatile
  2558  0031DC  D01D               	goto	L26
  2559  0031DE                     l504:
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;main.c: 761: if ( LATCbits.LATC6 ) {
  2563  0031DE  AC8B               	btfss	3979,6,c	;volatile
  2564  0031E0  D002               	goto	l505
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;main.c: 762: LATCbits.LATC6 = 0;
  2568  0031E2  9C8B               	bcf	3979,6,c	;volatile
  2569  0031E4  D7E4               	goto	L29
  2570  0031E6                     l505:
  2571                           
  2572                           ; BSR set to: 0
  2573                           ;main.c: 765: else {
  2574                           ;main.c: 766: LATCbits.LATC6 = 1;
  2575  0031E6  8C8B               	bsf	3979,6,c	;volatile
  2576  0031E8  D017               	goto	L26
  2577  0031EA                     l507:
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;main.c: 772: if ( LATCbits.LATC7 ) {
  2581  0031EA  AE8B               	btfss	3979,7,c	;volatile
  2582  0031EC  D002               	goto	l508
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;main.c: 773: LATCbits.LATC7 = 0;
  2586  0031EE  9E8B               	bcf	3979,7,c	;volatile
  2587  0031F0  D7DE               	goto	L29
  2588  0031F2                     l508:
  2589                           
  2590                           ; BSR set to: 0
  2591                           ;main.c: 776: else {
  2592                           ;main.c: 777: LATCbits.LATC7 = 1;
  2593  0031F2  8E8B               	bsf	3979,7,c	;volatile
  2594  0031F4  D011               	goto	L26
  2595  0031F6                     l510:
  2596                           
  2597                           ; BSR set to: 0
  2598                           ;main.c: 783: if ( LATAbits.LATA2 ) {
  2599  0031F6  A489               	btfss	3977,2,c	;volatile
  2600  0031F8  D002               	goto	l511
  2601                           
  2602                           ; BSR set to: 0
  2603                           ;main.c: 784: LATAbits.LATA2 = 0;
  2604  0031FA  9489               	bcf	3977,2,c	;volatile
  2605  0031FC  D7D8               	goto	L29
  2606  0031FE                     l511:
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;main.c: 787: else {
  2610                           ;main.c: 788: LATAbits.LATA2 = 1;
  2611  0031FE  8489               	bsf	3977,2,c	;volatile
  2612  003200  D00B               	goto	L26
  2613  003202                     l513:
  2614                           
  2615                           ; BSR set to: 0
  2616                           ;main.c: 794: if ( LATAbits.LATA1 ) {
  2617  003202  A289               	btfss	3977,1,c	;volatile
  2618  003204  D002               	goto	l514
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;main.c: 795: LATAbits.LATA1 = 0;
  2622  003206  9289               	bcf	3977,1,c	;volatile
  2623  003208  D7D2               	goto	L29
  2624  00320A                     l514:
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;main.c: 798: else {
  2628                           ;main.c: 799: LATAbits.LATA1 = 1;
  2629  00320A  8289               	bsf	3977,1,c	;volatile
  2630  00320C  D005               	goto	L26
  2631  00320E                     l516:
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;main.c: 805: if ( LATAbits.LATA0 ) {
  2635  00320E  A089               	btfss	3977,0,c	;volatile
  2636  003210  D002               	goto	l517
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;main.c: 806: LATAbits.LATA0 = 0;
  2640  003212  9089               	bcf	3977,0,c	;volatile
  2641  003214  D7CC               	goto	L29
  2642  003216                     l517:
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;main.c: 809: else {
  2646                           ;main.c: 810: LATAbits.LATA0 = 1;
  2647  003216  8089               	bsf	3977,0,c	;volatile
  2648  003218                     L26:
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;main.c: 811: bOn = 1;
  2652  003218  0101               	movlb	1	; () banked
  2653  00321A  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2654  00321C  0E01               	movlw	1
  2655  00321E                     L20:
  2656  00321E  0100               	movlb	0	; () banked
  2657  003220  0100               	movlb	0	; () banked
  2658  003222  6FAA               	movwf	doApplicationOneSecondWork@bOn& (0+255),b
  2659  003224  0101               	movlb	1	; () banked
  2660  003226  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2661  003228  D021               	goto	l10204
  2662  00322A                     l10202:
  2663                           
  2664                           ; BSR set to: 1
  2665  00322A  0100               	movlb	0	; () banked
  2666  00322C  0100               	movlb	0	; () banked
  2667  00322E  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2668                           
  2669                           ; Switch size 1, requested type "space"
  2670                           ; Number of cases is 10, Range of values is 0 to 9
  2671                           ; switch strategies available:
  2672                           ; Name         Instructions Cycles
  2673                           ; simple_byte           31    16 (average)
  2674                           ;	Chosen strategy is simple_byte
  2675  003230  0A00               	xorlw	0	; case 0
  2676  003232  B4D8               	btfsc	status,2,c
  2677  003234  D7B3               	goto	l488
  2678  003236  0A01               	xorlw	1	; case 1
  2679  003238  B4D8               	btfsc	status,2,c
  2680  00323A  D7B6               	goto	l492
  2681  00323C  0A03               	xorlw	3	; case 2
  2682  00323E  B4D8               	btfsc	status,2,c
  2683  003240  D7BC               	goto	l495
  2684  003242  0A01               	xorlw	1	; case 3
  2685  003244  B4D8               	btfsc	status,2,c
  2686  003246  D7BF               	goto	l498
  2687  003248  0A07               	xorlw	7	; case 4
  2688  00324A  B4D8               	btfsc	status,2,c
  2689  00324C  D7C2               	goto	l501
  2690  00324E  0A01               	xorlw	1	; case 5
  2691  003250  B4D8               	btfsc	status,2,c
  2692  003252  D7C5               	goto	l504
  2693  003254  0A03               	xorlw	3	; case 6
  2694  003256  B4D8               	btfsc	status,2,c
  2695  003258  D7C8               	goto	l507
  2696  00325A  0A01               	xorlw	1	; case 7
  2697  00325C  B4D8               	btfsc	status,2,c
  2698  00325E  D7CB               	goto	l510
  2699  003260  0A0F               	xorlw	15	; case 8
  2700  003262  B4D8               	btfsc	status,2,c
  2701  003264  D7CE               	goto	l513
  2702  003266  0A01               	xorlw	1	; case 9
  2703  003268  B4D8               	btfsc	status,2,c
  2704  00326A  D7D1               	goto	l516
  2705  00326C                     l10204:
  2706                           
  2707                           ;main.c: 817: channel_pulse_timer[ i ] =
  2708                           ;main.c: 818: Read_b_eep(0x43 + 46 + 0 + 2 * i) * 256 +
  2709                           ;main.c: 820: Read_b_eep(0x43 + 46 + 0 + 2 * i);
  2710  00326C  90D8               	bcf	status,0,c
  2711  00326E  0100               	movlb	0	; () banked
  2712  003270  0100               	movlb	0	; () banked
  2713  003272  35AC               	rlcf	doApplicationOneSecondWork@i& (0+255),w,b
  2714  003274  0101               	movlb	1	; () banked
  2715  003276  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2716  003278  0101               	movlb	1	; () banked
  2717  00327A  6B01               	clrf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2718  00327C  0101               	movlb	1	; () banked
  2719  00327E  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2720  003280  0E71               	movlw	113
  2721  003282  0101               	movlb	1	; () banked
  2722  003284  2500               	addwf	??_doApplicationOneSecondWork& (0+255),w,b
  2723  003286  6E16               	movwf	?_Read_b_eep,c
  2724  003288  0E00               	movlw	0
  2725  00328A  0101               	movlb	1	; () banked
  2726  00328C  2101               	addwfc	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2727  00328E  6E17               	movwf	?_Read_b_eep+1,c
  2728  003290  ECD8  F037         	call	_Read_b_eep	;wreg free
  2729  003294  0101               	movlb	1	; () banked
  2730  003296  6F02               	movwf	(??_doApplicationOneSecondWork+2)& (0+255),b
  2731  003298  0101               	movlb	1	; () banked
  2732  00329A  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  2733  00329C  0101               	movlb	1	; () banked
  2734  00329E  6F04               	movwf	(??_doApplicationOneSecondWork+4)& (0+255),b
  2735  0032A0  6B03               	clrf	(??_doApplicationOneSecondWork+3)& (0+255),b
  2736  0032A2  90D8               	bcf	status,0,c
  2737  0032A4  0100               	movlb	0	; () banked
  2738  0032A6  0100               	movlb	0	; () banked
  2739  0032A8  35AC               	rlcf	doApplicationOneSecondWork@i& (0+255),w,b
  2740  0032AA  0101               	movlb	1	; () banked
  2741  0032AC  6F05               	movwf	(??_doApplicationOneSecondWork+5)& (0+255),b
  2742  0032AE  0101               	movlb	1	; () banked
  2743  0032B0  6B06               	clrf	(??_doApplicationOneSecondWork+6)& (0+255),b
  2744  0032B2  0101               	movlb	1	; () banked
  2745  0032B4  3706               	rlcf	(??_doApplicationOneSecondWork+6)& (0+255),f,b
  2746  0032B6  0E71               	movlw	113
  2747  0032B8  0101               	movlb	1	; () banked
  2748  0032BA  2505               	addwf	(??_doApplicationOneSecondWork+5)& (0+255),w,b
  2749  0032BC  6E16               	movwf	?_Read_b_eep,c
  2750  0032BE  0E00               	movlw	0
  2751  0032C0  0101               	movlb	1	; () banked
  2752  0032C2  2106               	addwfc	(??_doApplicationOneSecondWork+6)& (0+255),w,b
  2753  0032C4  6E17               	movwf	?_Read_b_eep+1,c
  2754  0032C6  ECD8  F037         	call	_Read_b_eep	;wreg free
  2755  0032CA  0101               	movlb	1	; () banked
  2756  0032CC  6F07               	movwf	(??_doApplicationOneSecondWork+7)& (0+255),b
  2757  0032CE  0101               	movlb	1	; () banked
  2758  0032D0  5107               	movf	(??_doApplicationOneSecondWork+7)& (0+255),w,b
  2759  0032D2  0101               	movlb	1	; () banked
  2760  0032D4  2703               	addwf	(??_doApplicationOneSecondWork+3)& (0+255),f,b
  2761  0032D6  0E00               	movlw	0
  2762  0032D8  2304               	addwfc	(??_doApplicationOneSecondWork+4)& (0+255),f,b
  2763  0032DA  0100               	movlb	0	; () banked
  2764  0032DC  0100               	movlb	0	; () banked
  2765  0032DE  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2766  0032E0  0D02               	mullw	2
  2767  0032E2  0101               	movlb	1	; () banked
  2768  0032E4  0E26               	movlw	low _channel_pulse_timer
  2769  0032E6  24F3               	addwf	prodl,w,c
  2770  0032E8  6ED9               	movwf	fsr2l,c
  2771  0032EA  0101               	movlb	1	; () banked
  2772  0032EC  0E01               	movlw	high _channel_pulse_timer
  2773  0032EE  20F4               	addwfc	prodh,w,c
  2774  0032F0  6EDA               	movwf	fsr2h,c
  2775  0032F2  C103  FFDE         	movff	??_doApplicationOneSecondWork+3,postinc2
  2776  0032F6  C104  FFDD         	movff	??_doApplicationOneSecondWork+4,postdec2
  2777                           
  2778                           ; BSR set to: 1
  2779                           ;main.c: 823: if ( bOn ) {
  2780  0032FA  0100               	movlb	0	; () banked
  2781  0032FC  0100               	movlb	0	; () banked
  2782  0032FE  51AA               	movf	doApplicationOneSecondWork@bOn& (0+255),w,b
  2783  003300  B4D8               	btfsc	status,2,c
  2784  003302  D06B               	goto	l519
  2785                           
  2786                           ; BSR set to: 0
  2787                           ;main.c: 826: if ( Read_b_eep(0x43 + 24 + i) &
  2788                           ;main.c: 827: 0x04) {
  2789  003304  0E5B               	movlw	91
  2790  003306  0100               	movlb	0	; () banked
  2791  003308  0100               	movlb	0	; () banked
  2792  00330A  25AC               	addwf	doApplicationOneSecondWork@i& (0+255),w,b
  2793  00330C  6E16               	movwf	?_Read_b_eep,c
  2794  00330E  6A17               	clrf	?_Read_b_eep+1,c
  2795  003310  0E00               	movlw	0
  2796  003312  2217               	addwfc	?_Read_b_eep+1,f,c
  2797  003314  ECD8  F037         	call	_Read_b_eep	;wreg free
  2798  003318  0101               	movlb	1	; () banked
  2799  00331A  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2800  00331C  0101               	movlb	1	; () banked
  2801  00331E  A500               	btfss	??_doApplicationOneSecondWork& (0+255),2,b
  2802  003320  D047               	goto	l10212
  2803                           
  2804                           ; BSR set to: 1
  2805                           ;main.c: 828: channel_protection_timer[ i ] =
  2806                           ;main.c: 829: Read_b_eep(0x43 + 46 + 20 + 2 * i) * 256 +
  2807                           ;main.c: 831: Read_b_eep(0x43 + 46 + 21 + 2 * i);
  2808  003322  90D8               	bcf	status,0,c
  2809  003324  0100               	movlb	0	; () banked
  2810  003326  0100               	movlb	0	; () banked
  2811  003328  35AC               	rlcf	doApplicationOneSecondWork@i& (0+255),w,b
  2812  00332A  0101               	movlb	1	; () banked
  2813  00332C  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2814  00332E  0101               	movlb	1	; () banked
  2815  003330  6B01               	clrf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2816  003332  0101               	movlb	1	; () banked
  2817  003334  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2818  003336  0E85               	movlw	133
  2819  003338  0101               	movlb	1	; () banked
  2820  00333A  2500               	addwf	??_doApplicationOneSecondWork& (0+255),w,b
  2821  00333C  6E16               	movwf	?_Read_b_eep,c
  2822  00333E  0E00               	movlw	0
  2823  003340  0101               	movlb	1	; () banked
  2824  003342  2101               	addwfc	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2825  003344  6E17               	movwf	?_Read_b_eep+1,c
  2826  003346  ECD8  F037         	call	_Read_b_eep	;wreg free
  2827  00334A  0101               	movlb	1	; () banked
  2828  00334C  6F02               	movwf	(??_doApplicationOneSecondWork+2)& (0+255),b
  2829  00334E  0101               	movlb	1	; () banked
  2830  003350  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  2831  003352  0101               	movlb	1	; () banked
  2832  003354  6F04               	movwf	(??_doApplicationOneSecondWork+4)& (0+255),b
  2833  003356  6B03               	clrf	(??_doApplicationOneSecondWork+3)& (0+255),b
  2834  003358  90D8               	bcf	status,0,c
  2835  00335A  0100               	movlb	0	; () banked
  2836  00335C  0100               	movlb	0	; () banked
  2837  00335E  35AC               	rlcf	doApplicationOneSecondWork@i& (0+255),w,b
  2838  003360  0101               	movlb	1	; () banked
  2839  003362  6F05               	movwf	(??_doApplicationOneSecondWork+5)& (0+255),b
  2840  003364  0101               	movlb	1	; () banked
  2841  003366  6B06               	clrf	(??_doApplicationOneSecondWork+6)& (0+255),b
  2842  003368  0101               	movlb	1	; () banked
  2843  00336A  3706               	rlcf	(??_doApplicationOneSecondWork+6)& (0+255),f,b
  2844  00336C  0E86               	movlw	134
  2845  00336E  0101               	movlb	1	; () banked
  2846  003370  2505               	addwf	(??_doApplicationOneSecondWork+5)& (0+255),w,b
  2847  003372  6E16               	movwf	?_Read_b_eep,c
  2848  003374  0E00               	movlw	0
  2849  003376  0101               	movlb	1	; () banked
  2850  003378  2106               	addwfc	(??_doApplicationOneSecondWork+6)& (0+255),w,b
  2851  00337A  6E17               	movwf	?_Read_b_eep+1,c
  2852  00337C  ECD8  F037         	call	_Read_b_eep	;wreg free
  2853  003380  0101               	movlb	1	; () banked
  2854  003382  6F07               	movwf	(??_doApplicationOneSecondWork+7)& (0+255),b
  2855  003384  0101               	movlb	1	; () banked
  2856  003386  5107               	movf	(??_doApplicationOneSecondWork+7)& (0+255),w,b
  2857  003388  0101               	movlb	1	; () banked
  2858  00338A  2703               	addwf	(??_doApplicationOneSecondWork+3)& (0+255),f,b
  2859  00338C  0E00               	movlw	0
  2860  00338E  2304               	addwfc	(??_doApplicationOneSecondWork+4)& (0+255),f,b
  2861  003390  0100               	movlb	0	; () banked
  2862  003392  0100               	movlb	0	; () banked
  2863  003394  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2864  003396  0D02               	mullw	2
  2865  003398  0100               	movlb	0	; () banked
  2866  00339A  0EBD               	movlw	low _channel_protection_timer
  2867  00339C  24F3               	addwf	prodl,w,c
  2868  00339E  6ED9               	movwf	fsr2l,c
  2869  0033A0  0100               	movlb	0	; () banked
  2870  0033A2  0E00               	movlw	high _channel_protection_timer
  2871  0033A4  20F4               	addwfc	prodh,w,c
  2872  0033A6  6EDA               	movwf	fsr2h,c
  2873  0033A8  C103  FFDE         	movff	??_doApplicationOneSecondWork+3,postinc2
  2874  0033AC  C104  FFDD         	movff	??_doApplicationOneSecondWork+4,postdec2
  2875  0033B0                     l10212:
  2876                           
  2877                           ;main.c: 833: }
  2878                           ;main.c: 835: if ( ctrlreg & 0x08 ) {
  2879  0033B0  0100               	movlb	0	; () banked
  2880  0033B2  0100               	movlb	0	; () banked
  2881  0033B4  A7AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),3,b
  2882  0033B6  D06D               	goto	l10220
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;main.c: 836: SendInformationEvent( i,
  2886                           ;main.c: 837: 20,
  2887                           ;main.c: 838: 3);
  2888  0033B8  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  2889  0033BC  0101               	movlb	1	; () banked
  2890  0033BE  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2891  0033C0  0E14               	movlw	20
  2892  0033C2  6E31               	movwf	?_SendInformationEvent+1,c
  2893  0033C4  0101               	movlb	1	; () banked
  2894  0033C6  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2895  0033C8  0101               	movlb	1	; () banked
  2896  0033CA  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2897  0033CC  0E03               	movlw	3
  2898  0033CE  6E32               	movwf	?_SendInformationEvent+2,c
  2899  0033D0  0101               	movlb	1	; () banked
  2900  0033D2  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2901  0033D4  ECFC  F034         	call	_SendInformationEvent	;wreg free
  2902  0033D8  D05C               	goto	l10220
  2903  0033DA                     l519:
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;main.c: 843: else {
  2907                           ;main.c: 845: if ( ctrlreg & 0x10 ) {
  2908  0033DA  0100               	movlb	0	; () banked
  2909  0033DC  0100               	movlb	0	; () banked
  2910  0033DE  A9AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),4,b
  2911  0033E0  D058               	goto	l10220
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;main.c: 846: SendInformationEvent( i, 20,
  2915                           ;main.c: 847: 4);
  2916  0033E2  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  2917  0033E6  0101               	movlb	1	; () banked
  2918  0033E8  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2919  0033EA  0E14               	movlw	20
  2920  0033EC  6E31               	movwf	?_SendInformationEvent+1,c
  2921  0033EE  0101               	movlb	1	; () banked
  2922  0033F0  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2923  0033F2  0101               	movlb	1	; () banked
  2924  0033F4  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2925  0033F6  0E04               	movlw	4
  2926  0033F8  6E32               	movwf	?_SendInformationEvent+2,c
  2927  0033FA  0101               	movlb	1	; () banked
  2928  0033FC  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2929  0033FE  ECFC  F034         	call	_SendInformationEvent	;wreg free
  2930  003402  D047               	goto	l10220
  2931  003404                     l10218:
  2932                           
  2933                           ;main.c: 855: else {
  2934                           ;main.c: 857: channel_pulse_timer[ i ] =
  2935                           ;main.c: 858: Read_b_eep(0x43 + 46 + 0 + 2 * i) * 256 +
  2936                           ;main.c: 860: Read_b_eep(0x43 + 46 + 1 + 2 * i);
  2937  003404  90D8               	bcf	status,0,c
  2938  003406  0100               	movlb	0	; () banked
  2939  003408  0100               	movlb	0	; () banked
  2940  00340A  35AC               	rlcf	doApplicationOneSecondWork@i& (0+255),w,b
  2941  00340C  0101               	movlb	1	; () banked
  2942  00340E  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2943  003410  0101               	movlb	1	; () banked
  2944  003412  6B01               	clrf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2945  003414  0101               	movlb	1	; () banked
  2946  003416  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2947  003418  0E71               	movlw	113
  2948  00341A  0101               	movlb	1	; () banked
  2949  00341C  2500               	addwf	??_doApplicationOneSecondWork& (0+255),w,b
  2950  00341E  6E16               	movwf	?_Read_b_eep,c
  2951  003420  0E00               	movlw	0
  2952  003422  0101               	movlb	1	; () banked
  2953  003424  2101               	addwfc	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2954  003426  6E17               	movwf	?_Read_b_eep+1,c
  2955  003428  ECD8  F037         	call	_Read_b_eep	;wreg free
  2956  00342C  0101               	movlb	1	; () banked
  2957  00342E  6F02               	movwf	(??_doApplicationOneSecondWork+2)& (0+255),b
  2958  003430  0101               	movlb	1	; () banked
  2959  003432  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  2960  003434  0101               	movlb	1	; () banked
  2961  003436  6F04               	movwf	(??_doApplicationOneSecondWork+4)& (0+255),b
  2962  003438  6B03               	clrf	(??_doApplicationOneSecondWork+3)& (0+255),b
  2963  00343A  90D8               	bcf	status,0,c
  2964  00343C  0100               	movlb	0	; () banked
  2965  00343E  0100               	movlb	0	; () banked
  2966  003440  35AC               	rlcf	doApplicationOneSecondWork@i& (0+255),w,b
  2967  003442  0101               	movlb	1	; () banked
  2968  003444  6F05               	movwf	(??_doApplicationOneSecondWork+5)& (0+255),b
  2969  003446  0101               	movlb	1	; () banked
  2970  003448  6B06               	clrf	(??_doApplicationOneSecondWork+6)& (0+255),b
  2971  00344A  0101               	movlb	1	; () banked
  2972  00344C  3706               	rlcf	(??_doApplicationOneSecondWork+6)& (0+255),f,b
  2973  00344E  0E72               	movlw	114
  2974  003450  0101               	movlb	1	; () banked
  2975  003452  2505               	addwf	(??_doApplicationOneSecondWork+5)& (0+255),w,b
  2976  003454  6E16               	movwf	?_Read_b_eep,c
  2977  003456  0E00               	movlw	0
  2978  003458  0101               	movlb	1	; () banked
  2979  00345A  2106               	addwfc	(??_doApplicationOneSecondWork+6)& (0+255),w,b
  2980  00345C  6E17               	movwf	?_Read_b_eep+1,c
  2981  00345E  ECD8  F037         	call	_Read_b_eep	;wreg free
  2982  003462  0101               	movlb	1	; () banked
  2983  003464  6F07               	movwf	(??_doApplicationOneSecondWork+7)& (0+255),b
  2984  003466  0101               	movlb	1	; () banked
  2985  003468  5107               	movf	(??_doApplicationOneSecondWork+7)& (0+255),w,b
  2986  00346A  0101               	movlb	1	; () banked
  2987  00346C  2703               	addwf	(??_doApplicationOneSecondWork+3)& (0+255),f,b
  2988  00346E  0E00               	movlw	0
  2989  003470  2304               	addwfc	(??_doApplicationOneSecondWork+4)& (0+255),f,b
  2990  003472  0100               	movlb	0	; () banked
  2991  003474  0100               	movlb	0	; () banked
  2992  003476  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2993  003478  0D02               	mullw	2
  2994  00347A  0101               	movlb	1	; () banked
  2995  00347C  0E26               	movlw	low _channel_pulse_timer
  2996  00347E  24F3               	addwf	prodl,w,c
  2997  003480  6ED9               	movwf	fsr2l,c
  2998  003482  0101               	movlb	1	; () banked
  2999  003484  0E01               	movlw	high _channel_pulse_timer
  3000  003486  20F4               	addwfc	prodh,w,c
  3001  003488  6EDA               	movwf	fsr2h,c
  3002  00348A  C103  FFDE         	movff	??_doApplicationOneSecondWork+3,postinc2
  3003  00348E  C104  FFDD         	movff	??_doApplicationOneSecondWork+4,postdec2
  3004  003492                     l10220:
  3005  003492  0100               	movlb	0	; () banked
  3006  003494  0100               	movlb	0	; () banked
  3007  003496  2BAC               	incf	doApplicationOneSecondWork@i& (0+255),f,b
  3008  003498                     L21:
  3009                           
  3010                           ; BSR set to: 0
  3011  003498  0E09               	movlw	9
  3012  00349A  0100               	movlb	0	; () banked
  3013  00349C  0100               	movlb	0	; () banked
  3014  00349E  65AC               	cpfsgt	doApplicationOneSecondWork@i& (0+255),b
  3015  0034A0  D44A               	goto	l10068
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;main.c: 862: }
  3019                           ;main.c: 864: }
  3020                           ;main.c: 866: }
  3021                           ;main.c: 868: }
  3022                           ;main.c: 871: current_iostate = ( LATAbits.LATA0 << 9 ) +
  3023                           ;main.c: 872: ( LATAbits.LATA1 << 8 ) +
  3024                           ;main.c: 873: ( LATAbits.LATA2 << 7 ) +
  3025                           ;main.c: 874: ( LATCbits.LATC7 << 6 ) +
  3026                           ;main.c: 875: ( LATCbits.LATC6 << 5 ) +
  3027                           ;main.c: 876: ( LATCbits.LATC5 << 4 ) +
  3028                           ;main.c: 877: ( LATCbits.LATC4 << 3 ) +
  3029                           ;main.c: 878: ( LATCbits.LATC3 << 2 ) +
  3030                           ;main.c: 879: ( LATBbits.LATB1 << 1 ) +
  3031                           ;main.c: 880: LATBbits.LATB0;
  3032                           
  3033                           ; BSR set to: 0
  3034  0034A2  508A               	movf	3978,w,c	;volatile
  3035  0034A4  0B01               	andlw	1
  3036  0034A6  0101               	movlb	1	; () banked
  3037  0034A8  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  3038  0034AA  308A               	rrcf	3978,w,c	;volatile
  3039  0034AC  0B01               	andlw	1
  3040  0034AE  0101               	movlb	1	; () banked
  3041  0034B0  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  3042  0034B2  90D8               	bcf	status,0,c
  3043  0034B4  0101               	movlb	1	; () banked
  3044  0034B6  3501               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  3045  0034B8  0101               	movlb	1	; () banked
  3046  0034BA  6F02               	movwf	(??_doApplicationOneSecondWork+2)& (0+255),b
  3047  0034BC  0101               	movlb	1	; () banked
  3048  0034BE  6B03               	clrf	(??_doApplicationOneSecondWork+3)& (0+255),b
  3049  0034C0  0101               	movlb	1	; () banked
  3050  0034C2  3703               	rlcf	(??_doApplicationOneSecondWork+3)& (0+255),f,b
  3051  0034C4  308B               	rrcf	3979,w,c	;volatile
  3052  0034C6  32E8               	rrcf	wreg,f,c
  3053  0034C8  32E8               	rrcf	wreg,f,c
  3054  0034CA  0B01               	andlw	1
  3055  0034CC  0101               	movlb	1	; () banked
  3056  0034CE  6F04               	movwf	(??_doApplicationOneSecondWork+4)& (0+255),b
  3057  0034D0  6B05               	clrf	(??_doApplicationOneSecondWork+5)& (0+255),b
  3058  0034D2  0101               	movlb	1	; () banked
  3059  0034D4  90D8               	bcf	status,0,c
  3060  0034D6  3704               	rlcf	(??_doApplicationOneSecondWork+4)& (0+255),f,b
  3061  0034D8  3705               	rlcf	(??_doApplicationOneSecondWork+5)& (0+255),f,b
  3062  0034DA  0101               	movlb	1	; () banked
  3063  0034DC  90D8               	bcf	status,0,c
  3064  0034DE  3704               	rlcf	(??_doApplicationOneSecondWork+4)& (0+255),f,b
  3065  0034E0  3705               	rlcf	(??_doApplicationOneSecondWork+5)& (0+255),f,b
  3066  0034E2  388B               	swapf	3979,w,c	;volatile
  3067  0034E4  0B01               	andlw	1
  3068  0034E6  0101               	movlb	1	; () banked
  3069  0034E8  6F06               	movwf	(??_doApplicationOneSecondWork+6)& (0+255),b
  3070  0034EA  6B07               	clrf	(??_doApplicationOneSecondWork+7)& (0+255),b
  3071  0034EC  0101               	movlb	1	; () banked
  3072  0034EE  90D8               	bcf	status,0,c
  3073  0034F0  3706               	rlcf	(??_doApplicationOneSecondWork+6)& (0+255),f,b
  3074  0034F2  3707               	rlcf	(??_doApplicationOneSecondWork+7)& (0+255),f,b
  3075  0034F4  0101               	movlb	1	; () banked
  3076  0034F6  90D8               	bcf	status,0,c
  3077  0034F8  3706               	rlcf	(??_doApplicationOneSecondWork+6)& (0+255),f,b
  3078  0034FA  3707               	rlcf	(??_doApplicationOneSecondWork+7)& (0+255),f,b
  3079  0034FC  0101               	movlb	1	; () banked
  3080  0034FE  90D8               	bcf	status,0,c
  3081  003500  3706               	rlcf	(??_doApplicationOneSecondWork+6)& (0+255),f,b
  3082  003502  3707               	rlcf	(??_doApplicationOneSecondWork+7)& (0+255),f,b
  3083  003504  388B               	swapf	3979,w,c	;volatile
  3084  003506  32E8               	rrcf	wreg,f,c
  3085  003508  0B01               	andlw	1
  3086  00350A  0101               	movlb	1	; () banked
  3087  00350C  6F08               	movwf	(??_doApplicationOneSecondWork+8)& (0+255),b
  3088  00350E  6B09               	clrf	(??_doApplicationOneSecondWork+9)& (0+255),b
  3089  003510  0101               	movlb	1	; () banked
  3090  003512  3B08               	swapf	(??_doApplicationOneSecondWork+8)& (0+255),f,b
  3091  003514  3B09               	swapf	(??_doApplicationOneSecondWork+9)& (0+255),f,b
  3092  003516  0EF0               	movlw	240
  3093  003518  1709               	andwf	(??_doApplicationOneSecondWork+9)& (0+255),f,b
  3094  00351A  5108               	movf	(??_doApplicationOneSecondWork+8)& (0+255),w,b
  3095  00351C  0B0F               	andlw	15
  3096  00351E  1309               	iorwf	(??_doApplicationOneSecondWork+9)& (0+255),f,b
  3097  003520  0EF0               	movlw	240
  3098  003522  1708               	andwf	(??_doApplicationOneSecondWork+8)& (0+255),f,b
  3099  003524  388B               	swapf	3979,w,c	;volatile
  3100  003526  32E8               	rrcf	wreg,f,c
  3101  003528  32E8               	rrcf	wreg,f,c
  3102  00352A  0B01               	andlw	1
  3103  00352C  0101               	movlb	1	; () banked
  3104  00352E  6F0A               	movwf	(??_doApplicationOneSecondWork+10)& (0+255),b
  3105  003530  6B0B               	clrf	(??_doApplicationOneSecondWork+11)& (0+255),b
  3106  003532  0E05               	movlw	5
  3107  003534                     u12105:
  3108  003534  90D8               	bcf	status,0,c
  3109  003536  0101               	movlb	1	; () banked
  3110  003538  370A               	rlcf	(??_doApplicationOneSecondWork+10)& (0+255),f,b
  3111  00353A  370B               	rlcf	(??_doApplicationOneSecondWork+11)& (0+255),f,b
  3112  00353C  2EE8               	decfsz	wreg,f,c
  3113  00353E  D7FA               	goto	u12105
  3114  003540  348B               	rlcf	3979,w,c	;volatile
  3115  003542  36E8               	rlcf	wreg,f,c
  3116  003544  0B01               	andlw	1
  3117  003546  0101               	movlb	1	; () banked
  3118  003548  6F0C               	movwf	(??_doApplicationOneSecondWork+12)& (0+255),b
  3119  00354A  6B0D               	clrf	(??_doApplicationOneSecondWork+13)& (0+255),b
  3120  00354C  0E06               	movlw	6
  3121  00354E                     u12115:
  3122  00354E  90D8               	bcf	status,0,c
  3123  003550  0101               	movlb	1	; () banked
  3124  003552  370C               	rlcf	(??_doApplicationOneSecondWork+12)& (0+255),f,b
  3125  003554  370D               	rlcf	(??_doApplicationOneSecondWork+13)& (0+255),f,b
  3126  003556  2EE8               	decfsz	wreg,f,c
  3127  003558  D7FA               	goto	u12115
  3128  00355A  3089               	rrcf	3977,w,c	;volatile
  3129  00355C  32E8               	rrcf	wreg,f,c
  3130  00355E  0B01               	andlw	1
  3131  003560  0101               	movlb	1	; () banked
  3132  003562  6F0E               	movwf	(??_doApplicationOneSecondWork+14)& (0+255),b
  3133  003564  6B0F               	clrf	(??_doApplicationOneSecondWork+15)& (0+255),b
  3134  003566  0E07               	movlw	7
  3135  003568                     u12125:
  3136  003568  90D8               	bcf	status,0,c
  3137  00356A  0101               	movlb	1	; () banked
  3138  00356C  370E               	rlcf	(??_doApplicationOneSecondWork+14)& (0+255),f,b
  3139  00356E  370F               	rlcf	(??_doApplicationOneSecondWork+15)& (0+255),f,b
  3140  003570  2EE8               	decfsz	wreg,f,c
  3141  003572  D7FA               	goto	u12125
  3142  003574  3089               	rrcf	3977,w,c	;volatile
  3143  003576  0B01               	andlw	1
  3144  003578  0101               	movlb	1	; () banked
  3145  00357A  6F10               	movwf	(??_doApplicationOneSecondWork+16)& (0+255),b
  3146  00357C  0101               	movlb	1	; () banked
  3147  00357E  5110               	movf	(??_doApplicationOneSecondWork+16)& (0+255),w,b
  3148  003580  0101               	movlb	1	; () banked
  3149  003582  6F12               	movwf	(??_doApplicationOneSecondWork+18)& (0+255),b
  3150  003584  6B11               	clrf	(??_doApplicationOneSecondWork+17)& (0+255),b
  3151  003586  5089               	movf	3977,w,c	;volatile
  3152  003588  0B01               	andlw	1
  3153  00358A  0101               	movlb	1	; () banked
  3154  00358C  6F13               	movwf	(??_doApplicationOneSecondWork+19)& (0+255),b
  3155  00358E  6B14               	clrf	(??_doApplicationOneSecondWork+20)& (0+255),b
  3156  003590  0E09               	movlw	9
  3157  003592                     u12135:
  3158  003592  90D8               	bcf	status,0,c
  3159  003594  0101               	movlb	1	; () banked
  3160  003596  3713               	rlcf	(??_doApplicationOneSecondWork+19)& (0+255),f,b
  3161  003598  3714               	rlcf	(??_doApplicationOneSecondWork+20)& (0+255),f,b
  3162  00359A  2EE8               	decfsz	wreg,f,c
  3163  00359C  D7FA               	goto	u12135
  3164  00359E  0101               	movlb	1	; () banked
  3165  0035A0  5111               	movf	(??_doApplicationOneSecondWork+17)& (0+255),w,b
  3166  0035A2  0101               	movlb	1	; () banked
  3167  0035A4  2513               	addwf	(??_doApplicationOneSecondWork+19)& (0+255),w,b
  3168  0035A6  0101               	movlb	1	; () banked
  3169  0035A8  6F15               	movwf	(??_doApplicationOneSecondWork+21)& (0+255),b
  3170  0035AA  0101               	movlb	1	; () banked
  3171  0035AC  5112               	movf	(??_doApplicationOneSecondWork+18)& (0+255),w,b
  3172  0035AE  0101               	movlb	1	; () banked
  3173  0035B0  2114               	addwfc	(??_doApplicationOneSecondWork+20)& (0+255),w,b
  3174  0035B2  0101               	movlb	1	; () banked
  3175  0035B4  6F16               	movwf	(??_doApplicationOneSecondWork+22)& (0+255),b
  3176  0035B6  0101               	movlb	1	; () banked
  3177  0035B8  510E               	movf	(??_doApplicationOneSecondWork+14)& (0+255),w,b
  3178  0035BA  0101               	movlb	1	; () banked
  3179  0035BC  2515               	addwf	(??_doApplicationOneSecondWork+21)& (0+255),w,b
  3180  0035BE  0101               	movlb	1	; () banked
  3181  0035C0  6F17               	movwf	(??_doApplicationOneSecondWork+23)& (0+255),b
  3182  0035C2  0101               	movlb	1	; () banked
  3183  0035C4  510F               	movf	(??_doApplicationOneSecondWork+15)& (0+255),w,b
  3184  0035C6  0101               	movlb	1	; () banked
  3185  0035C8  2116               	addwfc	(??_doApplicationOneSecondWork+22)& (0+255),w,b
  3186  0035CA  0101               	movlb	1	; () banked
  3187  0035CC  6F18               	movwf	(??_doApplicationOneSecondWork+24)& (0+255),b
  3188  0035CE  0101               	movlb	1	; () banked
  3189  0035D0  510C               	movf	(??_doApplicationOneSecondWork+12)& (0+255),w,b
  3190  0035D2  0101               	movlb	1	; () banked
  3191  0035D4  2517               	addwf	(??_doApplicationOneSecondWork+23)& (0+255),w,b
  3192  0035D6  0101               	movlb	1	; () banked
  3193  0035D8  6F19               	movwf	(??_doApplicationOneSecondWork+25)& (0+255),b
  3194  0035DA  0101               	movlb	1	; () banked
  3195  0035DC  510D               	movf	(??_doApplicationOneSecondWork+13)& (0+255),w,b
  3196  0035DE  0101               	movlb	1	; () banked
  3197  0035E0  2118               	addwfc	(??_doApplicationOneSecondWork+24)& (0+255),w,b
  3198  0035E2  0101               	movlb	1	; () banked
  3199  0035E4  6F1A               	movwf	(??_doApplicationOneSecondWork+26)& (0+255),b
  3200  0035E6  0101               	movlb	1	; () banked
  3201  0035E8  510A               	movf	(??_doApplicationOneSecondWork+10)& (0+255),w,b
  3202  0035EA  0101               	movlb	1	; () banked
  3203  0035EC  2519               	addwf	(??_doApplicationOneSecondWork+25)& (0+255),w,b
  3204  0035EE  0101               	movlb	1	; () banked
  3205  0035F0  6F1B               	movwf	(??_doApplicationOneSecondWork+27)& (0+255),b
  3206  0035F2  0101               	movlb	1	; () banked
  3207  0035F4  510B               	movf	(??_doApplicationOneSecondWork+11)& (0+255),w,b
  3208  0035F6  0101               	movlb	1	; () banked
  3209  0035F8  211A               	addwfc	(??_doApplicationOneSecondWork+26)& (0+255),w,b
  3210  0035FA  0101               	movlb	1	; () banked
  3211  0035FC  6F1C               	movwf	(??_doApplicationOneSecondWork+28)& (0+255),b
  3212  0035FE  0101               	movlb	1	; () banked
  3213  003600  5108               	movf	(??_doApplicationOneSecondWork+8)& (0+255),w,b
  3214  003602  0101               	movlb	1	; () banked
  3215  003604  251B               	addwf	(??_doApplicationOneSecondWork+27)& (0+255),w,b
  3216  003606  0101               	movlb	1	; () banked
  3217  003608  6F1D               	movwf	(??_doApplicationOneSecondWork+29)& (0+255),b
  3218  00360A  0101               	movlb	1	; () banked
  3219  00360C  5109               	movf	(??_doApplicationOneSecondWork+9)& (0+255),w,b
  3220  00360E  0101               	movlb	1	; () banked
  3221  003610  211C               	addwfc	(??_doApplicationOneSecondWork+28)& (0+255),w,b
  3222  003612  0101               	movlb	1	; () banked
  3223  003614  6F1E               	movwf	(??_doApplicationOneSecondWork+30)& (0+255),b
  3224  003616  0101               	movlb	1	; () banked
  3225  003618  5106               	movf	(??_doApplicationOneSecondWork+6)& (0+255),w,b
  3226  00361A  0101               	movlb	1	; () banked
  3227  00361C  251D               	addwf	(??_doApplicationOneSecondWork+29)& (0+255),w,b
  3228  00361E  0101               	movlb	1	; () banked
  3229  003620  6F1F               	movwf	(??_doApplicationOneSecondWork+31)& (0+255),b
  3230  003622  0101               	movlb	1	; () banked
  3231  003624  5107               	movf	(??_doApplicationOneSecondWork+7)& (0+255),w,b
  3232  003626  0101               	movlb	1	; () banked
  3233  003628  211E               	addwfc	(??_doApplicationOneSecondWork+30)& (0+255),w,b
  3234  00362A  0101               	movlb	1	; () banked
  3235  00362C  6F20               	movwf	(??_doApplicationOneSecondWork+32)& (0+255),b
  3236  00362E  0101               	movlb	1	; () banked
  3237  003630  5104               	movf	(??_doApplicationOneSecondWork+4)& (0+255),w,b
  3238  003632  0101               	movlb	1	; () banked
  3239  003634  251F               	addwf	(??_doApplicationOneSecondWork+31)& (0+255),w,b
  3240  003636  0101               	movlb	1	; () banked
  3241  003638  6F21               	movwf	(??_doApplicationOneSecondWork+33)& (0+255),b
  3242  00363A  0101               	movlb	1	; () banked
  3243  00363C  5105               	movf	(??_doApplicationOneSecondWork+5)& (0+255),w,b
  3244  00363E  0101               	movlb	1	; () banked
  3245  003640  2120               	addwfc	(??_doApplicationOneSecondWork+32)& (0+255),w,b
  3246  003642  0101               	movlb	1	; () banked
  3247  003644  6F22               	movwf	(??_doApplicationOneSecondWork+34)& (0+255),b
  3248  003646  0101               	movlb	1	; () banked
  3249  003648  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  3250  00364A  0101               	movlb	1	; () banked
  3251  00364C  2521               	addwf	(??_doApplicationOneSecondWork+33)& (0+255),w,b
  3252  00364E  0101               	movlb	1	; () banked
  3253  003650  6F23               	movwf	(??_doApplicationOneSecondWork+35)& (0+255),b
  3254  003652  0101               	movlb	1	; () banked
  3255  003654  5103               	movf	(??_doApplicationOneSecondWork+3)& (0+255),w,b
  3256  003656  0101               	movlb	1	; () banked
  3257  003658  2122               	addwfc	(??_doApplicationOneSecondWork+34)& (0+255),w,b
  3258  00365A  0101               	movlb	1	; () banked
  3259  00365C  6F24               	movwf	(??_doApplicationOneSecondWork+36)& (0+255),b
  3260  00365E  0101               	movlb	1	; () banked
  3261  003660  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  3262  003662  0101               	movlb	1	; () banked
  3263  003664  2523               	addwf	(??_doApplicationOneSecondWork+35)& (0+255),w,b
  3264  003666  0100               	movlb	0	; () banked
  3265  003668  0100               	movlb	0	; () banked
  3266  00366A  6FD7               	movwf	_current_iostate& (0+255),b
  3267  00366C  0101               	movlb	1	; () banked
  3268  00366E  0E00               	movlw	0
  3269  003670  0101               	movlb	1	; () banked
  3270  003672  2124               	addwfc	(??_doApplicationOneSecondWork+36)& (0+255),w,b
  3271  003674  0100               	movlb	0	; () banked
  3272  003676  6FD8               	movwf	(_current_iostate+1)& (0+255),b
  3273                           
  3274                           ; BSR set to: 0
  3275  003678  0012               	return	
  3276  00367A                     __end_of_doApplicationOneSecondWork:
  3277                           	opt stack 0
  3278                           tblptru	equ	0xFF8
  3279                           prodh	equ	0xFF4
  3280                           prodl	equ	0xFF3
  3281                           postinc0	equ	0xFEE
  3282                           wreg	equ	0xFE8
  3283                           postinc2	equ	0xFDE
  3284                           postdec2	equ	0xFDD
  3285                           fsr2h	equ	0xFDA
  3286                           fsr2l	equ	0xFD9
  3287                           status	equ	0xFD8
  3288                           
  3289 ;; *************** function _vscp_doOneSecondWork *****************
  3290 ;; Defined at:
  3291 ;;		line 524 in file "../../vscp_firmware/common/vscp_firmware.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;		None               void
  3298 ;; Registers used:
  3299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3305 ;;      Params:         0       0       0       0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0       0       0
  3307 ;;      Temps:          1       0       0       0       0       0       0
  3308 ;;      Totals:         1       0       0       0       0       0       0
  3309 ;;Total ram usage:        1 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    8
  3312 ;; This function calls:
  3313 ;;		_vscp_getZone
  3314 ;;		_vscp_getSubzone
  3315 ;;		_vscp_sendHeartBeat
  3316 ;; This function is called by:
  3317 ;;		_main
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text3
  3322  0067C2                     __ptext3:
  3323                           	opt stack 0
  3324  0067C2                     _vscp_doOneSecondWork:
  3325                           	opt stack 21
  3326                           
  3327                           ;vscp_firmware.c: 526: ++vscp_second;
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;incstack = 0
  3331                           ;incstack = 0
  3332  0067C2  0100               	movlb	0	; () banked
  3333  0067C4  0100               	movlb	0	; () banked
  3334  0067C6  2BF0               	incf	_vscp_second& (0+255),f,b
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;vscp_firmware.c: 528: if (vscp_second > 59) {
  3338  0067C8  0E3B               	movlw	59
  3339  0067CA  0100               	movlb	0	; () banked
  3340  0067CC  0100               	movlb	0	; () banked
  3341  0067CE  65F0               	cpfsgt	_vscp_second& (0+255),b
  3342  0067D0  D017               	goto	l10040
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;vscp_firmware.c: 529: vscp_second = 0;
  3346  0067D2  6E34               	movwf	??_vscp_doOneSecondWork& (0+255),c
  3347  0067D4  0E00               	movlw	0
  3348  0067D6  0100               	movlb	0	; () banked
  3349  0067D8  0100               	movlb	0	; () banked
  3350  0067DA  6FF0               	movwf	_vscp_second& (0+255),b
  3351  0067DC  5034               	movf	??_vscp_doOneSecondWork& (0+255),w,c
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;vscp_firmware.c: 530: vscp_minute++;
  3355  0067DE  0100               	movlb	0	; () banked
  3356  0067E0  0100               	movlb	0	; () banked
  3357  0067E2  2BEB               	incf	_vscp_minute& (0+255),f,b
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;vscp_firmware.c: 533: if (0x03 == vscp_node_state) {
  3361  0067E4  0100               	movlb	0	; () banked
  3362  0067E6  0100               	movlb	0	; () banked
  3363  0067E8  51ED               	movf	_vscp_node_state& (0+255),w,b
  3364  0067EA  0A03               	xorlw	3
  3365  0067EC  A4D8               	btfss	status,2,c
  3366  0067EE  D008               	goto	l10040
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;vscp_firmware.c: 534: vscp_sendHeartBeat(vscp_getZone(),
  3370                           ;vscp_firmware.c: 535: vscp_getSubzone());
  3371  0067F0  ECF1  F037         	call	_vscp_getZone	;wreg free
  3372  0067F4  6E31               	movwf	?_vscp_sendHeartBeat,c
  3373  0067F6  ECEA  F037         	call	_vscp_getSubzone	;wreg free
  3374  0067FA  6E32               	movwf	?_vscp_sendHeartBeat+1,c
  3375  0067FC  ECB2  F036         	call	_vscp_sendHeartBeat	;wreg free
  3376  006800                     l10040:
  3377                           
  3378                           ;vscp_firmware.c: 536: }
  3379                           ;vscp_firmware.c: 537: }
  3380                           ;vscp_firmware.c: 539: if (vscp_minute > 59) {
  3381  006800  0E3B               	movlw	59
  3382  006802  0100               	movlb	0	; () banked
  3383  006804  0100               	movlb	0	; () banked
  3384  006806  65EB               	cpfsgt	_vscp_minute& (0+255),b
  3385  006808  D009               	goto	l10046
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;vscp_firmware.c: 540: vscp_minute = 0;
  3389  00680A  6E34               	movwf	??_vscp_doOneSecondWork& (0+255),c
  3390  00680C  0E00               	movlw	0
  3391  00680E  0100               	movlb	0	; () banked
  3392  006810  0100               	movlb	0	; () banked
  3393  006812  6FEB               	movwf	_vscp_minute& (0+255),b
  3394  006814  5034               	movf	??_vscp_doOneSecondWork& (0+255),w,c
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;vscp_firmware.c: 541: vscp_hour++;
  3398  006816  0100               	movlb	0	; () banked
  3399  006818  0100               	movlb	0	; () banked
  3400  00681A  2BE9               	incf	_vscp_hour& (0+255),f,b
  3401  00681C                     l10046:
  3402                           
  3403                           ; BSR set to: 0
  3404                           ;vscp_firmware.c: 542: }
  3405                           ;vscp_firmware.c: 544: if (vscp_hour > 23) vscp_hour = 0;
  3406  00681C  0E17               	movlw	23
  3407  00681E  0100               	movlb	0	; () banked
  3408  006820  0100               	movlb	0	; () banked
  3409  006822  65E9               	cpfsgt	_vscp_hour& (0+255),b
  3410  006824  D006               	goto	l10050
  3411                           
  3412                           ; BSR set to: 0
  3413  006826  6E34               	movwf	??_vscp_doOneSecondWork& (0+255),c
  3414  006828  0E00               	movlw	0
  3415  00682A  0100               	movlb	0	; () banked
  3416  00682C  0100               	movlb	0	; () banked
  3417  00682E  6FE9               	movwf	_vscp_hour& (0+255),b
  3418  006830  5034               	movf	??_vscp_doOneSecondWork& (0+255),w,c
  3419  006832                     l10050:
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;vscp_firmware.c: 548: if (0x03 == vscp_node_state) {
  3423  006832  0100               	movlb	0	; () banked
  3424  006834  0100               	movlb	0	; () banked
  3425  006836  51ED               	movf	_vscp_node_state& (0+255),w,b
  3426  006838  0A03               	xorlw	3
  3427  00683A  A4D8               	btfss	status,2,c
  3428  00683C  D00D               	goto	l1219
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;vscp_firmware.c: 549: vscp_guid_reset++;
  3432  00683E  2A3A               	incf	_vscp_guid_reset,f,c
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;vscp_firmware.c: 550: if ((vscp_guid_reset & 0x0f) >= 2) {
  3436  006840  C03A  F034         	movff	_vscp_guid_reset,??_vscp_doOneSecondWork
  3437  006844  0E0F               	movlw	15
  3438  006846  1634               	andwf	??_vscp_doOneSecondWork,f,c
  3439  006848  0E02               	movlw	2
  3440  00684A  5C34               	subwf	??_vscp_doOneSecondWork,w,c
  3441  00684C  A0D8               	btfss	status,0,c
  3442  00684E  D004               	goto	l1219
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;vscp_firmware.c: 551: vscp_guid_reset = 0;
  3446  006850  6E34               	movwf	??_vscp_doOneSecondWork& (0+255),c
  3447  006852  0E00               	movlw	0
  3448  006854  6E3A               	movwf	_vscp_guid_reset,c
  3449  006856  5034               	movf	??_vscp_doOneSecondWork& (0+255),w,c
  3450  006858                     l1219:
  3451                           
  3452                           ; BSR set to: 0
  3453  006858  0012               	return	
  3454  00685A                     __end_of_vscp_doOneSecondWork:
  3455                           	opt stack 0
  3456                           tblptru	equ	0xFF8
  3457                           prodh	equ	0xFF4
  3458                           prodl	equ	0xFF3
  3459                           postinc0	equ	0xFEE
  3460                           wreg	equ	0xFE8
  3461                           postinc2	equ	0xFDE
  3462                           postdec2	equ	0xFDD
  3463                           fsr2h	equ	0xFDA
  3464                           fsr2l	equ	0xFD9
  3465                           status	equ	0xFD8
  3466                           
  3467 ;; *************** function _vscp_sendHeartBeat *****************
  3468 ;; Defined at:
  3469 ;;		line 378 in file "../../vscp_firmware/common/vscp_firmware.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;  zone            1   48[COMRAM] unsigned char 
  3472 ;;  subzone         1   49[COMRAM] unsigned char 
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;		None               void
  3477 ;; Registers used:
  3478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3484 ;;      Params:         2       0       0       0       0       0       0
  3485 ;;      Locals:         0       0       0       0       0       0       0
  3486 ;;      Temps:          1       0       0       0       0       0       0
  3487 ;;      Totals:         3       0       0       0       0       0       0
  3488 ;;Total ram usage:        3 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    7
  3491 ;; This function calls:
  3492 ;;		_vscp_sendEvent
  3493 ;; This function is called by:
  3494 ;;		_vscp_doOneSecondWork
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498                           	psect	text4
  3499  006D64                     __ptext4:
  3500                           	opt stack 0
  3501  006D64                     _vscp_sendHeartBeat:
  3502                           	opt stack 21
  3503                           
  3504                           ;vscp_firmware.c: 379: vscp_omsg.flags = 0x80 + 3;
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;incstack = 0
  3508                           ;incstack = 0
  3509  006D64  6E33               	movwf	??_vscp_sendHeartBeat& (0+255),c
  3510  006D66  0E83               	movlw	131
  3511  006D68  6E3E               	movwf	_vscp_omsg,c
  3512  006D6A  5033               	movf	??_vscp_sendHeartBeat& (0+255),w,c
  3513                           
  3514                           ;vscp_firmware.c: 380: vscp_omsg.priority = 0x07;
  3515  006D6C  6E33               	movwf	??_vscp_sendHeartBeat& (0+255),c
  3516  006D6E  0E07               	movlw	7
  3517  006D70  6E3F               	movwf	_vscp_omsg+1,c
  3518  006D72  5033               	movf	??_vscp_sendHeartBeat& (0+255),w,c
  3519                           
  3520                           ;vscp_firmware.c: 381: vscp_omsg.vscp_class = 20;
  3521  006D74  0E00               	movlw	0
  3522  006D76  6E41               	movwf	_vscp_omsg+3,c
  3523  006D78  0E14               	movlw	20
  3524  006D7A  6E40               	movwf	_vscp_omsg+2,c
  3525                           
  3526                           ;vscp_firmware.c: 382: vscp_omsg.vscp_type = 9;
  3527  006D7C  6E33               	movwf	??_vscp_sendHeartBeat& (0+255),c
  3528  006D7E  0E09               	movlw	9
  3529  006D80  6E42               	movwf	_vscp_omsg+4,c
  3530  006D82  5033               	movf	??_vscp_sendHeartBeat& (0+255),w,c
  3531                           
  3532                           ;vscp_firmware.c: 383: vscp_omsg.data[ 0 ] = 0;
  3533  006D84  6E33               	movwf	??_vscp_sendHeartBeat& (0+255),c
  3534  006D86  0E00               	movlw	0
  3535  006D88  6E43               	movwf	_vscp_omsg+5,c
  3536  006D8A  5033               	movf	??_vscp_sendHeartBeat& (0+255),w,c
  3537                           
  3538                           ;vscp_firmware.c: 384: vscp_omsg.data[ 1 ] = zone;
  3539  006D8C  C031  F044         	movff	vscp_sendHeartBeat@zone,_vscp_omsg+6
  3540                           
  3541                           ;vscp_firmware.c: 385: vscp_omsg.data[ 2 ] = subzone;
  3542  006D90  C032  F045         	movff	vscp_sendHeartBeat@subzone,_vscp_omsg+7
  3543                           
  3544                           ;vscp_firmware.c: 388: vscp_sendEvent();
  3545  006D94  EC21  F036         	call	_vscp_sendEvent	;wreg free
  3546  006D98  0012               	return	
  3547  006D9A                     __end_of_vscp_sendHeartBeat:
  3548                           	opt stack 0
  3549                           tblptru	equ	0xFF8
  3550                           prodh	equ	0xFF4
  3551                           prodl	equ	0xFF3
  3552                           postinc0	equ	0xFEE
  3553                           wreg	equ	0xFE8
  3554                           postinc2	equ	0xFDE
  3555                           postdec2	equ	0xFDD
  3556                           fsr2h	equ	0xFDA
  3557                           fsr2l	equ	0xFD9
  3558                           status	equ	0xFD8
  3559                           
  3560 ;; *************** function _vscp_getSubzone *****************
  3561 ;; Defined at:
  3562 ;;		line 984 in file "../main.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;		None
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;		None
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1    wreg      unsigned char 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3576 ;;      Params:         0       0       0       0       0       0       0
  3577 ;;      Locals:         0       0       0       0       0       0       0
  3578 ;;      Temps:          0       0       0       0       0       0       0
  3579 ;;      Totals:         0       0       0       0       0       0       0
  3580 ;;Total ram usage:        0 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:    3
  3583 ;; This function calls:
  3584 ;;		_Read_b_eep
  3585 ;; This function is called by:
  3586 ;;		_vscp_doOneSecondWork
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590                           	psect	text5
  3591  006FD4                     __ptext5:
  3592                           	opt stack 0
  3593  006FD4                     _vscp_getSubzone:
  3594                           	opt stack 25
  3595                           
  3596                           ;main.c: 985: return Read_b_eep(0x43 + 1);
  3597                           
  3598                           ;incstack = 0
  3599                           ;incstack = 0
  3600  006FD4  0E00               	movlw	0
  3601  006FD6  6E17               	movwf	?_Read_b_eep+1,c
  3602  006FD8  0E44               	movlw	68
  3603  006FDA  6E16               	movwf	?_Read_b_eep,c
  3604  006FDC  ECD8  F037         	call	_Read_b_eep	;wreg free
  3605  006FE0  0012               	return	
  3606  006FE2                     __end_of_vscp_getSubzone:
  3607                           	opt stack 0
  3608                           tblptru	equ	0xFF8
  3609                           prodh	equ	0xFF4
  3610                           prodl	equ	0xFF3
  3611                           postinc0	equ	0xFEE
  3612                           wreg	equ	0xFE8
  3613                           postinc2	equ	0xFDE
  3614                           postdec2	equ	0xFDD
  3615                           fsr2h	equ	0xFDA
  3616                           fsr2l	equ	0xFD9
  3617                           status	equ	0xFD8
  3618                           
  3619 ;; *************** function _vscp_getZone *****************
  3620 ;; Defined at:
  3621 ;;		line 975 in file "../main.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      unsigned char 
  3628 ;; Registers used:
  3629 ;;		wreg, status,2, cstack
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3635 ;;      Params:         0       0       0       0       0       0       0
  3636 ;;      Locals:         0       0       0       0       0       0       0
  3637 ;;      Temps:          0       0       0       0       0       0       0
  3638 ;;      Totals:         0       0       0       0       0       0       0
  3639 ;;Total ram usage:        0 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    3
  3642 ;; This function calls:
  3643 ;;		_Read_b_eep
  3644 ;; This function is called by:
  3645 ;;		_vscp_doOneSecondWork
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text6
  3650  006FE2                     __ptext6:
  3651                           	opt stack 0
  3652  006FE2                     _vscp_getZone:
  3653                           	opt stack 25
  3654                           
  3655                           ;main.c: 976: return Read_b_eep(0x43 + 0);
  3656                           
  3657                           ;incstack = 0
  3658                           ;incstack = 0
  3659  006FE2  0E00               	movlw	0
  3660  006FE4  6E17               	movwf	?_Read_b_eep+1,c
  3661  006FE6  0E43               	movlw	67
  3662  006FE8  6E16               	movwf	?_Read_b_eep,c
  3663  006FEA  ECD8  F037         	call	_Read_b_eep	;wreg free
  3664  006FEE  0012               	return	
  3665  006FF0                     __end_of_vscp_getZone:
  3666                           	opt stack 0
  3667                           tblptru	equ	0xFF8
  3668                           prodh	equ	0xFF4
  3669                           prodl	equ	0xFF3
  3670                           postinc0	equ	0xFEE
  3671                           wreg	equ	0xFE8
  3672                           postinc2	equ	0xFDE
  3673                           postdec2	equ	0xFDD
  3674                           fsr2h	equ	0xFDA
  3675                           fsr2l	equ	0xFD9
  3676                           status	equ	0xFD8
  3677                           
  3678 ;; *************** function _vscp_error *****************
  3679 ;; Defined at:
  3680 ;;		line 193 in file "../../vscp_firmware/common/vscp_firmware.c"
  3681 ;; Parameters:    Size  Location     Type
  3682 ;;		None
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;		None
  3685 ;; Return value:  Size  Location     Type
  3686 ;;		None               void
  3687 ;; Registers used:
  3688 ;;		status,2
  3689 ;; Tracked objects:
  3690 ;;		On entry : 0/0
  3691 ;;		On exit  : 0/0
  3692 ;;		Unchanged: 0/0
  3693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3694 ;;      Params:         0       0       0       0       0       0       0
  3695 ;;      Locals:         0       0       0       0       0       0       0
  3696 ;;      Temps:          1       0       0       0       0       0       0
  3697 ;;      Totals:         1       0       0       0       0       0       0
  3698 ;;Total ram usage:        1 bytes
  3699 ;; Hardware stack levels used:    1
  3700 ;; Hardware stack levels required when called:    2
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_main
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text7
  3709  00700C                     __ptext7:
  3710                           	opt stack 0
  3711  00700C                     _vscp_error:
  3712                           	opt stack 27
  3713                           
  3714                           ;vscp_firmware.c: 194: vscp_initledfunc = 0x00;
  3715                           
  3716                           ;incstack = 0
  3717                           ;incstack = 0
  3718  00700C  6E16               	movwf	??_vscp_error& (0+255),c
  3719  00700E  0E00               	movlw	0
  3720  007010  6E3B               	movwf	_vscp_initledfunc,c
  3721  007012  5016               	movf	??_vscp_error& (0+255),w,c
  3722  007014  0012               	return	
  3723  007016                     __end_of_vscp_error:
  3724                           	opt stack 0
  3725                           tblptru	equ	0xFF8
  3726                           prodh	equ	0xFF4
  3727                           prodl	equ	0xFF3
  3728                           postinc0	equ	0xFEE
  3729                           wreg	equ	0xFE8
  3730                           postinc2	equ	0xFDE
  3731                           postdec2	equ	0xFDD
  3732                           fsr2h	equ	0xFDA
  3733                           fsr2l	equ	0xFD9
  3734                           status	equ	0xFD8
  3735                           
  3736 ;; *************** function _doDM *****************
  3737 ;; Defined at:
  3738 ;;		line 2060 in file "../main.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;		None
  3741 ;; Auto vars:     Size  Location     Type
  3742 ;;  class_mask      2   82[BANK0 ] unsigned short 
  3743 ;;  class_filter    2   80[BANK0 ] unsigned short 
  3744 ;;  i               1   92[BANK0 ] unsigned char 
  3745 ;;  dmflags         1   91[BANK0 ] unsigned char 
  3746 ;;  type_mask       1   85[BANK0 ] unsigned char 
  3747 ;;  type_filter     1   84[BANK0 ] unsigned char 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;		None               void
  3750 ;; Registers used:
  3751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3757 ;;      Params:         0       0       0       0       0       0       0
  3758 ;;      Locals:         0      13       0       0       0       0       0
  3759 ;;      Temps:          0       6       0       0       0       0       0
  3760 ;;      Totals:         0      19       0       0       0       0       0
  3761 ;;Total ram usage:       19 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:    8
  3764 ;; This function calls:
  3765 ;;		_Read_b_eep
  3766 ;;		_doActionOff
  3767 ;;		_doActionOn
  3768 ;;		_doActionPulse
  3769 ;;		_doActionStatus
  3770 ;;		_doActionToggle
  3771 ;; This function is called by:
  3772 ;;		_main
  3773 ;; This function uses a non-reentrant model
  3774 ;;
  3775                           
  3776                           	psect	text8
  3777  0041FC                     __ptext8:
  3778                           	opt stack 0
  3779  0041FC                     _doDM:
  3780                           	opt stack 21
  3781                           
  3782                           ;main.c: 2061: unsigned char i;
  3783                           ;main.c: 2062: unsigned char dmflags;
  3784                           ;main.c: 2063: unsigned short class_filter;
  3785                           ;main.c: 2064: unsigned short class_mask;
  3786                           ;main.c: 2065: unsigned char type_filter;
  3787                           ;main.c: 2066: unsigned char type_mask;
  3788                           ;main.c: 2069: if ( 0 == vscp_imsg.vscp_class ) return;
  3789                           
  3790                           ;incstack = 0
  3791                           ;incstack = 0
  3792  0041FC  0100               	movlb	0	; () banked
  3793  0041FE  0100               	movlb	0	; () banked
  3794  004200  51F4               	movf	(_vscp_imsg+3)& (0+255),w,b
  3795  004202  11F3               	iorwf	(_vscp_imsg+2)& (0+255),w,b
  3796  004204  B4D8               	btfsc	status,2,c
  3797  004206  D23F               	goto	l754
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;main.c: 2071: for (i = 0; i < 8; i++) {
  3801                           
  3802                           ; BSR set to: 0
  3803                           
  3804                           ; BSR set to: 0
  3805  004208  0100               	movlb	0	; () banked
  3806  00420A  6FAA               	movwf	??_doDM& (0+255),b
  3807  00420C  0E00               	movlw	0
  3808  00420E  0100               	movlb	0	; () banked
  3809  004210  0100               	movlb	0	; () banked
  3810  004212  6FBC               	movwf	doDM@i& (0+255),b
  3811  004214  0100               	movlb	0	; () banked
  3812  004216  51AA               	movf	??_doDM& (0+255),w,b
  3813  004218  D231               	goto	L30
  3814  00421A                     l9972:
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;main.c: 2074: dmflags = Read_b_eep(0x43 + 46 + 40 + 0 + 1 + (8 * i));
  3818  00421A  0100               	movlb	0	; () banked
  3819  00421C  0100               	movlb	0	; () banked
  3820  00421E  51BC               	movf	doDM@i& (0+255),w,b
  3821  004220  0100               	movlb	0	; () banked
  3822  004222  6FAA               	movwf	??_doDM& (0+255),b
  3823  004224  6BAB               	clrf	(??_doDM+1)& (0+255),b
  3824  004226  0100               	movlb	0	; () banked
  3825  004228  90D8               	bcf	status,0,c
  3826  00422A  37AA               	rlcf	??_doDM& (0+255),f,b
  3827  00422C  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3828  00422E  0100               	movlb	0	; () banked
  3829  004230  90D8               	bcf	status,0,c
  3830  004232  37AA               	rlcf	??_doDM& (0+255),f,b
  3831  004234  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3832  004236  0100               	movlb	0	; () banked
  3833  004238  90D8               	bcf	status,0,c
  3834  00423A  37AA               	rlcf	??_doDM& (0+255),f,b
  3835  00423C  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3836  00423E  0E9A               	movlw	154
  3837  004240  0100               	movlb	0	; () banked
  3838  004242  25AA               	addwf	??_doDM& (0+255),w,b
  3839  004244  6E16               	movwf	?_Read_b_eep,c
  3840  004246  0E00               	movlw	0
  3841  004248  0100               	movlb	0	; () banked
  3842  00424A  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  3843  00424C  6E17               	movwf	?_Read_b_eep+1,c
  3844  00424E  ECD8  F037         	call	_Read_b_eep	;wreg free
  3845  004252  0100               	movlb	0	; () banked
  3846  004254  0100               	movlb	0	; () banked
  3847  004256  6FBB               	movwf	doDM@dmflags& (0+255),b
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;main.c: 2077: if ( dmflags & 0x80 ) {
  3851  004258  0100               	movlb	0	; () banked
  3852  00425A  0100               	movlb	0	; () banked
  3853  00425C  AFBB               	btfss	doDM@dmflags& (0+255),7,b
  3854  00425E  D20B               	goto	l10024
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;main.c: 2080: if ( ( dmflags & 0x40 ) &&
  3858                           ;main.c: 2081: ( vscp_imsg.oaddr != Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i)) ) ) {
  3859  004260  0100               	movlb	0	; () banked
  3860  004262  0100               	movlb	0	; () banked
  3861  004264  ADBB               	btfss	doDM@dmflags& (0+255),6,b
  3862  004266  D021               	goto	l758
  3863                           
  3864                           ; BSR set to: 0
  3865  004268  0100               	movlb	0	; () banked
  3866  00426A  0100               	movlb	0	; () banked
  3867  00426C  51BC               	movf	doDM@i& (0+255),w,b
  3868  00426E  0100               	movlb	0	; () banked
  3869  004270  6FAA               	movwf	??_doDM& (0+255),b
  3870  004272  6BAB               	clrf	(??_doDM+1)& (0+255),b
  3871  004274  0100               	movlb	0	; () banked
  3872  004276  90D8               	bcf	status,0,c
  3873  004278  37AA               	rlcf	??_doDM& (0+255),f,b
  3874  00427A  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3875  00427C  0100               	movlb	0	; () banked
  3876  00427E  90D8               	bcf	status,0,c
  3877  004280  37AA               	rlcf	??_doDM& (0+255),f,b
  3878  004282  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3879  004284  0100               	movlb	0	; () banked
  3880  004286  90D8               	bcf	status,0,c
  3881  004288  37AA               	rlcf	??_doDM& (0+255),f,b
  3882  00428A  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3883  00428C  0E99               	movlw	153
  3884  00428E  0100               	movlb	0	; () banked
  3885  004290  25AA               	addwf	??_doDM& (0+255),w,b
  3886  004292  6E16               	movwf	?_Read_b_eep,c
  3887  004294  0E00               	movlw	0
  3888  004296  0100               	movlb	0	; () banked
  3889  004298  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  3890  00429A  6E17               	movwf	?_Read_b_eep+1,c
  3891  00429C  ECD8  F037         	call	_Read_b_eep	;wreg free
  3892  0042A0  0100               	movlb	0	; () banked
  3893  0042A2  0100               	movlb	0	; () banked
  3894  0042A4  19F6               	xorwf	(_vscp_imsg+5)& (0+255),w,b
  3895  0042A6  A4D8               	btfss	status,2,c
  3896  0042A8  D1E6               	goto	l10024
  3897  0042AA                     l758:
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;main.c: 2083: }
  3901                           ;main.c: 2086: if ( dmflags & 0x10 ) {
  3902  0042AA  0100               	movlb	0	; () banked
  3903  0042AC  0100               	movlb	0	; () banked
  3904  0042AE  A9BB               	btfss	doDM@dmflags& (0+255),4,b
  3905  0042B0  D010               	goto	l760
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;main.c: 2087: if ( 255 != vscp_imsg.data[ 1 ] ) {
  3909  0042B2  0100               	movlb	0	; () banked
  3910  0042B4  0100               	movlb	0	; () banked
  3911  0042B6  29F8               	incf	(_vscp_imsg+7)& (0+255),w,b
  3912  0042B8  B4D8               	btfsc	status,2,c
  3913  0042BA  D00B               	goto	l760
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;main.c: 2088: if ( vscp_imsg.data[ 1 ] != Read_b_eep(0x43 + 0) ) {
  3917  0042BC  0E00               	movlw	0
  3918  0042BE  6E17               	movwf	?_Read_b_eep+1,c
  3919  0042C0  0E43               	movlw	67
  3920  0042C2  6E16               	movwf	?_Read_b_eep,c
  3921  0042C4  ECD8  F037         	call	_Read_b_eep	;wreg free
  3922  0042C8  0100               	movlb	0	; () banked
  3923  0042CA  0100               	movlb	0	; () banked
  3924  0042CC  19F8               	xorwf	(_vscp_imsg+7)& (0+255),w,b
  3925  0042CE  A4D8               	btfss	status,2,c
  3926  0042D0  D1D2               	goto	l10024
  3927  0042D2                     l760:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;main.c: 2090: }
  3931                           ;main.c: 2091: }
  3932                           ;main.c: 2092: }
  3933                           ;main.c: 2095: if ( dmflags & 0x08 ) {
  3934  0042D2  0100               	movlb	0	; () banked
  3935  0042D4  0100               	movlb	0	; () banked
  3936  0042D6  A7BB               	btfss	doDM@dmflags& (0+255),3,b
  3937  0042D8  D010               	goto	l9994
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;main.c: 2096: if ( 255 != vscp_imsg.data[ 1 ] ) {
  3941  0042DA  0100               	movlb	0	; () banked
  3942  0042DC  0100               	movlb	0	; () banked
  3943  0042DE  29F8               	incf	(_vscp_imsg+7)& (0+255),w,b
  3944  0042E0  B4D8               	btfsc	status,2,c
  3945  0042E2  D00B               	goto	l9994
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;main.c: 2097: if ( vscp_imsg.data[ 1 ] != Read_b_eep(0x43 + 1) ) {
  3949  0042E4  0E00               	movlw	0
  3950  0042E6  6E17               	movwf	?_Read_b_eep+1,c
  3951  0042E8  0E44               	movlw	68
  3952  0042EA  6E16               	movwf	?_Read_b_eep,c
  3953  0042EC  ECD8  F037         	call	_Read_b_eep	;wreg free
  3954  0042F0  0100               	movlb	0	; () banked
  3955  0042F2  0100               	movlb	0	; () banked
  3956  0042F4  19F8               	xorwf	(_vscp_imsg+7)& (0+255),w,b
  3957  0042F6  A4D8               	btfss	status,2,c
  3958  0042F8  D1BE               	goto	l10024
  3959  0042FA                     l9994:
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;main.c: 2099: }
  3963                           ;main.c: 2100: }
  3964                           ;main.c: 2101: }
  3965                           ;main.c: 2103: class_filter = ( dmflags & 0x01)*256 +
  3966                           ;main.c: 2104: Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 3);
  3967  0042FA  0100               	movlb	0	; () banked
  3968  0042FC  0100               	movlb	0	; () banked
  3969  0042FE  51BC               	movf	doDM@i& (0+255),w,b
  3970  004300  0100               	movlb	0	; () banked
  3971  004302  6FAA               	movwf	??_doDM& (0+255),b
  3972  004304  6BAB               	clrf	(??_doDM+1)& (0+255),b
  3973  004306  0100               	movlb	0	; () banked
  3974  004308  90D8               	bcf	status,0,c
  3975  00430A  37AA               	rlcf	??_doDM& (0+255),f,b
  3976  00430C  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3977  00430E  0100               	movlb	0	; () banked
  3978  004310  90D8               	bcf	status,0,c
  3979  004312  37AA               	rlcf	??_doDM& (0+255),f,b
  3980  004314  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3981  004316  0100               	movlb	0	; () banked
  3982  004318  90D8               	bcf	status,0,c
  3983  00431A  37AA               	rlcf	??_doDM& (0+255),f,b
  3984  00431C  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3985  00431E  0E9C               	movlw	156
  3986  004320  0100               	movlb	0	; () banked
  3987  004322  25AA               	addwf	??_doDM& (0+255),w,b
  3988  004324  6E16               	movwf	?_Read_b_eep,c
  3989  004326  0E00               	movlw	0
  3990  004328  0100               	movlb	0	; () banked
  3991  00432A  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  3992  00432C  6E17               	movwf	?_Read_b_eep+1,c
  3993  00432E  ECD8  F037         	call	_Read_b_eep	;wreg free
  3994  004332  0100               	movlb	0	; () banked
  3995  004334  6FAC               	movwf	(??_doDM+2)& (0+255),b
  3996  004336  C0BB  F0AD         	movff	doDM@dmflags,??_doDM+3
  3997  00433A  0E01               	movlw	1
  3998  00433C  0100               	movlb	0	; () banked
  3999  00433E  17AD               	andwf	(??_doDM+3)& (0+255),f,b
  4000  004340  0100               	movlb	0	; () banked
  4001  004342  51AD               	movf	(??_doDM+3)& (0+255),w,b
  4002  004344  0100               	movlb	0	; () banked
  4003  004346  6FAF               	movwf	(??_doDM+5)& (0+255),b
  4004  004348  6BAE               	clrf	(??_doDM+4)& (0+255),b
  4005  00434A  0100               	movlb	0	; () banked
  4006  00434C  51AC               	movf	(??_doDM+2)& (0+255),w,b
  4007  00434E  0100               	movlb	0	; () banked
  4008  004350  25AE               	addwf	(??_doDM+4)& (0+255),w,b
  4009  004352  0100               	movlb	0	; () banked
  4010  004354  0100               	movlb	0	; () banked
  4011  004356  6FB0               	movwf	doDM@class_filter& (0+255),b
  4012  004358  0100               	movlb	0	; () banked
  4013  00435A  0E00               	movlw	0
  4014  00435C  0100               	movlb	0	; () banked
  4015  00435E  21AF               	addwfc	(??_doDM+5)& (0+255),w,b
  4016  004360  0100               	movlb	0	; () banked
  4017  004362  6FB1               	movwf	(doDM@class_filter+1)& (0+255),b
  4018                           
  4019                           ;main.c: 2110: class_mask = ( dmflags & 0x02)*256 +
  4020                           ;main.c: 2111: Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 2);
  4021  004364  0100               	movlb	0	; () banked
  4022  004366  0100               	movlb	0	; () banked
  4023  004368  51BC               	movf	doDM@i& (0+255),w,b
  4024  00436A  0100               	movlb	0	; () banked
  4025  00436C  6FAA               	movwf	??_doDM& (0+255),b
  4026  00436E  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4027  004370  0100               	movlb	0	; () banked
  4028  004372  90D8               	bcf	status,0,c
  4029  004374  37AA               	rlcf	??_doDM& (0+255),f,b
  4030  004376  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4031  004378  0100               	movlb	0	; () banked
  4032  00437A  90D8               	bcf	status,0,c
  4033  00437C  37AA               	rlcf	??_doDM& (0+255),f,b
  4034  00437E  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4035  004380  0100               	movlb	0	; () banked
  4036  004382  90D8               	bcf	status,0,c
  4037  004384  37AA               	rlcf	??_doDM& (0+255),f,b
  4038  004386  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4039  004388  0E9B               	movlw	155
  4040  00438A  0100               	movlb	0	; () banked
  4041  00438C  25AA               	addwf	??_doDM& (0+255),w,b
  4042  00438E  6E16               	movwf	?_Read_b_eep,c
  4043  004390  0E00               	movlw	0
  4044  004392  0100               	movlb	0	; () banked
  4045  004394  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4046  004396  6E17               	movwf	?_Read_b_eep+1,c
  4047  004398  ECD8  F037         	call	_Read_b_eep	;wreg free
  4048  00439C  0100               	movlb	0	; () banked
  4049  00439E  6FAC               	movwf	(??_doDM+2)& (0+255),b
  4050  0043A0  C0BB  F0AD         	movff	doDM@dmflags,??_doDM+3
  4051  0043A4  0E02               	movlw	2
  4052  0043A6  0100               	movlb	0	; () banked
  4053  0043A8  17AD               	andwf	(??_doDM+3)& (0+255),f,b
  4054  0043AA  0100               	movlb	0	; () banked
  4055  0043AC  51AD               	movf	(??_doDM+3)& (0+255),w,b
  4056  0043AE  0100               	movlb	0	; () banked
  4057  0043B0  6FAF               	movwf	(??_doDM+5)& (0+255),b
  4058  0043B2  6BAE               	clrf	(??_doDM+4)& (0+255),b
  4059  0043B4  0100               	movlb	0	; () banked
  4060  0043B6  51AC               	movf	(??_doDM+2)& (0+255),w,b
  4061  0043B8  0100               	movlb	0	; () banked
  4062  0043BA  25AE               	addwf	(??_doDM+4)& (0+255),w,b
  4063  0043BC  0100               	movlb	0	; () banked
  4064  0043BE  0100               	movlb	0	; () banked
  4065  0043C0  6FB2               	movwf	doDM@class_mask& (0+255),b
  4066  0043C2  0100               	movlb	0	; () banked
  4067  0043C4  0E00               	movlw	0
  4068  0043C6  0100               	movlb	0	; () banked
  4069  0043C8  21AF               	addwfc	(??_doDM+5)& (0+255),w,b
  4070  0043CA  0100               	movlb	0	; () banked
  4071  0043CC  6FB3               	movwf	(doDM@class_mask+1)& (0+255),b
  4072                           
  4073                           ;main.c: 2117: type_filter = Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 5);
  4074  0043CE  0100               	movlb	0	; () banked
  4075  0043D0  0100               	movlb	0	; () banked
  4076  0043D2  51BC               	movf	doDM@i& (0+255),w,b
  4077  0043D4  0100               	movlb	0	; () banked
  4078  0043D6  6FAA               	movwf	??_doDM& (0+255),b
  4079  0043D8  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4080  0043DA  0100               	movlb	0	; () banked
  4081  0043DC  90D8               	bcf	status,0,c
  4082  0043DE  37AA               	rlcf	??_doDM& (0+255),f,b
  4083  0043E0  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4084  0043E2  0100               	movlb	0	; () banked
  4085  0043E4  90D8               	bcf	status,0,c
  4086  0043E6  37AA               	rlcf	??_doDM& (0+255),f,b
  4087  0043E8  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4088  0043EA  0100               	movlb	0	; () banked
  4089  0043EC  90D8               	bcf	status,0,c
  4090  0043EE  37AA               	rlcf	??_doDM& (0+255),f,b
  4091  0043F0  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4092  0043F2  0E9E               	movlw	158
  4093  0043F4  0100               	movlb	0	; () banked
  4094  0043F6  25AA               	addwf	??_doDM& (0+255),w,b
  4095  0043F8  6E16               	movwf	?_Read_b_eep,c
  4096  0043FA  0E00               	movlw	0
  4097  0043FC  0100               	movlb	0	; () banked
  4098  0043FE  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4099  004400  6E17               	movwf	?_Read_b_eep+1,c
  4100  004402  ECD8  F037         	call	_Read_b_eep	;wreg free
  4101  004406  0100               	movlb	0	; () banked
  4102  004408  0100               	movlb	0	; () banked
  4103  00440A  6FB4               	movwf	doDM@type_filter& (0+255),b
  4104                           
  4105                           ;main.c: 2123: type_mask = Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 4);
  4106  00440C  0100               	movlb	0	; () banked
  4107  00440E  0100               	movlb	0	; () banked
  4108  004410  51BC               	movf	doDM@i& (0+255),w,b
  4109  004412  0100               	movlb	0	; () banked
  4110  004414  6FAA               	movwf	??_doDM& (0+255),b
  4111  004416  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4112  004418  0100               	movlb	0	; () banked
  4113  00441A  90D8               	bcf	status,0,c
  4114  00441C  37AA               	rlcf	??_doDM& (0+255),f,b
  4115  00441E  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4116  004420  0100               	movlb	0	; () banked
  4117  004422  90D8               	bcf	status,0,c
  4118  004424  37AA               	rlcf	??_doDM& (0+255),f,b
  4119  004426  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4120  004428  0100               	movlb	0	; () banked
  4121  00442A  90D8               	bcf	status,0,c
  4122  00442C  37AA               	rlcf	??_doDM& (0+255),f,b
  4123  00442E  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4124  004430  0E9D               	movlw	157
  4125  004432  0100               	movlb	0	; () banked
  4126  004434  25AA               	addwf	??_doDM& (0+255),w,b
  4127  004436  6E16               	movwf	?_Read_b_eep,c
  4128  004438  0E00               	movlw	0
  4129  00443A  0100               	movlb	0	; () banked
  4130  00443C  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4131  00443E  6E17               	movwf	?_Read_b_eep+1,c
  4132  004440  ECD8  F037         	call	_Read_b_eep	;wreg free
  4133  004444  0100               	movlb	0	; () banked
  4134  004446  0100               	movlb	0	; () banked
  4135  004448  6FB5               	movwf	doDM@type_mask& (0+255),b
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;main.c: 2129: if ( !( ( class_filter ^ vscp_imsg.vscp_class ) & class_mask ) &&
  4139                           ;main.c: 2130: !( ( type_filter ^ vscp_imsg.vscp_type ) & type_mask ) ) {
  4140  00444A  0100               	movlb	0	; () banked
  4141  00444C  EE20  F0F3         	lfsr	2,_vscp_imsg+2
  4142  004450  CFDE F0AA          	movff	postinc2,??_doDM
  4143  004454  CFDD F0AB          	movff	postdec2,??_doDM+1
  4144  004458  0100               	movlb	0	; () banked
  4145  00445A  0100               	movlb	0	; () banked
  4146  00445C  51B0               	movf	doDM@class_filter& (0+255),w,b
  4147  00445E  0100               	movlb	0	; () banked
  4148  004460  1BAA               	xorwf	??_doDM& (0+255),f,b
  4149  004462  0100               	movlb	0	; () banked
  4150  004464  0100               	movlb	0	; () banked
  4151  004466  51B1               	movf	(doDM@class_filter+1)& (0+255),w,b
  4152  004468  0100               	movlb	0	; () banked
  4153  00446A  1BAB               	xorwf	(??_doDM+1)& (0+255),f,b
  4154  00446C  0100               	movlb	0	; () banked
  4155  00446E  0100               	movlb	0	; () banked
  4156  004470  51B2               	movf	doDM@class_mask& (0+255),w,b
  4157  004472  0100               	movlb	0	; () banked
  4158  004474  17AA               	andwf	??_doDM& (0+255),f,b
  4159  004476  0100               	movlb	0	; () banked
  4160  004478  0100               	movlb	0	; () banked
  4161  00447A  51B3               	movf	(doDM@class_mask+1)& (0+255),w,b
  4162  00447C  0100               	movlb	0	; () banked
  4163  00447E  17AB               	andwf	(??_doDM+1)& (0+255),f,b
  4164  004480  0100               	movlb	0	; () banked
  4165  004482  51AB               	movf	(??_doDM+1)& (0+255),w,b
  4166  004484  11AA               	iorwf	??_doDM& (0+255),w,b
  4167  004486  A4D8               	btfss	status,2,c
  4168  004488  D0F6               	goto	l10024
  4169                           
  4170                           ; BSR set to: 0
  4171  00448A  0100               	movlb	0	; () banked
  4172  00448C  0100               	movlb	0	; () banked
  4173  00448E  51F5               	movf	(_vscp_imsg+4)& (0+255),w,b
  4174  004490  0100               	movlb	0	; () banked
  4175  004492  0100               	movlb	0	; () banked
  4176  004494  19B4               	xorwf	doDM@type_filter& (0+255),w,b
  4177  004496  0100               	movlb	0	; () banked
  4178  004498  0100               	movlb	0	; () banked
  4179  00449A  15B5               	andwf	doDM@type_mask& (0+255),w,b
  4180  00449C  0900               	iorlw	0
  4181  00449E  B4D8               	btfsc	status,2,c
  4182  0044A0  D0BF               	goto	l10022
  4183  0044A2  D0E9               	goto	l10024
  4184  0044A4                     l10002:
  4185                           
  4186                           ;main.c: 2138: doActionOn( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4187  0044A4  0100               	movlb	0	; () banked
  4188  0044A6  0100               	movlb	0	; () banked
  4189  0044A8  51BC               	movf	doDM@i& (0+255),w,b
  4190  0044AA  0100               	movlb	0	; () banked
  4191  0044AC  6FAA               	movwf	??_doDM& (0+255),b
  4192  0044AE  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4193  0044B0  0100               	movlb	0	; () banked
  4194  0044B2  90D8               	bcf	status,0,c
  4195  0044B4  37AA               	rlcf	??_doDM& (0+255),f,b
  4196  0044B6  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4197  0044B8  0100               	movlb	0	; () banked
  4198  0044BA  90D8               	bcf	status,0,c
  4199  0044BC  37AA               	rlcf	??_doDM& (0+255),f,b
  4200  0044BE  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4201  0044C0  0100               	movlb	0	; () banked
  4202  0044C2  90D8               	bcf	status,0,c
  4203  0044C4  37AA               	rlcf	??_doDM& (0+255),f,b
  4204  0044C6  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4205  0044C8  0EA0               	movlw	160
  4206  0044CA  0100               	movlb	0	; () banked
  4207  0044CC  25AA               	addwf	??_doDM& (0+255),w,b
  4208  0044CE  6E16               	movwf	?_Read_b_eep,c
  4209  0044D0  0E00               	movlw	0
  4210  0044D2  0100               	movlb	0	; () banked
  4211  0044D4  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4212  0044D6  6E17               	movwf	?_Read_b_eep+1,c
  4213  0044D8  ECD8  F037         	call	_Read_b_eep	;wreg free
  4214  0044DC  0100               	movlb	0	; () banked
  4215  0044DE  0100               	movlb	0	; () banked
  4216  0044E0  6FB6               	movwf	_doDM$2282& (0+255),b
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;main.c: 2138: doActionOn( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4220  0044E2  C0BB  F0A2         	movff	doDM@dmflags,?_doActionOn
  4221  0044E6  C0B6  F0A3         	movff	_doDM$2282,?_doActionOn+1
  4222  0044EA  ECA6  F01E         	call	_doActionOn	;wreg free
  4223                           
  4224                           ;main.c: 2141: break;
  4225  0044EE  D0C3               	goto	l10024
  4226  0044F0                     l10006:
  4227                           
  4228                           ;main.c: 2144: doActionOff( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4229  0044F0  0100               	movlb	0	; () banked
  4230  0044F2  0100               	movlb	0	; () banked
  4231  0044F4  51BC               	movf	doDM@i& (0+255),w,b
  4232  0044F6  0100               	movlb	0	; () banked
  4233  0044F8  6FAA               	movwf	??_doDM& (0+255),b
  4234  0044FA  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4235  0044FC  0100               	movlb	0	; () banked
  4236  0044FE  90D8               	bcf	status,0,c
  4237  004500  37AA               	rlcf	??_doDM& (0+255),f,b
  4238  004502  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4239  004504  0100               	movlb	0	; () banked
  4240  004506  90D8               	bcf	status,0,c
  4241  004508  37AA               	rlcf	??_doDM& (0+255),f,b
  4242  00450A  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4243  00450C  0100               	movlb	0	; () banked
  4244  00450E  90D8               	bcf	status,0,c
  4245  004510  37AA               	rlcf	??_doDM& (0+255),f,b
  4246  004512  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4247  004514  0EA0               	movlw	160
  4248  004516  0100               	movlb	0	; () banked
  4249  004518  25AA               	addwf	??_doDM& (0+255),w,b
  4250  00451A  6E16               	movwf	?_Read_b_eep,c
  4251  00451C  0E00               	movlw	0
  4252  00451E  0100               	movlb	0	; () banked
  4253  004520  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4254  004522  6E17               	movwf	?_Read_b_eep+1,c
  4255  004524  ECD8  F037         	call	_Read_b_eep	;wreg free
  4256  004528  0100               	movlb	0	; () banked
  4257  00452A  0100               	movlb	0	; () banked
  4258  00452C  6FB7               	movwf	_doDM$2283& (0+255),b
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;main.c: 2144: doActionOff( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4262  00452E  C0BB  F0A2         	movff	doDM@dmflags,?_doActionOff
  4263  004532  C0B7  F0A3         	movff	_doDM$2283,?_doActionOff+1
  4264  004536  ECEF  F031         	call	_doActionOff	;wreg free
  4265                           
  4266                           ;main.c: 2147: break;
  4267  00453A  D09D               	goto	l10024
  4268  00453C                     l10010:
  4269                           
  4270                           ;main.c: 2150: doActionPulse( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4271  00453C  0100               	movlb	0	; () banked
  4272  00453E  0100               	movlb	0	; () banked
  4273  004540  51BC               	movf	doDM@i& (0+255),w,b
  4274  004542  0100               	movlb	0	; () banked
  4275  004544  6FAA               	movwf	??_doDM& (0+255),b
  4276  004546  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4277  004548  0100               	movlb	0	; () banked
  4278  00454A  90D8               	bcf	status,0,c
  4279  00454C  37AA               	rlcf	??_doDM& (0+255),f,b
  4280  00454E  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4281  004550  0100               	movlb	0	; () banked
  4282  004552  90D8               	bcf	status,0,c
  4283  004554  37AA               	rlcf	??_doDM& (0+255),f,b
  4284  004556  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4285  004558  0100               	movlb	0	; () banked
  4286  00455A  90D8               	bcf	status,0,c
  4287  00455C  37AA               	rlcf	??_doDM& (0+255),f,b
  4288  00455E  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4289  004560  0EA0               	movlw	160
  4290  004562  0100               	movlb	0	; () banked
  4291  004564  25AA               	addwf	??_doDM& (0+255),w,b
  4292  004566  6E16               	movwf	?_Read_b_eep,c
  4293  004568  0E00               	movlw	0
  4294  00456A  0100               	movlb	0	; () banked
  4295  00456C  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4296  00456E  6E17               	movwf	?_Read_b_eep+1,c
  4297  004570  ECD8  F037         	call	_Read_b_eep	;wreg free
  4298  004574  0100               	movlb	0	; () banked
  4299  004576  0100               	movlb	0	; () banked
  4300  004578  6FB8               	movwf	_doDM$2284& (0+255),b
  4301                           
  4302                           ;main.c: 2150: doActionPulse( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4303  00457A  C0BB  F018         	movff	doDM@dmflags,?_doActionPulse
  4304  00457E  C0B8  F019         	movff	_doDM$2284,?_doActionPulse+1
  4305  004582  EC4C  F025         	call	_doActionPulse	;wreg free
  4306                           
  4307                           ;main.c: 2153: break;
  4308  004586  D077               	goto	l10024
  4309  004588                     l10012:
  4310                           
  4311                           ;main.c: 2156: doActionStatus( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4312  004588  0100               	movlb	0	; () banked
  4313  00458A  0100               	movlb	0	; () banked
  4314  00458C  51BC               	movf	doDM@i& (0+255),w,b
  4315  00458E  0100               	movlb	0	; () banked
  4316  004590  6FAA               	movwf	??_doDM& (0+255),b
  4317  004592  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4318  004594  0100               	movlb	0	; () banked
  4319  004596  90D8               	bcf	status,0,c
  4320  004598  37AA               	rlcf	??_doDM& (0+255),f,b
  4321  00459A  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4322  00459C  0100               	movlb	0	; () banked
  4323  00459E  90D8               	bcf	status,0,c
  4324  0045A0  37AA               	rlcf	??_doDM& (0+255),f,b
  4325  0045A2  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4326  0045A4  0100               	movlb	0	; () banked
  4327  0045A6  90D8               	bcf	status,0,c
  4328  0045A8  37AA               	rlcf	??_doDM& (0+255),f,b
  4329  0045AA  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4330  0045AC  0EA0               	movlw	160
  4331  0045AE  0100               	movlb	0	; () banked
  4332  0045B0  25AA               	addwf	??_doDM& (0+255),w,b
  4333  0045B2  6E16               	movwf	?_Read_b_eep,c
  4334  0045B4  0E00               	movlw	0
  4335  0045B6  0100               	movlb	0	; () banked
  4336  0045B8  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4337  0045BA  6E17               	movwf	?_Read_b_eep+1,c
  4338  0045BC  ECD8  F037         	call	_Read_b_eep	;wreg free
  4339  0045C0  0100               	movlb	0	; () banked
  4340  0045C2  0100               	movlb	0	; () banked
  4341  0045C4  6FB9               	movwf	_doDM$2285& (0+255),b
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;main.c: 2156: doActionStatus( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4345  0045C6  C0BB  F0A2         	movff	doDM@dmflags,?_doActionStatus
  4346  0045CA  C0B9  F0A3         	movff	_doDM$2285,?_doActionStatus+1
  4347  0045CE  EC19  F02B         	call	_doActionStatus	;wreg free
  4348                           
  4349                           ;main.c: 2159: break;
  4350  0045D2  D051               	goto	l10024
  4351  0045D4                     l10016:
  4352                           
  4353                           ;main.c: 2167: doActionToggle( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4354  0045D4  0100               	movlb	0	; () banked
  4355  0045D6  0100               	movlb	0	; () banked
  4356  0045D8  51BC               	movf	doDM@i& (0+255),w,b
  4357  0045DA  0100               	movlb	0	; () banked
  4358  0045DC  6FAA               	movwf	??_doDM& (0+255),b
  4359  0045DE  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4360  0045E0  0100               	movlb	0	; () banked
  4361  0045E2  90D8               	bcf	status,0,c
  4362  0045E4  37AA               	rlcf	??_doDM& (0+255),f,b
  4363  0045E6  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4364  0045E8  0100               	movlb	0	; () banked
  4365  0045EA  90D8               	bcf	status,0,c
  4366  0045EC  37AA               	rlcf	??_doDM& (0+255),f,b
  4367  0045EE  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4368  0045F0  0100               	movlb	0	; () banked
  4369  0045F2  90D8               	bcf	status,0,c
  4370  0045F4  37AA               	rlcf	??_doDM& (0+255),f,b
  4371  0045F6  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4372  0045F8  0EA0               	movlw	160
  4373  0045FA  0100               	movlb	0	; () banked
  4374  0045FC  25AA               	addwf	??_doDM& (0+255),w,b
  4375  0045FE  6E16               	movwf	?_Read_b_eep,c
  4376  004600  0E00               	movlw	0
  4377  004602  0100               	movlb	0	; () banked
  4378  004604  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4379  004606  6E17               	movwf	?_Read_b_eep+1,c
  4380  004608  ECD8  F037         	call	_Read_b_eep	;wreg free
  4381  00460C  0100               	movlb	0	; () banked
  4382  00460E  0100               	movlb	0	; () banked
  4383  004610  6FBA               	movwf	_doDM$2286& (0+255),b
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;main.c: 2167: doActionToggle( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4387  004612  C0BB  F0A2         	movff	doDM@dmflags,?_doActionToggle
  4388  004616  C0BA  F0A3         	movff	_doDM$2286,?_doActionToggle+1
  4389  00461A  EC32  F02A         	call	_doActionToggle	;wreg free
  4390                           
  4391                           ;main.c: 2170: break;
  4392  00461E  D02B               	goto	l10024
  4393  004620                     l10022:
  4394  004620  0100               	movlb	0	; () banked
  4395  004622  0100               	movlb	0	; () banked
  4396  004624  51BC               	movf	doDM@i& (0+255),w,b
  4397  004626  0100               	movlb	0	; () banked
  4398  004628  6FAA               	movwf	??_doDM& (0+255),b
  4399  00462A  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4400  00462C  0100               	movlb	0	; () banked
  4401  00462E  90D8               	bcf	status,0,c
  4402  004630  37AA               	rlcf	??_doDM& (0+255),f,b
  4403  004632  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4404  004634  0100               	movlb	0	; () banked
  4405  004636  90D8               	bcf	status,0,c
  4406  004638  37AA               	rlcf	??_doDM& (0+255),f,b
  4407  00463A  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4408  00463C  0100               	movlb	0	; () banked
  4409  00463E  90D8               	bcf	status,0,c
  4410  004640  37AA               	rlcf	??_doDM& (0+255),f,b
  4411  004642  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4412  004644  0E9F               	movlw	159
  4413  004646  0100               	movlb	0	; () banked
  4414  004648  25AA               	addwf	??_doDM& (0+255),w,b
  4415  00464A  6E16               	movwf	?_Read_b_eep,c
  4416  00464C  0E00               	movlw	0
  4417  00464E  0100               	movlb	0	; () banked
  4418  004650  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4419  004652  6E17               	movwf	?_Read_b_eep+1,c
  4420  004654  ECD8  F037         	call	_Read_b_eep	;wreg free
  4421                           
  4422                           ; Switch size 1, requested type "space"
  4423                           ; Number of cases is 5, Range of values is 1 to 6
  4424                           ; switch strategies available:
  4425                           ; Name         Instructions Cycles
  4426                           ; simple_byte           16     9 (average)
  4427                           ;	Chosen strategy is simple_byte
  4428  004658  0A01               	xorlw	1	; case 1
  4429  00465A  B4D8               	btfsc	status,2,c
  4430  00465C  D723               	goto	l10002
  4431  00465E  0A03               	xorlw	3	; case 2
  4432  004660  B4D8               	btfsc	status,2,c
  4433  004662  D746               	goto	l10006
  4434  004664  0A01               	xorlw	1	; case 3
  4435  004666  B4D8               	btfsc	status,2,c
  4436  004668  D769               	goto	l10010
  4437  00466A  0A06               	xorlw	6	; case 5
  4438  00466C  B4D8               	btfsc	status,2,c
  4439  00466E  D7B2               	goto	l10016
  4440  004670  0A03               	xorlw	3	; case 6
  4441  004672  B4D8               	btfsc	status,2,c
  4442  004674  D789               	goto	l10012
  4443  004676                     l10024:
  4444  004676  0100               	movlb	0	; () banked
  4445  004678  0100               	movlb	0	; () banked
  4446  00467A  2BBC               	incf	doDM@i& (0+255),f,b
  4447  00467C                     L30:
  4448                           
  4449                           ; BSR set to: 0
  4450  00467C  0E07               	movlw	7
  4451  00467E  0100               	movlb	0	; () banked
  4452  004680  0100               	movlb	0	; () banked
  4453  004682  65BC               	cpfsgt	doDM@i& (0+255),b
  4454  004684  D5CA               	goto	l9972
  4455  004686                     l754:
  4456                           
  4457                           ; BSR set to: 0
  4458  004686  0012               	return	
  4459  004688                     __end_of_doDM:
  4460                           	opt stack 0
  4461                           tblptru	equ	0xFF8
  4462                           prodh	equ	0xFF4
  4463                           prodl	equ	0xFF3
  4464                           postinc0	equ	0xFEE
  4465                           wreg	equ	0xFE8
  4466                           postinc2	equ	0xFDE
  4467                           postdec2	equ	0xFDD
  4468                           fsr2h	equ	0xFDA
  4469                           fsr2l	equ	0xFD9
  4470                           status	equ	0xFD8
  4471                           
  4472 ;; *************** function _doActionToggle *****************
  4473 ;; Defined at:
  4474 ;;		line 2682 in file "../main.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  dmflags         1   66[BANK0 ] unsigned char 
  4477 ;;  arg             1   67[BANK0 ] unsigned char 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;  i               1   72[BANK0 ] unsigned char 
  4480 ;;  bOn             1   71[BANK0 ] enum E15660
  4481 ;;  val             1   70[BANK0 ] unsigned char 
  4482 ;; Return value:  Size  Location     Type
  4483 ;;		None               void
  4484 ;; Registers used:
  4485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4491 ;;      Params:         0       2       0       0       0       0       0
  4492 ;;      Locals:         0       3       0       0       0       0       0
  4493 ;;      Temps:          0       2       0       0       0       0       0
  4494 ;;      Totals:         0       7       0       0       0       0       0
  4495 ;;Total ram usage:        7 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    7
  4498 ;; This function calls:
  4499 ;;		_Read_b_eep
  4500 ;;		_SendInformationEvent
  4501 ;; This function is called by:
  4502 ;;		_doDM
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text9
  4507  005464                     __ptext9:
  4508                           	opt stack 0
  4509  005464                     _doActionToggle:
  4510                           	opt stack 21
  4511                           
  4512                           ;main.c: 2684: unsigned char i;
  4513                           ;main.c: 2685: unsigned char val;
  4514                           ;main.c: 2686: BOOL bOn = 0;
  4515                           
  4516                           ; BSR set to: 0
  4517                           ;incstack = 0
  4518                           ;incstack = 0
  4519  005464  0100               	movlb	0	; () banked
  4520  005466  6FA4               	movwf	??_doActionToggle& (0+255),b
  4521  005468  0E00               	movlw	0
  4522  00546A  0100               	movlb	0	; () banked
  4523  00546C  0100               	movlb	0	; () banked
  4524  00546E  6FA7               	movwf	doActionToggle@bOn& (0+255),b
  4525  005470  0100               	movlb	0	; () banked
  4526  005472  51A4               	movf	??_doActionToggle& (0+255),w,b
  4527                           
  4528                           ;main.c: 2688: for ( i = 0; i < 8; i++ ) {
  4529  005474  0100               	movlb	0	; () banked
  4530  005476  6FA4               	movwf	??_doActionToggle& (0+255),b
  4531  005478  0E00               	movlw	0
  4532  00547A  0100               	movlb	0	; () banked
  4533  00547C  0100               	movlb	0	; () banked
  4534  00547E  6FA8               	movwf	doActionToggle@i& (0+255),b
  4535  005480  0100               	movlb	0	; () banked
  4536  005482  51A4               	movf	??_doActionToggle& (0+255),w,b
  4537  005484  D0D0               	goto	L50
  4538  005486                     l11282:
  4539                           
  4540                           ; BSR set to: 0
  4541                           ;main.c: 2691: if ( !( arg & (1 << i) ) ) continue;
  4542  005486  C0A8  F0A4         	movff	doActionToggle@i,??_doActionToggle
  4543  00548A  0E01               	movlw	1
  4544  00548C  0100               	movlb	0	; () banked
  4545  00548E  6FA5               	movwf	(??_doActionToggle+1)& (0+255),b
  4546  005490  0100               	movlb	0	; () banked
  4547  005492  2BA4               	incf	??_doActionToggle& (0+255),f,b
  4548  005494  D003               	goto	u13654
  4549  005496                     u13655:
  4550  005496  0100               	movlb	0	; () banked
  4551  005498  90D8               	bcf	status,0,c
  4552  00549A  37A5               	rlcf	(??_doActionToggle+1)& (0+255),f,b
  4553  00549C                     u13654:
  4554  00549C  0100               	movlb	0	; () banked
  4555  00549E  2FA4               	decfsz	??_doActionToggle& (0+255),f,b
  4556  0054A0  D7FA               	goto	u13655
  4557  0054A2  0100               	movlb	0	; () banked
  4558  0054A4  51A5               	movf	(??_doActionToggle+1)& (0+255),w,b
  4559  0054A6  0100               	movlb	0	; () banked
  4560  0054A8  0100               	movlb	0	; () banked
  4561  0054AA  15A3               	andwf	doActionToggle@arg& (0+255),w,b
  4562  0054AC  0900               	iorlw	0
  4563  0054AE  B4D8               	btfsc	status,2,c
  4564  0054B0  D0B7               	goto	l11364
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;main.c: 2694: if ( dmflags & 0x08 ) {
  4568                           
  4569                           ; BSR set to: 0
  4570  0054B2  0100               	movlb	0	; () banked
  4571  0054B4  0100               	movlb	0	; () banked
  4572  0054B6  A7A2               	btfss	doActionToggle@dmflags& (0+255),3,b
  4573  0054B8  D00F               	goto	l11290
  4574                           
  4575                           ; BSR set to: 0
  4576                           ;main.c: 2695: if ( vscp_imsg.data[ 2 ] != Read_b_eep(0x43 + 3 + i) ) {
  4577  0054BA  0E46               	movlw	70
  4578  0054BC  0100               	movlb	0	; () banked
  4579  0054BE  0100               	movlb	0	; () banked
  4580  0054C0  25A8               	addwf	doActionToggle@i& (0+255),w,b
  4581  0054C2  6E16               	movwf	?_Read_b_eep,c
  4582  0054C4  6A17               	clrf	?_Read_b_eep+1,c
  4583  0054C6  0E00               	movlw	0
  4584  0054C8  2217               	addwfc	?_Read_b_eep+1,f,c
  4585  0054CA  ECD8  F037         	call	_Read_b_eep	;wreg free
  4586  0054CE  0100               	movlb	0	; () banked
  4587  0054D0  0100               	movlb	0	; () banked
  4588  0054D2  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  4589  0054D4  A4D8               	btfss	status,2,c
  4590  0054D6  D0A4               	goto	l11364
  4591  0054D8                     l11290:
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;main.c: 2699: }
  4595                           ;main.c: 2700: }
  4596                           ;main.c: 2702: val = Read_b_eep(0x43 + 24 + i);
  4597  0054D8  0E5B               	movlw	91
  4598  0054DA  0100               	movlb	0	; () banked
  4599  0054DC  0100               	movlb	0	; () banked
  4600  0054DE  25A8               	addwf	doActionToggle@i& (0+255),w,b
  4601  0054E0  6E16               	movwf	?_Read_b_eep,c
  4602  0054E2  6A17               	clrf	?_Read_b_eep+1,c
  4603  0054E4  0E00               	movlw	0
  4604  0054E6  2217               	addwfc	?_Read_b_eep+1,f,c
  4605  0054E8  ECD8  F037         	call	_Read_b_eep	;wreg free
  4606  0054EC  0100               	movlb	0	; () banked
  4607  0054EE  0100               	movlb	0	; () banked
  4608  0054F0  6FA6               	movwf	doActionToggle@val& (0+255),b
  4609                           
  4610                           ;main.c: 2704: switch ( i ) {
  4611  0054F2  D047               	goto	l11354
  4612  0054F4                     l895:
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;main.c: 2707: if ( LATBbits.LATB0 ) {
  4616  0054F4  A08A               	btfss	3978,0,c	;volatile
  4617  0054F6  D002               	goto	l896
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;main.c: 2708: LATBbits.LATB0 = 0;
  4621  0054F8  908A               	bcf	3978,0,c	;volatile
  4622  0054FA  D005               	goto	L58
  4623  0054FC                     l896:
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;main.c: 2711: LATBbits.LATB0 = 1;
  4627  0054FC  808A               	bsf	3978,0,c	;volatile
  4628  0054FE  D038               	goto	L55
  4629  005500                     l899:
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;main.c: 2717: if ( LATBbits.LATB1 ) {
  4633  005500  A28A               	btfss	3978,1,c	;volatile
  4634  005502  D005               	goto	l900
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;main.c: 2718: LATBbits.LATB1 = 0;
  4638  005504  928A               	bcf	3978,1,c	;volatile
  4639  005506                     L58:
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;main.c: 2719: bOn = 0;
  4643  005506  0100               	movlb	0	; () banked
  4644  005508  6FA4               	movwf	??_doActionToggle& (0+255),b
  4645  00550A  0E00               	movlw	0
  4646  00550C  D034               	goto	L49
  4647  00550E                     l900:
  4648                           
  4649                           ; BSR set to: 0
  4650                           ;main.c: 2721: LATBbits.LATB1 = 1;
  4651  00550E  828A               	bsf	3978,1,c	;volatile
  4652  005510  D02F               	goto	L55
  4653  005512                     l902:
  4654                           
  4655                           ; BSR set to: 0
  4656                           ;main.c: 2727: if ( LATCbits.LATC3 ) {
  4657  005512  A68B               	btfss	3979,3,c	;volatile
  4658  005514  D002               	goto	l903
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;main.c: 2728: LATCbits.LATC3 = 0;
  4662  005516  968B               	bcf	3979,3,c	;volatile
  4663  005518  D7F6               	goto	L58
  4664  00551A                     l903:
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;main.c: 2731: LATCbits.LATC3 = 1;
  4668  00551A  868B               	bsf	3979,3,c	;volatile
  4669  00551C  D029               	goto	L55
  4670  00551E                     l905:
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;main.c: 2737: if ( LATCbits.LATC4 ) {
  4674  00551E  A88B               	btfss	3979,4,c	;volatile
  4675  005520  D002               	goto	l906
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;main.c: 2738: LATCbits.LATC4 = 0;
  4679  005522  988B               	bcf	3979,4,c	;volatile
  4680  005524  D7F0               	goto	L58
  4681  005526                     l906:
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;main.c: 2741: LATCbits.LATC4 = 1;
  4685  005526  888B               	bsf	3979,4,c	;volatile
  4686  005528  D023               	goto	L55
  4687  00552A                     l908:
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;main.c: 2747: if ( LATCbits.LATC5 ) {
  4691  00552A  AA8B               	btfss	3979,5,c	;volatile
  4692  00552C  D002               	goto	l909
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;main.c: 2748: LATCbits.LATC5 = 0;
  4696  00552E  9A8B               	bcf	3979,5,c	;volatile
  4697  005530  D7EA               	goto	L58
  4698  005532                     l909:
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;main.c: 2751: LATCbits.LATC5 = 1;
  4702  005532  8A8B               	bsf	3979,5,c	;volatile
  4703  005534  D01D               	goto	L55
  4704  005536                     l911:
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;main.c: 2757: if ( LATCbits.LATC6 ) {
  4708  005536  AC8B               	btfss	3979,6,c	;volatile
  4709  005538  D002               	goto	l912
  4710                           
  4711                           ; BSR set to: 0
  4712                           ;main.c: 2758: LATCbits.LATC6 = 0;
  4713  00553A  9C8B               	bcf	3979,6,c	;volatile
  4714  00553C  D7E4               	goto	L58
  4715  00553E                     l912:
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;main.c: 2761: LATCbits.LATC6 = 1;
  4719  00553E  8C8B               	bsf	3979,6,c	;volatile
  4720  005540  D017               	goto	L55
  4721  005542                     l914:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;main.c: 2767: if ( LATCbits.LATC7 ) {
  4725  005542  AE8B               	btfss	3979,7,c	;volatile
  4726  005544  D002               	goto	l915
  4727                           
  4728                           ; BSR set to: 0
  4729                           ;main.c: 2768: LATCbits.LATC7 = 0;
  4730  005546  9E8B               	bcf	3979,7,c	;volatile
  4731  005548  D7DE               	goto	L58
  4732  00554A                     l915:
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;main.c: 2771: LATCbits.LATC7 = 1;
  4736  00554A  8E8B               	bsf	3979,7,c	;volatile
  4737  00554C  D011               	goto	L55
  4738  00554E                     l917:
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;main.c: 2777: if ( LATAbits.LATA2 ) {
  4742  00554E  A489               	btfss	3977,2,c	;volatile
  4743  005550  D002               	goto	l918
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;main.c: 2778: LATAbits.LATA2 = 0;
  4747  005552  9489               	bcf	3977,2,c	;volatile
  4748  005554  D7D8               	goto	L58
  4749  005556                     l918:
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;main.c: 2781: LATAbits.LATA2 = 1;
  4753  005556  8489               	bsf	3977,2,c	;volatile
  4754  005558  D00B               	goto	L55
  4755  00555A                     l920:
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;main.c: 2787: if ( LATAbits.LATA1 ) {
  4759  00555A  A289               	btfss	3977,1,c	;volatile
  4760  00555C  D002               	goto	l921
  4761                           
  4762                           ; BSR set to: 0
  4763                           ;main.c: 2788: LATAbits.LATA1 = 0;
  4764  00555E  9289               	bcf	3977,1,c	;volatile
  4765  005560  D7D2               	goto	L58
  4766  005562                     l921:
  4767                           
  4768                           ; BSR set to: 0
  4769                           ;main.c: 2791: LATAbits.LATA1 = 1;
  4770  005562  8289               	bsf	3977,1,c	;volatile
  4771  005564  D005               	goto	L55
  4772  005566                     l923:
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;main.c: 2797: if ( LATAbits.LATA0 ) {
  4776  005566  A089               	btfss	3977,0,c	;volatile
  4777  005568  D002               	goto	l924
  4778                           
  4779                           ; BSR set to: 0
  4780                           ;main.c: 2798: LATAbits.LATA0 = 0;
  4781  00556A  9089               	bcf	3977,0,c	;volatile
  4782  00556C  D7CC               	goto	L58
  4783  00556E                     l924:
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;main.c: 2801: LATAbits.LATA0 = 1;
  4787  00556E  8089               	bsf	3977,0,c	;volatile
  4788  005570                     L55:
  4789                           
  4790                           ; BSR set to: 0
  4791                           ;main.c: 2802: bOn = 1;
  4792  005570  0100               	movlb	0	; () banked
  4793  005572  6FA4               	movwf	??_doActionToggle& (0+255),b
  4794  005574  0E01               	movlw	1
  4795  005576                     L49:
  4796  005576  0100               	movlb	0	; () banked
  4797  005578  0100               	movlb	0	; () banked
  4798  00557A  6FA7               	movwf	doActionToggle@bOn& (0+255),b
  4799  00557C  0100               	movlb	0	; () banked
  4800  00557E  51A4               	movf	??_doActionToggle& (0+255),w,b
  4801  005580  D021               	goto	l11356
  4802  005582                     l11354:
  4803                           
  4804                           ; BSR set to: 0
  4805  005582  0100               	movlb	0	; () banked
  4806  005584  0100               	movlb	0	; () banked
  4807  005586  51A8               	movf	doActionToggle@i& (0+255),w,b
  4808                           
  4809                           ; Switch size 1, requested type "space"
  4810                           ; Number of cases is 10, Range of values is 0 to 9
  4811                           ; switch strategies available:
  4812                           ; Name         Instructions Cycles
  4813                           ; simple_byte           31    16 (average)
  4814                           ;	Chosen strategy is simple_byte
  4815  005588  0A00               	xorlw	0	; case 0
  4816  00558A  B4D8               	btfsc	status,2,c
  4817  00558C  D7B3               	goto	l895
  4818  00558E  0A01               	xorlw	1	; case 1
  4819  005590  B4D8               	btfsc	status,2,c
  4820  005592  D7B6               	goto	l899
  4821  005594  0A03               	xorlw	3	; case 2
  4822  005596  B4D8               	btfsc	status,2,c
  4823  005598  D7BC               	goto	l902
  4824  00559A  0A01               	xorlw	1	; case 3
  4825  00559C  B4D8               	btfsc	status,2,c
  4826  00559E  D7BF               	goto	l905
  4827  0055A0  0A07               	xorlw	7	; case 4
  4828  0055A2  B4D8               	btfsc	status,2,c
  4829  0055A4  D7C2               	goto	l908
  4830  0055A6  0A01               	xorlw	1	; case 5
  4831  0055A8  B4D8               	btfsc	status,2,c
  4832  0055AA  D7C5               	goto	l911
  4833  0055AC  0A03               	xorlw	3	; case 6
  4834  0055AE  B4D8               	btfsc	status,2,c
  4835  0055B0  D7C8               	goto	l914
  4836  0055B2  0A01               	xorlw	1	; case 7
  4837  0055B4  B4D8               	btfsc	status,2,c
  4838  0055B6  D7CB               	goto	l917
  4839  0055B8  0A0F               	xorlw	15	; case 8
  4840  0055BA  B4D8               	btfsc	status,2,c
  4841  0055BC  D7CE               	goto	l920
  4842  0055BE  0A01               	xorlw	1	; case 9
  4843  0055C0  B4D8               	btfsc	status,2,c
  4844  0055C2  D7D1               	goto	l923
  4845  0055C4                     l11356:
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;main.c: 2807: if ( bOn ) {
  4849  0055C4  0100               	movlb	0	; () banked
  4850  0055C6  0100               	movlb	0	; () banked
  4851  0055C8  51A7               	movf	doActionToggle@bOn& (0+255),w,b
  4852  0055CA  B4D8               	btfsc	status,2,c
  4853  0055CC  D015               	goto	l926
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;main.c: 2810: if ( val & 0x08 ) {
  4857  0055CE  0100               	movlb	0	; () banked
  4858  0055D0  0100               	movlb	0	; () banked
  4859  0055D2  A7A6               	btfss	doActionToggle@val& (0+255),3,b
  4860  0055D4  D025               	goto	l11364
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;main.c: 2811: SendInformationEvent( i, 20, 3 );
  4864  0055D6  C0A8  F030         	movff	doActionToggle@i,?_SendInformationEvent
  4865  0055DA  0100               	movlb	0	; () banked
  4866  0055DC  6FA4               	movwf	??_doActionToggle& (0+255),b
  4867  0055DE  0E14               	movlw	20
  4868  0055E0  6E31               	movwf	?_SendInformationEvent+1,c
  4869  0055E2  0100               	movlb	0	; () banked
  4870  0055E4  51A4               	movf	??_doActionToggle& (0+255),w,b
  4871  0055E6  0100               	movlb	0	; () banked
  4872  0055E8  6FA5               	movwf	(??_doActionToggle+1)& (0+255),b
  4873  0055EA  0E03               	movlw	3
  4874  0055EC  6E32               	movwf	?_SendInformationEvent+2,c
  4875  0055EE  0100               	movlb	0	; () banked
  4876  0055F0  51A5               	movf	(??_doActionToggle+1)& (0+255),w,b
  4877  0055F2  ECFC  F034         	call	_SendInformationEvent	;wreg free
  4878  0055F6  D014               	goto	l11364
  4879  0055F8                     l926:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;main.c: 2815: else {
  4883                           ;main.c: 2818: if ( val & 0x10 ) {
  4884  0055F8  0100               	movlb	0	; () banked
  4885  0055FA  0100               	movlb	0	; () banked
  4886  0055FC  A9A6               	btfss	doActionToggle@val& (0+255),4,b
  4887  0055FE  D010               	goto	l11364
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;main.c: 2819: SendInformationEvent( i, 20, 4 );
  4891  005600  C0A8  F030         	movff	doActionToggle@i,?_SendInformationEvent
  4892  005604  0100               	movlb	0	; () banked
  4893  005606  6FA4               	movwf	??_doActionToggle& (0+255),b
  4894  005608  0E14               	movlw	20
  4895  00560A  6E31               	movwf	?_SendInformationEvent+1,c
  4896  00560C  0100               	movlb	0	; () banked
  4897  00560E  51A4               	movf	??_doActionToggle& (0+255),w,b
  4898  005610  0100               	movlb	0	; () banked
  4899  005612  6FA5               	movwf	(??_doActionToggle+1)& (0+255),b
  4900  005614  0E04               	movlw	4
  4901  005616  6E32               	movwf	?_SendInformationEvent+2,c
  4902  005618  0100               	movlb	0	; () banked
  4903  00561A  51A5               	movf	(??_doActionToggle+1)& (0+255),w,b
  4904  00561C  ECFC  F034         	call	_SendInformationEvent	;wreg free
  4905  005620                     l11364:
  4906  005620  0100               	movlb	0	; () banked
  4907  005622  0100               	movlb	0	; () banked
  4908  005624  2BA8               	incf	doActionToggle@i& (0+255),f,b
  4909  005626                     L50:
  4910                           
  4911                           ; BSR set to: 0
  4912  005626  0E07               	movlw	7
  4913  005628  0100               	movlb	0	; () banked
  4914  00562A  0100               	movlb	0	; () banked
  4915  00562C  65A8               	cpfsgt	doActionToggle@i& (0+255),b
  4916  00562E  D72B               	goto	l11282
  4917                           
  4918                           ; BSR set to: 0
  4919                           
  4920                           ; BSR set to: 0
  4921  005630  0012               	return	
  4922  005632                     __end_of_doActionToggle:
  4923                           	opt stack 0
  4924                           tblptru	equ	0xFF8
  4925                           prodh	equ	0xFF4
  4926                           prodl	equ	0xFF3
  4927                           postinc0	equ	0xFEE
  4928                           wreg	equ	0xFE8
  4929                           postinc2	equ	0xFDE
  4930                           postdec2	equ	0xFDD
  4931                           fsr2h	equ	0xFDA
  4932                           fsr2l	equ	0xFD9
  4933                           status	equ	0xFD8
  4934                           
  4935 ;; *************** function _doActionStatus *****************
  4936 ;; Defined at:
  4937 ;;		line 2562 in file "../main.c"
  4938 ;; Parameters:    Size  Location     Type
  4939 ;;  dmflags         1   66[BANK0 ] unsigned char 
  4940 ;;  arg             1   67[BANK0 ] unsigned char 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;  i               1   72[BANK0 ] unsigned char 
  4943 ;;  bOn             1   71[BANK0 ] enum E15660
  4944 ;;  val             1   70[BANK0 ] unsigned char 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;		None               void
  4947 ;; Registers used:
  4948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4954 ;;      Params:         0       2       0       0       0       0       0
  4955 ;;      Locals:         0       3       0       0       0       0       0
  4956 ;;      Temps:          0       2       0       0       0       0       0
  4957 ;;      Totals:         0       7       0       0       0       0       0
  4958 ;;Total ram usage:        7 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    7
  4961 ;; This function calls:
  4962 ;;		_Read_b_eep
  4963 ;;		_SendInformationEvent
  4964 ;; This function is called by:
  4965 ;;		_doDM
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           	psect	text10
  4970  005632                     __ptext10:
  4971                           	opt stack 0
  4972  005632                     _doActionStatus:
  4973                           	opt stack 21
  4974                           
  4975                           ;main.c: 2564: unsigned char i;
  4976                           ;main.c: 2565: unsigned char val;
  4977                           ;main.c: 2566: BOOL bOn = 0;
  4978                           
  4979                           ; BSR set to: 0
  4980                           ;incstack = 0
  4981                           ;incstack = 0
  4982  005632  0100               	movlb	0	; () banked
  4983  005634  6FA4               	movwf	??_doActionStatus& (0+255),b
  4984  005636  0E00               	movlw	0
  4985  005638  0100               	movlb	0	; () banked
  4986  00563A  0100               	movlb	0	; () banked
  4987  00563C  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  4988  00563E  0100               	movlb	0	; () banked
  4989  005640  51A4               	movf	??_doActionStatus& (0+255),w,b
  4990                           
  4991                           ;main.c: 2568: for (i = 0; i < 8; i++) {
  4992  005642  0100               	movlb	0	; () banked
  4993  005644  6FA4               	movwf	??_doActionStatus& (0+255),b
  4994  005646  0E00               	movlw	0
  4995  005648  0100               	movlb	0	; () banked
  4996  00564A  0100               	movlb	0	; () banked
  4997  00564C  6FA8               	movwf	doActionStatus@i& (0+255),b
  4998  00564E  0100               	movlb	0	; () banked
  4999  005650  51A4               	movf	??_doActionStatus& (0+255),w,b
  5000  005652  D0CF               	goto	L59
  5001  005654                     l11230:
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;main.c: 2571: if (!(arg & (1 << i))) continue;
  5005  005654  C0A8  F0A4         	movff	doActionStatus@i,??_doActionStatus
  5006  005658  0E01               	movlw	1
  5007  00565A  0100               	movlb	0	; () banked
  5008  00565C  6FA5               	movwf	(??_doActionStatus+1)& (0+255),b
  5009  00565E  0100               	movlb	0	; () banked
  5010  005660  2BA4               	incf	??_doActionStatus& (0+255),f,b
  5011  005662  D003               	goto	u13564
  5012  005664                     u13565:
  5013  005664  0100               	movlb	0	; () banked
  5014  005666  90D8               	bcf	status,0,c
  5015  005668  37A5               	rlcf	(??_doActionStatus+1)& (0+255),f,b
  5016  00566A                     u13564:
  5017  00566A  0100               	movlb	0	; () banked
  5018  00566C  2FA4               	decfsz	??_doActionStatus& (0+255),f,b
  5019  00566E  D7FA               	goto	u13565
  5020  005670  0100               	movlb	0	; () banked
  5021  005672  51A5               	movf	(??_doActionStatus+1)& (0+255),w,b
  5022  005674  0100               	movlb	0	; () banked
  5023  005676  0100               	movlb	0	; () banked
  5024  005678  15A3               	andwf	doActionStatus@arg& (0+255),w,b
  5025  00567A  0900               	iorlw	0
  5026  00567C  B4D8               	btfsc	status,2,c
  5027  00567E  D0B6               	goto	l11272
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;main.c: 2574: if (dmflags & 0x08) {
  5031                           
  5032                           ; BSR set to: 0
  5033  005680  0100               	movlb	0	; () banked
  5034  005682  0100               	movlb	0	; () banked
  5035  005684  A7A2               	btfss	doActionStatus@dmflags& (0+255),3,b
  5036  005686  D00F               	goto	l11238
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;main.c: 2575: if (vscp_imsg.data[ 2 ] != Read_b_eep(0x43 + 3 + i) ) {
  5040  005688  0E46               	movlw	70
  5041  00568A  0100               	movlb	0	; () banked
  5042  00568C  0100               	movlb	0	; () banked
  5043  00568E  25A8               	addwf	doActionStatus@i& (0+255),w,b
  5044  005690  6E16               	movwf	?_Read_b_eep,c
  5045  005692  6A17               	clrf	?_Read_b_eep+1,c
  5046  005694  0E00               	movlw	0
  5047  005696  2217               	addwfc	?_Read_b_eep+1,f,c
  5048  005698  ECD8  F037         	call	_Read_b_eep	;wreg free
  5049  00569C  0100               	movlb	0	; () banked
  5050  00569E  0100               	movlb	0	; () banked
  5051  0056A0  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  5052  0056A2  A4D8               	btfss	status,2,c
  5053  0056A4  D0A3               	goto	l11272
  5054  0056A6                     l11238:
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;main.c: 2579: }
  5058                           ;main.c: 2580: }
  5059                           ;main.c: 2582: val = Read_b_eep(0x43 + 24 + i);
  5060  0056A6  0E5B               	movlw	91
  5061  0056A8  0100               	movlb	0	; () banked
  5062  0056AA  0100               	movlb	0	; () banked
  5063  0056AC  25A8               	addwf	doActionStatus@i& (0+255),w,b
  5064  0056AE  6E16               	movwf	?_Read_b_eep,c
  5065  0056B0  6A17               	clrf	?_Read_b_eep+1,c
  5066  0056B2  0E00               	movlw	0
  5067  0056B4  2217               	addwfc	?_Read_b_eep+1,f,c
  5068  0056B6  ECD8  F037         	call	_Read_b_eep	;wreg free
  5069  0056BA  0100               	movlb	0	; () banked
  5070  0056BC  0100               	movlb	0	; () banked
  5071  0056BE  6FA6               	movwf	doActionStatus@val& (0+255),b
  5072                           
  5073                           ;main.c: 2584: switch (i) {
  5074  0056C0  D046               	goto	l11262
  5075  0056C2                     l11240:
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;main.c: 2587: bOn = LATBbits.LATB0;
  5079  0056C2  0E00               	movlw	0
  5080  0056C4  B08A               	btfsc	3978,0,c	;volatile
  5081  0056C6  0E01               	movlw	1
  5082  0056C8  0100               	movlb	0	; () banked
  5083  0056CA  0100               	movlb	0	; () banked
  5084  0056CC  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5085                           
  5086                           ;main.c: 2588: break;
  5087  0056CE  D060               	goto	l11264
  5088  0056D0                     l11242:
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;main.c: 2591: bOn = LATBbits.LATB1;
  5092  0056D0  0E00               	movlw	0
  5093  0056D2  B28A               	btfsc	3978,1,c	;volatile
  5094  0056D4  0E01               	movlw	1
  5095  0056D6  0100               	movlb	0	; () banked
  5096  0056D8  0100               	movlb	0	; () banked
  5097  0056DA  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5098                           
  5099                           ;main.c: 2592: break;
  5100  0056DC  D059               	goto	l11264
  5101  0056DE                     l11244:
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;main.c: 2595: bOn = LATCbits.LATC3;
  5105  0056DE  0E00               	movlw	0
  5106  0056E0  B68B               	btfsc	3979,3,c	;volatile
  5107  0056E2  0E01               	movlw	1
  5108  0056E4  0100               	movlb	0	; () banked
  5109  0056E6  0100               	movlb	0	; () banked
  5110  0056E8  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5111                           
  5112                           ;main.c: 2596: break;
  5113  0056EA  D052               	goto	l11264
  5114  0056EC                     l11246:
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;main.c: 2599: bOn = LATCbits.LATC4;
  5118  0056EC  0E00               	movlw	0
  5119  0056EE  B88B               	btfsc	3979,4,c	;volatile
  5120  0056F0  0E01               	movlw	1
  5121  0056F2  0100               	movlb	0	; () banked
  5122  0056F4  0100               	movlb	0	; () banked
  5123  0056F6  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5124                           
  5125                           ;main.c: 2600: break;
  5126  0056F8  D04B               	goto	l11264
  5127  0056FA                     l11248:
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;main.c: 2603: bOn = LATCbits.LATC5;
  5131  0056FA  0E00               	movlw	0
  5132  0056FC  BA8B               	btfsc	3979,5,c	;volatile
  5133  0056FE  0E01               	movlw	1
  5134  005700  0100               	movlb	0	; () banked
  5135  005702  0100               	movlb	0	; () banked
  5136  005704  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5137                           
  5138                           ;main.c: 2604: break;
  5139  005706  D044               	goto	l11264
  5140  005708                     l11250:
  5141                           
  5142                           ; BSR set to: 0
  5143                           ;main.c: 2607: bOn = LATCbits.LATC6;
  5144  005708  0E00               	movlw	0
  5145  00570A  BC8B               	btfsc	3979,6,c	;volatile
  5146  00570C  0E01               	movlw	1
  5147  00570E  0100               	movlb	0	; () banked
  5148  005710  0100               	movlb	0	; () banked
  5149  005712  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5150                           
  5151                           ;main.c: 2608: break;
  5152  005714  D03D               	goto	l11264
  5153  005716                     l11252:
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;main.c: 2611: bOn = LATCbits.LATC7;
  5157  005716  0E00               	movlw	0
  5158  005718  BE8B               	btfsc	3979,7,c	;volatile
  5159  00571A  0E01               	movlw	1
  5160  00571C  0100               	movlb	0	; () banked
  5161  00571E  0100               	movlb	0	; () banked
  5162  005720  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5163                           
  5164                           ;main.c: 2612: break;
  5165  005722  D036               	goto	l11264
  5166  005724                     l11254:
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;main.c: 2615: bOn = LATAbits.LATA2;
  5170  005724  0E00               	movlw	0
  5171  005726  B489               	btfsc	3977,2,c	;volatile
  5172  005728  0E01               	movlw	1
  5173  00572A  0100               	movlb	0	; () banked
  5174  00572C  0100               	movlb	0	; () banked
  5175  00572E  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5176                           
  5177                           ;main.c: 2616: break;
  5178  005730  D02F               	goto	l11264
  5179  005732                     l11256:
  5180                           
  5181                           ; BSR set to: 0
  5182                           ;main.c: 2619: bOn = LATAbits.LATA1;
  5183  005732  0E00               	movlw	0
  5184  005734  B289               	btfsc	3977,1,c	;volatile
  5185  005736  0E01               	movlw	1
  5186  005738  0100               	movlb	0	; () banked
  5187  00573A  0100               	movlb	0	; () banked
  5188  00573C  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5189                           
  5190                           ;main.c: 2620: break;
  5191  00573E  D028               	goto	l11264
  5192  005740                     l11258:
  5193                           
  5194                           ; BSR set to: 0
  5195                           ;main.c: 2623: bOn = LATAbits.LATA0;
  5196  005740  0E00               	movlw	0
  5197  005742  B089               	btfsc	3977,0,c	;volatile
  5198  005744  0E01               	movlw	1
  5199  005746  0100               	movlb	0	; () banked
  5200  005748  0100               	movlb	0	; () banked
  5201  00574A  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5202                           
  5203                           ;main.c: 2624: break;
  5204  00574C  D021               	goto	l11264
  5205  00574E                     l11262:
  5206                           
  5207                           ; BSR set to: 0
  5208  00574E  0100               	movlb	0	; () banked
  5209  005750  0100               	movlb	0	; () banked
  5210  005752  51A8               	movf	doActionStatus@i& (0+255),w,b
  5211                           
  5212                           ; Switch size 1, requested type "space"
  5213                           ; Number of cases is 10, Range of values is 0 to 9
  5214                           ; switch strategies available:
  5215                           ; Name         Instructions Cycles
  5216                           ; simple_byte           31    16 (average)
  5217                           ;	Chosen strategy is simple_byte
  5218  005754  0A00               	xorlw	0	; case 0
  5219  005756  B4D8               	btfsc	status,2,c
  5220  005758  D7B4               	goto	l11240
  5221  00575A  0A01               	xorlw	1	; case 1
  5222  00575C  B4D8               	btfsc	status,2,c
  5223  00575E  D7B8               	goto	l11242
  5224  005760  0A03               	xorlw	3	; case 2
  5225  005762  B4D8               	btfsc	status,2,c
  5226  005764  D7BC               	goto	l11244
  5227  005766  0A01               	xorlw	1	; case 3
  5228  005768  B4D8               	btfsc	status,2,c
  5229  00576A  D7C0               	goto	l11246
  5230  00576C  0A07               	xorlw	7	; case 4
  5231  00576E  B4D8               	btfsc	status,2,c
  5232  005770  D7C4               	goto	l11248
  5233  005772  0A01               	xorlw	1	; case 5
  5234  005774  B4D8               	btfsc	status,2,c
  5235  005776  D7C8               	goto	l11250
  5236  005778  0A03               	xorlw	3	; case 6
  5237  00577A  B4D8               	btfsc	status,2,c
  5238  00577C  D7CC               	goto	l11252
  5239  00577E  0A01               	xorlw	1	; case 7
  5240  005780  B4D8               	btfsc	status,2,c
  5241  005782  D7D0               	goto	l11254
  5242  005784  0A0F               	xorlw	15	; case 8
  5243  005786  B4D8               	btfsc	status,2,c
  5244  005788  D7D4               	goto	l11256
  5245  00578A  0A01               	xorlw	1	; case 9
  5246  00578C  B4D8               	btfsc	status,2,c
  5247  00578E  D7D8               	goto	l11258
  5248  005790                     l11264:
  5249                           
  5250                           ; BSR set to: 0
  5251                           ;main.c: 2627: if (bOn) {
  5252  005790  0100               	movlb	0	; () banked
  5253  005792  0100               	movlb	0	; () banked
  5254  005794  51A7               	movf	doActionStatus@bOn& (0+255),w,b
  5255  005796  B4D8               	btfsc	status,2,c
  5256  005798  D015               	goto	l872
  5257                           
  5258                           ; BSR set to: 0
  5259                           ;main.c: 2630: if ( val & 0x10 ) {
  5260  00579A  0100               	movlb	0	; () banked
  5261  00579C  0100               	movlb	0	; () banked
  5262  00579E  A9A6               	btfss	doActionStatus@val& (0+255),4,b
  5263  0057A0  D025               	goto	l11272
  5264                           
  5265                           ; BSR set to: 0
  5266                           ;main.c: 2631: SendInformationEvent( i, 20, 4 );
  5267  0057A2  C0A8  F030         	movff	doActionStatus@i,?_SendInformationEvent
  5268  0057A6  0100               	movlb	0	; () banked
  5269  0057A8  6FA4               	movwf	??_doActionStatus& (0+255),b
  5270  0057AA  0E14               	movlw	20
  5271  0057AC  6E31               	movwf	?_SendInformationEvent+1,c
  5272  0057AE  0100               	movlb	0	; () banked
  5273  0057B0  51A4               	movf	??_doActionStatus& (0+255),w,b
  5274  0057B2  0100               	movlb	0	; () banked
  5275  0057B4  6FA5               	movwf	(??_doActionStatus+1)& (0+255),b
  5276  0057B6  0E04               	movlw	4
  5277  0057B8  6E32               	movwf	?_SendInformationEvent+2,c
  5278  0057BA  0100               	movlb	0	; () banked
  5279  0057BC  51A5               	movf	(??_doActionStatus+1)& (0+255),w,b
  5280  0057BE  ECFC  F034         	call	_SendInformationEvent	;wreg free
  5281  0057C2  D014               	goto	l11272
  5282  0057C4                     l872:
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;main.c: 2635: else {
  5286                           ;main.c: 2638: if ( val & 0x10 ) {
  5287  0057C4  0100               	movlb	0	; () banked
  5288  0057C6  0100               	movlb	0	; () banked
  5289  0057C8  A9A6               	btfss	doActionStatus@val& (0+255),4,b
  5290  0057CA  D010               	goto	l11272
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;main.c: 2639: SendInformationEvent( i, 20, 4 );
  5294  0057CC  C0A8  F030         	movff	doActionStatus@i,?_SendInformationEvent
  5295  0057D0  0100               	movlb	0	; () banked
  5296  0057D2  6FA4               	movwf	??_doActionStatus& (0+255),b
  5297  0057D4  0E14               	movlw	20
  5298  0057D6  6E31               	movwf	?_SendInformationEvent+1,c
  5299  0057D8  0100               	movlb	0	; () banked
  5300  0057DA  51A4               	movf	??_doActionStatus& (0+255),w,b
  5301  0057DC  0100               	movlb	0	; () banked
  5302  0057DE  6FA5               	movwf	(??_doActionStatus+1)& (0+255),b
  5303  0057E0  0E04               	movlw	4
  5304  0057E2  6E32               	movwf	?_SendInformationEvent+2,c
  5305  0057E4  0100               	movlb	0	; () banked
  5306  0057E6  51A5               	movf	(??_doActionStatus+1)& (0+255),w,b
  5307  0057E8  ECFC  F034         	call	_SendInformationEvent	;wreg free
  5308  0057EC                     l11272:
  5309  0057EC  0100               	movlb	0	; () banked
  5310  0057EE  0100               	movlb	0	; () banked
  5311  0057F0  2BA8               	incf	doActionStatus@i& (0+255),f,b
  5312  0057F2                     L59:
  5313                           
  5314                           ; BSR set to: 0
  5315  0057F2  0E07               	movlw	7
  5316  0057F4  0100               	movlb	0	; () banked
  5317  0057F6  0100               	movlb	0	; () banked
  5318  0057F8  65A8               	cpfsgt	doActionStatus@i& (0+255),b
  5319  0057FA  D72C               	goto	l11230
  5320                           
  5321                           ; BSR set to: 0
  5322                           
  5323                           ; BSR set to: 0
  5324  0057FC  0012               	return	
  5325  0057FE                     __end_of_doActionStatus:
  5326                           	opt stack 0
  5327                           tblptru	equ	0xFF8
  5328                           prodh	equ	0xFF4
  5329                           prodl	equ	0xFF3
  5330                           postinc0	equ	0xFEE
  5331                           wreg	equ	0xFE8
  5332                           postinc2	equ	0xFDE
  5333                           postdec2	equ	0xFDD
  5334                           fsr2h	equ	0xFDA
  5335                           fsr2l	equ	0xFD9
  5336                           status	equ	0xFD8
  5337                           
  5338 ;; *************** function _doActionPulse *****************
  5339 ;; Defined at:
  5340 ;;		line 2428 in file "../main.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;  dmflags         1   23[COMRAM] unsigned char 
  5343 ;;  arg             1   24[COMRAM] unsigned char 
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;  i               1   30[COMRAM] unsigned char 
  5346 ;;  val             1   29[COMRAM] unsigned char 
  5347 ;; Return value:  Size  Location     Type
  5348 ;;		None               void
  5349 ;; Registers used:
  5350 ;;		wreg, status,2, status,0, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5356 ;;      Params:         2       0       0       0       0       0       0
  5357 ;;      Locals:         2       0       0       0       0       0       0
  5358 ;;      Temps:          4       0       0       0       0       0       0
  5359 ;;      Totals:         8       0       0       0       0       0       0
  5360 ;;Total ram usage:        8 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    3
  5363 ;; This function calls:
  5364 ;;		_Read_b_eep
  5365 ;; This function is called by:
  5366 ;;		_doDM
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370                           	psect	text11
  5371  004A98                     __ptext11:
  5372                           	opt stack 0
  5373  004A98                     _doActionPulse:
  5374                           	opt stack 25
  5375                           
  5376                           ;main.c: 2430: unsigned char i;
  5377                           ;main.c: 2431: unsigned char val;
  5378                           ;main.c: 2433: for ( i = 0; i < 8; i++ ) {
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;incstack = 0
  5382                           ;incstack = 0
  5383  004A98  6E1A               	movwf	??_doActionPulse& (0+255),c
  5384  004A9A  0E00               	movlw	0
  5385  004A9C  6E1F               	movwf	doActionPulse@i,c
  5386  004A9E  501A               	movf	??_doActionPulse& (0+255),w,c
  5387  004AA0  D180               	goto	L60
  5388  004AA2                     l11162:
  5389                           
  5390                           ;main.c: 2436: if ( !( arg & ( 1 << i ) ) ) continue;
  5391  004AA2  C01F  F01A         	movff	doActionPulse@i,??_doActionPulse
  5392  004AA6  0E01               	movlw	1
  5393  004AA8  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5394  004AAA  2A1A               	incf	??_doActionPulse,f,c
  5395  004AAC  D002               	goto	u13494
  5396  004AAE                     u13495:
  5397  004AAE  90D8               	bcf	status,0,c
  5398  004AB0  361B               	rlcf	??_doActionPulse+1,f,c
  5399  004AB2                     u13494:
  5400  004AB2  2E1A               	decfsz	??_doActionPulse,f,c
  5401  004AB4  D7FC               	goto	u13495
  5402  004AB6  501B               	movf	??_doActionPulse+1,w,c
  5403  004AB8  1419               	andwf	doActionPulse@arg,w,c
  5404  004ABA  0900               	iorlw	0
  5405  004ABC  B4D8               	btfsc	status,2,c
  5406  004ABE  D170               	goto	l11220
  5407                           
  5408                           ;main.c: 2439: if (dmflags & 0x08) {
  5409  004AC0  A618               	btfss	doActionPulse@dmflags,3,c
  5410  004AC2  D00D               	goto	l11170
  5411                           
  5412                           ;main.c: 2440: if ( vscp_imsg.data[ 2 ] != Read_b_eep(0x43 + 3 + i) ) {
  5413  004AC4  0E46               	movlw	70
  5414  004AC6  241F               	addwf	doActionPulse@i,w,c
  5415  004AC8  6E16               	movwf	?_Read_b_eep,c
  5416  004ACA  6A17               	clrf	?_Read_b_eep+1,c
  5417  004ACC  0E00               	movlw	0
  5418  004ACE  2217               	addwfc	?_Read_b_eep+1,f,c
  5419  004AD0  ECD8  F037         	call	_Read_b_eep	;wreg free
  5420  004AD4  0100               	movlb	0	; () banked
  5421  004AD6  0100               	movlb	0	; () banked
  5422  004AD8  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  5423  004ADA  A4D8               	btfss	status,2,c
  5424  004ADC  D161               	goto	l11220
  5425  004ADE                     l11170:
  5426                           
  5427                           ;main.c: 2444: }
  5428                           ;main.c: 2445: }
  5429                           ;main.c: 2447: val = Read_b_eep(0x43 + 24 + i);
  5430  004ADE  0E5B               	movlw	91
  5431  004AE0  241F               	addwf	doActionPulse@i,w,c
  5432  004AE2  6E16               	movwf	?_Read_b_eep,c
  5433  004AE4  6A17               	clrf	?_Read_b_eep+1,c
  5434  004AE6  0E00               	movlw	0
  5435  004AE8  2217               	addwfc	?_Read_b_eep+1,f,c
  5436  004AEA  ECD8  F037         	call	_Read_b_eep	;wreg free
  5437  004AEE  6E1E               	movwf	doActionPulse@val,c
  5438                           
  5439                           ;main.c: 2450: if ( !( val & 0x80 ) ) continue;
  5440  004AF0  AE1E               	btfss	doActionPulse@val,7,c
  5441  004AF2  D156               	goto	l11220
  5442  004AF4  D136               	goto	l11218
  5443  004AF6                     l840:
  5444                           
  5445                           ;main.c: 2455: LATBbits.LATB0 = 0;
  5446  004AF6  908A               	bcf	3978,0,c	;volatile
  5447                           
  5448                           ;main.c: 2456: channel_pulse_flags |= 0x01;
  5449  004AF8  0100               	movlb	0	; () banked
  5450  004AFA  0100               	movlb	0	; () banked
  5451  004AFC  81D5               	bsf	_channel_pulse_flags& (0+255),0,b
  5452                           
  5453                           ; BSR set to: 0
  5454                           ;main.c: 2457: channel_pulse_timer[ 0 ] =
  5455                           ;main.c: 2458: Read_b_eep(0x43 + 46 + 0) * 256 +
  5456                           ;main.c: 2460: Read_b_eep(0x43 + 46 + 1);
  5457  004AFE  0E00               	movlw	0
  5458  004B00  6E17               	movwf	?_Read_b_eep+1,c
  5459  004B02  0E72               	movlw	114
  5460  004B04  6E16               	movwf	?_Read_b_eep,c
  5461  004B06  ECD8  F037         	call	_Read_b_eep	;wreg free
  5462  004B0A  6E1A               	movwf	??_doActionPulse& (0+255),c
  5463  004B0C  0E00               	movlw	0
  5464  004B0E  6E17               	movwf	?_Read_b_eep+1,c
  5465  004B10  0E71               	movlw	113
  5466  004B12  6E16               	movwf	?_Read_b_eep,c
  5467  004B14  ECD8  F037         	call	_Read_b_eep	;wreg free
  5468  004B18  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5469  004B1A  501B               	movf	??_doActionPulse+1,w,c
  5470  004B1C  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5471  004B1E  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5472  004B20  501A               	movf	??_doActionPulse,w,c
  5473  004B22  241C               	addwf	??_doActionPulse+2,w,c
  5474  004B24  0101               	movlb	1	; () banked
  5475  004B26  0101               	movlb	1	; () banked
  5476  004B28  6F26               	movwf	_channel_pulse_timer& (0+255),b
  5477  004B2A  0E00               	movlw	0
  5478  004B2C  201D               	addwfc	??_doActionPulse+3,w,c
  5479  004B2E  0101               	movlb	1	; () banked
  5480  004B30  6F27               	movwf	(_channel_pulse_timer+1)& (0+255),b
  5481                           
  5482                           ;main.c: 2462: break;
  5483  004B32  D136               	goto	l11220
  5484  004B34                     l842:
  5485                           
  5486                           ;main.c: 2465: LATBbits.LATB1 = 0;
  5487  004B34  928A               	bcf	3978,1,c	;volatile
  5488                           
  5489                           ;main.c: 2466: channel_pulse_flags |= 0x02;
  5490  004B36  0100               	movlb	0	; () banked
  5491  004B38  0100               	movlb	0	; () banked
  5492  004B3A  83D5               	bsf	_channel_pulse_flags& (0+255),1,b
  5493                           
  5494                           ; BSR set to: 0
  5495                           ;main.c: 2467: channel_pulse_timer[ 1 ] =
  5496                           ;main.c: 2468: Read_b_eep(0x43 + 46 + 2) * 256 +
  5497                           ;main.c: 2470: Read_b_eep(0x43 + 46 + 3);
  5498  004B3C  0E00               	movlw	0
  5499  004B3E  6E17               	movwf	?_Read_b_eep+1,c
  5500  004B40  0E74               	movlw	116
  5501  004B42  6E16               	movwf	?_Read_b_eep,c
  5502  004B44  ECD8  F037         	call	_Read_b_eep	;wreg free
  5503  004B48  6E1A               	movwf	??_doActionPulse& (0+255),c
  5504  004B4A  0E00               	movlw	0
  5505  004B4C  6E17               	movwf	?_Read_b_eep+1,c
  5506  004B4E  0E73               	movlw	115
  5507  004B50  6E16               	movwf	?_Read_b_eep,c
  5508  004B52  ECD8  F037         	call	_Read_b_eep	;wreg free
  5509  004B56  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5510  004B58  501B               	movf	??_doActionPulse+1,w,c
  5511  004B5A  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5512  004B5C  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5513  004B5E  501A               	movf	??_doActionPulse,w,c
  5514  004B60  241C               	addwf	??_doActionPulse+2,w,c
  5515  004B62  0101               	movlb	1	; () banked
  5516  004B64  0101               	movlb	1	; () banked
  5517  004B66  6F28               	movwf	(_channel_pulse_timer+2)& (0+255),b
  5518  004B68  0E00               	movlw	0
  5519  004B6A  201D               	addwfc	??_doActionPulse+3,w,c
  5520  004B6C  0101               	movlb	1	; () banked
  5521  004B6E  6F29               	movwf	(_channel_pulse_timer+3)& (0+255),b
  5522                           
  5523                           ;main.c: 2472: break;
  5524  004B70  D117               	goto	l11220
  5525  004B72                     l843:
  5526                           
  5527                           ;main.c: 2475: LATCbits.LATC3 = 0;
  5528  004B72  968B               	bcf	3979,3,c	;volatile
  5529                           
  5530                           ;main.c: 2476: channel_pulse_flags |= 0x04;
  5531  004B74  0100               	movlb	0	; () banked
  5532  004B76  0100               	movlb	0	; () banked
  5533  004B78  85D5               	bsf	_channel_pulse_flags& (0+255),2,b
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;main.c: 2477: channel_pulse_timer[ 2 ] =
  5537                           ;main.c: 2478: Read_b_eep(0x43 + 46 + 4) * 256 +
  5538                           ;main.c: 2480: Read_b_eep(0x43 + 46 + 5);
  5539  004B7A  0E00               	movlw	0
  5540  004B7C  6E17               	movwf	?_Read_b_eep+1,c
  5541  004B7E  0E76               	movlw	118
  5542  004B80  6E16               	movwf	?_Read_b_eep,c
  5543  004B82  ECD8  F037         	call	_Read_b_eep	;wreg free
  5544  004B86  6E1A               	movwf	??_doActionPulse& (0+255),c
  5545  004B88  0E00               	movlw	0
  5546  004B8A  6E17               	movwf	?_Read_b_eep+1,c
  5547  004B8C  0E75               	movlw	117
  5548  004B8E  6E16               	movwf	?_Read_b_eep,c
  5549  004B90  ECD8  F037         	call	_Read_b_eep	;wreg free
  5550  004B94  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5551  004B96  501B               	movf	??_doActionPulse+1,w,c
  5552  004B98  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5553  004B9A  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5554  004B9C  501A               	movf	??_doActionPulse,w,c
  5555  004B9E  241C               	addwf	??_doActionPulse+2,w,c
  5556  004BA0  0101               	movlb	1	; () banked
  5557  004BA2  0101               	movlb	1	; () banked
  5558  004BA4  6F2A               	movwf	(_channel_pulse_timer+4)& (0+255),b
  5559  004BA6  0E00               	movlw	0
  5560  004BA8  201D               	addwfc	??_doActionPulse+3,w,c
  5561  004BAA  0101               	movlb	1	; () banked
  5562  004BAC  6F2B               	movwf	(_channel_pulse_timer+5)& (0+255),b
  5563                           
  5564                           ;main.c: 2482: break;
  5565  004BAE  D0F8               	goto	l11220
  5566  004BB0                     l844:
  5567                           
  5568                           ;main.c: 2485: LATCbits.LATC4 = 0;
  5569  004BB0  988B               	bcf	3979,4,c	;volatile
  5570                           
  5571                           ;main.c: 2486: channel_pulse_flags |= 0x08;
  5572  004BB2  0100               	movlb	0	; () banked
  5573  004BB4  0100               	movlb	0	; () banked
  5574  004BB6  87D5               	bsf	_channel_pulse_flags& (0+255),3,b
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;main.c: 2487: channel_pulse_timer[ 3 ] =
  5578                           ;main.c: 2488: Read_b_eep(0x43 + 46 + 6) * 256 +
  5579                           ;main.c: 2490: Read_b_eep(0x43 + 46 + 7);
  5580  004BB8  0E00               	movlw	0
  5581  004BBA  6E17               	movwf	?_Read_b_eep+1,c
  5582  004BBC  0E78               	movlw	120
  5583  004BBE  6E16               	movwf	?_Read_b_eep,c
  5584  004BC0  ECD8  F037         	call	_Read_b_eep	;wreg free
  5585  004BC4  6E1A               	movwf	??_doActionPulse& (0+255),c
  5586  004BC6  0E00               	movlw	0
  5587  004BC8  6E17               	movwf	?_Read_b_eep+1,c
  5588  004BCA  0E77               	movlw	119
  5589  004BCC  6E16               	movwf	?_Read_b_eep,c
  5590  004BCE  ECD8  F037         	call	_Read_b_eep	;wreg free
  5591  004BD2  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5592  004BD4  501B               	movf	??_doActionPulse+1,w,c
  5593  004BD6  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5594  004BD8  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5595  004BDA  501A               	movf	??_doActionPulse,w,c
  5596  004BDC  241C               	addwf	??_doActionPulse+2,w,c
  5597  004BDE  0101               	movlb	1	; () banked
  5598  004BE0  0101               	movlb	1	; () banked
  5599  004BE2  6F2C               	movwf	(_channel_pulse_timer+6)& (0+255),b
  5600  004BE4  0E00               	movlw	0
  5601  004BE6  201D               	addwfc	??_doActionPulse+3,w,c
  5602  004BE8  0101               	movlb	1	; () banked
  5603  004BEA  6F2D               	movwf	(_channel_pulse_timer+7)& (0+255),b
  5604                           
  5605                           ;main.c: 2492: break;
  5606  004BEC  D0D9               	goto	l11220
  5607  004BEE                     l845:
  5608                           
  5609                           ;main.c: 2495: LATCbits.LATC5 = 0;
  5610  004BEE  9A8B               	bcf	3979,5,c	;volatile
  5611                           
  5612                           ;main.c: 2496: channel_pulse_flags |= 0x10;
  5613  004BF0  0100               	movlb	0	; () banked
  5614  004BF2  0100               	movlb	0	; () banked
  5615  004BF4  89D5               	bsf	_channel_pulse_flags& (0+255),4,b
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;main.c: 2497: channel_pulse_timer[ 4 ] =
  5619                           ;main.c: 2498: Read_b_eep(0x43 + 46 + 8) * 256 +
  5620                           ;main.c: 2500: Read_b_eep(0x43 + 46 + 9);
  5621  004BF6  0E00               	movlw	0
  5622  004BF8  6E17               	movwf	?_Read_b_eep+1,c
  5623  004BFA  0E7A               	movlw	122
  5624  004BFC  6E16               	movwf	?_Read_b_eep,c
  5625  004BFE  ECD8  F037         	call	_Read_b_eep	;wreg free
  5626  004C02  6E1A               	movwf	??_doActionPulse& (0+255),c
  5627  004C04  0E00               	movlw	0
  5628  004C06  6E17               	movwf	?_Read_b_eep+1,c
  5629  004C08  0E79               	movlw	121
  5630  004C0A  6E16               	movwf	?_Read_b_eep,c
  5631  004C0C  ECD8  F037         	call	_Read_b_eep	;wreg free
  5632  004C10  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5633  004C12  501B               	movf	??_doActionPulse+1,w,c
  5634  004C14  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5635  004C16  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5636  004C18  501A               	movf	??_doActionPulse,w,c
  5637  004C1A  241C               	addwf	??_doActionPulse+2,w,c
  5638  004C1C  0101               	movlb	1	; () banked
  5639  004C1E  0101               	movlb	1	; () banked
  5640  004C20  6F2E               	movwf	(_channel_pulse_timer+8)& (0+255),b
  5641  004C22  0E00               	movlw	0
  5642  004C24  201D               	addwfc	??_doActionPulse+3,w,c
  5643  004C26  0101               	movlb	1	; () banked
  5644  004C28  6F2F               	movwf	(_channel_pulse_timer+9)& (0+255),b
  5645                           
  5646                           ;main.c: 2502: break;
  5647  004C2A  D0BA               	goto	l11220
  5648  004C2C                     l846:
  5649                           
  5650                           ;main.c: 2505: LATCbits.LATC6 = 0;
  5651  004C2C  9C8B               	bcf	3979,6,c	;volatile
  5652                           
  5653                           ;main.c: 2506: channel_pulse_flags |= 0x20;
  5654  004C2E  0100               	movlb	0	; () banked
  5655  004C30  0100               	movlb	0	; () banked
  5656  004C32  8BD5               	bsf	_channel_pulse_flags& (0+255),5,b
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;main.c: 2507: channel_pulse_timer[ 5 ] =
  5660                           ;main.c: 2508: Read_b_eep(0x43 + 46 + 10) * 256 +
  5661                           ;main.c: 2510: Read_b_eep(0x43 + 46 + 11);
  5662  004C34  0E00               	movlw	0
  5663  004C36  6E17               	movwf	?_Read_b_eep+1,c
  5664  004C38  0E7C               	movlw	124
  5665  004C3A  6E16               	movwf	?_Read_b_eep,c
  5666  004C3C  ECD8  F037         	call	_Read_b_eep	;wreg free
  5667  004C40  6E1A               	movwf	??_doActionPulse& (0+255),c
  5668  004C42  0E00               	movlw	0
  5669  004C44  6E17               	movwf	?_Read_b_eep+1,c
  5670  004C46  0E7B               	movlw	123
  5671  004C48  6E16               	movwf	?_Read_b_eep,c
  5672  004C4A  ECD8  F037         	call	_Read_b_eep	;wreg free
  5673  004C4E  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5674  004C50  501B               	movf	??_doActionPulse+1,w,c
  5675  004C52  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5676  004C54  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5677  004C56  501A               	movf	??_doActionPulse,w,c
  5678  004C58  241C               	addwf	??_doActionPulse+2,w,c
  5679  004C5A  0101               	movlb	1	; () banked
  5680  004C5C  0101               	movlb	1	; () banked
  5681  004C5E  6F30               	movwf	(_channel_pulse_timer+10)& (0+255),b
  5682  004C60  0E00               	movlw	0
  5683  004C62  201D               	addwfc	??_doActionPulse+3,w,c
  5684  004C64  0101               	movlb	1	; () banked
  5685  004C66  6F31               	movwf	(_channel_pulse_timer+11)& (0+255),b
  5686                           
  5687                           ;main.c: 2512: break;
  5688  004C68  D09B               	goto	l11220
  5689  004C6A                     l847:
  5690                           
  5691                           ;main.c: 2515: LATCbits.LATC7 = 0;
  5692  004C6A  9E8B               	bcf	3979,7,c	;volatile
  5693                           
  5694                           ;main.c: 2516: channel_pulse_flags |= 0x40;
  5695  004C6C  0100               	movlb	0	; () banked
  5696  004C6E  0100               	movlb	0	; () banked
  5697  004C70  8DD5               	bsf	_channel_pulse_flags& (0+255),6,b
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;main.c: 2517: channel_pulse_timer[ 6 ] =
  5701                           ;main.c: 2518: Read_b_eep(0x43 + 46 + 12) * 256 +
  5702                           ;main.c: 2520: Read_b_eep(0x43 + 46 + 13);
  5703  004C72  0E00               	movlw	0
  5704  004C74  6E17               	movwf	?_Read_b_eep+1,c
  5705  004C76  0E7E               	movlw	126
  5706  004C78  6E16               	movwf	?_Read_b_eep,c
  5707  004C7A  ECD8  F037         	call	_Read_b_eep	;wreg free
  5708  004C7E  6E1A               	movwf	??_doActionPulse& (0+255),c
  5709  004C80  0E00               	movlw	0
  5710  004C82  6E17               	movwf	?_Read_b_eep+1,c
  5711  004C84  0E7D               	movlw	125
  5712  004C86  6E16               	movwf	?_Read_b_eep,c
  5713  004C88  ECD8  F037         	call	_Read_b_eep	;wreg free
  5714  004C8C  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5715  004C8E  501B               	movf	??_doActionPulse+1,w,c
  5716  004C90  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5717  004C92  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5718  004C94  501A               	movf	??_doActionPulse,w,c
  5719  004C96  241C               	addwf	??_doActionPulse+2,w,c
  5720  004C98  0101               	movlb	1	; () banked
  5721  004C9A  0101               	movlb	1	; () banked
  5722  004C9C  6F32               	movwf	(_channel_pulse_timer+12)& (0+255),b
  5723  004C9E  0E00               	movlw	0
  5724  004CA0  201D               	addwfc	??_doActionPulse+3,w,c
  5725  004CA2  0101               	movlb	1	; () banked
  5726  004CA4  6F33               	movwf	(_channel_pulse_timer+13)& (0+255),b
  5727                           
  5728                           ;main.c: 2522: break;
  5729  004CA6  D07C               	goto	l11220
  5730  004CA8                     l848:
  5731                           
  5732                           ;main.c: 2525: LATAbits.LATA2 = 0;
  5733  004CA8  9489               	bcf	3977,2,c	;volatile
  5734                           
  5735                           ;main.c: 2526: channel_pulse_flags |= 0x40;
  5736  004CAA  0100               	movlb	0	; () banked
  5737  004CAC  0100               	movlb	0	; () banked
  5738  004CAE  8DD5               	bsf	_channel_pulse_flags& (0+255),6,b
  5739                           
  5740                           ; BSR set to: 0
  5741                           ;main.c: 2527: channel_pulse_timer[ 7 ] =
  5742                           ;main.c: 2528: Read_b_eep(0x43 + 46 + 14) * 256 +
  5743                           ;main.c: 2530: Read_b_eep(0x43 + 46 + 15);
  5744  004CB0  0E00               	movlw	0
  5745  004CB2  6E17               	movwf	?_Read_b_eep+1,c
  5746  004CB4  0E80               	movlw	128
  5747  004CB6  6E16               	movwf	?_Read_b_eep,c
  5748  004CB8  ECD8  F037         	call	_Read_b_eep	;wreg free
  5749  004CBC  6E1A               	movwf	??_doActionPulse& (0+255),c
  5750  004CBE  0E00               	movlw	0
  5751  004CC0  6E17               	movwf	?_Read_b_eep+1,c
  5752  004CC2  0E7F               	movlw	127
  5753  004CC4  6E16               	movwf	?_Read_b_eep,c
  5754  004CC6  ECD8  F037         	call	_Read_b_eep	;wreg free
  5755  004CCA  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5756  004CCC  501B               	movf	??_doActionPulse+1,w,c
  5757  004CCE  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5758  004CD0  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5759  004CD2  501A               	movf	??_doActionPulse,w,c
  5760  004CD4  241C               	addwf	??_doActionPulse+2,w,c
  5761  004CD6  0101               	movlb	1	; () banked
  5762  004CD8  0101               	movlb	1	; () banked
  5763  004CDA  6F34               	movwf	(_channel_pulse_timer+14)& (0+255),b
  5764  004CDC  0E00               	movlw	0
  5765  004CDE  201D               	addwfc	??_doActionPulse+3,w,c
  5766  004CE0  0101               	movlb	1	; () banked
  5767  004CE2  6F35               	movwf	(_channel_pulse_timer+15)& (0+255),b
  5768                           
  5769                           ;main.c: 2532: break;
  5770  004CE4  D05D               	goto	l11220
  5771  004CE6                     l849:
  5772                           
  5773                           ;main.c: 2535: LATAbits.LATA2 = 0;
  5774  004CE6  9489               	bcf	3977,2,c	;volatile
  5775                           
  5776                           ;main.c: 2536: channel_pulse_flags |= 0x40;
  5777  004CE8  0100               	movlb	0	; () banked
  5778  004CEA  0100               	movlb	0	; () banked
  5779  004CEC  8DD5               	bsf	_channel_pulse_flags& (0+255),6,b
  5780                           
  5781                           ; BSR set to: 0
  5782                           ;main.c: 2537: channel_pulse_timer[ 8 ] =
  5783                           ;main.c: 2538: Read_b_eep(0x43 + 46 + 16) * 256 +
  5784                           ;main.c: 2540: Read_b_eep(0x43 + 46 + 17);
  5785  004CEE  0E00               	movlw	0
  5786  004CF0  6E17               	movwf	?_Read_b_eep+1,c
  5787  004CF2  0E82               	movlw	130
  5788  004CF4  6E16               	movwf	?_Read_b_eep,c
  5789  004CF6  ECD8  F037         	call	_Read_b_eep	;wreg free
  5790  004CFA  6E1A               	movwf	??_doActionPulse& (0+255),c
  5791  004CFC  0E00               	movlw	0
  5792  004CFE  6E17               	movwf	?_Read_b_eep+1,c
  5793  004D00  0E81               	movlw	129
  5794  004D02  6E16               	movwf	?_Read_b_eep,c
  5795  004D04  ECD8  F037         	call	_Read_b_eep	;wreg free
  5796  004D08  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5797  004D0A  501B               	movf	??_doActionPulse+1,w,c
  5798  004D0C  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5799  004D0E  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5800  004D10  501A               	movf	??_doActionPulse,w,c
  5801  004D12  241C               	addwf	??_doActionPulse+2,w,c
  5802  004D14  0101               	movlb	1	; () banked
  5803  004D16  0101               	movlb	1	; () banked
  5804  004D18  6F36               	movwf	(_channel_pulse_timer+16)& (0+255),b
  5805  004D1A  0E00               	movlw	0
  5806  004D1C  201D               	addwfc	??_doActionPulse+3,w,c
  5807  004D1E  0101               	movlb	1	; () banked
  5808  004D20  6F37               	movwf	(_channel_pulse_timer+17)& (0+255),b
  5809                           
  5810                           ;main.c: 2542: break;
  5811  004D22  D03E               	goto	l11220
  5812  004D24                     l850:
  5813                           
  5814                           ;main.c: 2545: LATAbits.LATA2 = 0;
  5815  004D24  9489               	bcf	3977,2,c	;volatile
  5816                           
  5817                           ;main.c: 2546: channel_pulse_flags |= 0x40;
  5818  004D26  0100               	movlb	0	; () banked
  5819  004D28  0100               	movlb	0	; () banked
  5820  004D2A  8DD5               	bsf	_channel_pulse_flags& (0+255),6,b
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;main.c: 2547: channel_pulse_timer[ 9 ] =
  5824                           ;main.c: 2548: Read_b_eep(0x43 + 46 + 18) * 256 +
  5825                           ;main.c: 2550: Read_b_eep(0x43 + 46 + 19);
  5826  004D2C  0E00               	movlw	0
  5827  004D2E  6E17               	movwf	?_Read_b_eep+1,c
  5828  004D30  0E84               	movlw	132
  5829  004D32  6E16               	movwf	?_Read_b_eep,c
  5830  004D34  ECD8  F037         	call	_Read_b_eep	;wreg free
  5831  004D38  6E1A               	movwf	??_doActionPulse& (0+255),c
  5832  004D3A  0E00               	movlw	0
  5833  004D3C  6E17               	movwf	?_Read_b_eep+1,c
  5834  004D3E  0E83               	movlw	131
  5835  004D40  6E16               	movwf	?_Read_b_eep,c
  5836  004D42  ECD8  F037         	call	_Read_b_eep	;wreg free
  5837  004D46  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5838  004D48  501B               	movf	??_doActionPulse+1,w,c
  5839  004D4A  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5840  004D4C  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5841  004D4E  501A               	movf	??_doActionPulse,w,c
  5842  004D50  241C               	addwf	??_doActionPulse+2,w,c
  5843  004D52  0101               	movlb	1	; () banked
  5844  004D54  0101               	movlb	1	; () banked
  5845  004D56  6F38               	movwf	(_channel_pulse_timer+18)& (0+255),b
  5846  004D58  0E00               	movlw	0
  5847  004D5A  201D               	addwfc	??_doActionPulse+3,w,c
  5848  004D5C  0101               	movlb	1	; () banked
  5849  004D5E  6F39               	movwf	(_channel_pulse_timer+19)& (0+255),b
  5850                           
  5851                           ;main.c: 2552: break;
  5852  004D60  D01F               	goto	l11220
  5853  004D62                     l11218:
  5854  004D62  501F               	movf	doActionPulse@i,w,c
  5855                           
  5856                           ; Switch size 1, requested type "space"
  5857                           ; Number of cases is 10, Range of values is 0 to 9
  5858                           ; switch strategies available:
  5859                           ; Name         Instructions Cycles
  5860                           ; simple_byte           31    16 (average)
  5861                           ;	Chosen strategy is simple_byte
  5862  004D64  0A00               	xorlw	0	; case 0
  5863  004D66  B4D8               	btfsc	status,2,c
  5864  004D68  D6C6               	goto	l840
  5865  004D6A  0A01               	xorlw	1	; case 1
  5866  004D6C  B4D8               	btfsc	status,2,c
  5867  004D6E  D6E2               	goto	l842
  5868  004D70  0A03               	xorlw	3	; case 2
  5869  004D72  B4D8               	btfsc	status,2,c
  5870  004D74  D6FE               	goto	l843
  5871  004D76  0A01               	xorlw	1	; case 3
  5872  004D78  B4D8               	btfsc	status,2,c
  5873  004D7A  D71A               	goto	l844
  5874  004D7C  0A07               	xorlw	7	; case 4
  5875  004D7E  B4D8               	btfsc	status,2,c
  5876  004D80  D736               	goto	l845
  5877  004D82  0A01               	xorlw	1	; case 5
  5878  004D84  B4D8               	btfsc	status,2,c
  5879  004D86  D752               	goto	l846
  5880  004D88  0A03               	xorlw	3	; case 6
  5881  004D8A  B4D8               	btfsc	status,2,c
  5882  004D8C  D76E               	goto	l847
  5883  004D8E  0A01               	xorlw	1	; case 7
  5884  004D90  B4D8               	btfsc	status,2,c
  5885  004D92  D78A               	goto	l848
  5886  004D94  0A0F               	xorlw	15	; case 8
  5887  004D96  B4D8               	btfsc	status,2,c
  5888  004D98  D7A6               	goto	l849
  5889  004D9A  0A01               	xorlw	1	; case 9
  5890  004D9C  B4D8               	btfsc	status,2,c
  5891  004D9E  D7C2               	goto	l850
  5892  004DA0                     l11220:
  5893  004DA0  2A1F               	incf	doActionPulse@i,f,c
  5894  004DA2                     L60:
  5895  004DA2  0E07               	movlw	7
  5896  004DA4  641F               	cpfsgt	doActionPulse@i,c
  5897  004DA6  D67D               	goto	l11162
  5898  004DA8  0012               	return	
  5899  004DAA                     __end_of_doActionPulse:
  5900                           	opt stack 0
  5901                           tblptru	equ	0xFF8
  5902                           prodh	equ	0xFF4
  5903                           prodl	equ	0xFF3
  5904                           postinc0	equ	0xFEE
  5905                           wreg	equ	0xFE8
  5906                           postinc2	equ	0xFDE
  5907                           postdec2	equ	0xFDD
  5908                           fsr2h	equ	0xFDA
  5909                           fsr2l	equ	0xFD9
  5910                           status	equ	0xFD8
  5911                           
  5912 ;; *************** function _doActionOn *****************
  5913 ;; Defined at:
  5914 ;;		line 2187 in file "../main.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  dmflags         1   66[BANK0 ] unsigned char 
  5917 ;;  arg             1   67[BANK0 ] unsigned char 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;  i               1   73[BANK0 ] unsigned char 
  5920 ;;  val             1   72[BANK0 ] unsigned char 
  5921 ;; Return value:  Size  Location     Type
  5922 ;;		None               void
  5923 ;; Registers used:
  5924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5930 ;;      Params:         0       2       0       0       0       0       0
  5931 ;;      Locals:         0       2       0       0       0       0       0
  5932 ;;      Temps:          0       4       0       0       0       0       0
  5933 ;;      Totals:         0       8       0       0       0       0       0
  5934 ;;Total ram usage:        8 bytes
  5935 ;; Hardware stack levels used:    1
  5936 ;; Hardware stack levels required when called:    7
  5937 ;; This function calls:
  5938 ;;		_Read_b_eep
  5939 ;;		_SendInformationEvent
  5940 ;; This function is called by:
  5941 ;;		_doDM
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text12
  5946  003D4C                     __ptext12:
  5947                           	opt stack 0
  5948  003D4C                     _doActionOn:
  5949                           	opt stack 21
  5950                           
  5951                           ;main.c: 2189: unsigned char i;
  5952                           ;main.c: 2190: unsigned char val;
  5953                           ;main.c: 2192: for (i = 0; i < 8; i++) {
  5954                           
  5955                           ;incstack = 0
  5956                           ;incstack = 0
  5957  003D4C  0100               	movlb	0	; () banked
  5958  003D4E  6FA4               	movwf	??_doActionOn& (0+255),b
  5959  003D50  0E00               	movlw	0
  5960  003D52  0100               	movlb	0	; () banked
  5961  003D54  0100               	movlb	0	; () banked
  5962  003D56  6FA9               	movwf	doActionOn@i& (0+255),b
  5963  003D58  0100               	movlb	0	; () banked
  5964  003D5A  51A4               	movf	??_doActionOn& (0+255),w,b
  5965  003D5C  D249               	goto	L61
  5966  003D5E                     l11092:
  5967                           
  5968                           ; BSR set to: 0
  5969                           ;main.c: 2195: if ( !( arg & ( 1 << i ) ) ) continue;
  5970  003D5E  C0A9  F0A4         	movff	doActionOn@i,??_doActionOn
  5971  003D62  0E01               	movlw	1
  5972  003D64  0100               	movlb	0	; () banked
  5973  003D66  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  5974  003D68  0100               	movlb	0	; () banked
  5975  003D6A  2BA4               	incf	??_doActionOn& (0+255),f,b
  5976  003D6C  D003               	goto	u13314
  5977  003D6E                     u13315:
  5978  003D6E  0100               	movlb	0	; () banked
  5979  003D70  90D8               	bcf	status,0,c
  5980  003D72  37A5               	rlcf	(??_doActionOn+1)& (0+255),f,b
  5981  003D74                     u13314:
  5982  003D74  0100               	movlb	0	; () banked
  5983  003D76  2FA4               	decfsz	??_doActionOn& (0+255),f,b
  5984  003D78  D7FA               	goto	u13315
  5985  003D7A  0100               	movlb	0	; () banked
  5986  003D7C  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  5987  003D7E  0100               	movlb	0	; () banked
  5988  003D80  0100               	movlb	0	; () banked
  5989  003D82  15A3               	andwf	doActionOn@arg& (0+255),w,b
  5990  003D84  0900               	iorlw	0
  5991  003D86  B4D8               	btfsc	status,2,c
  5992  003D88  D230               	goto	l11152
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;main.c: 2198: if ( dmflags & 0x08 ) {
  5996                           
  5997                           ; BSR set to: 0
  5998  003D8A  0100               	movlb	0	; () banked
  5999  003D8C  0100               	movlb	0	; () banked
  6000  003D8E  A7A2               	btfss	doActionOn@dmflags& (0+255),3,b
  6001  003D90  D00F               	goto	l11100
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;main.c: 2199: if ( vscp_imsg.data[ 2 ] != Read_b_eep(0x43 + 3 + i) ) {
  6005  003D92  0E46               	movlw	70
  6006  003D94  0100               	movlb	0	; () banked
  6007  003D96  0100               	movlb	0	; () banked
  6008  003D98  25A9               	addwf	doActionOn@i& (0+255),w,b
  6009  003D9A  6E16               	movwf	?_Read_b_eep,c
  6010  003D9C  6A17               	clrf	?_Read_b_eep+1,c
  6011  003D9E  0E00               	movlw	0
  6012  003DA0  2217               	addwfc	?_Read_b_eep+1,f,c
  6013  003DA2  ECD8  F037         	call	_Read_b_eep	;wreg free
  6014  003DA6  0100               	movlb	0	; () banked
  6015  003DA8  0100               	movlb	0	; () banked
  6016  003DAA  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  6017  003DAC  A4D8               	btfss	status,2,c
  6018  003DAE  D21D               	goto	l11152
  6019  003DB0                     l11100:
  6020                           
  6021                           ; BSR set to: 0
  6022                           ;main.c: 2203: }
  6023                           ;main.c: 2204: }
  6024                           ;main.c: 2206: val = Read_b_eep(0x43 + 24 + i);
  6025  003DB0  0E5B               	movlw	91
  6026  003DB2  0100               	movlb	0	; () banked
  6027  003DB4  0100               	movlb	0	; () banked
  6028  003DB6  25A9               	addwf	doActionOn@i& (0+255),w,b
  6029  003DB8  6E16               	movwf	?_Read_b_eep,c
  6030  003DBA  6A17               	clrf	?_Read_b_eep+1,c
  6031  003DBC  0E00               	movlw	0
  6032  003DBE  2217               	addwfc	?_Read_b_eep+1,f,c
  6033  003DC0  ECD8  F037         	call	_Read_b_eep	;wreg free
  6034  003DC4  0100               	movlb	0	; () banked
  6035  003DC6  0100               	movlb	0	; () banked
  6036  003DC8  6FA8               	movwf	doActionOn@val& (0+255),b
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;main.c: 2209: if ( !( val & 0x80 ) ) continue;
  6040  003DCA  0100               	movlb	0	; () banked
  6041  003DCC  0100               	movlb	0	; () banked
  6042  003DCE  AFA8               	btfss	doActionOn@val& (0+255),7,b
  6043  003DD0  D20C               	goto	l11152
  6044  003DD2  D1D6               	goto	l11148
  6045  003DD4                     l784:
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;main.c: 2214: LATBbits.LATB0 = 1;
  6049  003DD4  808A               	bsf	3978,0,c	;volatile
  6050                           
  6051                           ; BSR set to: 0
  6052                           ;main.c: 2216: if (Read_b_eep(0x43 + 24) & 0x04 ) {
  6053  003DD6  0E00               	movlw	0
  6054  003DD8  6E17               	movwf	?_Read_b_eep+1,c
  6055  003DDA  0E5B               	movlw	91
  6056  003DDC  6E16               	movwf	?_Read_b_eep,c
  6057  003DDE  ECD8  F037         	call	_Read_b_eep	;wreg free
  6058  003DE2  0100               	movlb	0	; () banked
  6059  003DE4  6FA4               	movwf	??_doActionOn& (0+255),b
  6060  003DE6  0100               	movlb	0	; () banked
  6061  003DE8  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6062  003DEA  D1EB               	goto	l786
  6063                           
  6064                           ; BSR set to: 0
  6065                           ;main.c: 2217: channel_protection_timer[ 0 ] =
  6066                           ;main.c: 2218: Read_b_eep(0x43 + 46 + 20) * 256 +
  6067                           ;main.c: 2220: Read_b_eep(0x43 + 46 + 21);
  6068  003DEC  0E00               	movlw	0
  6069  003DEE  6E17               	movwf	?_Read_b_eep+1,c
  6070  003DF0  0E86               	movlw	134
  6071  003DF2  6E16               	movwf	?_Read_b_eep,c
  6072  003DF4  ECD8  F037         	call	_Read_b_eep	;wreg free
  6073  003DF8  0100               	movlb	0	; () banked
  6074  003DFA  6FA4               	movwf	??_doActionOn& (0+255),b
  6075  003DFC  0E00               	movlw	0
  6076  003DFE  6E17               	movwf	?_Read_b_eep+1,c
  6077  003E00  0E85               	movlw	133
  6078  003E02  6E16               	movwf	?_Read_b_eep,c
  6079  003E04  ECD8  F037         	call	_Read_b_eep	;wreg free
  6080  003E08  0100               	movlb	0	; () banked
  6081  003E0A  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6082  003E0C  0100               	movlb	0	; () banked
  6083  003E0E  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6084  003E10  0100               	movlb	0	; () banked
  6085  003E12  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6086  003E14  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6087  003E16  0100               	movlb	0	; () banked
  6088  003E18  51A4               	movf	??_doActionOn& (0+255),w,b
  6089  003E1A  0100               	movlb	0	; () banked
  6090  003E1C  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6091  003E1E  0100               	movlb	0	; () banked
  6092  003E20  0100               	movlb	0	; () banked
  6093  003E22  6FBD               	movwf	_channel_protection_timer& (0+255),b
  6094  003E24  0100               	movlb	0	; () banked
  6095  003E26  0E00               	movlw	0
  6096  003E28  0100               	movlb	0	; () banked
  6097  003E2A  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6098  003E2C  0100               	movlb	0	; () banked
  6099  003E2E  6FBE               	movwf	(_channel_protection_timer+1)& (0+255),b
  6100  003E30  D1C8               	goto	l786
  6101  003E32                     l787:
  6102                           
  6103                           ; BSR set to: 0
  6104                           ;main.c: 2226: LATBbits.LATB1 = 1;
  6105  003E32  828A               	bsf	3978,1,c	;volatile
  6106                           
  6107                           ; BSR set to: 0
  6108                           ;main.c: 2228: if (Read_b_eep(0x43 + 25) & 0x04 ) {
  6109  003E34  0E00               	movlw	0
  6110  003E36  6E17               	movwf	?_Read_b_eep+1,c
  6111  003E38  0E5C               	movlw	92
  6112  003E3A  6E16               	movwf	?_Read_b_eep,c
  6113  003E3C  ECD8  F037         	call	_Read_b_eep	;wreg free
  6114  003E40  0100               	movlb	0	; () banked
  6115  003E42  6FA4               	movwf	??_doActionOn& (0+255),b
  6116  003E44  0100               	movlb	0	; () banked
  6117  003E46  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6118  003E48  D1BC               	goto	l786
  6119                           
  6120                           ; BSR set to: 0
  6121                           ;main.c: 2229: channel_protection_timer[ 1 ] =
  6122                           ;main.c: 2230: Read_b_eep(0x43 + 46 + 22) * 256 +
  6123                           ;main.c: 2232: Read_b_eep(0x43 + 46 + 23);
  6124  003E4A  0E00               	movlw	0
  6125  003E4C  6E17               	movwf	?_Read_b_eep+1,c
  6126  003E4E  0E88               	movlw	136
  6127  003E50  6E16               	movwf	?_Read_b_eep,c
  6128  003E52  ECD8  F037         	call	_Read_b_eep	;wreg free
  6129  003E56  0100               	movlb	0	; () banked
  6130  003E58  6FA4               	movwf	??_doActionOn& (0+255),b
  6131  003E5A  0E00               	movlw	0
  6132  003E5C  6E17               	movwf	?_Read_b_eep+1,c
  6133  003E5E  0E87               	movlw	135
  6134  003E60  6E16               	movwf	?_Read_b_eep,c
  6135  003E62  ECD8  F037         	call	_Read_b_eep	;wreg free
  6136  003E66  0100               	movlb	0	; () banked
  6137  003E68  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6138  003E6A  0100               	movlb	0	; () banked
  6139  003E6C  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6140  003E6E  0100               	movlb	0	; () banked
  6141  003E70  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6142  003E72  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6143  003E74  0100               	movlb	0	; () banked
  6144  003E76  51A4               	movf	??_doActionOn& (0+255),w,b
  6145  003E78  0100               	movlb	0	; () banked
  6146  003E7A  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6147  003E7C  0100               	movlb	0	; () banked
  6148  003E7E  0100               	movlb	0	; () banked
  6149  003E80  6FBF               	movwf	(_channel_protection_timer+2)& (0+255),b
  6150  003E82  0100               	movlb	0	; () banked
  6151  003E84  0E00               	movlw	0
  6152  003E86  0100               	movlb	0	; () banked
  6153  003E88  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6154  003E8A  0100               	movlb	0	; () banked
  6155  003E8C  6FC0               	movwf	(_channel_protection_timer+3)& (0+255),b
  6156  003E8E  D199               	goto	l786
  6157  003E90                     l789:
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;main.c: 2238: LATCbits.LATC3 = 1;
  6161  003E90  868B               	bsf	3979,3,c	;volatile
  6162                           
  6163                           ; BSR set to: 0
  6164                           ;main.c: 2240: if (Read_b_eep(0x43 + 26) & 0x04 ) {
  6165  003E92  0E00               	movlw	0
  6166  003E94  6E17               	movwf	?_Read_b_eep+1,c
  6167  003E96  0E5D               	movlw	93
  6168  003E98  6E16               	movwf	?_Read_b_eep,c
  6169  003E9A  ECD8  F037         	call	_Read_b_eep	;wreg free
  6170  003E9E  0100               	movlb	0	; () banked
  6171  003EA0  6FA4               	movwf	??_doActionOn& (0+255),b
  6172  003EA2  0100               	movlb	0	; () banked
  6173  003EA4  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6174  003EA6  D18D               	goto	l786
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;main.c: 2241: channel_protection_timer[ 2 ] =
  6178                           ;main.c: 2242: Read_b_eep(0x43 + 46 + 24) * 256 +
  6179                           ;main.c: 2244: Read_b_eep(0x43 + 46 + 25);
  6180  003EA8  0E00               	movlw	0
  6181  003EAA  6E17               	movwf	?_Read_b_eep+1,c
  6182  003EAC  0E8A               	movlw	138
  6183  003EAE  6E16               	movwf	?_Read_b_eep,c
  6184  003EB0  ECD8  F037         	call	_Read_b_eep	;wreg free
  6185  003EB4  0100               	movlb	0	; () banked
  6186  003EB6  6FA4               	movwf	??_doActionOn& (0+255),b
  6187  003EB8  0E00               	movlw	0
  6188  003EBA  6E17               	movwf	?_Read_b_eep+1,c
  6189  003EBC  0E89               	movlw	137
  6190  003EBE  6E16               	movwf	?_Read_b_eep,c
  6191  003EC0  ECD8  F037         	call	_Read_b_eep	;wreg free
  6192  003EC4  0100               	movlb	0	; () banked
  6193  003EC6  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6194  003EC8  0100               	movlb	0	; () banked
  6195  003ECA  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6196  003ECC  0100               	movlb	0	; () banked
  6197  003ECE  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6198  003ED0  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6199  003ED2  0100               	movlb	0	; () banked
  6200  003ED4  51A4               	movf	??_doActionOn& (0+255),w,b
  6201  003ED6  0100               	movlb	0	; () banked
  6202  003ED8  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6203  003EDA  0100               	movlb	0	; () banked
  6204  003EDC  0100               	movlb	0	; () banked
  6205  003EDE  6FC1               	movwf	(_channel_protection_timer+4)& (0+255),b
  6206  003EE0  0100               	movlb	0	; () banked
  6207  003EE2  0E00               	movlw	0
  6208  003EE4  0100               	movlb	0	; () banked
  6209  003EE6  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6210  003EE8  0100               	movlb	0	; () banked
  6211  003EEA  6FC2               	movwf	(_channel_protection_timer+5)& (0+255),b
  6212  003EEC  D16A               	goto	l786
  6213  003EEE                     l791:
  6214                           
  6215                           ; BSR set to: 0
  6216                           ;main.c: 2250: LATCbits.LATC4 = 1;
  6217  003EEE  888B               	bsf	3979,4,c	;volatile
  6218                           
  6219                           ; BSR set to: 0
  6220                           ;main.c: 2252: if ( Read_b_eep(0x43 + 27) & 0x04 ) {
  6221  003EF0  0E00               	movlw	0
  6222  003EF2  6E17               	movwf	?_Read_b_eep+1,c
  6223  003EF4  0E5E               	movlw	94
  6224  003EF6  6E16               	movwf	?_Read_b_eep,c
  6225  003EF8  ECD8  F037         	call	_Read_b_eep	;wreg free
  6226  003EFC  0100               	movlb	0	; () banked
  6227  003EFE  6FA4               	movwf	??_doActionOn& (0+255),b
  6228  003F00  0100               	movlb	0	; () banked
  6229  003F02  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6230  003F04  D15E               	goto	l786
  6231                           
  6232                           ; BSR set to: 0
  6233                           ;main.c: 2253: channel_protection_timer[ 3 ] =
  6234                           ;main.c: 2254: Read_b_eep(0x43 + 46 + 26) * 256 +
  6235                           ;main.c: 2256: Read_b_eep(0x43 + 46 + 27);
  6236  003F06  0E00               	movlw	0
  6237  003F08  6E17               	movwf	?_Read_b_eep+1,c
  6238  003F0A  0E8C               	movlw	140
  6239  003F0C  6E16               	movwf	?_Read_b_eep,c
  6240  003F0E  ECD8  F037         	call	_Read_b_eep	;wreg free
  6241  003F12  0100               	movlb	0	; () banked
  6242  003F14  6FA4               	movwf	??_doActionOn& (0+255),b
  6243  003F16  0E00               	movlw	0
  6244  003F18  6E17               	movwf	?_Read_b_eep+1,c
  6245  003F1A  0E8B               	movlw	139
  6246  003F1C  6E16               	movwf	?_Read_b_eep,c
  6247  003F1E  ECD8  F037         	call	_Read_b_eep	;wreg free
  6248  003F22  0100               	movlb	0	; () banked
  6249  003F24  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6250  003F26  0100               	movlb	0	; () banked
  6251  003F28  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6252  003F2A  0100               	movlb	0	; () banked
  6253  003F2C  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6254  003F2E  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6255  003F30  0100               	movlb	0	; () banked
  6256  003F32  51A4               	movf	??_doActionOn& (0+255),w,b
  6257  003F34  0100               	movlb	0	; () banked
  6258  003F36  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6259  003F38  0100               	movlb	0	; () banked
  6260  003F3A  0100               	movlb	0	; () banked
  6261  003F3C  6FC3               	movwf	(_channel_protection_timer+6)& (0+255),b
  6262  003F3E  0100               	movlb	0	; () banked
  6263  003F40  0E00               	movlw	0
  6264  003F42  0100               	movlb	0	; () banked
  6265  003F44  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6266  003F46  0100               	movlb	0	; () banked
  6267  003F48  6FC4               	movwf	(_channel_protection_timer+7)& (0+255),b
  6268  003F4A  D13B               	goto	l786
  6269  003F4C                     l793:
  6270                           
  6271                           ; BSR set to: 0
  6272                           ;main.c: 2262: LATCbits.LATC5 = 1;
  6273  003F4C  8A8B               	bsf	3979,5,c	;volatile
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;main.c: 2264: if (Read_b_eep(0x43 + 28) & 0x04 ) {
  6277  003F4E  0E00               	movlw	0
  6278  003F50  6E17               	movwf	?_Read_b_eep+1,c
  6279  003F52  0E5F               	movlw	95
  6280  003F54  6E16               	movwf	?_Read_b_eep,c
  6281  003F56  ECD8  F037         	call	_Read_b_eep	;wreg free
  6282  003F5A  0100               	movlb	0	; () banked
  6283  003F5C  6FA4               	movwf	??_doActionOn& (0+255),b
  6284  003F5E  0100               	movlb	0	; () banked
  6285  003F60  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6286  003F62  D12F               	goto	l786
  6287                           
  6288                           ; BSR set to: 0
  6289                           ;main.c: 2265: channel_protection_timer[ 4 ] =
  6290                           ;main.c: 2266: Read_b_eep(0x43 + 46 + 28) * 256 +
  6291                           ;main.c: 2268: Read_b_eep(0x43 + 46 + 29);
  6292  003F64  0E00               	movlw	0
  6293  003F66  6E17               	movwf	?_Read_b_eep+1,c
  6294  003F68  0E8E               	movlw	142
  6295  003F6A  6E16               	movwf	?_Read_b_eep,c
  6296  003F6C  ECD8  F037         	call	_Read_b_eep	;wreg free
  6297  003F70  0100               	movlb	0	; () banked
  6298  003F72  6FA4               	movwf	??_doActionOn& (0+255),b
  6299  003F74  0E00               	movlw	0
  6300  003F76  6E17               	movwf	?_Read_b_eep+1,c
  6301  003F78  0E8D               	movlw	141
  6302  003F7A  6E16               	movwf	?_Read_b_eep,c
  6303  003F7C  ECD8  F037         	call	_Read_b_eep	;wreg free
  6304  003F80  0100               	movlb	0	; () banked
  6305  003F82  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6306  003F84  0100               	movlb	0	; () banked
  6307  003F86  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6308  003F88  0100               	movlb	0	; () banked
  6309  003F8A  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6310  003F8C  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6311  003F8E  0100               	movlb	0	; () banked
  6312  003F90  51A4               	movf	??_doActionOn& (0+255),w,b
  6313  003F92  0100               	movlb	0	; () banked
  6314  003F94  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6315  003F96  0100               	movlb	0	; () banked
  6316  003F98  0100               	movlb	0	; () banked
  6317  003F9A  6FC5               	movwf	(_channel_protection_timer+8)& (0+255),b
  6318  003F9C  0100               	movlb	0	; () banked
  6319  003F9E  0E00               	movlw	0
  6320  003FA0  0100               	movlb	0	; () banked
  6321  003FA2  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6322  003FA4  0100               	movlb	0	; () banked
  6323  003FA6  6FC6               	movwf	(_channel_protection_timer+9)& (0+255),b
  6324  003FA8  D10C               	goto	l786
  6325  003FAA                     l795:
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;main.c: 2274: LATCbits.LATC6 = 1;
  6329  003FAA  8C8B               	bsf	3979,6,c	;volatile
  6330                           
  6331                           ; BSR set to: 0
  6332                           ;main.c: 2276: if (Read_b_eep(0x43 + 29) & 0x04) {
  6333  003FAC  0E00               	movlw	0
  6334  003FAE  6E17               	movwf	?_Read_b_eep+1,c
  6335  003FB0  0E60               	movlw	96
  6336  003FB2  6E16               	movwf	?_Read_b_eep,c
  6337  003FB4  ECD8  F037         	call	_Read_b_eep	;wreg free
  6338  003FB8  0100               	movlb	0	; () banked
  6339  003FBA  6FA4               	movwf	??_doActionOn& (0+255),b
  6340  003FBC  0100               	movlb	0	; () banked
  6341  003FBE  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6342  003FC0  D100               	goto	l786
  6343                           
  6344                           ; BSR set to: 0
  6345                           ;main.c: 2277: channel_protection_timer[ 5 ] =
  6346                           ;main.c: 2278: Read_b_eep(0x43 + 46 + 30) * 256 +
  6347                           ;main.c: 2280: Read_b_eep(0x43 + 46 + 31);
  6348  003FC2  0E00               	movlw	0
  6349  003FC4  6E17               	movwf	?_Read_b_eep+1,c
  6350  003FC6  0E90               	movlw	144
  6351  003FC8  6E16               	movwf	?_Read_b_eep,c
  6352  003FCA  ECD8  F037         	call	_Read_b_eep	;wreg free
  6353  003FCE  0100               	movlb	0	; () banked
  6354  003FD0  6FA4               	movwf	??_doActionOn& (0+255),b
  6355  003FD2  0E00               	movlw	0
  6356  003FD4  6E17               	movwf	?_Read_b_eep+1,c
  6357  003FD6  0E8F               	movlw	143
  6358  003FD8  6E16               	movwf	?_Read_b_eep,c
  6359  003FDA  ECD8  F037         	call	_Read_b_eep	;wreg free
  6360  003FDE  0100               	movlb	0	; () banked
  6361  003FE0  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6362  003FE2  0100               	movlb	0	; () banked
  6363  003FE4  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6364  003FE6  0100               	movlb	0	; () banked
  6365  003FE8  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6366  003FEA  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6367  003FEC  0100               	movlb	0	; () banked
  6368  003FEE  51A4               	movf	??_doActionOn& (0+255),w,b
  6369  003FF0  0100               	movlb	0	; () banked
  6370  003FF2  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6371  003FF4  0100               	movlb	0	; () banked
  6372  003FF6  0100               	movlb	0	; () banked
  6373  003FF8  6FC7               	movwf	(_channel_protection_timer+10)& (0+255),b
  6374  003FFA  0100               	movlb	0	; () banked
  6375  003FFC  0E00               	movlw	0
  6376  003FFE  0100               	movlb	0	; () banked
  6377  004000  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6378  004002  0100               	movlb	0	; () banked
  6379  004004  6FC8               	movwf	(_channel_protection_timer+11)& (0+255),b
  6380  004006  D0DD               	goto	l786
  6381  004008                     l797:
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;main.c: 2286: LATCbits.LATC7 = 1;
  6385  004008  8E8B               	bsf	3979,7,c	;volatile
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;main.c: 2288: if ( Read_b_eep(0x43 + 30) & 0x04) {
  6389  00400A  0E00               	movlw	0
  6390  00400C  6E17               	movwf	?_Read_b_eep+1,c
  6391  00400E  0E61               	movlw	97
  6392  004010  6E16               	movwf	?_Read_b_eep,c
  6393  004012  ECD8  F037         	call	_Read_b_eep	;wreg free
  6394  004016  0100               	movlb	0	; () banked
  6395  004018  6FA4               	movwf	??_doActionOn& (0+255),b
  6396  00401A  0100               	movlb	0	; () banked
  6397  00401C  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6398  00401E  D0D1               	goto	l786
  6399                           
  6400                           ; BSR set to: 0
  6401                           ;main.c: 2289: channel_protection_timer[ 6 ] =
  6402                           ;main.c: 2290: Read_b_eep(0x43 + 46 + 32) * 256 +
  6403                           ;main.c: 2292: Read_b_eep(0x43 + 46 + 33);
  6404  004020  0E00               	movlw	0
  6405  004022  6E17               	movwf	?_Read_b_eep+1,c
  6406  004024  0E92               	movlw	146
  6407  004026  6E16               	movwf	?_Read_b_eep,c
  6408  004028  ECD8  F037         	call	_Read_b_eep	;wreg free
  6409  00402C  0100               	movlb	0	; () banked
  6410  00402E  6FA4               	movwf	??_doActionOn& (0+255),b
  6411  004030  0E00               	movlw	0
  6412  004032  6E17               	movwf	?_Read_b_eep+1,c
  6413  004034  0E91               	movlw	145
  6414  004036  6E16               	movwf	?_Read_b_eep,c
  6415  004038  ECD8  F037         	call	_Read_b_eep	;wreg free
  6416  00403C  0100               	movlb	0	; () banked
  6417  00403E  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6418  004040  0100               	movlb	0	; () banked
  6419  004042  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6420  004044  0100               	movlb	0	; () banked
  6421  004046  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6422  004048  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6423  00404A  0100               	movlb	0	; () banked
  6424  00404C  51A4               	movf	??_doActionOn& (0+255),w,b
  6425  00404E  0100               	movlb	0	; () banked
  6426  004050  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6427  004052  0100               	movlb	0	; () banked
  6428  004054  0100               	movlb	0	; () banked
  6429  004056  6FC9               	movwf	(_channel_protection_timer+12)& (0+255),b
  6430  004058  0100               	movlb	0	; () banked
  6431  00405A  0E00               	movlw	0
  6432  00405C  0100               	movlb	0	; () banked
  6433  00405E  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6434  004060  0100               	movlb	0	; () banked
  6435  004062  6FCA               	movwf	(_channel_protection_timer+13)& (0+255),b
  6436  004064  D0AE               	goto	l786
  6437  004066                     l799:
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;main.c: 2298: LATAbits.LATA2 = 1;
  6441  004066  8489               	bsf	3977,2,c	;volatile
  6442                           
  6443                           ; BSR set to: 0
  6444                           ;main.c: 2300: if ( Read_b_eep(0x43 + 31) & 0x04) {
  6445  004068  0E00               	movlw	0
  6446  00406A  6E17               	movwf	?_Read_b_eep+1,c
  6447  00406C  0E62               	movlw	98
  6448  00406E  6E16               	movwf	?_Read_b_eep,c
  6449  004070  ECD8  F037         	call	_Read_b_eep	;wreg free
  6450  004074  0100               	movlb	0	; () banked
  6451  004076  6FA4               	movwf	??_doActionOn& (0+255),b
  6452  004078  0100               	movlb	0	; () banked
  6453  00407A  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6454  00407C  D0A2               	goto	l786
  6455                           
  6456                           ; BSR set to: 0
  6457                           ;main.c: 2301: channel_protection_timer[ 7 ] =
  6458                           ;main.c: 2302: Read_b_eep(0x43 + 46 + 34) * 256 +
  6459                           ;main.c: 2304: Read_b_eep(0x43 + 46 + 35);
  6460  00407E  0E00               	movlw	0
  6461  004080  6E17               	movwf	?_Read_b_eep+1,c
  6462  004082  0E94               	movlw	148
  6463  004084  6E16               	movwf	?_Read_b_eep,c
  6464  004086  ECD8  F037         	call	_Read_b_eep	;wreg free
  6465  00408A  0100               	movlb	0	; () banked
  6466  00408C  6FA4               	movwf	??_doActionOn& (0+255),b
  6467  00408E  0E00               	movlw	0
  6468  004090  6E17               	movwf	?_Read_b_eep+1,c
  6469  004092  0E93               	movlw	147
  6470  004094  6E16               	movwf	?_Read_b_eep,c
  6471  004096  ECD8  F037         	call	_Read_b_eep	;wreg free
  6472  00409A  0100               	movlb	0	; () banked
  6473  00409C  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6474  00409E  0100               	movlb	0	; () banked
  6475  0040A0  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6476  0040A2  0100               	movlb	0	; () banked
  6477  0040A4  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6478  0040A6  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6479  0040A8  0100               	movlb	0	; () banked
  6480  0040AA  51A4               	movf	??_doActionOn& (0+255),w,b
  6481  0040AC  0100               	movlb	0	; () banked
  6482  0040AE  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6483  0040B0  0100               	movlb	0	; () banked
  6484  0040B2  0100               	movlb	0	; () banked
  6485  0040B4  6FCB               	movwf	(_channel_protection_timer+14)& (0+255),b
  6486  0040B6  0100               	movlb	0	; () banked
  6487  0040B8  0E00               	movlw	0
  6488  0040BA  0100               	movlb	0	; () banked
  6489  0040BC  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6490  0040BE  0100               	movlb	0	; () banked
  6491  0040C0  6FCC               	movwf	(_channel_protection_timer+15)& (0+255),b
  6492  0040C2  D07F               	goto	l786
  6493  0040C4                     l801:
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;main.c: 2310: LATAbits.LATA1 = 1;
  6497  0040C4  8289               	bsf	3977,1,c	;volatile
  6498                           
  6499                           ; BSR set to: 0
  6500                           ;main.c: 2312: if ( Read_b_eep(0x43 + 32) & 0x04) {
  6501  0040C6  0E00               	movlw	0
  6502  0040C8  6E17               	movwf	?_Read_b_eep+1,c
  6503  0040CA  0E63               	movlw	99
  6504  0040CC  6E16               	movwf	?_Read_b_eep,c
  6505  0040CE  ECD8  F037         	call	_Read_b_eep	;wreg free
  6506  0040D2  0100               	movlb	0	; () banked
  6507  0040D4  6FA4               	movwf	??_doActionOn& (0+255),b
  6508  0040D6  0100               	movlb	0	; () banked
  6509  0040D8  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6510  0040DA  D073               	goto	l786
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;main.c: 2313: channel_protection_timer[ 8 ] =
  6514                           ;main.c: 2314: Read_b_eep(0x43 + 46 + 36) * 256 +
  6515                           ;main.c: 2316: Read_b_eep(0x43 + 46 + 37);
  6516  0040DC  0E00               	movlw	0
  6517  0040DE  6E17               	movwf	?_Read_b_eep+1,c
  6518  0040E0  0E96               	movlw	150
  6519  0040E2  6E16               	movwf	?_Read_b_eep,c
  6520  0040E4  ECD8  F037         	call	_Read_b_eep	;wreg free
  6521  0040E8  0100               	movlb	0	; () banked
  6522  0040EA  6FA4               	movwf	??_doActionOn& (0+255),b
  6523  0040EC  0E00               	movlw	0
  6524  0040EE  6E17               	movwf	?_Read_b_eep+1,c
  6525  0040F0  0E95               	movlw	149
  6526  0040F2  6E16               	movwf	?_Read_b_eep,c
  6527  0040F4  ECD8  F037         	call	_Read_b_eep	;wreg free
  6528  0040F8  0100               	movlb	0	; () banked
  6529  0040FA  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6530  0040FC  0100               	movlb	0	; () banked
  6531  0040FE  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6532  004100  0100               	movlb	0	; () banked
  6533  004102  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6534  004104  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6535  004106  0100               	movlb	0	; () banked
  6536  004108  51A4               	movf	??_doActionOn& (0+255),w,b
  6537  00410A  0100               	movlb	0	; () banked
  6538  00410C  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6539  00410E  0100               	movlb	0	; () banked
  6540  004110  0100               	movlb	0	; () banked
  6541  004112  6FCD               	movwf	(_channel_protection_timer+16)& (0+255),b
  6542  004114  0100               	movlb	0	; () banked
  6543  004116  0E00               	movlw	0
  6544  004118  0100               	movlb	0	; () banked
  6545  00411A  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6546  00411C  0100               	movlb	0	; () banked
  6547  00411E  6FCE               	movwf	(_channel_protection_timer+17)& (0+255),b
  6548  004120  D050               	goto	l786
  6549  004122                     l803:
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;main.c: 2322: LATAbits.LATA2 = 1;
  6553  004122  8489               	bsf	3977,2,c	;volatile
  6554                           
  6555                           ; BSR set to: 0
  6556                           ;main.c: 2324: if ( Read_b_eep(0x43 + 33) & 0x04) {
  6557  004124  0E00               	movlw	0
  6558  004126  6E17               	movwf	?_Read_b_eep+1,c
  6559  004128  0E64               	movlw	100
  6560  00412A  6E16               	movwf	?_Read_b_eep,c
  6561  00412C  ECD8  F037         	call	_Read_b_eep	;wreg free
  6562  004130  0100               	movlb	0	; () banked
  6563  004132  6FA4               	movwf	??_doActionOn& (0+255),b
  6564  004134  0100               	movlb	0	; () banked
  6565  004136  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6566  004138  D044               	goto	l786
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;main.c: 2325: channel_protection_timer[ 9 ] =
  6570                           ;main.c: 2326: Read_b_eep(0x43 + 46 + 38) * 256 +
  6571                           ;main.c: 2328: Read_b_eep(0x43 + 46 + 39);
  6572  00413A  0E00               	movlw	0
  6573  00413C  6E17               	movwf	?_Read_b_eep+1,c
  6574  00413E  0E98               	movlw	152
  6575  004140  6E16               	movwf	?_Read_b_eep,c
  6576  004142  ECD8  F037         	call	_Read_b_eep	;wreg free
  6577  004146  0100               	movlb	0	; () banked
  6578  004148  6FA4               	movwf	??_doActionOn& (0+255),b
  6579  00414A  0E00               	movlw	0
  6580  00414C  6E17               	movwf	?_Read_b_eep+1,c
  6581  00414E  0E97               	movlw	151
  6582  004150  6E16               	movwf	?_Read_b_eep,c
  6583  004152  ECD8  F037         	call	_Read_b_eep	;wreg free
  6584  004156  0100               	movlb	0	; () banked
  6585  004158  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6586  00415A  0100               	movlb	0	; () banked
  6587  00415C  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6588  00415E  0100               	movlb	0	; () banked
  6589  004160  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6590  004162  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6591  004164  0100               	movlb	0	; () banked
  6592  004166  51A4               	movf	??_doActionOn& (0+255),w,b
  6593  004168  0100               	movlb	0	; () banked
  6594  00416A  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6595  00416C  0100               	movlb	0	; () banked
  6596  00416E  0100               	movlb	0	; () banked
  6597  004170  6FCF               	movwf	(_channel_protection_timer+18)& (0+255),b
  6598  004172  0100               	movlb	0	; () banked
  6599  004174  0E00               	movlw	0
  6600  004176  0100               	movlb	0	; () banked
  6601  004178  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6602  00417A  0100               	movlb	0	; () banked
  6603  00417C  6FD0               	movwf	(_channel_protection_timer+19)& (0+255),b
  6604  00417E  D021               	goto	l786
  6605  004180                     l11148:
  6606                           
  6607                           ; BSR set to: 0
  6608  004180  0100               	movlb	0	; () banked
  6609  004182  0100               	movlb	0	; () banked
  6610  004184  51A9               	movf	doActionOn@i& (0+255),w,b
  6611                           
  6612                           ; Switch size 1, requested type "space"
  6613                           ; Number of cases is 10, Range of values is 0 to 9
  6614                           ; switch strategies available:
  6615                           ; Name         Instructions Cycles
  6616                           ; simple_byte           31    16 (average)
  6617                           ;	Chosen strategy is simple_byte
  6618  004186  0A00               	xorlw	0	; case 0
  6619  004188  B4D8               	btfsc	status,2,c
  6620  00418A  D624               	goto	l784
  6621  00418C  0A01               	xorlw	1	; case 1
  6622  00418E  B4D8               	btfsc	status,2,c
  6623  004190  D650               	goto	l787
  6624  004192  0A03               	xorlw	3	; case 2
  6625  004194  B4D8               	btfsc	status,2,c
  6626  004196  D67C               	goto	l789
  6627  004198  0A01               	xorlw	1	; case 3
  6628  00419A  B4D8               	btfsc	status,2,c
  6629  00419C  D6A8               	goto	l791
  6630  00419E  0A07               	xorlw	7	; case 4
  6631  0041A0  B4D8               	btfsc	status,2,c
  6632  0041A2  D6D4               	goto	l793
  6633  0041A4  0A01               	xorlw	1	; case 5
  6634  0041A6  B4D8               	btfsc	status,2,c
  6635  0041A8  D700               	goto	l795
  6636  0041AA  0A03               	xorlw	3	; case 6
  6637  0041AC  B4D8               	btfsc	status,2,c
  6638  0041AE  D72C               	goto	l797
  6639  0041B0  0A01               	xorlw	1	; case 7
  6640  0041B2  B4D8               	btfsc	status,2,c
  6641  0041B4  D758               	goto	l799
  6642  0041B6  0A0F               	xorlw	15	; case 8
  6643  0041B8  B4D8               	btfsc	status,2,c
  6644  0041BA  D784               	goto	l801
  6645  0041BC  0A01               	xorlw	1	; case 9
  6646  0041BE  B4D8               	btfsc	status,2,c
  6647  0041C0  D7B0               	goto	l803
  6648  0041C2                     l786:
  6649                           
  6650                           ; BSR set to: 0
  6651                           ;main.c: 2336: if ( val & 0x08 ) {
  6652  0041C2  0100               	movlb	0	; () banked
  6653  0041C4  0100               	movlb	0	; () banked
  6654  0041C6  A7A8               	btfss	doActionOn@val& (0+255),3,b
  6655  0041C8  D010               	goto	l11152
  6656                           
  6657                           ; BSR set to: 0
  6658                           ;main.c: 2337: SendInformationEvent( i, 20, 3 );
  6659  0041CA  C0A9  F030         	movff	doActionOn@i,?_SendInformationEvent
  6660  0041CE  0100               	movlb	0	; () banked
  6661  0041D0  6FA4               	movwf	??_doActionOn& (0+255),b
  6662  0041D2  0E14               	movlw	20
  6663  0041D4  6E31               	movwf	?_SendInformationEvent+1,c
  6664  0041D6  0100               	movlb	0	; () banked
  6665  0041D8  51A4               	movf	??_doActionOn& (0+255),w,b
  6666  0041DA  0100               	movlb	0	; () banked
  6667  0041DC  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6668  0041DE  0E03               	movlw	3
  6669  0041E0  6E32               	movwf	?_SendInformationEvent+2,c
  6670  0041E2  0100               	movlb	0	; () banked
  6671  0041E4  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6672  0041E6  ECFC  F034         	call	_SendInformationEvent	;wreg free
  6673  0041EA                     l11152:
  6674  0041EA  0100               	movlb	0	; () banked
  6675  0041EC  0100               	movlb	0	; () banked
  6676  0041EE  2BA9               	incf	doActionOn@i& (0+255),f,b
  6677  0041F0                     L61:
  6678                           
  6679                           ; BSR set to: 0
  6680  0041F0  0E07               	movlw	7
  6681  0041F2  0100               	movlb	0	; () banked
  6682  0041F4  0100               	movlb	0	; () banked
  6683  0041F6  65A9               	cpfsgt	doActionOn@i& (0+255),b
  6684  0041F8  D5B2               	goto	l11092
  6685                           
  6686                           ; BSR set to: 0
  6687                           
  6688                           ; BSR set to: 0
  6689  0041FA  0012               	return	
  6690  0041FC                     __end_of_doActionOn:
  6691                           	opt stack 0
  6692                           tblptru	equ	0xFF8
  6693                           prodh	equ	0xFF4
  6694                           prodl	equ	0xFF3
  6695                           postinc0	equ	0xFEE
  6696                           wreg	equ	0xFE8
  6697                           postinc2	equ	0xFDE
  6698                           postdec2	equ	0xFDD
  6699                           fsr2h	equ	0xFDA
  6700                           fsr2l	equ	0xFD9
  6701                           status	equ	0xFD8
  6702                           
  6703 ;; *************** function _doActionOff *****************
  6704 ;; Defined at:
  6705 ;;		line 2348 in file "../main.c"
  6706 ;; Parameters:    Size  Location     Type
  6707 ;;  dmflags         1   66[BANK0 ] unsigned char 
  6708 ;;  arg             1   67[BANK0 ] unsigned char 
  6709 ;; Auto vars:     Size  Location     Type
  6710 ;;  i               1   71[BANK0 ] unsigned char 
  6711 ;;  val             1   70[BANK0 ] unsigned char 
  6712 ;; Return value:  Size  Location     Type
  6713 ;;		None               void
  6714 ;; Registers used:
  6715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6721 ;;      Params:         0       2       0       0       0       0       0
  6722 ;;      Locals:         0       2       0       0       0       0       0
  6723 ;;      Temps:          0       2       0       0       0       0       0
  6724 ;;      Totals:         0       6       0       0       0       0       0
  6725 ;;Total ram usage:        6 bytes
  6726 ;; Hardware stack levels used:    1
  6727 ;; Hardware stack levels required when called:    7
  6728 ;; This function calls:
  6729 ;;		_Read_b_eep
  6730 ;;		_SendInformationEvent
  6731 ;; This function is called by:
  6732 ;;		_doApplicationOneSecondWork
  6733 ;;		_doDM
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text13
  6738  0063DE                     __ptext13:
  6739                           	opt stack 0
  6740  0063DE                     _doActionOff:
  6741                           	opt stack 21
  6742                           
  6743                           ;main.c: 2350: unsigned char i;
  6744                           ;main.c: 2351: unsigned char val;
  6745                           ;main.c: 2353: for ( i = 0; i < 8; i++ ) {
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;incstack = 0
  6749                           ;incstack = 0
  6750  0063DE  0100               	movlb	0	; () banked
  6751  0063E0  6FA4               	movwf	??_doActionOff& (0+255),b
  6752  0063E2  0E00               	movlw	0
  6753  0063E4  0100               	movlb	0	; () banked
  6754  0063E6  0100               	movlb	0	; () banked
  6755  0063E8  6FA7               	movwf	doActionOff@i& (0+255),b
  6756  0063EA  0100               	movlb	0	; () banked
  6757  0063EC  51A4               	movf	??_doActionOff& (0+255),w,b
  6758  0063EE  D087               	goto	L62
  6759  0063F0                     l10246:
  6760                           
  6761                           ; BSR set to: 0
  6762                           ;main.c: 2356: if ( !( arg & ( 1 << i ) ) ) continue;
  6763  0063F0  C0A7  F0A4         	movff	doActionOff@i,??_doActionOff
  6764  0063F4  0E01               	movlw	1
  6765  0063F6  0100               	movlb	0	; () banked
  6766  0063F8  6FA5               	movwf	(??_doActionOff+1)& (0+255),b
  6767  0063FA  0100               	movlb	0	; () banked
  6768  0063FC  2BA4               	incf	??_doActionOff& (0+255),f,b
  6769  0063FE  D003               	goto	u12154
  6770  006400                     u12155:
  6771  006400  0100               	movlb	0	; () banked
  6772  006402  90D8               	bcf	status,0,c
  6773  006404  37A5               	rlcf	(??_doActionOff+1)& (0+255),f,b
  6774  006406                     u12154:
  6775  006406  0100               	movlb	0	; () banked
  6776  006408  2FA4               	decfsz	??_doActionOff& (0+255),f,b
  6777  00640A  D7FA               	goto	u12155
  6778  00640C  0100               	movlb	0	; () banked
  6779  00640E  51A5               	movf	(??_doActionOff+1)& (0+255),w,b
  6780  006410  0100               	movlb	0	; () banked
  6781  006412  0100               	movlb	0	; () banked
  6782  006414  15A3               	andwf	doActionOff@arg& (0+255),w,b
  6783  006416  0900               	iorlw	0
  6784  006418  B4D8               	btfsc	status,2,c
  6785  00641A  D06E               	goto	l10266
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;main.c: 2359: if ( dmflags & 0x08 ) {
  6789                           
  6790                           ; BSR set to: 0
  6791  00641C  0100               	movlb	0	; () banked
  6792  00641E  0100               	movlb	0	; () banked
  6793  006420  A7A2               	btfss	doActionOff@dmflags& (0+255),3,b
  6794  006422  D00F               	goto	l10254
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;main.c: 2360: if ( vscp_imsg.data[ 2 ] != Read_b_eep(0x43 + 3 + i) ) {
  6798  006424  0E46               	movlw	70
  6799  006426  0100               	movlb	0	; () banked
  6800  006428  0100               	movlb	0	; () banked
  6801  00642A  25A7               	addwf	doActionOff@i& (0+255),w,b
  6802  00642C  6E16               	movwf	?_Read_b_eep,c
  6803  00642E  6A17               	clrf	?_Read_b_eep+1,c
  6804  006430  0E00               	movlw	0
  6805  006432  2217               	addwfc	?_Read_b_eep+1,f,c
  6806  006434  ECD8  F037         	call	_Read_b_eep	;wreg free
  6807  006438  0100               	movlb	0	; () banked
  6808  00643A  0100               	movlb	0	; () banked
  6809  00643C  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  6810  00643E  A4D8               	btfss	status,2,c
  6811  006440  D05B               	goto	l10266
  6812  006442                     l10254:
  6813                           
  6814                           ; BSR set to: 0
  6815                           ;main.c: 2364: }
  6816                           ;main.c: 2365: }
  6817                           ;main.c: 2367: val = Read_b_eep(0x43 + 24 + i);
  6818  006442  0E5B               	movlw	91
  6819  006444  0100               	movlb	0	; () banked
  6820  006446  0100               	movlb	0	; () banked
  6821  006448  25A7               	addwf	doActionOff@i& (0+255),w,b
  6822  00644A  6E16               	movwf	?_Read_b_eep,c
  6823  00644C  6A17               	clrf	?_Read_b_eep+1,c
  6824  00644E  0E00               	movlw	0
  6825  006450  2217               	addwfc	?_Read_b_eep+1,f,c
  6826  006452  ECD8  F037         	call	_Read_b_eep	;wreg free
  6827  006456  0100               	movlb	0	; () banked
  6828  006458  0100               	movlb	0	; () banked
  6829  00645A  6FA6               	movwf	doActionOff@val& (0+255),b
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;main.c: 2370: if ( !( val & 0x80 ) ) continue;
  6833  00645C  0100               	movlb	0	; () banked
  6834  00645E  0100               	movlb	0	; () banked
  6835  006460  AFA6               	btfss	doActionOff@val& (0+255),7,b
  6836  006462  D04A               	goto	l10266
  6837  006464  D014               	goto	l10262
  6838  006466                     l817:
  6839                           
  6840                           ; BSR set to: 0
  6841                           ;main.c: 2375: LATBbits.LATB0 = 0;
  6842  006466  908A               	bcf	3978,0,c	;volatile
  6843                           
  6844                           ;main.c: 2376: break;
  6845  006468  D033               	goto	l818
  6846  00646A                     l819:
  6847                           
  6848                           ; BSR set to: 0
  6849                           ;main.c: 2379: LATBbits.LATB1 = 0;
  6850  00646A  928A               	bcf	3978,1,c	;volatile
  6851                           
  6852                           ;main.c: 2380: break;
  6853  00646C  D031               	goto	l818
  6854  00646E                     l820:
  6855                           
  6856                           ; BSR set to: 0
  6857                           ;main.c: 2383: LATCbits.LATC3 = 0;
  6858  00646E  968B               	bcf	3979,3,c	;volatile
  6859                           
  6860                           ;main.c: 2384: break;
  6861  006470  D02F               	goto	l818
  6862  006472                     l821:
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;main.c: 2387: LATCbits.LATC4 = 0;
  6866  006472  988B               	bcf	3979,4,c	;volatile
  6867                           
  6868                           ;main.c: 2388: break;
  6869  006474  D02D               	goto	l818
  6870  006476                     l822:
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;main.c: 2391: LATCbits.LATC5 = 0;
  6874  006476  9A8B               	bcf	3979,5,c	;volatile
  6875                           
  6876                           ;main.c: 2392: break;
  6877  006478  D02B               	goto	l818
  6878  00647A                     l823:
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;main.c: 2395: LATCbits.LATC6 = 0;
  6882  00647A  9C8B               	bcf	3979,6,c	;volatile
  6883                           
  6884                           ;main.c: 2396: break;
  6885  00647C  D029               	goto	l818
  6886  00647E                     l824:
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;main.c: 2399: LATCbits.LATC7 = 0;
  6890  00647E  9E8B               	bcf	3979,7,c	;volatile
  6891                           
  6892                           ;main.c: 2400: break;
  6893  006480  D027               	goto	l818
  6894  006482                     l825:
  6895                           
  6896                           ; BSR set to: 0
  6897                           ;main.c: 2403: LATAbits.LATA2 = 0;
  6898  006482  9489               	bcf	3977,2,c	;volatile
  6899                           
  6900                           ;main.c: 2404: break;
  6901  006484  D025               	goto	l818
  6902  006486                     l826:
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;main.c: 2407: LATAbits.LATA1 = 0;
  6906  006486  9289               	bcf	3977,1,c	;volatile
  6907                           
  6908                           ;main.c: 2408: break;
  6909  006488  D023               	goto	l818
  6910  00648A                     l827:
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;main.c: 2411: LATAbits.LATA0 = 0;
  6914  00648A  9089               	bcf	3977,0,c	;volatile
  6915                           
  6916                           ;main.c: 2412: break;
  6917  00648C  D021               	goto	l818
  6918  00648E                     l10262:
  6919                           
  6920                           ; BSR set to: 0
  6921  00648E  0100               	movlb	0	; () banked
  6922  006490  0100               	movlb	0	; () banked
  6923  006492  51A7               	movf	doActionOff@i& (0+255),w,b
  6924                           
  6925                           ; Switch size 1, requested type "space"
  6926                           ; Number of cases is 10, Range of values is 0 to 9
  6927                           ; switch strategies available:
  6928                           ; Name         Instructions Cycles
  6929                           ; simple_byte           31    16 (average)
  6930                           ;	Chosen strategy is simple_byte
  6931  006494  0A00               	xorlw	0	; case 0
  6932  006496  B4D8               	btfsc	status,2,c
  6933  006498  D7E6               	goto	l817
  6934  00649A  0A01               	xorlw	1	; case 1
  6935  00649C  B4D8               	btfsc	status,2,c
  6936  00649E  D7E5               	goto	l819
  6937  0064A0  0A03               	xorlw	3	; case 2
  6938  0064A2  B4D8               	btfsc	status,2,c
  6939  0064A4  D7E4               	goto	l820
  6940  0064A6  0A01               	xorlw	1	; case 3
  6941  0064A8  B4D8               	btfsc	status,2,c
  6942  0064AA  D7E3               	goto	l821
  6943  0064AC  0A07               	xorlw	7	; case 4
  6944  0064AE  B4D8               	btfsc	status,2,c
  6945  0064B0  D7E2               	goto	l822
  6946  0064B2  0A01               	xorlw	1	; case 5
  6947  0064B4  B4D8               	btfsc	status,2,c
  6948  0064B6  D7E1               	goto	l823
  6949  0064B8  0A03               	xorlw	3	; case 6
  6950  0064BA  B4D8               	btfsc	status,2,c
  6951  0064BC  D7E0               	goto	l824
  6952  0064BE  0A01               	xorlw	1	; case 7
  6953  0064C0  B4D8               	btfsc	status,2,c
  6954  0064C2  D7DF               	goto	l825
  6955  0064C4  0A0F               	xorlw	15	; case 8
  6956  0064C6  B4D8               	btfsc	status,2,c
  6957  0064C8  D7DE               	goto	l826
  6958  0064CA  0A01               	xorlw	1	; case 9
  6959  0064CC  B4D8               	btfsc	status,2,c
  6960  0064CE  D7DD               	goto	l827
  6961  0064D0                     l818:
  6962                           
  6963                           ; BSR set to: 0
  6964                           ;main.c: 2416: if ( val & 0x10 ) {
  6965  0064D0  0100               	movlb	0	; () banked
  6966  0064D2  0100               	movlb	0	; () banked
  6967  0064D4  A9A6               	btfss	doActionOff@val& (0+255),4,b
  6968  0064D6  D010               	goto	l10266
  6969                           
  6970                           ; BSR set to: 0
  6971                           ;main.c: 2417: SendInformationEvent( i, 20, 4 );
  6972  0064D8  C0A7  F030         	movff	doActionOff@i,?_SendInformationEvent
  6973  0064DC  0100               	movlb	0	; () banked
  6974  0064DE  6FA4               	movwf	??_doActionOff& (0+255),b
  6975  0064E0  0E14               	movlw	20
  6976  0064E2  6E31               	movwf	?_SendInformationEvent+1,c
  6977  0064E4  0100               	movlb	0	; () banked
  6978  0064E6  51A4               	movf	??_doActionOff& (0+255),w,b
  6979  0064E8  0100               	movlb	0	; () banked
  6980  0064EA  6FA5               	movwf	(??_doActionOff+1)& (0+255),b
  6981  0064EC  0E04               	movlw	4
  6982  0064EE  6E32               	movwf	?_SendInformationEvent+2,c
  6983  0064F0  0100               	movlb	0	; () banked
  6984  0064F2  51A5               	movf	(??_doActionOff+1)& (0+255),w,b
  6985  0064F4  ECFC  F034         	call	_SendInformationEvent	;wreg free
  6986  0064F8                     l10266:
  6987  0064F8  0100               	movlb	0	; () banked
  6988  0064FA  0100               	movlb	0	; () banked
  6989  0064FC  2BA7               	incf	doActionOff@i& (0+255),f,b
  6990  0064FE                     L62:
  6991                           
  6992                           ; BSR set to: 0
  6993  0064FE  0E07               	movlw	7
  6994  006500  0100               	movlb	0	; () banked
  6995  006502  0100               	movlb	0	; () banked
  6996  006504  65A7               	cpfsgt	doActionOff@i& (0+255),b
  6997  006506  D774               	goto	l10246
  6998                           
  6999                           ; BSR set to: 0
  7000                           
  7001                           ; BSR set to: 0
  7002  006508  0012               	return	
  7003  00650A                     __end_of_doActionOff:
  7004                           	opt stack 0
  7005                           tblptru	equ	0xFF8
  7006                           prodh	equ	0xFF4
  7007                           prodl	equ	0xFF3
  7008                           postinc0	equ	0xFEE
  7009                           wreg	equ	0xFE8
  7010                           postinc2	equ	0xFDE
  7011                           postdec2	equ	0xFDD
  7012                           fsr2h	equ	0xFDA
  7013                           fsr2l	equ	0xFD9
  7014                           status	equ	0xFD8
  7015                           
  7016 ;; *************** function _vscp_handleProtocolEvent *****************
  7017 ;; Defined at:
  7018 ;;		line 797 in file "../../vscp_firmware/common/vscp_firmware.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;		None
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  bytes           1    6[BANK1 ] unsigned char 
  7023 ;;  page_save       2    2[BANK1 ] unsigned short 
  7024 ;;  i               1   12[BANK1 ] unsigned char 
  7025 ;;  bytes           2   16[BANK1 ] unsigned short 
  7026 ;;  page_save       2    0[BANK1 ] unsigned short 
  7027 ;;  byte            1   15[BANK1 ] unsigned char 
  7028 ;;  cb              1   11[BANK1 ] unsigned char 
  7029 ;;  bytes_this_t    1   10[BANK1 ] unsigned char 
  7030 ;;  j               1   20[BANK1 ] unsigned char 
  7031 ;;  i               1   18[BANK1 ] unsigned char 
  7032 ;;  k               1   13[BANK1 ] unsigned char 
  7033 ;;  i               1   14[BANK1 ] unsigned char 
  7034 ;;  len             1    9[BANK1 ] unsigned char 
  7035 ;;  pos             1    8[BANK1 ] unsigned char 
  7036 ;;  i               1   19[BANK1 ] unsigned char 
  7037 ;;  len             1    7[BANK1 ] unsigned char 
  7038 ;;  pos             1    5[BANK1 ] unsigned char 
  7039 ;;  offset          1    4[BANK1 ] unsigned char 
  7040 ;; Return value:  Size  Location     Type
  7041 ;;		None               void
  7042 ;; Registers used:
  7043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7049 ;;      Params:         0       0       0       0       0       0       0
  7050 ;;      Locals:         0       0      21       0       0       0       0
  7051 ;;      Temps:          0       9       0       0       0       0       0
  7052 ;;      Totals:         0       9      21       0       0       0       0
  7053 ;;Total ram usage:       30 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; Hardware stack levels required when called:    9
  7056 ;; This function calls:
  7057 ;;		_vscp_init
  7058 ;;		_vscp_readAppReg
  7059 ;;		_vscp_writeAppReg
  7060 ;;		_vscp_sendEvent
  7061 ;;		_vscp_getGUID
  7062 ;;		_vscp_getMDF_URL
  7063 ;;		_vscp_goBootloaderMode
  7064 ;;		_vscp_getMatrixInfo
  7065 ;;		_vscp_handleHeartbeat
  7066 ;;		_vscp_handleSetNickname
  7067 ;;		_vscp_handleDropNickname
  7068 ;;		_vscp_newNodeOnline
  7069 ;;		_vscp_readRegister
  7070 ;;		_vscp_readStdReg
  7071 ;;		_vscp_writeRegister
  7072 ;;		_vscp_writeStdReg
  7073 ;;		___awmod
  7074 ;; This function is called by:
  7075 ;;		_main
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           	psect	text14
  7080  001EAE                     __ptext14:
  7081                           	opt stack 0
  7082  001EAE                     _vscp_handleProtocolEvent:
  7083                           	opt stack 20
  7084                           
  7085                           ;vscp_firmware.c: 799: if (0 == vscp_imsg.vscp_class) {
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;incstack = 0
  7089                           ;incstack = 0
  7090  001EAE  0100               	movlb	0	; () banked
  7091  001EB0  0100               	movlb	0	; () banked
  7092  001EB2  51F4               	movf	(_vscp_imsg+3)& (0+255),w,b
  7093  001EB4  11F3               	iorwf	(_vscp_imsg+2)& (0+255),w,b
  7094  001EB6  B4D8               	btfsc	status,2,c
  7095  001EB8  EF2A  F016         	goto	l9954
  7096  001EBC  EF67  F016         	goto	l1388
  7097  001EC0                     l9522:
  7098                           
  7099                           ; BSR set to: 0
  7100                           ;vscp_firmware.c: 806: vscp_handleHeartbeat();
  7101  001EC0  EC66  F035         	call	_vscp_handleHeartbeat	;wreg free
  7102                           
  7103                           ;vscp_firmware.c: 807: break;
  7104  001EC4  EF67  F016         	goto	l1388
  7105  001EC8                     l9524:
  7106                           
  7107                           ;vscp_firmware.c: 811: vscp_newNodeOnline();
  7108  001EC8  ECDF  F035         	call	_vscp_newNodeOnline	;wreg free
  7109                           
  7110                           ;vscp_firmware.c: 812: break;
  7111  001ECC  EF67  F016         	goto	l1388
  7112  001ED0                     l9526:
  7113                           
  7114                           ;vscp_firmware.c: 816: vscp_handleSetNickname();
  7115  001ED0  EC5E  F036         	call	_vscp_handleSetNickname	;wreg free
  7116                           
  7117                           ;vscp_firmware.c: 817: break;
  7118  001ED4  EF67  F016         	goto	l1388
  7119  001ED8                     l9528:
  7120                           
  7121                           ;vscp_firmware.c: 821: vscp_handleDropNickname();
  7122  001ED8  ECB9  F035         	call	_vscp_handleDropNickname	;wreg free
  7123                           
  7124                           ;vscp_firmware.c: 822: break;
  7125  001EDC  EF67  F016         	goto	l1388
  7126  001EE0                     l9530:
  7127                           
  7128                           ;vscp_firmware.c: 826: if ( ( 2 == (vscp_imsg.flags & 0x0f) ) &&
  7129                           ;vscp_firmware.c: 827: (vscp_nickname == vscp_imsg.data[ 0 ])) {
  7130  001EE0  0100               	movlb	0	; () banked
  7131  001EE2  0100               	movlb	0	; () banked
  7132  001EE4  51F1               	movf	_vscp_imsg& (0+255),w,b
  7133  001EE6  0B0F               	andlw	15
  7134  001EE8  0A02               	xorlw	2
  7135  001EEA  A4D8               	btfss	status,2,c
  7136  001EEC  EF67  F016         	goto	l1388
  7137                           
  7138                           ; BSR set to: 0
  7139  001EF0  0100               	movlb	0	; () banked
  7140  001EF2  0100               	movlb	0	; () banked
  7141  001EF4  51EC               	movf	_vscp_nickname& (0+255),w,b
  7142  001EF6  0100               	movlb	0	; () banked
  7143  001EF8  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  7144  001EFC  62DF               	cpfseq	indf2,c
  7145  001EFE  EF67  F016         	goto	l1388
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;vscp_firmware.c: 829: if (vscp_imsg.data[ 1 ] < 0x80) {
  7149  001F02  0E80               	movlw	128
  7150  001F04  0100               	movlb	0	; () banked
  7151  001F06  0100               	movlb	0	; () banked
  7152  001F08  61F8               	cpfslt	(_vscp_imsg+7)& (0+255),b
  7153  001F0A  D021               	goto	l9550
  7154                           
  7155                           ; BSR set to: 0
  7156                           ;vscp_firmware.c: 832: vscp_omsg.data[ 1 ] = vscp_readAppReg(vscp_imsg.data[ 1 ]);
  7157  001F0C  C0F8  F018         	movff	_vscp_imsg+7,?_vscp_readAppReg
  7158  001F10  EC4B  F031         	call	_vscp_readAppReg	;wreg free
  7159  001F14  6E44               	movwf	_vscp_omsg+6,c
  7160                           
  7161                           ;vscp_firmware.c: 835: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  7162  001F16  C0F8  F043         	movff	_vscp_imsg+7,_vscp_omsg+5
  7163                           
  7164                           ;vscp_firmware.c: 837: vscp_omsg.priority = 0x03;
  7165  001F1A  0100               	movlb	0	; () banked
  7166  001F1C  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7167  001F1E  0E03               	movlw	3
  7168  001F20  6E3F               	movwf	_vscp_omsg+1,c
  7169  001F22  0100               	movlb	0	; () banked
  7170  001F24  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;vscp_firmware.c: 838: vscp_omsg.flags = 0x80 + 2;
  7174  001F26  0100               	movlb	0	; () banked
  7175  001F28  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7176  001F2A  0E82               	movlw	130
  7177  001F2C  6E3E               	movwf	_vscp_omsg,c
  7178  001F2E  0100               	movlb	0	; () banked
  7179  001F30  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7180                           
  7181                           ; BSR set to: 0
  7182                           ;vscp_firmware.c: 839: vscp_omsg.vscp_class = 0;
  7183  001F32  0E00               	movlw	0
  7184  001F34  6E41               	movwf	_vscp_omsg+3,c
  7185  001F36  0E00               	movlw	0
  7186  001F38  6E40               	movwf	_vscp_omsg+2,c
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;vscp_firmware.c: 840: vscp_omsg.vscp_type = 10;
  7190  001F3A  0100               	movlb	0	; () banked
  7191  001F3C  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7192  001F3E  0E0A               	movlw	10
  7193  001F40  6E42               	movwf	_vscp_omsg+4,c
  7194  001F42  0100               	movlb	0	; () banked
  7195  001F44  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7196                           
  7197                           ; BSR set to: 0
  7198                           ;vscp_firmware.c: 843: vscp_sendEvent();
  7199  001F46  EC21  F036         	call	_vscp_sendEvent	;wreg free
  7200                           
  7201                           ;vscp_firmware.c: 844: }
  7202  001F4A  EF67  F016         	goto	l1388
  7203  001F4E                     l9550:
  7204                           
  7205                           ;vscp_firmware.c: 845: else {
  7206                           ;vscp_firmware.c: 848: vscp_omsg.data[ 1 ] =
  7207                           ;vscp_firmware.c: 849: vscp_readStdReg(vscp_imsg.data[ 1 ]);
  7208  001F4E  C0F8  F01A         	movff	_vscp_imsg+7,?_vscp_readStdReg
  7209  001F52  EC3F  F029         	call	_vscp_readStdReg	;wreg free
  7210  001F56  6E44               	movwf	_vscp_omsg+6,c
  7211                           
  7212                           ;vscp_firmware.c: 852: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  7213  001F58  C0F8  F043         	movff	_vscp_imsg+7,_vscp_omsg+5
  7214                           
  7215                           ;vscp_firmware.c: 854: vscp_omsg.priority = 0x03;
  7216  001F5C  0100               	movlb	0	; () banked
  7217  001F5E  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7218  001F60  0E03               	movlw	3
  7219  001F62  6E3F               	movwf	_vscp_omsg+1,c
  7220  001F64  0100               	movlb	0	; () banked
  7221  001F66  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;vscp_firmware.c: 855: vscp_omsg.flags = 0x80 + 2;
  7225  001F68  0100               	movlb	0	; () banked
  7226  001F6A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7227  001F6C  0E82               	movlw	130
  7228  001F6E  6E3E               	movwf	_vscp_omsg,c
  7229  001F70  0100               	movlb	0	; () banked
  7230  001F72  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7231                           
  7232                           ; BSR set to: 0
  7233                           ;vscp_firmware.c: 856: vscp_omsg.vscp_class = 0;
  7234  001F74  0E00               	movlw	0
  7235  001F76  6E41               	movwf	_vscp_omsg+3,c
  7236  001F78  0E00               	movlw	0
  7237  001F7A  6E40               	movwf	_vscp_omsg+2,c
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;vscp_firmware.c: 857: vscp_omsg.vscp_type = 10;
  7241  001F7C  0100               	movlb	0	; () banked
  7242  001F7E  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7243  001F80  0E0A               	movlw	10
  7244  001F82  6E42               	movwf	_vscp_omsg+4,c
  7245  001F84  0100               	movlb	0	; () banked
  7246  001F86  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;vscp_firmware.c: 860: vscp_sendEvent();
  7250  001F88  EC21  F036         	call	_vscp_sendEvent	;wreg free
  7251  001F8C  EF67  F016         	goto	l1388
  7252  001F90                     l9564:
  7253                           
  7254                           ;vscp_firmware.c: 867: if ((3 == (vscp_imsg.flags & 0x0f)) &&
  7255                           ;vscp_firmware.c: 868: (vscp_nickname == vscp_imsg.data[ 0 ])) {
  7256  001F90  0100               	movlb	0	; () banked
  7257  001F92  0100               	movlb	0	; () banked
  7258  001F94  51F1               	movf	_vscp_imsg& (0+255),w,b
  7259  001F96  0B0F               	andlw	15
  7260  001F98  0A03               	xorlw	3
  7261  001F9A  A4D8               	btfss	status,2,c
  7262  001F9C  EF67  F016         	goto	l1388
  7263                           
  7264                           ; BSR set to: 0
  7265  001FA0  0100               	movlb	0	; () banked
  7266  001FA2  0100               	movlb	0	; () banked
  7267  001FA4  51EC               	movf	_vscp_nickname& (0+255),w,b
  7268  001FA6  0100               	movlb	0	; () banked
  7269  001FA8  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  7270  001FAC  62DF               	cpfseq	indf2,c
  7271  001FAE  EF67  F016         	goto	l1388
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;vscp_firmware.c: 870: if (vscp_imsg.data[ 1 ] < 0x80) {
  7275  001FB2  0E80               	movlw	128
  7276  001FB4  0100               	movlb	0	; () banked
  7277  001FB6  0100               	movlb	0	; () banked
  7278  001FB8  61F8               	cpfslt	(_vscp_imsg+7)& (0+255),b
  7279  001FBA  D023               	goto	l9584
  7280                           
  7281                           ; BSR set to: 0
  7282                           ;vscp_firmware.c: 873: vscp_omsg.data[ 1 ] =
  7283                           ;vscp_firmware.c: 874: vscp_writeAppReg(vscp_imsg.data[ 1 ], vscp_imsg.data[ 2 ]);
  7284  001FBC  C0F8  F0A2         	movff	_vscp_imsg+7,?_vscp_writeAppReg
  7285  001FC0  C0F9  F0A3         	movff	_vscp_imsg+8,?_vscp_writeAppReg+1
  7286  001FC4  EC11  F003         	call	_vscp_writeAppReg	;wreg free
  7287  001FC8  6E44               	movwf	_vscp_omsg+6,c
  7288                           
  7289                           ;vscp_firmware.c: 877: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  7290  001FCA  C0F8  F043         	movff	_vscp_imsg+7,_vscp_omsg+5
  7291                           
  7292                           ;vscp_firmware.c: 879: vscp_omsg.priority = 0x03;
  7293  001FCE  0100               	movlb	0	; () banked
  7294  001FD0  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7295  001FD2  0E03               	movlw	3
  7296  001FD4  6E3F               	movwf	_vscp_omsg+1,c
  7297  001FD6  0100               	movlb	0	; () banked
  7298  001FD8  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;vscp_firmware.c: 880: vscp_omsg.flags = 0x80 + 2;
  7302  001FDA  0100               	movlb	0	; () banked
  7303  001FDC  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7304  001FDE  0E82               	movlw	130
  7305  001FE0  6E3E               	movwf	_vscp_omsg,c
  7306  001FE2  0100               	movlb	0	; () banked
  7307  001FE4  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;vscp_firmware.c: 881: vscp_omsg.vscp_class = 0;
  7311  001FE6  0E00               	movlw	0
  7312  001FE8  6E41               	movwf	_vscp_omsg+3,c
  7313  001FEA  0E00               	movlw	0
  7314  001FEC  6E40               	movwf	_vscp_omsg+2,c
  7315                           
  7316                           ; BSR set to: 0
  7317                           ;vscp_firmware.c: 882: vscp_omsg.vscp_type = 10;
  7318  001FEE  0100               	movlb	0	; () banked
  7319  001FF0  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7320  001FF2  0E0A               	movlw	10
  7321  001FF4  6E42               	movwf	_vscp_omsg+4,c
  7322  001FF6  0100               	movlb	0	; () banked
  7323  001FF8  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;vscp_firmware.c: 885: vscp_sendEvent();
  7327  001FFA  EC21  F036         	call	_vscp_sendEvent	;wreg free
  7328                           
  7329                           ;vscp_firmware.c: 887: }
  7330  001FFE  EF67  F016         	goto	l1388
  7331  002002                     l9584:
  7332                           
  7333                           ;vscp_firmware.c: 888: else {
  7334                           ;vscp_firmware.c: 891: vscp_omsg.data[ 1 ] =
  7335                           ;vscp_firmware.c: 892: vscp_writeStdReg(vscp_imsg.data[ 1 ], vscp_imsg.data[ 2 ]);
  7336  002002  C0F8  F01E         	movff	_vscp_imsg+7,?_vscp_writeStdReg
  7337  002006  C0F9  F01F         	movff	_vscp_imsg+8,?_vscp_writeStdReg+1
  7338  00200A  ECB4  F02D         	call	_vscp_writeStdReg	;wreg free
  7339  00200E  6E44               	movwf	_vscp_omsg+6,c
  7340                           
  7341                           ;vscp_firmware.c: 895: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  7342  002010  C0F8  F043         	movff	_vscp_imsg+7,_vscp_omsg+5
  7343                           
  7344                           ;vscp_firmware.c: 897: vscp_omsg.priority = 0x03;
  7345  002014  0100               	movlb	0	; () banked
  7346  002016  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7347  002018  0E03               	movlw	3
  7348  00201A  6E3F               	movwf	_vscp_omsg+1,c
  7349  00201C  0100               	movlb	0	; () banked
  7350  00201E  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;vscp_firmware.c: 898: vscp_omsg.flags = 0x80 + 2;
  7354  002020  0100               	movlb	0	; () banked
  7355  002022  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7356  002024  0E82               	movlw	130
  7357  002026  6E3E               	movwf	_vscp_omsg,c
  7358  002028  0100               	movlb	0	; () banked
  7359  00202A  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;vscp_firmware.c: 899: vscp_omsg.vscp_class = 0;
  7363  00202C  0E00               	movlw	0
  7364  00202E  6E41               	movwf	_vscp_omsg+3,c
  7365  002030  0E00               	movlw	0
  7366  002032  6E40               	movwf	_vscp_omsg+2,c
  7367                           
  7368                           ; BSR set to: 0
  7369                           ;vscp_firmware.c: 900: vscp_omsg.vscp_type = 10;
  7370  002034  0100               	movlb	0	; () banked
  7371  002036  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7372  002038  0E0A               	movlw	10
  7373  00203A  6E42               	movwf	_vscp_omsg+4,c
  7374  00203C  0100               	movlb	0	; () banked
  7375  00203E  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;vscp_firmware.c: 903: vscp_sendEvent();
  7379  002040  EC21  F036         	call	_vscp_sendEvent	;wreg free
  7380  002044  EF67  F016         	goto	l1388
  7381  002048                     l9598:
  7382                           
  7383                           ;vscp_firmware.c: 910: if ((vscp_nickname == vscp_imsg.data[ 0 ]) &&
  7384                           ;vscp_firmware.c: 912: (vscp_getGUID(0) == vscp_imsg.data[ 2 ]) &&
  7385                           ;vscp_firmware.c: 913: (vscp_getGUID(3) == vscp_imsg.data[ 3 ]) &&
  7386                           ;vscp_firmware.c: 914: (vscp_getGUID(5) == vscp_imsg.data[ 4 ]) &&
  7387                           ;vscp_firmware.c: 915: (vscp_getGUID(7) == vscp_imsg.data[ 5 ]) &&
  7388                           ;vscp_firmware.c: 916: (((vscp_page_select >> 8) & 0xff) == vscp_imsg.data[ 6 ]) &&
  7389                           ;vscp_firmware.c: 917: ((vscp_page_select & 0xff) == vscp_imsg.data[ 7 ])) {
  7390  002048  0100               	movlb	0	; () banked
  7391  00204A  0100               	movlb	0	; () banked
  7392  00204C  51EC               	movf	_vscp_nickname& (0+255),w,b
  7393  00204E  0100               	movlb	0	; () banked
  7394  002050  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  7395  002054  62DF               	cpfseq	indf2,c
  7396  002056  EF67  F016         	goto	l1388
  7397                           
  7398                           ; BSR set to: 0
  7399  00205A  0100               	movlb	0	; () banked
  7400  00205C  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7401  00205E  0E00               	movlw	0
  7402  002060  6E18               	movwf	?_vscp_getGUID,c
  7403  002062  0100               	movlb	0	; () banked
  7404  002064  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7405  002066  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7406  00206A  0100               	movlb	0	; () banked
  7407  00206C  0100               	movlb	0	; () banked
  7408  00206E  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  7409  002070  A4D8               	btfss	status,2,c
  7410  002072  EF67  F016         	goto	l1388
  7411                           
  7412                           ; BSR set to: 0
  7413  002076  0100               	movlb	0	; () banked
  7414  002078  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7415  00207A  0E03               	movlw	3
  7416  00207C  6E18               	movwf	?_vscp_getGUID,c
  7417  00207E  0100               	movlb	0	; () banked
  7418  002080  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7419  002082  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7420  002086  0100               	movlb	0	; () banked
  7421  002088  0100               	movlb	0	; () banked
  7422  00208A  19FA               	xorwf	(_vscp_imsg+9)& (0+255),w,b
  7423  00208C  A4D8               	btfss	status,2,c
  7424  00208E  EF67  F016         	goto	l1388
  7425                           
  7426                           ; BSR set to: 0
  7427  002092  0100               	movlb	0	; () banked
  7428  002094  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7429  002096  0E05               	movlw	5
  7430  002098  6E18               	movwf	?_vscp_getGUID,c
  7431  00209A  0100               	movlb	0	; () banked
  7432  00209C  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7433  00209E  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7434  0020A2  0100               	movlb	0	; () banked
  7435  0020A4  0100               	movlb	0	; () banked
  7436  0020A6  19FB               	xorwf	(_vscp_imsg+10)& (0+255),w,b
  7437  0020A8  A4D8               	btfss	status,2,c
  7438  0020AA  EF67  F016         	goto	l1388
  7439                           
  7440                           ; BSR set to: 0
  7441  0020AE  0100               	movlb	0	; () banked
  7442  0020B0  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7443  0020B2  0E07               	movlw	7
  7444  0020B4  6E18               	movwf	?_vscp_getGUID,c
  7445  0020B6  0100               	movlb	0	; () banked
  7446  0020B8  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7447  0020BA  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7448  0020BE  0100               	movlb	0	; () banked
  7449  0020C0  0100               	movlb	0	; () banked
  7450  0020C2  19FC               	xorwf	(_vscp_imsg+11)& (0+255),w,b
  7451  0020C4  A4D8               	btfss	status,2,c
  7452  0020C6  EF67  F016         	goto	l1388
  7453                           
  7454                           ; BSR set to: 0
  7455  0020CA  C037  F0AE         	movff	_vscp_page_select+1,??_vscp_handleProtocolEvent
  7456  0020CE  C0AE  F0AF         	movff	??_vscp_handleProtocolEvent,??_vscp_handleProtocolEvent+1
  7457  0020D2  0100               	movlb	0	; () banked
  7458  0020D4  6BB0               	clrf	(??_vscp_handleProtocolEvent+2)& (0+255),b
  7459  0020D6  0EFF               	movlw	255
  7460  0020D8  0100               	movlb	0	; () banked
  7461  0020DA  17AF               	andwf	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  7462  0020DC  0E00               	movlw	0
  7463  0020DE  17B0               	andwf	(??_vscp_handleProtocolEvent+2)& (0+255),f,b
  7464  0020E0  0100               	movlb	0	; () banked
  7465  0020E2  0100               	movlb	0	; () banked
  7466  0020E4  51FD               	movf	(_vscp_imsg+12)& (0+255),w,b
  7467  0020E6  0100               	movlb	0	; () banked
  7468  0020E8  19AF               	xorwf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  7469  0020EA  11B0               	iorwf	(??_vscp_handleProtocolEvent+2)& (0+255),w,b
  7470  0020EC  A4D8               	btfss	status,2,c
  7471  0020EE  EF67  F016         	goto	l1388
  7472                           
  7473                           ; BSR set to: 0
  7474  0020F2  0EFF               	movlw	255
  7475  0020F4  1436               	andwf	_vscp_page_select,w,c
  7476  0020F6  0100               	movlb	0	; () banked
  7477  0020F8  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7478  0020FA  0E00               	movlw	0
  7479  0020FC  1437               	andwf	_vscp_page_select+1,w,c
  7480  0020FE  0100               	movlb	0	; () banked
  7481  002100  6FAF               	movwf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  7482  002102  0100               	movlb	0	; () banked
  7483  002104  0100               	movlb	0	; () banked
  7484  002106  51FE               	movf	(_vscp_imsg+13)& (0+255),w,b
  7485  002108  0100               	movlb	0	; () banked
  7486  00210A  19AE               	xorwf	??_vscp_handleProtocolEvent& (0+255),w,b
  7487  00210C  11AF               	iorwf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  7488  00210E  A4D8               	btfss	status,2,c
  7489  002110  EF67  F016         	goto	l1388
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;vscp_firmware.c: 919: vscp_goBootloaderMode( vscp_imsg.data[ 1 ] );
  7493  002114  C0F8  F01B         	movff	_vscp_imsg+7,?_vscp_goBootloaderMode
  7494  002118  EC32  F037         	call	_vscp_goBootloaderMode	;wreg free
  7495  00211C  EF67  F016         	goto	l1388
  7496  002120                     l9614:
  7497                           
  7498                           ;vscp_firmware.c: 928: if ((vscp_getGUID(0) == vscp_imsg.data[ 1 ]) &&
  7499                           ;vscp_firmware.c: 929: (vscp_getGUID(1) == vscp_imsg.data[ 2 ]) &&
  7500                           ;vscp_firmware.c: 930: (vscp_getGUID(2) == vscp_imsg.data[ 3 ]) &&
  7501                           ;vscp_firmware.c: 931: (vscp_getGUID(3) == vscp_imsg.data[ 4 ])) {
  7502  002120  0100               	movlb	0	; () banked
  7503  002122  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7504  002124  0E00               	movlw	0
  7505  002126  6E18               	movwf	?_vscp_getGUID,c
  7506  002128  0100               	movlb	0	; () banked
  7507  00212A  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7508  00212C  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7509  002130  0100               	movlb	0	; () banked
  7510  002132  0100               	movlb	0	; () banked
  7511  002134  19F8               	xorwf	(_vscp_imsg+7)& (0+255),w,b
  7512  002136  A4D8               	btfss	status,2,c
  7513  002138  D0ED               	goto	l9660
  7514                           
  7515                           ; BSR set to: 0
  7516  00213A  0100               	movlb	0	; () banked
  7517  00213C  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7518  00213E  0E01               	movlw	1
  7519  002140  6E18               	movwf	?_vscp_getGUID,c
  7520  002142  0100               	movlb	0	; () banked
  7521  002144  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7522  002146  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7523  00214A  0100               	movlb	0	; () banked
  7524  00214C  0100               	movlb	0	; () banked
  7525  00214E  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  7526  002150  A4D8               	btfss	status,2,c
  7527  002152  D0E0               	goto	l9660
  7528                           
  7529                           ; BSR set to: 0
  7530  002154  0100               	movlb	0	; () banked
  7531  002156  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7532  002158  0E02               	movlw	2
  7533  00215A  6E18               	movwf	?_vscp_getGUID,c
  7534  00215C  0100               	movlb	0	; () banked
  7535  00215E  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7536  002160  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7537  002164  0100               	movlb	0	; () banked
  7538  002166  0100               	movlb	0	; () banked
  7539  002168  19FA               	xorwf	(_vscp_imsg+9)& (0+255),w,b
  7540  00216A  A4D8               	btfss	status,2,c
  7541  00216C  D0D3               	goto	l9660
  7542                           
  7543                           ; BSR set to: 0
  7544  00216E  0100               	movlb	0	; () banked
  7545  002170  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7546  002172  0E03               	movlw	3
  7547  002174  6E18               	movwf	?_vscp_getGUID,c
  7548  002176  0100               	movlb	0	; () banked
  7549  002178  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7550  00217A  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7551  00217E  0100               	movlb	0	; () banked
  7552  002180  0100               	movlb	0	; () banked
  7553  002182  19FB               	xorwf	(_vscp_imsg+10)& (0+255),w,b
  7554  002184  A4D8               	btfss	status,2,c
  7555  002186  D0C6               	goto	l9660
  7556                           
  7557                           ; BSR set to: 0
  7558                           ;vscp_firmware.c: 932: vscp_guid_reset |= 0x10;
  7559  002188  883A               	bsf	_vscp_guid_reset,4,c
  7560  00218A  D0C4               	goto	l9660
  7561  00218C                     l9624:
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;vscp_firmware.c: 937: if ((vscp_getGUID(4) == vscp_imsg.data[ 1 ]) &&
  7565                           ;vscp_firmware.c: 938: (vscp_getGUID(5) == vscp_imsg.data[ 2 ]) &&
  7566                           ;vscp_firmware.c: 939: (vscp_getGUID(6) == vscp_imsg.data[ 3 ]) &&
  7567                           ;vscp_firmware.c: 940: (vscp_getGUID(7) == vscp_imsg.data[ 4 ])) {
  7568  00218C  0100               	movlb	0	; () banked
  7569  00218E  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7570  002190  0E04               	movlw	4
  7571  002192  6E18               	movwf	?_vscp_getGUID,c
  7572  002194  0100               	movlb	0	; () banked
  7573  002196  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7574  002198  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7575  00219C  0100               	movlb	0	; () banked
  7576  00219E  0100               	movlb	0	; () banked
  7577  0021A0  19F8               	xorwf	(_vscp_imsg+7)& (0+255),w,b
  7578  0021A2  A4D8               	btfss	status,2,c
  7579  0021A4  D0B7               	goto	l9660
  7580                           
  7581                           ; BSR set to: 0
  7582  0021A6  0100               	movlb	0	; () banked
  7583  0021A8  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7584  0021AA  0E05               	movlw	5
  7585  0021AC  6E18               	movwf	?_vscp_getGUID,c
  7586  0021AE  0100               	movlb	0	; () banked
  7587  0021B0  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7588  0021B2  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7589  0021B6  0100               	movlb	0	; () banked
  7590  0021B8  0100               	movlb	0	; () banked
  7591  0021BA  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  7592  0021BC  A4D8               	btfss	status,2,c
  7593  0021BE  D0AA               	goto	l9660
  7594                           
  7595                           ; BSR set to: 0
  7596  0021C0  0100               	movlb	0	; () banked
  7597  0021C2  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7598  0021C4  0E06               	movlw	6
  7599  0021C6  6E18               	movwf	?_vscp_getGUID,c
  7600  0021C8  0100               	movlb	0	; () banked
  7601  0021CA  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7602  0021CC  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7603  0021D0  0100               	movlb	0	; () banked
  7604  0021D2  0100               	movlb	0	; () banked
  7605  0021D4  19FA               	xorwf	(_vscp_imsg+9)& (0+255),w,b
  7606  0021D6  A4D8               	btfss	status,2,c
  7607  0021D8  D09D               	goto	l9660
  7608                           
  7609                           ; BSR set to: 0
  7610  0021DA  0100               	movlb	0	; () banked
  7611  0021DC  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7612  0021DE  0E07               	movlw	7
  7613  0021E0  6E18               	movwf	?_vscp_getGUID,c
  7614  0021E2  0100               	movlb	0	; () banked
  7615  0021E4  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7616  0021E6  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7617  0021EA  0100               	movlb	0	; () banked
  7618  0021EC  0100               	movlb	0	; () banked
  7619  0021EE  19FB               	xorwf	(_vscp_imsg+10)& (0+255),w,b
  7620  0021F0  A4D8               	btfss	status,2,c
  7621  0021F2  D090               	goto	l9660
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;vscp_firmware.c: 941: vscp_guid_reset |= 0x20;
  7625  0021F4  8A3A               	bsf	_vscp_guid_reset,5,c
  7626  0021F6  D08E               	goto	l9660
  7627  0021F8                     l9634:
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;vscp_firmware.c: 946: if ((vscp_getGUID(8) == vscp_imsg.data[ 1 ]) &&
  7631                           ;vscp_firmware.c: 947: (vscp_getGUID(9) == vscp_imsg.data[ 2 ]) &&
  7632                           ;vscp_firmware.c: 948: (vscp_getGUID(10) == vscp_imsg.data[ 3 ]) &&
  7633                           ;vscp_firmware.c: 949: (vscp_getGUID(11) == vscp_imsg.data[ 4 ])) {
  7634  0021F8  0100               	movlb	0	; () banked
  7635  0021FA  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7636  0021FC  0E08               	movlw	8
  7637  0021FE  6E18               	movwf	?_vscp_getGUID,c
  7638  002200  0100               	movlb	0	; () banked
  7639  002202  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7640  002204  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7641  002208  0100               	movlb	0	; () banked
  7642  00220A  0100               	movlb	0	; () banked
  7643  00220C  19F8               	xorwf	(_vscp_imsg+7)& (0+255),w,b
  7644  00220E  A4D8               	btfss	status,2,c
  7645  002210  D081               	goto	l9660
  7646                           
  7647                           ; BSR set to: 0
  7648  002212  0100               	movlb	0	; () banked
  7649  002214  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7650  002216  0E09               	movlw	9
  7651  002218  6E18               	movwf	?_vscp_getGUID,c
  7652  00221A  0100               	movlb	0	; () banked
  7653  00221C  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7654  00221E  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7655  002222  0100               	movlb	0	; () banked
  7656  002224  0100               	movlb	0	; () banked
  7657  002226  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  7658  002228  A4D8               	btfss	status,2,c
  7659  00222A  D074               	goto	l9660
  7660                           
  7661                           ; BSR set to: 0
  7662  00222C  0100               	movlb	0	; () banked
  7663  00222E  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7664  002230  0E0A               	movlw	10
  7665  002232  6E18               	movwf	?_vscp_getGUID,c
  7666  002234  0100               	movlb	0	; () banked
  7667  002236  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7668  002238  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7669  00223C  0100               	movlb	0	; () banked
  7670  00223E  0100               	movlb	0	; () banked
  7671  002240  19FA               	xorwf	(_vscp_imsg+9)& (0+255),w,b
  7672  002242  A4D8               	btfss	status,2,c
  7673  002244  D067               	goto	l9660
  7674                           
  7675                           ; BSR set to: 0
  7676  002246  0100               	movlb	0	; () banked
  7677  002248  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7678  00224A  0E0B               	movlw	11
  7679  00224C  6E18               	movwf	?_vscp_getGUID,c
  7680  00224E  0100               	movlb	0	; () banked
  7681  002250  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7682  002252  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7683  002256  0100               	movlb	0	; () banked
  7684  002258  0100               	movlb	0	; () banked
  7685  00225A  19FB               	xorwf	(_vscp_imsg+10)& (0+255),w,b
  7686  00225C  A4D8               	btfss	status,2,c
  7687  00225E  D05A               	goto	l9660
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;vscp_firmware.c: 950: vscp_guid_reset |= 0x40;
  7691  002260  8C3A               	bsf	_vscp_guid_reset,6,c
  7692  002262  D058               	goto	l9660
  7693  002264                     l9644:
  7694                           
  7695                           ; BSR set to: 0
  7696                           ;vscp_firmware.c: 955: if ((vscp_getGUID(12) == vscp_imsg.data[ 1 ]) &&
  7697                           ;vscp_firmware.c: 956: (vscp_getGUID(13) == vscp_imsg.data[ 2 ]) &&
  7698                           ;vscp_firmware.c: 957: (vscp_getGUID(14) == vscp_imsg.data[ 3 ]) &&
  7699                           ;vscp_firmware.c: 958: (vscp_getGUID(15) == vscp_imsg.data[ 4 ])) {
  7700  002264  0100               	movlb	0	; () banked
  7701  002266  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7702  002268  0E0C               	movlw	12
  7703  00226A  6E18               	movwf	?_vscp_getGUID,c
  7704  00226C  0100               	movlb	0	; () banked
  7705  00226E  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7706  002270  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7707  002274  0100               	movlb	0	; () banked
  7708  002276  0100               	movlb	0	; () banked
  7709  002278  19F8               	xorwf	(_vscp_imsg+7)& (0+255),w,b
  7710  00227A  A4D8               	btfss	status,2,c
  7711  00227C  D04B               	goto	l9660
  7712                           
  7713                           ; BSR set to: 0
  7714  00227E  0100               	movlb	0	; () banked
  7715  002280  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7716  002282  0E0D               	movlw	13
  7717  002284  6E18               	movwf	?_vscp_getGUID,c
  7718  002286  0100               	movlb	0	; () banked
  7719  002288  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7720  00228A  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7721  00228E  0100               	movlb	0	; () banked
  7722  002290  0100               	movlb	0	; () banked
  7723  002292  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  7724  002294  A4D8               	btfss	status,2,c
  7725  002296  D03E               	goto	l9660
  7726                           
  7727                           ; BSR set to: 0
  7728  002298  0100               	movlb	0	; () banked
  7729  00229A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7730  00229C  0E0E               	movlw	14
  7731  00229E  6E18               	movwf	?_vscp_getGUID,c
  7732  0022A0  0100               	movlb	0	; () banked
  7733  0022A2  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7734  0022A4  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7735  0022A8  0100               	movlb	0	; () banked
  7736  0022AA  0100               	movlb	0	; () banked
  7737  0022AC  19FA               	xorwf	(_vscp_imsg+9)& (0+255),w,b
  7738  0022AE  A4D8               	btfss	status,2,c
  7739  0022B0  D031               	goto	l9660
  7740                           
  7741                           ; BSR set to: 0
  7742  0022B2  0100               	movlb	0	; () banked
  7743  0022B4  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7744  0022B6  0E0F               	movlw	15
  7745  0022B8  6E18               	movwf	?_vscp_getGUID,c
  7746  0022BA  0100               	movlb	0	; () banked
  7747  0022BC  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7748  0022BE  ECC6  F037         	call	_vscp_getGUID	;wreg free
  7749  0022C2  0100               	movlb	0	; () banked
  7750  0022C4  0100               	movlb	0	; () banked
  7751  0022C6  19FB               	xorwf	(_vscp_imsg+10)& (0+255),w,b
  7752  0022C8  A4D8               	btfss	status,2,c
  7753  0022CA  D024               	goto	l9660
  7754                           
  7755                           ; BSR set to: 0
  7756                           ;vscp_firmware.c: 959: vscp_guid_reset |= 0x80;
  7757  0022CC  8E3A               	bsf	_vscp_guid_reset,7,c
  7758  0022CE  D022               	goto	l9660
  7759  0022D0                     l9654:
  7760                           
  7761                           ; BSR set to: 0
  7762                           ;vscp_firmware.c: 964: vscp_guid_reset = 0;
  7763  0022D0  0100               	movlb	0	; () banked
  7764  0022D2  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7765  0022D4  0E00               	movlw	0
  7766  0022D6  6E3A               	movwf	_vscp_guid_reset,c
  7767  0022D8  0100               	movlb	0	; () banked
  7768  0022DA  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7769                           
  7770                           ;vscp_firmware.c: 965: break;
  7771  0022DC  D01B               	goto	l9660
  7772  0022DE                     l9658:
  7773  0022DE  0100               	movlb	0	; () banked
  7774  0022E0  0100               	movlb	0	; () banked
  7775  0022E2  39F7               	swapf	(_vscp_imsg+6)& (0+255),w,b
  7776  0022E4  0B0F               	andlw	15
  7777  0022E6  0100               	movlb	0	; () banked
  7778  0022E8  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7779  0022EA  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  7780                           
  7781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7782                           ; Switch size 1, requested type "space"
  7783                           ; Number of cases is 1, Range of values is 0 to 0
  7784                           ; switch strategies available:
  7785                           ; Name         Instructions Cycles
  7786                           ; simple_byte            4     3 (average)
  7787                           ;	Chosen strategy is simple_byte
  7788  0022EC  0100               	movlb	0	; () banked
  7789  0022EE  51AF               	movf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  7790  0022F0  0A00               	xorlw	0	; case 0
  7791  0022F2  A4D8               	btfss	status,2,c
  7792  0022F4  D7ED               	goto	l9654
  7793                           
  7794                           ; BSR set to: 0
  7795                           ; Switch size 1, requested type "space"
  7796                           ; Number of cases is 4, Range of values is 0 to 3
  7797                           ; switch strategies available:
  7798                           ; Name         Instructions Cycles
  7799                           ; simple_byte           13     7 (average)
  7800                           ;	Chosen strategy is simple_byte
  7801  0022F6  0100               	movlb	0	; () banked
  7802  0022F8  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7803  0022FA  0A00               	xorlw	0	; case 0
  7804  0022FC  B4D8               	btfsc	status,2,c
  7805  0022FE  D710               	goto	l9614
  7806  002300  0A01               	xorlw	1	; case 1
  7807  002302  B4D8               	btfsc	status,2,c
  7808  002304  D743               	goto	l9624
  7809  002306  0A03               	xorlw	3	; case 2
  7810  002308  B4D8               	btfsc	status,2,c
  7811  00230A  D776               	goto	l9634
  7812  00230C  0A01               	xorlw	1	; case 3
  7813  00230E  B4D8               	btfsc	status,2,c
  7814  002310  D7A9               	goto	l9644
  7815  002312  D7DE               	goto	l9654
  7816  002314                     l9660:
  7817                           
  7818                           ; BSR set to: 0
  7819                           ;vscp_firmware.c: 968: if (0xf0 == (vscp_guid_reset & 0xf0)) {
  7820  002314  503A               	movf	_vscp_guid_reset,w,c
  7821  002316  0BF0               	andlw	240
  7822  002318  0AF0               	xorlw	240
  7823  00231A  A4D8               	btfss	status,2,c
  7824  00231C  EF67  F016         	goto	l1388
  7825                           
  7826                           ; BSR set to: 0
  7827                           ;vscp_firmware.c: 970: vscp_init();
  7828  002320  EC0F  F033         	call	_vscp_init	;wreg free
  7829  002324  EF67  F016         	goto	l1388
  7830  002328                     l9664:
  7831                           
  7832                           ;vscp_firmware.c: 976: if (vscp_nickname == vscp_imsg.data[ 0 ]) {
  7833  002328  0100               	movlb	0	; () banked
  7834  00232A  0100               	movlb	0	; () banked
  7835  00232C  51EC               	movf	_vscp_nickname& (0+255),w,b
  7836  00232E  0100               	movlb	0	; () banked
  7837  002330  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  7838  002334  62DF               	cpfseq	indf2,c
  7839  002336  EF67  F016         	goto	l1388
  7840                           
  7841                           ; BSR set to: 0
  7842                           ;vscp_firmware.c: 978: uint8_t i;
  7843                           ;vscp_firmware.c: 979: uint8_t pos = 0;
  7844  00233A  0100               	movlb	0	; () banked
  7845  00233C  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7846  00233E  0E00               	movlw	0
  7847  002340  0101               	movlb	1	; () banked
  7848  002342  0101               	movlb	1	; () banked
  7849  002344  6F05               	movwf	vscp_handleProtocolEvent@pos& (0+255),b
  7850  002346  0100               	movlb	0	; () banked
  7851  002348  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;vscp_firmware.c: 980: uint8_t offset = vscp_imsg.data[ 1 ];
  7855  00234A  C0F8  F104         	movff	_vscp_imsg+7,vscp_handleProtocolEvent@offset
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;vscp_firmware.c: 981: uint8_t len = vscp_imsg.data[ 2 ];
  7859  00234E  C0F9  F107         	movff	_vscp_imsg+8,vscp_handleProtocolEvent@len
  7860                           
  7861                           ;vscp_firmware.c: 983: for (i = 0; i < len; i++) {
  7862  002352  0100               	movlb	0	; () banked
  7863  002354  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7864  002356  0E00               	movlw	0
  7865  002358  0101               	movlb	1	; () banked
  7866  00235A  0101               	movlb	1	; () banked
  7867  00235C  6F13               	movwf	vscp_handleProtocolEvent@i& (0+255),b
  7868  00235E  0100               	movlb	0	; () banked
  7869  002360  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7870  002362  D086               	goto	l9700
  7871  002364                     l9672:
  7872                           
  7873                           ;vscp_firmware.c: 984: vscp_omsg.data[ (i % 7) + 1 ] = vscp_readRegister(offset + i);
  7874  002364  0101               	movlb	1	; () banked
  7875  002366  C113  F016         	movff	vscp_handleProtocolEvent@i,?___awmod
  7876  00236A  6A17               	clrf	?___awmod+1,c
  7877  00236C  0E00               	movlw	0
  7878  00236E  6E19               	movwf	?___awmod+3,c
  7879  002370  0E07               	movlw	7
  7880  002372  6E18               	movwf	?___awmod+2,c
  7881  002374  ECBE  F034         	call	___awmod	;wreg free
  7882  002378  0E01               	movlw	1
  7883  00237A  2616               	addwf	?___awmod,f,c
  7884  00237C  0E00               	movlw	0
  7885  00237E  2217               	addwfc	?___awmod+1,f,c
  7886  002380  0E43               	movlw	low (_vscp_omsg+5)
  7887  002382  2416               	addwf	?___awmod,w,c
  7888  002384  6ED9               	movwf	fsr2l,c
  7889  002386  0E00               	movlw	high (_vscp_omsg+5)
  7890  002388  2017               	addwfc	?___awmod+1,w,c
  7891  00238A  6EDA               	movwf	fsr2h,c
  7892  00238C  0101               	movlb	1	; () banked
  7893  00238E  0101               	movlb	1	; () banked
  7894  002390  5104               	movf	vscp_handleProtocolEvent@offset& (0+255),w,b
  7895  002392  0101               	movlb	1	; () banked
  7896  002394  0101               	movlb	1	; () banked
  7897  002396  2513               	addwf	vscp_handleProtocolEvent@i& (0+255),w,b
  7898  002398  6E2B               	movwf	?_vscp_readRegister,c
  7899  00239A  EC5F  F037         	call	_vscp_readRegister	;wreg free
  7900  00239E  6EDF               	movwf	indf2,c
  7901                           
  7902                           ;vscp_firmware.c: 986: if ( (i % 7) == 6 || i == (len - 1) ) {
  7903  0023A0  0101               	movlb	1	; () banked
  7904  0023A2  C113  F016         	movff	vscp_handleProtocolEvent@i,?___awmod
  7905  0023A6  6A17               	clrf	?___awmod+1,c
  7906  0023A8  0E00               	movlw	0
  7907  0023AA  6E19               	movwf	?___awmod+3,c
  7908  0023AC  0E07               	movlw	7
  7909  0023AE  6E18               	movwf	?___awmod+2,c
  7910  0023B0  ECBE  F034         	call	___awmod	;wreg free
  7911  0023B4  5016               	movf	?___awmod,w,c
  7912  0023B6  0A06               	xorlw	6
  7913  0023B8  1017               	iorwf	?___awmod+1,w,c
  7914  0023BA  B4D8               	btfsc	status,2,c
  7915  0023BC  D013               	goto	l9678
  7916  0023BE  0EFF               	movlw	255
  7917  0023C0  0101               	movlb	1	; () banked
  7918  0023C2  0101               	movlb	1	; () banked
  7919  0023C4  2507               	addwf	vscp_handleProtocolEvent@len& (0+255),w,b
  7920  0023C6  0100               	movlb	0	; () banked
  7921  0023C8  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7922  0023CA  0100               	movlb	0	; () banked
  7923  0023CC  0100               	movlb	0	; () banked
  7924  0023CE  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  7925  0023D0  0EFF               	movlw	255
  7926  0023D2  23AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  7927  0023D4  0101               	movlb	1	; () banked
  7928  0023D6  0101               	movlb	1	; () banked
  7929  0023D8  5113               	movf	vscp_handleProtocolEvent@i& (0+255),w,b
  7930  0023DA  0100               	movlb	0	; () banked
  7931  0023DC  19AE               	xorwf	??_vscp_handleProtocolEvent& (0+255),w,b
  7932  0023DE  11AF               	iorwf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  7933  0023E0  A4D8               	btfss	status,2,c
  7934  0023E2  D043               	goto	l9698
  7935  0023E4                     l9678:
  7936                           
  7937                           ;vscp_firmware.c: 988: uint8_t bytes;
  7938                           ;vscp_firmware.c: 990: if ( ( i % 7 ) == 6 ) {
  7939  0023E4  0101               	movlb	1	; () banked
  7940  0023E6  C113  F016         	movff	vscp_handleProtocolEvent@i,?___awmod
  7941  0023EA  6A17               	clrf	?___awmod+1,c
  7942  0023EC  0E00               	movlw	0
  7943  0023EE  6E19               	movwf	?___awmod+3,c
  7944  0023F0  0E07               	movlw	7
  7945  0023F2  6E18               	movwf	?___awmod+2,c
  7946  0023F4  ECBE  F034         	call	___awmod	;wreg free
  7947  0023F8  5016               	movf	?___awmod,w,c
  7948  0023FA  0A06               	xorlw	6
  7949  0023FC  1017               	iorwf	?___awmod+1,w,c
  7950  0023FE  A4D8               	btfss	status,2,c
  7951  002400  D009               	goto	l9682
  7952                           
  7953                           ;vscp_firmware.c: 991: bytes = 7;
  7954  002402  0100               	movlb	0	; () banked
  7955  002404  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7956  002406  0E07               	movlw	7
  7957  002408  0101               	movlb	1	; () banked
  7958  00240A  0101               	movlb	1	; () banked
  7959  00240C  6F06               	movwf	vscp_handleProtocolEvent@bytes& (0+255),b
  7960  00240E  0100               	movlb	0	; () banked
  7961  002410  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7962                           
  7963                           ;vscp_firmware.c: 992: }
  7964  002412  D00F               	goto	l9684
  7965  002414                     l9682:
  7966                           
  7967                           ;vscp_firmware.c: 993: else {
  7968                           ;vscp_firmware.c: 994: bytes = ( i % 7 ) + 1;
  7969  002414  0101               	movlb	1	; () banked
  7970  002416  C113  F016         	movff	vscp_handleProtocolEvent@i,?___awmod
  7971  00241A  6A17               	clrf	?___awmod+1,c
  7972  00241C  0E00               	movlw	0
  7973  00241E  6E19               	movwf	?___awmod+3,c
  7974  002420  0E07               	movlw	7
  7975  002422  6E18               	movwf	?___awmod+2,c
  7976  002424  ECBE  F034         	call	___awmod	;wreg free
  7977  002428  0100               	movlb	0	; () banked
  7978  00242A  2916               	incf	?___awmod& (0+255),w,b
  7979  00242C  0101               	movlb	1	; () banked
  7980  00242E  0101               	movlb	1	; () banked
  7981  002430  6F06               	movwf	vscp_handleProtocolEvent@bytes& (0+255),b
  7982  002432                     l9684:
  7983                           
  7984                           ;vscp_firmware.c: 995: }
  7985                           ;vscp_firmware.c: 997: vscp_omsg.flags = 0x80 + bytes + 1;
  7986  002432  0101               	movlb	1	; () banked
  7987  002434  0101               	movlb	1	; () banked
  7988  002436  5106               	movf	vscp_handleProtocolEvent@bytes& (0+255),w,b
  7989  002438  0F81               	addlw	129
  7990  00243A  6E3E               	movwf	_vscp_omsg,c
  7991                           
  7992                           ; BSR set to: 1
  7993                           ;vscp_firmware.c: 998: vscp_omsg.priority = 0x07;
  7994  00243C  0100               	movlb	0	; () banked
  7995  00243E  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7996  002440  0E07               	movlw	7
  7997  002442  6E3F               	movwf	_vscp_omsg+1,c
  7998  002444  0100               	movlb	0	; () banked
  7999  002446  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8000                           
  8001                           ; BSR set to: 0
  8002                           ;vscp_firmware.c: 999: vscp_omsg.vscp_class = 0;
  8003  002448  0E00               	movlw	0
  8004  00244A  6E41               	movwf	_vscp_omsg+3,c
  8005  00244C  0E00               	movlw	0
  8006  00244E  6E40               	movwf	_vscp_omsg+2,c
  8007                           
  8008                           ; BSR set to: 0
  8009                           ;vscp_firmware.c: 1000: vscp_omsg.vscp_type = 26;
  8010  002450  0100               	movlb	0	; () banked
  8011  002452  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8012  002454  0E1A               	movlw	26
  8013  002456  6E42               	movwf	_vscp_omsg+4,c
  8014  002458  0100               	movlb	0	; () banked
  8015  00245A  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8016                           
  8017                           ; BSR set to: 0
  8018                           ;vscp_firmware.c: 1001: vscp_omsg.data[ 0 ] = pos;
  8019  00245C  C105  F043         	movff	vscp_handleProtocolEvent@pos,_vscp_omsg+5
  8020                           
  8021                           ; BSR set to: 0
  8022                           ;vscp_firmware.c: 1004: vscp_sendEvent();
  8023  002460  EC21  F036         	call	_vscp_sendEvent	;wreg free
  8024                           
  8025                           ;vscp_firmware.c: 1005: pos++;
  8026  002464  0101               	movlb	1	; () banked
  8027  002466  0101               	movlb	1	; () banked
  8028  002468  2B05               	incf	vscp_handleProtocolEvent@pos& (0+255),f,b
  8029  00246A                     l9698:
  8030  00246A  0101               	movlb	1	; () banked
  8031  00246C  0101               	movlb	1	; () banked
  8032  00246E  2B13               	incf	vscp_handleProtocolEvent@i& (0+255),f,b
  8033  002470                     l9700:
  8034  002470  0101               	movlb	1	; () banked
  8035  002472  0101               	movlb	1	; () banked
  8036  002474  5107               	movf	vscp_handleProtocolEvent@len& (0+255),w,b
  8037  002476  0101               	movlb	1	; () banked
  8038  002478  0101               	movlb	1	; () banked
  8039  00247A  5D13               	subwf	vscp_handleProtocolEvent@i& (0+255),w,b
  8040  00247C  B0D8               	btfsc	status,0,c
  8041  00247E  EF67  F016         	goto	l1388
  8042  002482  D770               	goto	l9672
  8043  002484                     l9702:
  8044                           
  8045                           ;vscp_firmware.c: 1013: if (vscp_nickname == vscp_imsg.data[ 0 ]) {
  8046  002484  0100               	movlb	0	; () banked
  8047  002486  0100               	movlb	0	; () banked
  8048  002488  51EC               	movf	_vscp_nickname& (0+255),w,b
  8049  00248A  0100               	movlb	0	; () banked
  8050  00248C  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  8051  002490  62DF               	cpfseq	indf2,c
  8052  002492  EF67  F016         	goto	l1388
  8053                           
  8054                           ; BSR set to: 0
  8055                           ;vscp_firmware.c: 1014: uint8_t i;
  8056                           ;vscp_firmware.c: 1015: uint8_t pos = vscp_imsg.data[ 1 ];
  8057  002496  C0F8  F108         	movff	_vscp_imsg+7,vscp_handleProtocolEvent@pos_1393
  8058                           
  8059                           ; BSR set to: 0
  8060                           ;vscp_firmware.c: 1016: uint8_t len = (vscp_imsg.flags - 2) & 0x07;
  8061  00249A  0100               	movlb	0	; () banked
  8062  00249C  0100               	movlb	0	; () banked
  8063  00249E  51F1               	movf	_vscp_imsg& (0+255),w,b
  8064  0024A0  0FFE               	addlw	254
  8065  0024A2  0B07               	andlw	7
  8066  0024A4  0101               	movlb	1	; () banked
  8067  0024A6  0101               	movlb	1	; () banked
  8068  0024A8  6F09               	movwf	vscp_handleProtocolEvent@len_1394& (0+255),b
  8069                           
  8070                           ; BSR set to: 1
  8071                           ;vscp_firmware.c: 1018: for (i = 0; i < len; i++) {
  8072  0024AA  0100               	movlb	0	; () banked
  8073  0024AC  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8074  0024AE  0E00               	movlw	0
  8075  0024B0  0101               	movlb	1	; () banked
  8076  0024B2  0101               	movlb	1	; () banked
  8077  0024B4  6F0E               	movwf	vscp_handleProtocolEvent@i_1392& (0+255),b
  8078  0024B6  0100               	movlb	0	; () banked
  8079  0024B8  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8080  0024BA  D044               	goto	l9716
  8081  0024BC                     l9710:
  8082                           
  8083                           ;vscp_firmware.c: 1020: vscp_writeRegister(pos + i, vscp_imsg.data[ 2 + i ]);
  8084  0024BC  0101               	movlb	1	; () banked
  8085  0024BE  0101               	movlb	1	; () banked
  8086  0024C0  5108               	movf	vscp_handleProtocolEvent@pos_1393& (0+255),w,b
  8087  0024C2  0101               	movlb	1	; () banked
  8088  0024C4  0101               	movlb	1	; () banked
  8089  0024C6  250E               	addwf	vscp_handleProtocolEvent@i_1392& (0+255),w,b
  8090  0024C8  0100               	movlb	0	; () banked
  8091  0024CA  0100               	movlb	0	; () banked
  8092  0024CC  6FAC               	movwf	?_vscp_writeRegister& (0+255),b
  8093  0024CE  0101               	movlb	1	; () banked
  8094  0024D0  0101               	movlb	1	; () banked
  8095  0024D2  510E               	movf	vscp_handleProtocolEvent@i_1392& (0+255),w,b
  8096  0024D4  0100               	movlb	0	; () banked
  8097  0024D6  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8098  0024D8  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  8099  0024DA  0E02               	movlw	2
  8100  0024DC  0100               	movlb	0	; () banked
  8101  0024DE  27AE               	addwf	??_vscp_handleProtocolEvent& (0+255),f,b
  8102  0024E0  0E00               	movlw	0
  8103  0024E2  23AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  8104  0024E4  0100               	movlb	0	; () banked
  8105  0024E6  0EF7               	movlw	low (_vscp_imsg+6)
  8106  0024E8  0100               	movlb	0	; () banked
  8107  0024EA  25AE               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  8108  0024EC  6ED9               	movwf	fsr2l,c
  8109  0024EE  0100               	movlb	0	; () banked
  8110  0024F0  0E00               	movlw	high (_vscp_imsg+6)
  8111  0024F2  0100               	movlb	0	; () banked
  8112  0024F4  21AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  8113  0024F6  6EDA               	movwf	fsr2h,c
  8114  0024F8  50DF               	movf	indf2,w,c
  8115  0024FA  0100               	movlb	0	; () banked
  8116  0024FC  0100               	movlb	0	; () banked
  8117  0024FE  6FAD               	movwf	(?_vscp_writeRegister+1)& (0+255),b
  8118  002500  ECFD  F036         	call	_vscp_writeRegister	;wreg free
  8119                           
  8120                           ;vscp_firmware.c: 1021: vscp_omsg.data[ 1 + i ] = vscp_readRegister(pos + i);
  8121  002504  0101               	movlb	1	; () banked
  8122  002506  0101               	movlb	1	; () banked
  8123  002508  510E               	movf	vscp_handleProtocolEvent@i_1392& (0+255),w,b
  8124  00250A  0100               	movlb	0	; () banked
  8125  00250C  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8126  00250E  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  8127  002510  0E01               	movlw	1
  8128  002512  0100               	movlb	0	; () banked
  8129  002514  27AE               	addwf	??_vscp_handleProtocolEvent& (0+255),f,b
  8130  002516  0E00               	movlw	0
  8131  002518  23AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  8132  00251A  0E43               	movlw	low (_vscp_omsg+5)
  8133  00251C  0100               	movlb	0	; () banked
  8134  00251E  25AE               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  8135  002520  6ED9               	movwf	fsr2l,c
  8136  002522  0E00               	movlw	high (_vscp_omsg+5)
  8137  002524  0100               	movlb	0	; () banked
  8138  002526  21AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  8139  002528  6EDA               	movwf	fsr2h,c
  8140  00252A  0101               	movlb	1	; () banked
  8141  00252C  0101               	movlb	1	; () banked
  8142  00252E  5108               	movf	vscp_handleProtocolEvent@pos_1393& (0+255),w,b
  8143  002530  0101               	movlb	1	; () banked
  8144  002532  0101               	movlb	1	; () banked
  8145  002534  250E               	addwf	vscp_handleProtocolEvent@i_1392& (0+255),w,b
  8146  002536  6E2B               	movwf	?_vscp_readRegister,c
  8147  002538  EC5F  F037         	call	_vscp_readRegister	;wreg free
  8148  00253C  6EDF               	movwf	indf2,c
  8149  00253E  0101               	movlb	1	; () banked
  8150  002540  0101               	movlb	1	; () banked
  8151  002542  2B0E               	incf	vscp_handleProtocolEvent@i_1392& (0+255),f,b
  8152  002544                     l9716:
  8153  002544  0101               	movlb	1	; () banked
  8154  002546  0101               	movlb	1	; () banked
  8155  002548  5109               	movf	vscp_handleProtocolEvent@len_1394& (0+255),w,b
  8156  00254A  0101               	movlb	1	; () banked
  8157  00254C  0101               	movlb	1	; () banked
  8158  00254E  5D0E               	subwf	vscp_handleProtocolEvent@i_1392& (0+255),w,b
  8159  002550  A0D8               	btfss	status,0,c
  8160  002552  D7B4               	goto	l9710
  8161                           
  8162                           ; BSR set to: 1
  8163                           ;vscp_firmware.c: 1022: }
  8164                           ;vscp_firmware.c: 1024: vscp_omsg.priority = 0x07;
  8165                           
  8166                           ; BSR set to: 1
  8167  002554  0100               	movlb	0	; () banked
  8168  002556  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8169  002558  0E07               	movlw	7
  8170  00255A  6E3F               	movwf	_vscp_omsg+1,c
  8171  00255C  0100               	movlb	0	; () banked
  8172  00255E  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8173                           
  8174                           ; BSR set to: 0
  8175                           ;vscp_firmware.c: 1025: vscp_omsg.vscp_class = 0;
  8176  002560  0E00               	movlw	0
  8177  002562  6E41               	movwf	_vscp_omsg+3,c
  8178  002564  0E00               	movlw	0
  8179  002566  6E40               	movwf	_vscp_omsg+2,c
  8180                           
  8181                           ; BSR set to: 0
  8182                           ;vscp_firmware.c: 1026: vscp_omsg.vscp_type = 26;
  8183  002568  0100               	movlb	0	; () banked
  8184  00256A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8185  00256C  0E1A               	movlw	26
  8186  00256E  6E42               	movwf	_vscp_omsg+4,c
  8187  002570  0100               	movlb	0	; () banked
  8188  002572  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;vscp_firmware.c: 1027: vscp_omsg.data[ 0 ] = 0;
  8192  002574  0100               	movlb	0	; () banked
  8193  002576  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8194  002578  0E00               	movlw	0
  8195  00257A  6E43               	movwf	_vscp_omsg+5,c
  8196  00257C  0100               	movlb	0	; () banked
  8197  00257E  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8198                           
  8199                           ; BSR set to: 0
  8200                           ;vscp_firmware.c: 1028: vscp_omsg.flags = 0x80 + len + 1;
  8201  002580  0101               	movlb	1	; () banked
  8202  002582  0101               	movlb	1	; () banked
  8203  002584  5109               	movf	vscp_handleProtocolEvent@len_1394& (0+255),w,b
  8204  002586  0F81               	addlw	129
  8205  002588  6E3E               	movwf	_vscp_omsg,c
  8206                           
  8207                           ; BSR set to: 1
  8208                           ;vscp_firmware.c: 1031: vscp_sendEvent();
  8209  00258A  EC21  F036         	call	_vscp_sendEvent	;wreg free
  8210  00258E  D39F               	goto	l1388
  8211  002590                     l9730:
  8212                           
  8213                           ;vscp_firmware.c: 1038: if (vscp_nickname == vscp_imsg.data[ 0 ]) {
  8214  002590  0100               	movlb	0	; () banked
  8215  002592  0100               	movlb	0	; () banked
  8216  002594  51EC               	movf	_vscp_nickname& (0+255),w,b
  8217  002596  0100               	movlb	0	; () banked
  8218  002598  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  8219  00259C  62DF               	cpfseq	indf2,c
  8220  00259E  D397               	goto	l1388
  8221                           
  8222                           ; BSR set to: 0
  8223                           ;vscp_firmware.c: 1040: vscp_omsg.data[ 1 ] = vscp_writeAppReg(
  8224                           ;vscp_firmware.c: 1041: vscp_imsg.data[ 1 ],
  8225                           ;vscp_firmware.c: 1042: vscp_readAppReg(vscp_imsg.data[ 1 ]) + 1);
  8226  0025A0  C0F8  F0A2         	movff	_vscp_imsg+7,?_vscp_writeAppReg
  8227  0025A4  C0F8  F018         	movff	_vscp_imsg+7,?_vscp_readAppReg
  8228  0025A8  EC4B  F031         	call	_vscp_readAppReg	;wreg free
  8229  0025AC  0100               	movlb	0	; () banked
  8230  0025AE  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8231  0025B0  0100               	movlb	0	; () banked
  8232  0025B2  29AE               	incf	??_vscp_handleProtocolEvent& (0+255),w,b
  8233  0025B4  0100               	movlb	0	; () banked
  8234  0025B6  0100               	movlb	0	; () banked
  8235  0025B8  6FA3               	movwf	(?_vscp_writeAppReg+1)& (0+255),b
  8236  0025BA  EC11  F003         	call	_vscp_writeAppReg	;wreg free
  8237  0025BE  6E44               	movwf	_vscp_omsg+6,c
  8238                           
  8239                           ;vscp_firmware.c: 1044: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  8240  0025C0  C0F8  F043         	movff	_vscp_imsg+7,_vscp_omsg+5
  8241                           
  8242                           ;vscp_firmware.c: 1046: vscp_omsg.priority = 0x03;
  8243  0025C4  0100               	movlb	0	; () banked
  8244  0025C6  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8245  0025C8  0E03               	movlw	3
  8246  0025CA  6E3F               	movwf	_vscp_omsg+1,c
  8247  0025CC  0100               	movlb	0	; () banked
  8248  0025CE  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8249                           
  8250                           ; BSR set to: 0
  8251                           ;vscp_firmware.c: 1047: vscp_omsg.flags = 0x80 + 2;
  8252  0025D0  0100               	movlb	0	; () banked
  8253  0025D2  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8254  0025D4  0E82               	movlw	130
  8255  0025D6  6E3E               	movwf	_vscp_omsg,c
  8256  0025D8  0100               	movlb	0	; () banked
  8257  0025DA  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;vscp_firmware.c: 1048: vscp_omsg.vscp_class = 0;
  8261  0025DC  0E00               	movlw	0
  8262  0025DE  6E41               	movwf	_vscp_omsg+3,c
  8263  0025E0  0E00               	movlw	0
  8264  0025E2  6E40               	movwf	_vscp_omsg+2,c
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;vscp_firmware.c: 1049: vscp_omsg.vscp_type = 10;
  8268  0025E4  0100               	movlb	0	; () banked
  8269  0025E6  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8270  0025E8  0E0A               	movlw	10
  8271  0025EA  6E42               	movwf	_vscp_omsg+4,c
  8272  0025EC  0100               	movlb	0	; () banked
  8273  0025EE  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8274                           
  8275                           ; BSR set to: 0
  8276                           ;vscp_firmware.c: 1052: vscp_sendEvent();
  8277  0025F0  EC21  F036         	call	_vscp_sendEvent	;wreg free
  8278  0025F4  D36C               	goto	l1388
  8279  0025F6                     l9746:
  8280                           
  8281                           ;vscp_firmware.c: 1058: if (vscp_nickname == vscp_imsg.data[ 0 ]) {
  8282  0025F6  0100               	movlb	0	; () banked
  8283  0025F8  0100               	movlb	0	; () banked
  8284  0025FA  51EC               	movf	_vscp_nickname& (0+255),w,b
  8285  0025FC  0100               	movlb	0	; () banked
  8286  0025FE  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  8287  002602  62DF               	cpfseq	indf2,c
  8288  002604  D364               	goto	l1388
  8289                           
  8290                           ; BSR set to: 0
  8291                           ;vscp_firmware.c: 1060: vscp_omsg.data[ 1 ] = vscp_writeAppReg(
  8292                           ;vscp_firmware.c: 1061: vscp_imsg.data[ 1 ],
  8293                           ;vscp_firmware.c: 1062: vscp_readAppReg(vscp_imsg.data[ 1 ]) - 1);
  8294  002606  C0F8  F0A2         	movff	_vscp_imsg+7,?_vscp_writeAppReg
  8295  00260A  C0F8  F018         	movff	_vscp_imsg+7,?_vscp_readAppReg
  8296  00260E  EC4B  F031         	call	_vscp_readAppReg	;wreg free
  8297  002612  0100               	movlb	0	; () banked
  8298  002614  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8299  002616  0100               	movlb	0	; () banked
  8300  002618  05AE               	decf	??_vscp_handleProtocolEvent& (0+255),w,b
  8301  00261A  0100               	movlb	0	; () banked
  8302  00261C  0100               	movlb	0	; () banked
  8303  00261E  6FA3               	movwf	(?_vscp_writeAppReg+1)& (0+255),b
  8304  002620  EC11  F003         	call	_vscp_writeAppReg	;wreg free
  8305  002624  6E44               	movwf	_vscp_omsg+6,c
  8306                           
  8307                           ;vscp_firmware.c: 1064: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  8308  002626  C0F8  F043         	movff	_vscp_imsg+7,_vscp_omsg+5
  8309                           
  8310                           ;vscp_firmware.c: 1066: vscp_omsg.priority = 0x03;
  8311  00262A  0100               	movlb	0	; () banked
  8312  00262C  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8313  00262E  0E03               	movlw	3
  8314  002630  6E3F               	movwf	_vscp_omsg+1,c
  8315  002632  0100               	movlb	0	; () banked
  8316  002634  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8317                           
  8318                           ; BSR set to: 0
  8319                           ;vscp_firmware.c: 1067: vscp_omsg.flags = 0x80 + 2;
  8320  002636  0100               	movlb	0	; () banked
  8321  002638  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8322  00263A  0E82               	movlw	130
  8323  00263C  6E3E               	movwf	_vscp_omsg,c
  8324  00263E  0100               	movlb	0	; () banked
  8325  002640  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;vscp_firmware.c: 1068: vscp_omsg.vscp_class = 0;
  8329  002642  0E00               	movlw	0
  8330  002644  6E41               	movwf	_vscp_omsg+3,c
  8331  002646  0E00               	movlw	0
  8332  002648  6E40               	movwf	_vscp_omsg+2,c
  8333                           
  8334                           ; BSR set to: 0
  8335                           ;vscp_firmware.c: 1069: vscp_omsg.vscp_type = 10;
  8336  00264A  0100               	movlb	0	; () banked
  8337  00264C  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8338  00264E  0E0A               	movlw	10
  8339  002650  6E42               	movwf	_vscp_omsg+4,c
  8340  002652  0100               	movlb	0	; () banked
  8341  002654  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8342                           
  8343                           ; BSR set to: 0
  8344                           ;vscp_firmware.c: 1072: vscp_sendEvent();
  8345  002656  EC21  F036         	call	_vscp_sendEvent	;wreg free
  8346  00265A  D339               	goto	l1388
  8347  00265C                     l9762:
  8348                           
  8349                           ;vscp_firmware.c: 1078: if ((vscp_nickname == vscp_imsg.data[ 0 ]) ||
  8350                           ;vscp_firmware.c: 1079: (0xff == vscp_imsg.data[ 0 ])) {
  8351  00265C  0100               	movlb	0	; () banked
  8352  00265E  0100               	movlb	0	; () banked
  8353  002660  51F7               	movf	(_vscp_imsg+6)& (0+255),w,b
  8354  002662  0100               	movlb	0	; () banked
  8355  002664  0100               	movlb	0	; () banked
  8356  002666  19EC               	xorwf	_vscp_nickname& (0+255),w,b
  8357  002668  B4D8               	btfsc	status,2,c
  8358  00266A  D005               	goto	l9766
  8359                           
  8360                           ; BSR set to: 0
  8361  00266C  0100               	movlb	0	; () banked
  8362  00266E  0100               	movlb	0	; () banked
  8363  002670  29F7               	incf	(_vscp_imsg+6)& (0+255),w,b
  8364  002672  A4D8               	btfss	status,2,c
  8365  002674  D32C               	goto	l1388
  8366  002676                     l9766:
  8367                           
  8368                           ; BSR set to: 0
  8369                           ;vscp_firmware.c: 1081: uint8_t i, j, k = 0;
  8370  002676  0100               	movlb	0	; () banked
  8371  002678  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8372  00267A  0E00               	movlw	0
  8373  00267C  0101               	movlb	1	; () banked
  8374  00267E  0101               	movlb	1	; () banked
  8375  002680  6F0D               	movwf	vscp_handleProtocolEvent@k& (0+255),b
  8376  002682  0100               	movlb	0	; () banked
  8377  002684  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8378                           
  8379                           ;vscp_firmware.c: 1085: vscp_omsg.priority = 0x03;
  8380  002686  0100               	movlb	0	; () banked
  8381  002688  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8382  00268A  0E03               	movlw	3
  8383  00268C  6E3F               	movwf	_vscp_omsg+1,c
  8384  00268E  0100               	movlb	0	; () banked
  8385  002690  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8386                           
  8387                           ;vscp_firmware.c: 1086: vscp_omsg.flags = 0x80 + 8;
  8388  002692  0100               	movlb	0	; () banked
  8389  002694  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8390  002696  0E88               	movlw	136
  8391  002698  6E3E               	movwf	_vscp_omsg,c
  8392  00269A  0100               	movlb	0	; () banked
  8393  00269C  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8394                           
  8395                           ; BSR set to: 0
  8396                           ;vscp_firmware.c: 1087: vscp_omsg.vscp_class = 0;
  8397  00269E  0E00               	movlw	0
  8398  0026A0  6E41               	movwf	_vscp_omsg+3,c
  8399  0026A2  0E00               	movlw	0
  8400  0026A4  6E40               	movwf	_vscp_omsg+2,c
  8401                           
  8402                           ; BSR set to: 0
  8403                           ;vscp_firmware.c: 1088: vscp_omsg.vscp_type = 32;
  8404  0026A6  0100               	movlb	0	; () banked
  8405  0026A8  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8406  0026AA  0E20               	movlw	32
  8407  0026AC  6E42               	movwf	_vscp_omsg+4,c
  8408  0026AE  0100               	movlb	0	; () banked
  8409  0026B0  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;vscp_firmware.c: 1090: for (i = 0; i < 3; i++)
  8413  0026B2  0100               	movlb	0	; () banked
  8414  0026B4  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8415  0026B6  0E00               	movlw	0
  8416  0026B8  0101               	movlb	1	; () banked
  8417  0026BA  0101               	movlb	1	; () banked
  8418  0026BC  6F12               	movwf	vscp_handleProtocolEvent@i_1395& (0+255),b
  8419  0026BE  0100               	movlb	0	; () banked
  8420  0026C0  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8421  0026C2  D03A               	goto	L66
  8422  0026C4                     l1353:
  8423                           
  8424                           ; BSR set to: 1
  8425                           ;vscp_firmware.c: 1091: {
  8426                           ;vscp_firmware.c: 1092: vscp_omsg.data[0] = i;
  8427  0026C4  C112  F043         	movff	vscp_handleProtocolEvent@i_1395,_vscp_omsg+5
  8428                           
  8429                           ; BSR set to: 1
  8430                           ;vscp_firmware.c: 1094: for (j = 1; j < 8; j++) {
  8431  0026C8  0100               	movlb	0	; () banked
  8432  0026CA  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8433  0026CC  0E01               	movlw	1
  8434  0026CE  0101               	movlb	1	; () banked
  8435  0026D0  0101               	movlb	1	; () banked
  8436  0026D2  6F14               	movwf	vscp_handleProtocolEvent@j& (0+255),b
  8437  0026D4  0100               	movlb	0	; () banked
  8438  0026D6  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8439  0026D8  D01F               	goto	L67
  8440  0026DA                     l9782:
  8441                           
  8442                           ; BSR set to: 1
  8443                           ;vscp_firmware.c: 1095: vscp_omsg.data[j] = vscp_getGUID(15 - k++);
  8444  0026DA  0101               	movlb	1	; () banked
  8445  0026DC  0101               	movlb	1	; () banked
  8446  0026DE  5114               	movf	vscp_handleProtocolEvent@j& (0+255),w,b
  8447  0026E0  0D01               	mullw	1
  8448  0026E2  0E43               	movlw	low (_vscp_omsg+5)
  8449  0026E4  24F3               	addwf	prodl,w,c
  8450  0026E6  6ED9               	movwf	fsr2l,c
  8451  0026E8  0E00               	movlw	high (_vscp_omsg+5)
  8452  0026EA  20F4               	addwfc	prodh,w,c
  8453  0026EC  6EDA               	movwf	fsr2h,c
  8454  0026EE  0101               	movlb	1	; () banked
  8455  0026F0  0101               	movlb	1	; () banked
  8456  0026F2  510D               	movf	vscp_handleProtocolEvent@k& (0+255),w,b
  8457  0026F4  0800               	sublw	0
  8458  0026F6  0F0F               	addlw	15
  8459  0026F8  6E18               	movwf	?_vscp_getGUID,c
  8460  0026FA  ECC6  F037         	call	_vscp_getGUID	;wreg free
  8461  0026FE  6EDF               	movwf	indf2,c
  8462  002700  0101               	movlb	1	; () banked
  8463  002702  0101               	movlb	1	; () banked
  8464  002704  2B0D               	incf	vscp_handleProtocolEvent@k& (0+255),f,b
  8465                           
  8466                           ; BSR set to: 1
  8467                           ;vscp_firmware.c: 1096: if (k > 16)
  8468  002706  0E10               	movlw	16
  8469  002708  0101               	movlb	1	; () banked
  8470  00270A  0101               	movlb	1	; () banked
  8471  00270C  650D               	cpfsgt	vscp_handleProtocolEvent@k& (0+255),b
  8472  00270E  D001               	goto	l9790
  8473  002710  D008               	goto	l9794
  8474  002712                     l9790:
  8475                           
  8476                           ; BSR set to: 1
  8477  002712  0101               	movlb	1	; () banked
  8478  002714  0101               	movlb	1	; () banked
  8479  002716  2B14               	incf	vscp_handleProtocolEvent@j& (0+255),f,b
  8480  002718                     L67:
  8481                           
  8482                           ; BSR set to: 1
  8483  002718  0E07               	movlw	7
  8484  00271A  0101               	movlb	1	; () banked
  8485  00271C  0101               	movlb	1	; () banked
  8486  00271E  6514               	cpfsgt	vscp_handleProtocolEvent@j& (0+255),b
  8487  002720  D7DC               	goto	l9782
  8488  002722                     l9794:
  8489                           
  8490                           ; BSR set to: 1
  8491                           ;vscp_firmware.c: 1098: }
  8492                           ;vscp_firmware.c: 1100: if (k > 16)
  8493  002722  0E10               	movlw	16
  8494  002724  0101               	movlb	1	; () banked
  8495  002726  0101               	movlb	1	; () banked
  8496  002728  650D               	cpfsgt	vscp_handleProtocolEvent@k& (0+255),b
  8497  00272A  D001               	goto	l9798
  8498  00272C  D00A               	goto	l9804
  8499  00272E                     l9798:
  8500                           
  8501                           ; BSR set to: 1
  8502                           ;vscp_firmware.c: 1103: vscp_sendEvent();
  8503  00272E  EC21  F036         	call	_vscp_sendEvent	;wreg free
  8504  002732  0101               	movlb	1	; () banked
  8505  002734  0101               	movlb	1	; () banked
  8506  002736  2B12               	incf	vscp_handleProtocolEvent@i_1395& (0+255),f,b
  8507  002738                     L66:
  8508                           
  8509                           ; BSR set to: 1
  8510  002738  0E02               	movlw	2
  8511  00273A  0101               	movlb	1	; () banked
  8512  00273C  0101               	movlb	1	; () banked
  8513  00273E  6512               	cpfsgt	vscp_handleProtocolEvent@i_1395& (0+255),b
  8514  002740  D7C1               	goto	l1353
  8515  002742                     l9804:
  8516                           
  8517                           ; BSR set to: 1
  8518                           ;vscp_firmware.c: 1104: }
  8519                           ;vscp_firmware.c: 1106: for (j = 0; j < 5; j++)
  8520  002742  0100               	movlb	0	; () banked
  8521  002744  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8522  002746  0E00               	movlw	0
  8523  002748  0101               	movlb	1	; () banked
  8524  00274A  0101               	movlb	1	; () banked
  8525  00274C  6F14               	movwf	vscp_handleProtocolEvent@j& (0+255),b
  8526  00274E  0100               	movlb	0	; () banked
  8527  002750  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8528  002752  D037               	goto	L68
  8529  002754                     l9810:
  8530                           
  8531                           ; BSR set to: 1
  8532                           ;vscp_firmware.c: 1107: {
  8533                           ;vscp_firmware.c: 1108: if (vscp_getMDF_URL(j) > 0)
  8534  002754  C114  F016         	movff	vscp_handleProtocolEvent@j,?_vscp_getMDF_URL
  8535  002758  EC6C  F037         	call	_vscp_getMDF_URL	;wreg free
  8536  00275C  0900               	iorlw	0
  8537  00275E  B4D8               	btfsc	status,2,c
  8538  002760  D018               	goto	l9814
  8539                           
  8540                           ;vscp_firmware.c: 1109: vscp_omsg.data[3 + j] = vscp_getMDF_URL(j);
  8541  002762  0101               	movlb	1	; () banked
  8542  002764  0101               	movlb	1	; () banked
  8543  002766  5114               	movf	vscp_handleProtocolEvent@j& (0+255),w,b
  8544  002768  0100               	movlb	0	; () banked
  8545  00276A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8546  00276C  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  8547  00276E  0E03               	movlw	3
  8548  002770  0100               	movlb	0	; () banked
  8549  002772  27AE               	addwf	??_vscp_handleProtocolEvent& (0+255),f,b
  8550  002774  0E00               	movlw	0
  8551  002776  23AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  8552  002778  0E43               	movlw	low (_vscp_omsg+5)
  8553  00277A  0100               	movlb	0	; () banked
  8554  00277C  25AE               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  8555  00277E  6ED9               	movwf	fsr2l,c
  8556  002780  0E00               	movlw	high (_vscp_omsg+5)
  8557  002782  0100               	movlb	0	; () banked
  8558  002784  21AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  8559  002786  6EDA               	movwf	fsr2h,c
  8560  002788  C114  F016         	movff	vscp_handleProtocolEvent@j,?_vscp_getMDF_URL
  8561  00278C  EC6C  F037         	call	_vscp_getMDF_URL	;wreg free
  8562  002790  D014               	goto	L63
  8563  002792                     l9814:
  8564                           
  8565                           ;vscp_firmware.c: 1110: else
  8566                           ;vscp_firmware.c: 1111: vscp_omsg.data[3 + j] = 0;
  8567  002792  0101               	movlb	1	; () banked
  8568  002794  0101               	movlb	1	; () banked
  8569  002796  5114               	movf	vscp_handleProtocolEvent@j& (0+255),w,b
  8570  002798  0100               	movlb	0	; () banked
  8571  00279A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8572  00279C  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  8573  00279E  0E03               	movlw	3
  8574  0027A0  0100               	movlb	0	; () banked
  8575  0027A2  27AE               	addwf	??_vscp_handleProtocolEvent& (0+255),f,b
  8576  0027A4  0E00               	movlw	0
  8577  0027A6  23AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  8578  0027A8  0E43               	movlw	low (_vscp_omsg+5)
  8579  0027AA  0100               	movlb	0	; () banked
  8580  0027AC  25AE               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  8581  0027AE  6ED9               	movwf	fsr2l,c
  8582  0027B0  0E00               	movlw	high (_vscp_omsg+5)
  8583  0027B2  0100               	movlb	0	; () banked
  8584  0027B4  21AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  8585  0027B6  6EDA               	movwf	fsr2h,c
  8586  0027B8  0E00               	movlw	0
  8587  0027BA                     L63:
  8588  0027BA  6EDF               	movwf	indf2,c
  8589                           
  8590                           ; BSR set to: 0
  8591  0027BC  0101               	movlb	1	; () banked
  8592  0027BE  0101               	movlb	1	; () banked
  8593  0027C0  2B14               	incf	vscp_handleProtocolEvent@j& (0+255),f,b
  8594  0027C2                     L68:
  8595                           
  8596                           ; BSR set to: 1
  8597  0027C2  0E04               	movlw	4
  8598  0027C4  0101               	movlb	1	; () banked
  8599  0027C6  0101               	movlb	1	; () banked
  8600  0027C8  6514               	cpfsgt	vscp_handleProtocolEvent@j& (0+255),b
  8601  0027CA  D7C4               	goto	l9810
  8602                           
  8603                           ; BSR set to: 1
  8604                           ;vscp_firmware.c: 1112: }
  8605                           ;vscp_firmware.c: 1114: vscp_sendEvent();
  8606                           
  8607                           ; BSR set to: 1
  8608  0027CC  EC21  F036         	call	_vscp_sendEvent	;wreg free
  8609                           
  8610                           ;vscp_firmware.c: 1116: k = 5;
  8611  0027D0  0100               	movlb	0	; () banked
  8612  0027D2  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8613  0027D4  0E05               	movlw	5
  8614  0027D6  0101               	movlb	1	; () banked
  8615  0027D8  0101               	movlb	1	; () banked
  8616  0027DA  6F0D               	movwf	vscp_handleProtocolEvent@k& (0+255),b
  8617  0027DC  0100               	movlb	0	; () banked
  8618  0027DE  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8619                           
  8620                           ; BSR set to: 0
  8621                           ;vscp_firmware.c: 1117: for (i = 3; i < 7; i++)
  8622  0027E0  0100               	movlb	0	; () banked
  8623  0027E2  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8624  0027E4  0E03               	movlw	3
  8625  0027E6  0101               	movlb	1	; () banked
  8626  0027E8  0101               	movlb	1	; () banked
  8627  0027EA  6F12               	movwf	vscp_handleProtocolEvent@i_1395& (0+255),b
  8628  0027EC  0100               	movlb	0	; () banked
  8629  0027EE  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8630  0027F0  D02A               	goto	L69
  8631  0027F2                     l1363:
  8632                           
  8633                           ; BSR set to: 1
  8634                           ;vscp_firmware.c: 1118: {
  8635                           ;vscp_firmware.c: 1119: vscp_omsg.data[0] = i;
  8636  0027F2  C112  F043         	movff	vscp_handleProtocolEvent@i_1395,_vscp_omsg+5
  8637                           
  8638                           ; BSR set to: 1
  8639                           ;vscp_firmware.c: 1121: for (j = 1; j < 8; j++) {
  8640  0027F6  0100               	movlb	0	; () banked
  8641  0027F8  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8642  0027FA  0E01               	movlw	1
  8643  0027FC  0101               	movlb	1	; () banked
  8644  0027FE  0101               	movlb	1	; () banked
  8645  002800  6F14               	movwf	vscp_handleProtocolEvent@j& (0+255),b
  8646  002802  0100               	movlb	0	; () banked
  8647  002804  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8648  002806  D015               	goto	L70
  8649  002808                     l9836:
  8650                           
  8651                           ; BSR set to: 1
  8652                           ;vscp_firmware.c: 1122: vscp_omsg.data[j] = vscp_getMDF_URL(k++);
  8653  002808  0101               	movlb	1	; () banked
  8654  00280A  0101               	movlb	1	; () banked
  8655  00280C  5114               	movf	vscp_handleProtocolEvent@j& (0+255),w,b
  8656  00280E  0D01               	mullw	1
  8657  002810  0E43               	movlw	low (_vscp_omsg+5)
  8658  002812  24F3               	addwf	prodl,w,c
  8659  002814  6ED9               	movwf	fsr2l,c
  8660  002816  0E00               	movlw	high (_vscp_omsg+5)
  8661  002818  20F4               	addwfc	prodh,w,c
  8662  00281A  6EDA               	movwf	fsr2h,c
  8663  00281C  C10D  F016         	movff	vscp_handleProtocolEvent@k,?_vscp_getMDF_URL
  8664  002820  EC6C  F037         	call	_vscp_getMDF_URL	;wreg free
  8665  002824  6EDF               	movwf	indf2,c
  8666  002826  0101               	movlb	1	; () banked
  8667  002828  0101               	movlb	1	; () banked
  8668  00282A  2B0D               	incf	vscp_handleProtocolEvent@k& (0+255),f,b
  8669                           
  8670                           ; BSR set to: 1
  8671  00282C  0101               	movlb	1	; () banked
  8672  00282E  0101               	movlb	1	; () banked
  8673  002830  2B14               	incf	vscp_handleProtocolEvent@j& (0+255),f,b
  8674  002832                     L70:
  8675                           
  8676                           ; BSR set to: 1
  8677  002832  0E07               	movlw	7
  8678  002834  0101               	movlb	1	; () banked
  8679  002836  0101               	movlb	1	; () banked
  8680  002838  6514               	cpfsgt	vscp_handleProtocolEvent@j& (0+255),b
  8681  00283A  D7E6               	goto	l9836
  8682                           
  8683                           ; BSR set to: 1
  8684                           ;vscp_firmware.c: 1123: }
  8685                           ;vscp_firmware.c: 1124: vscp_sendEvent();
  8686                           
  8687                           ; BSR set to: 1
  8688  00283C  EC21  F036         	call	_vscp_sendEvent	;wreg free
  8689  002840  0101               	movlb	1	; () banked
  8690  002842  0101               	movlb	1	; () banked
  8691  002844  2B12               	incf	vscp_handleProtocolEvent@i_1395& (0+255),f,b
  8692  002846                     L69:
  8693                           
  8694                           ; BSR set to: 1
  8695  002846  0E06               	movlw	6
  8696  002848  0101               	movlb	1	; () banked
  8697  00284A  0101               	movlb	1	; () banked
  8698  00284C  6512               	cpfsgt	vscp_handleProtocolEvent@i_1395& (0+255),b
  8699  00284E  D7D1               	goto	l1363
  8700  002850  D23E               	goto	l1388
  8701  002852                     l9850:
  8702                           
  8703                           ;vscp_firmware.c: 1133: if (vscp_nickname == vscp_imsg.data[ 0 ]) {
  8704  002852  0100               	movlb	0	; () banked
  8705  002854  0100               	movlb	0	; () banked
  8706  002856  51EC               	movf	_vscp_nickname& (0+255),w,b
  8707  002858  0100               	movlb	0	; () banked
  8708  00285A  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  8709  00285E  62DF               	cpfseq	indf2,c
  8710  002860  D236               	goto	l1388
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;vscp_firmware.c: 1135: vscp_omsg.priority = 0x03;
  8714  002862  0100               	movlb	0	; () banked
  8715  002864  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8716  002866  0E03               	movlw	3
  8717  002868  6E3F               	movwf	_vscp_omsg+1,c
  8718  00286A  0100               	movlb	0	; () banked
  8719  00286C  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8720                           
  8721                           ;vscp_firmware.c: 1136: vscp_omsg.flags = 0x80 + 7;
  8722  00286E  0100               	movlb	0	; () banked
  8723  002870  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8724  002872  0E87               	movlw	135
  8725  002874  6E3E               	movwf	_vscp_omsg,c
  8726  002876  0100               	movlb	0	; () banked
  8727  002878  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8728                           
  8729                           ; BSR set to: 0
  8730                           ;vscp_firmware.c: 1137: vscp_omsg.vscp_class = 0;
  8731  00287A  0E00               	movlw	0
  8732  00287C  6E41               	movwf	_vscp_omsg+3,c
  8733  00287E  0E00               	movlw	0
  8734  002880  6E40               	movwf	_vscp_omsg+2,c
  8735                           
  8736                           ; BSR set to: 0
  8737                           ;vscp_firmware.c: 1138: vscp_omsg.vscp_type = 34;
  8738  002882  0100               	movlb	0	; () banked
  8739  002884  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8740  002886  0E22               	movlw	34
  8741  002888  6E42               	movwf	_vscp_omsg+4,c
  8742  00288A  0100               	movlb	0	; () banked
  8743  00288C  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8744                           
  8745                           ; BSR set to: 0
  8746                           ;vscp_firmware.c: 1140: vscp_getMatrixInfo((char *) vscp_omsg.data);
  8747  00288E  0E00               	movlw	high (_vscp_omsg+5)
  8748  002890  6E17               	movwf	?_vscp_getMatrixInfo+1,c
  8749  002892  0E43               	movlw	low (_vscp_omsg+5)
  8750  002894  6E16               	movwf	?_vscp_getMatrixInfo,c
  8751  002896  EC7A  F036         	call	_vscp_getMatrixInfo	;wreg free
  8752                           
  8753                           ;vscp_firmware.c: 1143: vscp_sendEvent();
  8754  00289A  EC21  F036         	call	_vscp_sendEvent	;wreg free
  8755  00289E  D217               	goto	l1388
  8756  0028A0                     l9862:
  8757                           
  8758                           ;vscp_firmware.c: 1156: if ( vscp_nickname == vscp_imsg.data[0] ) {
  8759  0028A0  0100               	movlb	0	; () banked
  8760  0028A2  0100               	movlb	0	; () banked
  8761  0028A4  51EC               	movf	_vscp_nickname& (0+255),w,b
  8762  0028A6  0100               	movlb	0	; () banked
  8763  0028A8  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  8764  0028AC  62DF               	cpfseq	indf2,c
  8765  0028AE  D20F               	goto	l1388
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;vscp_firmware.c: 1158: uint16_t page_save, bytes = 0;
  8769  0028B0  0E00               	movlw	0
  8770  0028B2  0101               	movlb	1	; () banked
  8771  0028B4  0101               	movlb	1	; () banked
  8772  0028B6  6F11               	movwf	(vscp_handleProtocolEvent@bytes_1399+1)& (0+255),b
  8773  0028B8  0E00               	movlw	0
  8774  0028BA  0101               	movlb	1	; () banked
  8775  0028BC  6F10               	movwf	vscp_handleProtocolEvent@bytes_1399& (0+255),b
  8776                           
  8777                           ; BSR set to: 1
  8778                           ;vscp_firmware.c: 1159: uint8_t byte = 0;
  8779  0028BE  0100               	movlb	0	; () banked
  8780  0028C0  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8781  0028C2  0E00               	movlw	0
  8782  0028C4  0101               	movlb	1	; () banked
  8783  0028C6  0101               	movlb	1	; () banked
  8784  0028C8  6F0F               	movwf	vscp_handleProtocolEvent@byte& (0+255),b
  8785  0028CA  0100               	movlb	0	; () banked
  8786  0028CC  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;vscp_firmware.c: 1160: uint8_t bytes_this_time, cb;
  8790                           ;vscp_firmware.c: 1164: if ( ( vscp_imsg.flags & 0x0f) > 3 ) {
  8791  0028CE  C0F1  F0AE         	movff	_vscp_imsg,??_vscp_handleProtocolEvent
  8792  0028D2  0E0F               	movlw	15
  8793  0028D4  0100               	movlb	0	; () banked
  8794  0028D6  17AE               	andwf	??_vscp_handleProtocolEvent& (0+255),f,b
  8795  0028D8  0E04               	movlw	4
  8796  0028DA  0100               	movlb	0	; () banked
  8797  0028DC  5DAE               	subwf	??_vscp_handleProtocolEvent& (0+255),w,b
  8798  0028DE  A0D8               	btfss	status,0,c
  8799  0028E0  D023               	goto	l9880
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;vscp_firmware.c: 1167: bytes = (uint16_t)vscp_imsg.data[4];
  8803  0028E2  0100               	movlb	0	; () banked
  8804  0028E4  0101               	movlb	1	; () banked
  8805  0028E6  C0FB  F110         	movff	_vscp_imsg+10,vscp_handleProtocolEvent@bytes_1399
  8806  0028EA  0101               	movlb	1	; () banked
  8807  0028EC  0101               	movlb	1	; () banked
  8808  0028EE  6B11               	clrf	(vscp_handleProtocolEvent@bytes_1399+1)& (0+255),b
  8809                           
  8810                           ; BSR set to: 1
  8811                           ;vscp_firmware.c: 1169: if (bytes == 0) bytes = 256;
  8812  0028F0  0101               	movlb	1	; () banked
  8813  0028F2  0101               	movlb	1	; () banked
  8814  0028F4  5111               	movf	(vscp_handleProtocolEvent@bytes_1399+1)& (0+255),w,b
  8815  0028F6  1110               	iorwf	vscp_handleProtocolEvent@bytes_1399& (0+255),w,b
  8816  0028F8  A4D8               	btfss	status,2,c
  8817  0028FA  D007               	goto	l9876
  8818                           
  8819                           ; BSR set to: 1
  8820  0028FC  0E01               	movlw	1
  8821  0028FE  0101               	movlb	1	; () banked
  8822  002900  0101               	movlb	1	; () banked
  8823  002902  6F11               	movwf	(vscp_handleProtocolEvent@bytes_1399+1)& (0+255),b
  8824  002904  0E00               	movlw	0
  8825  002906  0101               	movlb	1	; () banked
  8826  002908  6F10               	movwf	vscp_handleProtocolEvent@bytes_1399& (0+255),b
  8827  00290A                     l9876:
  8828                           
  8829                           ; BSR set to: 1
  8830                           ;vscp_firmware.c: 1171: if (bytes > 256) bytes = 256;
  8831  00290A  0E01               	movlw	1
  8832  00290C  0101               	movlb	1	; () banked
  8833  00290E  0101               	movlb	1	; () banked
  8834  002910  5D10               	subwf	vscp_handleProtocolEvent@bytes_1399& (0+255),w,b
  8835  002912  0E01               	movlw	1
  8836  002914  0101               	movlb	1	; () banked
  8837  002916  5911               	subwfb	(vscp_handleProtocolEvent@bytes_1399+1)& (0+255),w,b
  8838  002918  A0D8               	btfss	status,0,c
  8839  00291A  D00D               	goto	l9882
  8840                           
  8841                           ; BSR set to: 1
  8842  00291C  0E01               	movlw	1
  8843  00291E  0101               	movlb	1	; () banked
  8844  002920  0101               	movlb	1	; () banked
  8845  002922  6F11               	movwf	(vscp_handleProtocolEvent@bytes_1399+1)& (0+255),b
  8846  002924  0E00               	movlw	0
  8847  002926  D005               	goto	L65
  8848  002928                     l9880:
  8849                           
  8850                           ;vscp_firmware.c: 1173: else {
  8851                           ;vscp_firmware.c: 1174: bytes = 1;
  8852  002928  0E00               	movlw	0
  8853  00292A  0101               	movlb	1	; () banked
  8854  00292C  0101               	movlb	1	; () banked
  8855  00292E  6F11               	movwf	(vscp_handleProtocolEvent@bytes_1399+1)& (0+255),b
  8856  002930  0E01               	movlw	1
  8857  002932                     L65:
  8858  002932  0101               	movlb	1	; () banked
  8859  002934  6F10               	movwf	vscp_handleProtocolEvent@bytes_1399& (0+255),b
  8860  002936                     l9882:
  8861                           
  8862                           ; BSR set to: 1
  8863                           ;vscp_firmware.c: 1175: }
  8864                           ;vscp_firmware.c: 1178: page_save = vscp_page_select;
  8865  002936  C036  F100         	movff	_vscp_page_select,vscp_handleProtocolEvent@page_save
  8866  00293A  C037  F101         	movff	_vscp_page_select+1,vscp_handleProtocolEvent@page_save+1
  8867                           
  8868                           ; BSR set to: 1
  8869                           ;vscp_firmware.c: 1183: vscp_page_select = ((vscp_imsg.data[1] << 8) | vscp_imsg.data[2]
      +                          );
  8870  00293E  0100               	movlb	0	; () banked
  8871  002940  0100               	movlb	0	; () banked
  8872  002942  51F9               	movf	(_vscp_imsg+8)& (0+255),w,b
  8873  002944  0100               	movlb	0	; () banked
  8874  002946  C0F8  F0AE         	movff	_vscp_imsg+7,??_vscp_handleProtocolEvent
  8875  00294A  0100               	movlb	0	; () banked
  8876  00294C  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  8877  00294E  C0AE  F0AF         	movff	??_vscp_handleProtocolEvent,??_vscp_handleProtocolEvent+1
  8878  002952  0100               	movlb	0	; () banked
  8879  002954  6BAE               	clrf	??_vscp_handleProtocolEvent& (0+255),b
  8880  002956  0100               	movlb	0	; () banked
  8881  002958  11AE               	iorwf	??_vscp_handleProtocolEvent& (0+255),w,b
  8882  00295A  6E36               	movwf	_vscp_page_select,c
  8883  00295C  0100               	movlb	0	; () banked
  8884  00295E  51AF               	movf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  8885  002960  6E37               	movwf	_vscp_page_select+1,c
  8886                           
  8887                           ; BSR set to: 0
  8888                           ;vscp_firmware.c: 1186: vscp_omsg.priority = 0x07;
  8889  002962  0100               	movlb	0	; () banked
  8890  002964  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8891  002966  0E07               	movlw	7
  8892  002968  6E3F               	movwf	_vscp_omsg+1,c
  8893  00296A  0100               	movlb	0	; () banked
  8894  00296C  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;vscp_firmware.c: 1187: vscp_omsg.vscp_class = 0;
  8898  00296E  0E00               	movlw	0
  8899  002970  6E41               	movwf	_vscp_omsg+3,c
  8900  002972  0E00               	movlw	0
  8901  002974  6E40               	movwf	_vscp_omsg+2,c
  8902                           
  8903                           ; BSR set to: 0
  8904                           ;vscp_firmware.c: 1188: vscp_omsg.vscp_type = 39;
  8905  002976  0100               	movlb	0	; () banked
  8906  002978  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8907  00297A  0E27               	movlw	39
  8908  00297C  6E42               	movwf	_vscp_omsg+4,c
  8909  00297E  0100               	movlb	0	; () banked
  8910  002980  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8911                           
  8912                           ; BSR set to: 0
  8913                           ;vscp_firmware.c: 1189: vscp_omsg.data[0] = 0;
  8914  002982  0100               	movlb	0	; () banked
  8915  002984  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8916  002986  0E00               	movlw	0
  8917  002988  6E43               	movwf	_vscp_omsg+5,c
  8918  00298A  0100               	movlb	0	; () banked
  8919  00298C  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8920                           
  8921                           ; BSR set to: 0
  8922                           ;vscp_firmware.c: 1190: vscp_omsg.data[1] = vscp_imsg.data[1];
  8923  00298E  C0F8  F044         	movff	_vscp_imsg+7,_vscp_omsg+6
  8924                           
  8925                           ; BSR set to: 0
  8926                           ;vscp_firmware.c: 1191: vscp_omsg.data[2] = vscp_imsg.data[2];
  8927  002992  C0F9  F045         	movff	_vscp_imsg+8,_vscp_omsg+7
  8928  002996                     l9898:
  8929                           
  8930                           ; BSR set to: 0
  8931                           ;vscp_firmware.c: 1195: if ( ( bytes - byte ) >= 4 ) {
  8932  002996  0101               	movlb	1	; () banked
  8933  002998  0101               	movlb	1	; () banked
  8934  00299A  510F               	movf	vscp_handleProtocolEvent@byte& (0+255),w,b
  8935  00299C  0100               	movlb	0	; () banked
  8936  00299E  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8937  0029A0  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  8938  0029A2  0100               	movlb	0	; () banked
  8939  0029A4  1FAE               	comf	??_vscp_handleProtocolEvent& (0+255),f,b
  8940  0029A6  1FAF               	comf	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  8941  0029A8  4BAE               	infsnz	??_vscp_handleProtocolEvent& (0+255),f,b
  8942  0029AA  2BAF               	incf	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  8943  0029AC  0101               	movlb	1	; () banked
  8944  0029AE  0101               	movlb	1	; () banked
  8945  0029B0  5110               	movf	vscp_handleProtocolEvent@bytes_1399& (0+255),w,b
  8946  0029B2  0100               	movlb	0	; () banked
  8947  0029B4  27AE               	addwf	??_vscp_handleProtocolEvent& (0+255),f,b
  8948  0029B6  0101               	movlb	1	; () banked
  8949  0029B8  0101               	movlb	1	; () banked
  8950  0029BA  5111               	movf	(vscp_handleProtocolEvent@bytes_1399+1)& (0+255),w,b
  8951  0029BC  0100               	movlb	0	; () banked
  8952  0029BE  23AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  8953  0029C0  0E04               	movlw	4
  8954  0029C2  0100               	movlb	0	; () banked
  8955  0029C4  5DAE               	subwf	??_vscp_handleProtocolEvent& (0+255),w,b
  8956  0029C6  0E00               	movlw	0
  8957  0029C8  59AF               	subwfb	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  8958  0029CA  A0D8               	btfss	status,0,c
  8959  0029CC  D009               	goto	l9902
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;vscp_firmware.c: 1196: bytes_this_time = 4;
  8963  0029CE  0100               	movlb	0	; () banked
  8964  0029D0  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8965  0029D2  0E04               	movlw	4
  8966  0029D4  0101               	movlb	1	; () banked
  8967  0029D6  0101               	movlb	1	; () banked
  8968  0029D8  6F0A               	movwf	vscp_handleProtocolEvent@bytes_this_time& (0+255),b
  8969  0029DA  0100               	movlb	0	; () banked
  8970  0029DC  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8971                           
  8972                           ;vscp_firmware.c: 1197: }
  8973  0029DE  D00A               	goto	l1377
  8974  0029E0                     l9902:
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;vscp_firmware.c: 1198: else {
  8978                           ;vscp_firmware.c: 1199: bytes_this_time = (bytes - byte);
  8979  0029E0  0101               	movlb	1	; () banked
  8980  0029E2  0101               	movlb	1	; () banked
  8981  0029E4  510F               	movf	vscp_handleProtocolEvent@byte& (0+255),w,b
  8982  0029E6  0800               	sublw	0
  8983  0029E8  0101               	movlb	1	; () banked
  8984  0029EA  0101               	movlb	1	; () banked
  8985  0029EC  2510               	addwf	vscp_handleProtocolEvent@bytes_1399& (0+255),w,b
  8986  0029EE  0101               	movlb	1	; () banked
  8987  0029F0  0101               	movlb	1	; () banked
  8988  0029F2  6F0A               	movwf	vscp_handleProtocolEvent@bytes_this_time& (0+255),b
  8989  0029F4                     l1377:
  8990                           
  8991                           ;vscp_firmware.c: 1200: }
  8992                           ;vscp_firmware.c: 1203: vscp_omsg.flags = 0x80 + 4 + bytes_this_time;
  8993  0029F4  0101               	movlb	1	; () banked
  8994  0029F6  0101               	movlb	1	; () banked
  8995  0029F8  510A               	movf	vscp_handleProtocolEvent@bytes_this_time& (0+255),w,b
  8996  0029FA  0F84               	addlw	132
  8997  0029FC  6E3E               	movwf	_vscp_omsg,c
  8998                           
  8999                           ;vscp_firmware.c: 1204: vscp_omsg.data[3] =
  9000                           ;vscp_firmware.c: 1205: vscp_imsg.data[3] + byte;
  9001  0029FE  0100               	movlb	0	; () banked
  9002  002A00  0100               	movlb	0	; () banked
  9003  002A02  51FA               	movf	(_vscp_imsg+9)& (0+255),w,b
  9004  002A04  0101               	movlb	1	; () banked
  9005  002A06  0101               	movlb	1	; () banked
  9006  002A08  250F               	addwf	vscp_handleProtocolEvent@byte& (0+255),w,b
  9007  002A0A  6E46               	movwf	_vscp_omsg+8,c
  9008                           
  9009                           ; BSR set to: 1
  9010                           ;vscp_firmware.c: 1208: for ( cb = 0; cb < bytes_this_time; cb++ ) {
  9011  002A0C  0100               	movlb	0	; () banked
  9012  002A0E  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  9013  002A10  0E00               	movlw	0
  9014  002A12  0101               	movlb	1	; () banked
  9015  002A14  0101               	movlb	1	; () banked
  9016  002A16  6F0B               	movwf	vscp_handleProtocolEvent@cb& (0+255),b
  9017  002A18  0100               	movlb	0	; () banked
  9018  002A1A  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  9019  002A1C  D023               	goto	l9910
  9020  002A1E                     l9906:
  9021                           
  9022                           ;vscp_firmware.c: 1209: vscp_omsg.data[ (4 + cb) ] =
  9023                           ;vscp_firmware.c: 1210: vscp_readRegister( ( vscp_imsg.data[3] + byte + cb ) );
  9024  002A1E  0101               	movlb	1	; () banked
  9025  002A20  0101               	movlb	1	; () banked
  9026  002A22  510B               	movf	vscp_handleProtocolEvent@cb& (0+255),w,b
  9027  002A24  0100               	movlb	0	; () banked
  9028  002A26  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  9029  002A28  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  9030  002A2A  0E04               	movlw	4
  9031  002A2C  0100               	movlb	0	; () banked
  9032  002A2E  27AE               	addwf	??_vscp_handleProtocolEvent& (0+255),f,b
  9033  002A30  0E00               	movlw	0
  9034  002A32  23AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  9035  002A34  0E43               	movlw	low (_vscp_omsg+5)
  9036  002A36  0100               	movlb	0	; () banked
  9037  002A38  25AE               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  9038  002A3A  6ED9               	movwf	fsr2l,c
  9039  002A3C  0E00               	movlw	high (_vscp_omsg+5)
  9040  002A3E  0100               	movlb	0	; () banked
  9041  002A40  21AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  9042  002A42  6EDA               	movwf	fsr2h,c
  9043  002A44  0100               	movlb	0	; () banked
  9044  002A46  0100               	movlb	0	; () banked
  9045  002A48  51FA               	movf	(_vscp_imsg+9)& (0+255),w,b
  9046  002A4A  0101               	movlb	1	; () banked
  9047  002A4C  0101               	movlb	1	; () banked
  9048  002A4E  250F               	addwf	vscp_handleProtocolEvent@byte& (0+255),w,b
  9049  002A50  0101               	movlb	1	; () banked
  9050  002A52  0101               	movlb	1	; () banked
  9051  002A54  250B               	addwf	vscp_handleProtocolEvent@cb& (0+255),w,b
  9052  002A56  6E2B               	movwf	?_vscp_readRegister,c
  9053  002A58  EC5F  F037         	call	_vscp_readRegister	;wreg free
  9054  002A5C  6EDF               	movwf	indf2,c
  9055  002A5E  0101               	movlb	1	; () banked
  9056  002A60  0101               	movlb	1	; () banked
  9057  002A62  2B0B               	incf	vscp_handleProtocolEvent@cb& (0+255),f,b
  9058  002A64                     l9910:
  9059  002A64  0101               	movlb	1	; () banked
  9060  002A66  0101               	movlb	1	; () banked
  9061  002A68  510A               	movf	vscp_handleProtocolEvent@bytes_this_time& (0+255),w,b
  9062  002A6A  0101               	movlb	1	; () banked
  9063  002A6C  0101               	movlb	1	; () banked
  9064  002A6E  5D0B               	subwf	vscp_handleProtocolEvent@cb& (0+255),w,b
  9065  002A70  A0D8               	btfss	status,0,c
  9066  002A72  D7D5               	goto	l9906
  9067                           
  9068                           ; BSR set to: 1
  9069                           ;vscp_firmware.c: 1211: }
  9070                           ;vscp_firmware.c: 1214: vscp_sendEvent();
  9071                           
  9072                           ; BSR set to: 1
  9073  002A74  EC21  F036         	call	_vscp_sendEvent	;wreg free
  9074                           
  9075                           ;vscp_firmware.c: 1217: byte += bytes_this_time;
  9076  002A78  0101               	movlb	1	; () banked
  9077  002A7A  0101               	movlb	1	; () banked
  9078  002A7C  510A               	movf	vscp_handleProtocolEvent@bytes_this_time& (0+255),w,b
  9079  002A7E  0101               	movlb	1	; () banked
  9080  002A80  0101               	movlb	1	; () banked
  9081  002A82  270F               	addwf	vscp_handleProtocolEvent@byte& (0+255),f,b
  9082                           
  9083                           ; BSR set to: 1
  9084                           ;vscp_firmware.c: 1220: vscp_omsg.data[0] += 1;
  9085  002A84  2A43               	incf	_vscp_omsg+5,f,c
  9086                           
  9087                           ; BSR set to: 1
  9088                           ;vscp_firmware.c: 1222: } while (byte < bytes);
  9089  002A86  0101               	movlb	1	; () banked
  9090  002A88  0101               	movlb	1	; () banked
  9091  002A8A  510F               	movf	vscp_handleProtocolEvent@byte& (0+255),w,b
  9092  002A8C  0100               	movlb	0	; () banked
  9093  002A8E  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  9094  002A90  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  9095  002A92  0101               	movlb	1	; () banked
  9096  002A94  0101               	movlb	1	; () banked
  9097  002A96  5110               	movf	vscp_handleProtocolEvent@bytes_1399& (0+255),w,b
  9098  002A98  0100               	movlb	0	; () banked
  9099  002A9A  5DAE               	subwf	??_vscp_handleProtocolEvent& (0+255),w,b
  9100  002A9C  0101               	movlb	1	; () banked
  9101  002A9E  0101               	movlb	1	; () banked
  9102  002AA0  5111               	movf	(vscp_handleProtocolEvent@bytes_1399+1)& (0+255),w,b
  9103  002AA2  0100               	movlb	0	; () banked
  9104  002AA4  59AF               	subwfb	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  9105  002AA6  A0D8               	btfss	status,0,c
  9106  002AA8  D776               	goto	l9898
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;vscp_firmware.c: 1225: vscp_page_select = page_save;
  9110  002AAA  C100  F036         	movff	vscp_handleProtocolEvent@page_save,_vscp_page_select
  9111  002AAE  C101  F037         	movff	vscp_handleProtocolEvent@page_save+1,_vscp_page_select+1
  9112  002AB2  D10D               	goto	l1388
  9113  002AB4                     l9920:
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;vscp_firmware.c: 1232: if ( vscp_nickname == vscp_imsg.data[ 0 ] ) {
  9117  002AB4  0100               	movlb	0	; () banked
  9118  002AB6  0100               	movlb	0	; () banked
  9119  002AB8  51EC               	movf	_vscp_nickname& (0+255),w,b
  9120  002ABA  0100               	movlb	0	; () banked
  9121  002ABC  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  9122  002AC0  62DF               	cpfseq	indf2,c
  9123  002AC2  D105               	goto	l1388
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;vscp_firmware.c: 1234: uint8_t i;
  9127                           ;vscp_firmware.c: 1235: uint16_t page_save;
  9128                           ;vscp_firmware.c: 1238: page_save = vscp_page_select;
  9129  002AC4  C036  F102         	movff	_vscp_page_select,vscp_handleProtocolEvent@page_save_1404
  9130  002AC8  C037  F103         	movff	_vscp_page_select+1,vscp_handleProtocolEvent@page_save_1404+1
  9131                           
  9132                           ; BSR set to: 0
  9133                           ;vscp_firmware.c: 1242: vscp_page_select = (vscp_imsg.data[1] << 8) | vscp_imsg.data[2];
  9134  002ACC  0100               	movlb	0	; () banked
  9135  002ACE  0100               	movlb	0	; () banked
  9136  002AD0  51F9               	movf	(_vscp_imsg+8)& (0+255),w,b
  9137  002AD2  0100               	movlb	0	; () banked
  9138  002AD4  C0F8  F0AE         	movff	_vscp_imsg+7,??_vscp_handleProtocolEvent
  9139  002AD8  0100               	movlb	0	; () banked
  9140  002ADA  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  9141  002ADC  C0AE  F0AF         	movff	??_vscp_handleProtocolEvent,??_vscp_handleProtocolEvent+1
  9142  002AE0  0100               	movlb	0	; () banked
  9143  002AE2  6BAE               	clrf	??_vscp_handleProtocolEvent& (0+255),b
  9144  002AE4  0100               	movlb	0	; () banked
  9145  002AE6  11AE               	iorwf	??_vscp_handleProtocolEvent& (0+255),w,b
  9146  002AE8  6E36               	movwf	_vscp_page_select,c
  9147  002AEA  0100               	movlb	0	; () banked
  9148  002AEC  51AF               	movf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  9149  002AEE  6E37               	movwf	_vscp_page_select+1,c
  9150                           
  9151                           ; BSR set to: 0
  9152                           ;vscp_firmware.c: 1244: for (i = vscp_imsg.data[ 3 ];
  9153  002AF0  C0FA  F10C         	movff	_vscp_imsg+9,vscp_handleProtocolEvent@i_1403
  9154                           
  9155                           ;vscp_firmware.c: 1247: i < (vscp_imsg.data[ 3 ] + ((vscp_imsg.flags & 0x0f) - 4));
  9156                           ;vscp_firmware.c: 1248: i++) {
  9157  002AF4  D059               	goto	l9932
  9158  002AF6                     l9928:
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;vscp_firmware.c: 1249: vscp_omsg.data[ 4 + (i - vscp_imsg.data[ 3 ]) ] =
  9162                           ;vscp_firmware.c: 1250: vscp_writeRegister(i, vscp_imsg.data[ 4 + (i - vscp_imsg.data[ 3
      +                           ]) ]);
  9163  002AF6  C10C  F0AC         	movff	vscp_handleProtocolEvent@i_1403,?_vscp_writeRegister
  9164  002AFA  0100               	movlb	0	; () banked
  9165  002AFC  0100               	movlb	0	; () banked
  9166  002AFE  51FA               	movf	(_vscp_imsg+9)& (0+255),w,b
  9167  002B00  0100               	movlb	0	; () banked
  9168  002B02  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  9169  002B04  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  9170  002B06  0100               	movlb	0	; () banked
  9171  002B08  1FAE               	comf	??_vscp_handleProtocolEvent& (0+255),f,b
  9172  002B0A  1FAF               	comf	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  9173  002B0C  4BAE               	infsnz	??_vscp_handleProtocolEvent& (0+255),f,b
  9174  002B0E  2BAF               	incf	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  9175  002B10  0101               	movlb	1	; () banked
  9176  002B12  0101               	movlb	1	; () banked
  9177  002B14  510C               	movf	vscp_handleProtocolEvent@i_1403& (0+255),w,b
  9178  002B16  0100               	movlb	0	; () banked
  9179  002B18  25AE               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  9180  002B1A  0100               	movlb	0	; () banked
  9181  002B1C  6FB0               	movwf	(??_vscp_handleProtocolEvent+2)& (0+255),b
  9182  002B1E  0100               	movlb	0	; () banked
  9183  002B20  0100               	movlb	0	; () banked
  9184  002B22  0E00               	movlw	0
  9185  002B24  21AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  9186  002B26  6FB1               	movwf	(??_vscp_handleProtocolEvent+3)& (0+255),b
  9187  002B28  0E04               	movlw	4
  9188  002B2A  0100               	movlb	0	; () banked
  9189  002B2C  27B0               	addwf	(??_vscp_handleProtocolEvent+2)& (0+255),f,b
  9190  002B2E  0E00               	movlw	0
  9191  002B30  23B1               	addwfc	(??_vscp_handleProtocolEvent+3)& (0+255),f,b
  9192  002B32  0100               	movlb	0	; () banked
  9193  002B34  0EF7               	movlw	low (_vscp_imsg+6)
  9194  002B36  0100               	movlb	0	; () banked
  9195  002B38  25B0               	addwf	(??_vscp_handleProtocolEvent+2)& (0+255),w,b
  9196  002B3A  6ED9               	movwf	fsr2l,c
  9197  002B3C  0100               	movlb	0	; () banked
  9198  002B3E  0E00               	movlw	high (_vscp_imsg+6)
  9199  002B40  0100               	movlb	0	; () banked
  9200  002B42  21B1               	addwfc	(??_vscp_handleProtocolEvent+3)& (0+255),w,b
  9201  002B44  6EDA               	movwf	fsr2h,c
  9202  002B46  50DF               	movf	indf2,w,c
  9203  002B48  0100               	movlb	0	; () banked
  9204  002B4A  0100               	movlb	0	; () banked
  9205  002B4C  6FAD               	movwf	(?_vscp_writeRegister+1)& (0+255),b
  9206  002B4E  ECFD  F036         	call	_vscp_writeRegister	;wreg free
  9207  002B52  0100               	movlb	0	; () banked
  9208  002B54  6FB2               	movwf	(??_vscp_handleProtocolEvent+4)& (0+255),b
  9209  002B56  0100               	movlb	0	; () banked
  9210  002B58  0100               	movlb	0	; () banked
  9211  002B5A  51FA               	movf	(_vscp_imsg+9)& (0+255),w,b
  9212  002B5C  0100               	movlb	0	; () banked
  9213  002B5E  6FB3               	movwf	(??_vscp_handleProtocolEvent+5)& (0+255),b
  9214  002B60  6BB4               	clrf	(??_vscp_handleProtocolEvent+6)& (0+255),b
  9215  002B62  0100               	movlb	0	; () banked
  9216  002B64  1FB3               	comf	(??_vscp_handleProtocolEvent+5)& (0+255),f,b
  9217  002B66  1FB4               	comf	(??_vscp_handleProtocolEvent+6)& (0+255),f,b
  9218  002B68  4BB3               	infsnz	(??_vscp_handleProtocolEvent+5)& (0+255),f,b
  9219  002B6A  2BB4               	incf	(??_vscp_handleProtocolEvent+6)& (0+255),f,b
  9220  002B6C  0101               	movlb	1	; () banked
  9221  002B6E  0101               	movlb	1	; () banked
  9222  002B70  510C               	movf	vscp_handleProtocolEvent@i_1403& (0+255),w,b
  9223  002B72  0100               	movlb	0	; () banked
  9224  002B74  25B3               	addwf	(??_vscp_handleProtocolEvent+5)& (0+255),w,b
  9225  002B76  0100               	movlb	0	; () banked
  9226  002B78  6FB5               	movwf	(??_vscp_handleProtocolEvent+7)& (0+255),b
  9227  002B7A  0100               	movlb	0	; () banked
  9228  002B7C  0100               	movlb	0	; () banked
  9229  002B7E  0E00               	movlw	0
  9230  002B80  21B4               	addwfc	(??_vscp_handleProtocolEvent+6)& (0+255),w,b
  9231  002B82  6FB6               	movwf	(??_vscp_handleProtocolEvent+8)& (0+255),b
  9232  002B84  0E04               	movlw	4
  9233  002B86  0100               	movlb	0	; () banked
  9234  002B88  27B5               	addwf	(??_vscp_handleProtocolEvent+7)& (0+255),f,b
  9235  002B8A  0E00               	movlw	0
  9236  002B8C  23B6               	addwfc	(??_vscp_handleProtocolEvent+8)& (0+255),f,b
  9237  002B8E  0E43               	movlw	low (_vscp_omsg+5)
  9238  002B90  0100               	movlb	0	; () banked
  9239  002B92  25B5               	addwf	(??_vscp_handleProtocolEvent+7)& (0+255),w,b
  9240  002B94  6ED9               	movwf	fsr2l,c
  9241  002B96  0E00               	movlw	high (_vscp_omsg+5)
  9242  002B98  0100               	movlb	0	; () banked
  9243  002B9A  21B6               	addwfc	(??_vscp_handleProtocolEvent+8)& (0+255),w,b
  9244  002B9C  6EDA               	movwf	fsr2h,c
  9245  002B9E  C0B2  FFDF         	movff	??_vscp_handleProtocolEvent+4,indf2
  9246                           
  9247                           ; BSR set to: 0
  9248  002BA2  0101               	movlb	1	; () banked
  9249  002BA4  0101               	movlb	1	; () banked
  9250  002BA6  2B0C               	incf	vscp_handleProtocolEvent@i_1403& (0+255),f,b
  9251  002BA8                     l9932:
  9252  002BA8  0100               	movlb	0	; () banked
  9253  002BAA  0100               	movlb	0	; () banked
  9254  002BAC  51F1               	movf	_vscp_imsg& (0+255),w,b
  9255  002BAE  0B0F               	andlw	15
  9256  002BB0  0100               	movlb	0	; () banked
  9257  002BB2  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  9258  002BB4  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  9259  002BB6  0100               	movlb	0	; () banked
  9260  002BB8  0100               	movlb	0	; () banked
  9261  002BBA  51FA               	movf	(_vscp_imsg+9)& (0+255),w,b
  9262  002BBC  0100               	movlb	0	; () banked
  9263  002BBE  27AE               	addwf	??_vscp_handleProtocolEvent& (0+255),f,b
  9264  002BC0  0E00               	movlw	0
  9265  002BC2  23AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  9266  002BC4  0EFC               	movlw	252
  9267  002BC6  0100               	movlb	0	; () banked
  9268  002BC8  25AE               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  9269  002BCA  0100               	movlb	0	; () banked
  9270  002BCC  6FB0               	movwf	(??_vscp_handleProtocolEvent+2)& (0+255),b
  9271  002BCE  0EFF               	movlw	255
  9272  002BD0  0100               	movlb	0	; () banked
  9273  002BD2  21AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  9274  002BD4  0100               	movlb	0	; () banked
  9275  002BD6  6FB1               	movwf	(??_vscp_handleProtocolEvent+3)& (0+255),b
  9276  002BD8  0101               	movlb	1	; () banked
  9277  002BDA  0101               	movlb	1	; () banked
  9278  002BDC  510C               	movf	vscp_handleProtocolEvent@i_1403& (0+255),w,b
  9279  002BDE  0100               	movlb	0	; () banked
  9280  002BE0  6FB2               	movwf	(??_vscp_handleProtocolEvent+4)& (0+255),b
  9281  002BE2  6BB3               	clrf	(??_vscp_handleProtocolEvent+5)& (0+255),b
  9282  002BE4  0100               	movlb	0	; () banked
  9283  002BE6  51B3               	movf	(??_vscp_handleProtocolEvent+5)& (0+255),w,b
  9284  002BE8  0A80               	xorlw	128
  9285  002BEA  0100               	movlb	0	; () banked
  9286  002BEC  6FB4               	movwf	(??_vscp_handleProtocolEvent+6)& (0+255),b
  9287  002BEE  51B0               	movf	(??_vscp_handleProtocolEvent+2)& (0+255),w,b
  9288  002BF0  0100               	movlb	0	; () banked
  9289  002BF2  5DB2               	subwf	(??_vscp_handleProtocolEvent+4)& (0+255),w,b
  9290  002BF4  0100               	movlb	0	; () banked
  9291  002BF6  51B1               	movf	(??_vscp_handleProtocolEvent+3)& (0+255),w,b
  9292  002BF8  0A80               	xorlw	128
  9293  002BFA  0100               	movlb	0	; () banked
  9294  002BFC  59B4               	subwfb	(??_vscp_handleProtocolEvent+6)& (0+255),w,b
  9295  002BFE  A0D8               	btfss	status,0,c
  9296  002C00  D77A               	goto	l9928
  9297                           
  9298                           ; BSR set to: 0
  9299                           ;vscp_firmware.c: 1251: }
  9300                           ;vscp_firmware.c: 1254: vscp_page_select = page_save;
  9301  002C02  C102  F036         	movff	vscp_handleProtocolEvent@page_save_1404,_vscp_page_select
  9302  002C06  C103  F037         	movff	vscp_handleProtocolEvent@page_save_1404+1,_vscp_page_select+1
  9303                           
  9304                           ; BSR set to: 0
  9305                           ;vscp_firmware.c: 1256: vscp_omsg.priority = 0x07;
  9306  002C0A  0100               	movlb	0	; () banked
  9307  002C0C  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  9308  002C0E  0E07               	movlw	7
  9309  002C10  6E3F               	movwf	_vscp_omsg+1,c
  9310  002C12  0100               	movlb	0	; () banked
  9311  002C14  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  9312                           
  9313                           ; BSR set to: 0
  9314                           ;vscp_firmware.c: 1257: vscp_omsg.flags = 0x80 + 4 + ((vscp_imsg.flags & 0x0f) - 4);
  9315  002C16  0100               	movlb	0	; () banked
  9316  002C18  0100               	movlb	0	; () banked
  9317  002C1A  51F1               	movf	_vscp_imsg& (0+255),w,b
  9318  002C1C  0B0F               	andlw	15
  9319  002C1E  0F80               	addlw	128
  9320  002C20  6E3E               	movwf	_vscp_omsg,c
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;vscp_firmware.c: 1258: vscp_omsg.vscp_class = 0;
  9324  002C22  0E00               	movlw	0
  9325  002C24  6E41               	movwf	_vscp_omsg+3,c
  9326  002C26  0E00               	movlw	0
  9327  002C28  6E40               	movwf	_vscp_omsg+2,c
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;vscp_firmware.c: 1259: vscp_omsg.vscp_type = 39;
  9331  002C2A  0100               	movlb	0	; () banked
  9332  002C2C  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  9333  002C2E  0E27               	movlw	39
  9334  002C30  6E42               	movwf	_vscp_omsg+4,c
  9335  002C32  0100               	movlb	0	; () banked
  9336  002C34  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  9337                           
  9338                           ; BSR set to: 0
  9339                           ;vscp_firmware.c: 1260: vscp_omsg.data[0] = 0;
  9340  002C36  0100               	movlb	0	; () banked
  9341  002C38  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  9342  002C3A  0E00               	movlw	0
  9343  002C3C  6E43               	movwf	_vscp_omsg+5,c
  9344  002C3E  0100               	movlb	0	; () banked
  9345  002C40  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;vscp_firmware.c: 1261: vscp_omsg.data[1] = vscp_imsg.data[1];
  9349  002C42  C0F8  F044         	movff	_vscp_imsg+7,_vscp_omsg+6
  9350                           
  9351                           ; BSR set to: 0
  9352                           ;vscp_firmware.c: 1262: vscp_omsg.data[2] = vscp_imsg.data[2];
  9353  002C46  C0F9  F045         	movff	_vscp_imsg+8,_vscp_omsg+7
  9354                           
  9355                           ; BSR set to: 0
  9356                           ;vscp_firmware.c: 1263: vscp_omsg.data[3] = vscp_imsg.data[3];
  9357  002C4A  C0FA  F046         	movff	_vscp_imsg+9,_vscp_omsg+8
  9358                           
  9359                           ; BSR set to: 0
  9360                           ;vscp_firmware.c: 1266: vscp_sendEvent();
  9361  002C4E  EC21  F036         	call	_vscp_sendEvent	;wreg free
  9362  002C52  D03D               	goto	l1388
  9363  002C54                     l9954:
  9364  002C54  0100               	movlb	0	; () banked
  9365  002C56  0100               	movlb	0	; () banked
  9366  002C58  51F5               	movf	(_vscp_imsg+4)& (0+255),w,b
  9367                           
  9368                           ; Switch size 1, requested type "space"
  9369                           ; Number of cases is 16, Range of values is 1 to 38
  9370                           ; switch strategies available:
  9371                           ; Name         Instructions Cycles
  9372                           ; simple_byte           49    25 (average)
  9373                           ;	Chosen strategy is simple_byte
  9374  002C5A  0A01               	xorlw	1	; case 1
  9375  002C5C  B4D8               	btfsc	status,2,c
  9376  002C5E  EF60  F00F         	goto	l9522
  9377  002C62  0A03               	xorlw	3	; case 2
  9378  002C64  B4D8               	btfsc	status,2,c
  9379  002C66  EF64  F00F         	goto	l9524
  9380  002C6A  0A04               	xorlw	4	; case 6
  9381  002C6C  B4D8               	btfsc	status,2,c
  9382  002C6E  EF68  F00F         	goto	l9526
  9383  002C72  0A0E               	xorlw	14	; case 8
  9384  002C74  B4D8               	btfsc	status,2,c
  9385  002C76  EF6C  F00F         	goto	l9528
  9386  002C7A  0A01               	xorlw	1	; case 9
  9387  002C7C  B4D8               	btfsc	status,2,c
  9388  002C7E  EF70  F00F         	goto	l9530
  9389  002C82  0A02               	xorlw	2	; case 11
  9390  002C84  B4D8               	btfsc	status,2,c
  9391  002C86  EFC8  F00F         	goto	l9564
  9392  002C8A  0A07               	xorlw	7	; case 12
  9393  002C8C  B4D8               	btfsc	status,2,c
  9394  002C8E  EF24  F010         	goto	l9598
  9395  002C92  0A1B               	xorlw	27	; case 23
  9396  002C94  B4D8               	btfsc	status,2,c
  9397  002C96  EF6F  F011         	goto	l9658
  9398  002C9A  0A0F               	xorlw	15	; case 24
  9399  002C9C  B4D8               	btfsc	status,2,c
  9400  002C9E  EF94  F011         	goto	l9664
  9401  002CA2  0A01               	xorlw	1	; case 25
  9402  002CA4  B4D8               	btfsc	status,2,c
  9403  002CA6  EF42  F012         	goto	l9702
  9404  002CAA  0A04               	xorlw	4	; case 29
  9405  002CAC  B4D8               	btfsc	status,2,c
  9406  002CAE  D470               	goto	l9730
  9407  002CB0  0A03               	xorlw	3	; case 30
  9408  002CB2  B4D8               	btfsc	status,2,c
  9409  002CB4  D4A0               	goto	l9746
  9410  002CB6  0A01               	xorlw	1	; case 31
  9411  002CB8  B4D8               	btfsc	status,2,c
  9412  002CBA  D4D0               	goto	l9762
  9413  002CBC  0A3E               	xorlw	62	; case 33
  9414  002CBE  B4D8               	btfsc	status,2,c
  9415  002CC0  D5C8               	goto	l9850
  9416  002CC2  0A04               	xorlw	4	; case 37
  9417  002CC4  B4D8               	btfsc	status,2,c
  9418  002CC6  D5EC               	goto	l9862
  9419  002CC8  0A03               	xorlw	3	; case 38
  9420  002CCA  B4D8               	btfsc	status,2,c
  9421  002CCC  D6F3               	goto	l9920
  9422  002CCE                     l1388:
  9423  002CCE  0012               	return	
  9424  002CD0                     __end_of_vscp_handleProtocolEvent:
  9425                           	opt stack 0
  9426                           tblptru	equ	0xFF8
  9427                           prodh	equ	0xFF4
  9428                           prodl	equ	0xFF3
  9429                           postinc0	equ	0xFEE
  9430                           wreg	equ	0xFE8
  9431                           indf2	equ	0xFDF
  9432                           postinc2	equ	0xFDE
  9433                           postdec2	equ	0xFDD
  9434                           fsr2h	equ	0xFDA
  9435                           fsr2l	equ	0xFD9
  9436                           status	equ	0xFD8
  9437                           
  9438 ;; *************** function ___awmod *****************
  9439 ;; Defined at:
  9440 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\awmod.c"
  9441 ;; Parameters:    Size  Location     Type
  9442 ;;  dividend        2   21[COMRAM] int 
  9443 ;;  divisor         2   23[COMRAM] int 
  9444 ;; Auto vars:     Size  Location     Type
  9445 ;;  sign            1   27[COMRAM] unsigned char 
  9446 ;;  counter         1   26[COMRAM] unsigned char 
  9447 ;; Return value:  Size  Location     Type
  9448 ;;                  2   21[COMRAM] int 
  9449 ;; Registers used:
  9450 ;;		wreg, status,2, status,0
  9451 ;; Tracked objects:
  9452 ;;		On entry : 0/0
  9453 ;;		On exit  : 0/0
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9456 ;;      Params:         4       0       0       0       0       0       0
  9457 ;;      Locals:         2       0       0       0       0       0       0
  9458 ;;      Temps:          1       0       0       0       0       0       0
  9459 ;;      Totals:         7       0       0       0       0       0       0
  9460 ;;Total ram usage:        7 bytes
  9461 ;; Hardware stack levels used:    1
  9462 ;; Hardware stack levels required when called:    2
  9463 ;; This function calls:
  9464 ;;		Nothing
  9465 ;; This function is called by:
  9466 ;;		_vscp_handleProtocolEvent
  9467 ;; This function uses a non-reentrant model
  9468 ;;
  9469                           
  9470                           	psect	text15
  9471  00697C                     __ptext15:
  9472                           	opt stack 0
  9473  00697C                     ___awmod:
  9474                           	opt stack 26
  9475                           
  9476                           ;incstack = 0
  9477                           ;incstack = 0
  9478  00697C  6E1A               	movwf	??___awmod& (0+255),c
  9479  00697E  0E00               	movlw	0
  9480  006980  6E1C               	movwf	___awmod@sign,c
  9481  006982  501A               	movf	??___awmod& (0+255),w,c
  9482  006984  AE17               	btfss	___awmod@dividend+1,7,c
  9483  006986  D008               	goto	l11844
  9484  006988  6C16               	negf	___awmod@dividend,c
  9485  00698A  1E17               	comf	___awmod@dividend+1,f,c
  9486  00698C  B0D8               	btfsc	status,0,c
  9487  00698E  2A17               	incf	___awmod@dividend+1,f,c
  9488  006990  6E1A               	movwf	??___awmod& (0+255),c
  9489  006992  0E01               	movlw	1
  9490  006994  6E1C               	movwf	___awmod@sign,c
  9491  006996  501A               	movf	??___awmod& (0+255),w,c
  9492  006998                     l11844:
  9493  006998  AE19               	btfss	___awmod@divisor+1,7,c
  9494  00699A  D004               	goto	l11848
  9495  00699C  6C18               	negf	___awmod@divisor,c
  9496  00699E  1E19               	comf	___awmod@divisor+1,f,c
  9497  0069A0  B0D8               	btfsc	status,0,c
  9498  0069A2  2A19               	incf	___awmod@divisor+1,f,c
  9499  0069A4                     l11848:
  9500  0069A4  5019               	movf	___awmod@divisor+1,w,c
  9501  0069A6  1018               	iorwf	___awmod@divisor,w,c
  9502  0069A8  B4D8               	btfsc	status,2,c
  9503  0069AA  D01A               	goto	l11864
  9504  0069AC  6E1A               	movwf	??___awmod& (0+255),c
  9505  0069AE  0E01               	movlw	1
  9506  0069B0  6E1B               	movwf	___awmod@counter,c
  9507  0069B2  501A               	movf	??___awmod& (0+255),w,c
  9508  0069B4  D004               	goto	l11854
  9509  0069B6                     l11852:
  9510  0069B6  90D8               	bcf	status,0,c
  9511  0069B8  3618               	rlcf	___awmod@divisor,f,c
  9512  0069BA  3619               	rlcf	___awmod@divisor+1,f,c
  9513  0069BC  2A1B               	incf	___awmod@counter,f,c
  9514  0069BE                     l11854:
  9515  0069BE  AE19               	btfss	___awmod@divisor+1,7,c
  9516  0069C0  D7FA               	goto	l11852
  9517  0069C2                     l11856:
  9518  0069C2  5018               	movf	___awmod@divisor,w,c
  9519  0069C4  5C16               	subwf	___awmod@dividend,w,c
  9520  0069C6  5019               	movf	___awmod@divisor+1,w,c
  9521  0069C8  5817               	subwfb	___awmod@dividend+1,w,c
  9522  0069CA  A0D8               	btfss	status,0,c
  9523  0069CC  D004               	goto	l11860
  9524  0069CE  5018               	movf	___awmod@divisor,w,c
  9525  0069D0  5E16               	subwf	___awmod@dividend,f,c
  9526  0069D2  5019               	movf	___awmod@divisor+1,w,c
  9527  0069D4  5A17               	subwfb	___awmod@dividend+1,f,c
  9528  0069D6                     l11860:
  9529  0069D6  90D8               	bcf	status,0,c
  9530  0069D8  3219               	rrcf	___awmod@divisor+1,f,c
  9531  0069DA  3218               	rrcf	___awmod@divisor,f,c
  9532  0069DC  2E1B               	decfsz	___awmod@counter,f,c
  9533  0069DE  D7F1               	goto	l11856
  9534  0069E0                     l11864:
  9535  0069E0  501C               	movf	___awmod@sign,w,c
  9536  0069E2  B4D8               	btfsc	status,2,c
  9537  0069E4  D004               	goto	l11868
  9538  0069E6  6C16               	negf	___awmod@dividend,c
  9539  0069E8  1E17               	comf	___awmod@dividend+1,f,c
  9540  0069EA  B0D8               	btfsc	status,0,c
  9541  0069EC  2A17               	incf	___awmod@dividend+1,f,c
  9542  0069EE                     l11868:
  9543  0069EE  C016  F016         	movff	___awmod@dividend,?___awmod
  9544  0069F2  C017  F017         	movff	___awmod@dividend+1,?___awmod+1
  9545  0069F6  0012               	return	
  9546  0069F8                     __end_of___awmod:
  9547                           	opt stack 0
  9548                           tblptru	equ	0xFF8
  9549                           prodh	equ	0xFF4
  9550                           prodl	equ	0xFF3
  9551                           postinc0	equ	0xFEE
  9552                           wreg	equ	0xFE8
  9553                           indf2	equ	0xFDF
  9554                           postinc2	equ	0xFDE
  9555                           postdec2	equ	0xFDD
  9556                           fsr2h	equ	0xFDA
  9557                           fsr2l	equ	0xFD9
  9558                           status	equ	0xFD8
  9559                           
  9560 ;; *************** function _vscp_writeRegister *****************
  9561 ;; Defined at:
  9562 ;;		line 701 in file "../../vscp_firmware/common/vscp_firmware.c"
  9563 ;; Parameters:    Size  Location     Type
  9564 ;;  reg             1   76[BANK0 ] unsigned char 
  9565 ;;  value           1   77[BANK0 ] unsigned char 
  9566 ;; Auto vars:     Size  Location     Type
  9567 ;;		None
  9568 ;; Return value:  Size  Location     Type
  9569 ;;                  1    wreg      unsigned char 
  9570 ;; Registers used:
  9571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  9572 ;; Tracked objects:
  9573 ;;		On entry : 0/0
  9574 ;;		On exit  : 0/0
  9575 ;;		Unchanged: 0/0
  9576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9577 ;;      Params:         0       2       0       0       0       0       0
  9578 ;;      Locals:         0       0       0       0       0       0       0
  9579 ;;      Temps:          0       0       0       0       0       0       0
  9580 ;;      Totals:         0       2       0       0       0       0       0
  9581 ;;Total ram usage:        2 bytes
  9582 ;; Hardware stack levels used:    1
  9583 ;; Hardware stack levels required when called:    8
  9584 ;; This function calls:
  9585 ;;		_vscp_writeAppReg
  9586 ;;		_vscp_writeStdReg
  9587 ;; This function is called by:
  9588 ;;		_vscp_handleProtocolEvent
  9589 ;; This function uses a non-reentrant model
  9590 ;;
  9591                           
  9592                           	psect	text16
  9593  006DFA                     __ptext16:
  9594                           	opt stack 0
  9595  006DFA                     _vscp_writeRegister:
  9596                           	opt stack 20
  9597                           
  9598                           ;vscp_firmware.c: 702: if (reg >= 0x80) {
  9599                           
  9600                           ;incstack = 0
  9601                           ;incstack = 0
  9602  006DFA  0E7F               	movlw	127
  9603  006DFC  0100               	movlb	0	; () banked
  9604  006DFE  0100               	movlb	0	; () banked
  9605  006E00  65AC               	cpfsgt	vscp_writeRegister@reg& (0+255),b
  9606  006E02  D007               	goto	l11764
  9607                           
  9608                           ; BSR set to: 0
  9609                           ;vscp_firmware.c: 703: return vscp_writeStdReg(reg, value);
  9610  006E04  C0AC  F01E         	movff	vscp_writeRegister@reg,?_vscp_writeStdReg
  9611  006E08  C0AD  F01F         	movff	vscp_writeRegister@value,?_vscp_writeStdReg+1
  9612  006E0C  ECB4  F02D         	call	_vscp_writeStdReg	;wreg free
  9613  006E10  D006               	goto	l1268
  9614  006E12                     l11764:
  9615                           
  9616                           ;vscp_firmware.c: 705: else {
  9617                           ;vscp_firmware.c: 706: return vscp_writeAppReg(reg, value);
  9618  006E12  C0AC  F0A2         	movff	vscp_writeRegister@reg,?_vscp_writeAppReg
  9619  006E16  C0AD  F0A3         	movff	vscp_writeRegister@value,?_vscp_writeAppReg+1
  9620  006E1A  EC11  F003         	call	_vscp_writeAppReg	;wreg free
  9621  006E1E                     l1268:
  9622  006E1E  0012               	return	
  9623  006E20                     __end_of_vscp_writeRegister:
  9624                           	opt stack 0
  9625                           tblptru	equ	0xFF8
  9626                           prodh	equ	0xFF4
  9627                           prodl	equ	0xFF3
  9628                           postinc0	equ	0xFEE
  9629                           wreg	equ	0xFE8
  9630                           indf2	equ	0xFDF
  9631                           postinc2	equ	0xFDE
  9632                           postdec2	equ	0xFDD
  9633                           fsr2h	equ	0xFDA
  9634                           fsr2l	equ	0xFD9
  9635                           status	equ	0xFD8
  9636                           
  9637 ;; *************** function _vscp_writeStdReg *****************
  9638 ;; Defined at:
  9639 ;;		line 715 in file "../../vscp_firmware/common/vscp_firmware.c"
  9640 ;; Parameters:    Size  Location     Type
  9641 ;;  reg             1   29[COMRAM] unsigned char 
  9642 ;;  value           1   30[COMRAM] unsigned char 
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;  rv              1   35[COMRAM] unsigned char 
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  1    wreg      unsigned char 
  9647 ;; Registers used:
  9648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9654 ;;      Params:         2       0       0       0       0       0       0
  9655 ;;      Locals:         1       0       0       0       0       0       0
  9656 ;;      Temps:          4       0       0       0       0       0       0
  9657 ;;      Totals:         7       0       0       0       0       0       0
  9658 ;;Total ram usage:        7 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; Hardware stack levels required when called:    5
  9661 ;; This function calls:
  9662 ;;		_vscp_setGUID
  9663 ;;		_vscp_setManufacturerId
  9664 ;;		_vscp_getGUID
  9665 ;;		_vscp_getUserID
  9666 ;;		_vscp_setUserID
  9667 ;;		_vscp_getManufacturerId
  9668 ;;		_vscp_restoreDefaults
  9669 ;; This function is called by:
  9670 ;;		_vscp_writeRegister
  9671 ;;		_vscp_handleProtocolEvent
  9672 ;; This function uses a non-reentrant model
  9673 ;;
  9674                           
  9675                           	psect	text17
  9676  005B68                     __ptext17:
  9677                           	opt stack 0
  9678  005B68                     _vscp_writeStdReg:
  9679                           	opt stack 23
  9680                           
  9681                           ;vscp_firmware.c: 716: uint8_t rv = ~value;
  9682                           
  9683                           ;incstack = 0
  9684                           ;incstack = 0
  9685  005B68  501F               	movf	vscp_writeStdReg@value,w,c
  9686  005B6A  0AFF               	xorlw	255
  9687  005B6C  6E24               	movwf	vscp_writeStdReg@rv,c
  9688                           
  9689                           ;vscp_firmware.c: 718: if ((reg > (0x82 + 1)) &&
  9690                           ;vscp_firmware.c: 719: (reg < 0x89)) {
  9691  005B6E  0E83               	movlw	131
  9692  005B70  641E               	cpfsgt	vscp_writeStdReg@reg,c
  9693  005B72  D010               	goto	l11776
  9694  005B74  0E89               	movlw	137
  9695  005B76  601E               	cpfslt	vscp_writeStdReg@reg,c
  9696  005B78  D00D               	goto	l11776
  9697                           
  9698                           ;vscp_firmware.c: 722: vscp_setUserID((reg - 0x84), value);
  9699  005B7A  501E               	movf	vscp_writeStdReg@reg,w,c
  9700  005B7C  0F7C               	addlw	124
  9701  005B7E  6E1B               	movwf	?_vscp_setUserID,c
  9702  005B80  C01F  F01C         	movff	vscp_writeStdReg@value,?_vscp_setUserID+1
  9703  005B84  EC52  F037         	call	_vscp_setUserID	;wreg free
  9704                           
  9705                           ;vscp_firmware.c: 723: rv = vscp_getUserID((reg - 0x84));
  9706  005B88  501E               	movf	vscp_writeStdReg@reg,w,c
  9707  005B8A  0F7C               	addlw	124
  9708  005B8C  6E18               	movwf	?_vscp_getUserID,c
  9709  005B8E  ECBD  F037         	call	_vscp_getUserID	;wreg free
  9710  005B92  D0A6               	goto	L76
  9711  005B94                     l11776:
  9712                           
  9713                           ;vscp_firmware.c: 726: else if (0x92 == reg) {
  9714  005B94  501E               	movf	vscp_writeStdReg@reg,w,c
  9715  005B96  0A92               	xorlw	146
  9716  005B98  A4D8               	btfss	status,2,c
  9717  005B9A  D011               	goto	l11782
  9718                           
  9719                           ;vscp_firmware.c: 729: vscp_page_select = (vscp_page_select & 0xff) | ((uint16_t) value 
      +                          << 8);
  9720  005B9C  501F               	movf	vscp_writeStdReg@value,w,c
  9721  005B9E  6E21               	movwf	(??_vscp_writeStdReg+1)& (0+255),c
  9722  005BA0  6A20               	clrf	??_vscp_writeStdReg& (0+255),c
  9723  005BA2  0EFF               	movlw	255
  9724  005BA4  1436               	andwf	_vscp_page_select,w,c
  9725  005BA6  6E22               	movwf	(??_vscp_writeStdReg+2)& (0+255),c
  9726  005BA8  0E00               	movlw	0
  9727  005BAA  1437               	andwf	_vscp_page_select+1,w,c
  9728  005BAC  6E23               	movwf	(??_vscp_writeStdReg+3)& (0+255),c
  9729  005BAE  5020               	movf	??_vscp_writeStdReg,w,c
  9730  005BB0  1022               	iorwf	??_vscp_writeStdReg+2,w,c
  9731  005BB2  6E36               	movwf	_vscp_page_select,c
  9732  005BB4  5021               	movf	??_vscp_writeStdReg+1,w,c
  9733  005BB6  1023               	iorwf	??_vscp_writeStdReg+3,w,c
  9734  005BB8  6E37               	movwf	_vscp_page_select+1,c
  9735                           
  9736                           ;vscp_firmware.c: 730: rv = (vscp_page_select >> 8) & 0xff;
  9737  005BBA  5037               	movf	_vscp_page_select+1,w,c
  9738  005BBC  D091               	goto	L76
  9739  005BBE                     l11782:
  9740                           
  9741                           ;vscp_firmware.c: 732: else if (0x93 == reg) {
  9742  005BBE  501E               	movf	vscp_writeStdReg@reg,w,c
  9743  005BC0  0A93               	xorlw	147
  9744  005BC2  A4D8               	btfss	status,2,c
  9745  005BC4  D00E               	goto	l11788
  9746                           
  9747                           ;vscp_firmware.c: 735: vscp_page_select = (vscp_page_select & 0xff00) | value;
  9748  005BC6  0E00               	movlw	0
  9749  005BC8  1436               	andwf	_vscp_page_select,w,c
  9750  005BCA  6E20               	movwf	??_vscp_writeStdReg& (0+255),c
  9751  005BCC  0EFF               	movlw	255
  9752  005BCE  1437               	andwf	_vscp_page_select+1,w,c
  9753  005BD0  6E21               	movwf	(??_vscp_writeStdReg+1)& (0+255),c
  9754  005BD2  501F               	movf	vscp_writeStdReg@value,w,c
  9755  005BD4  1020               	iorwf	??_vscp_writeStdReg,w,c
  9756  005BD6  6E36               	movwf	_vscp_page_select,c
  9757  005BD8  5021               	movf	??_vscp_writeStdReg+1,w,c
  9758  005BDA  6E37               	movwf	_vscp_page_select+1,c
  9759                           
  9760                           ;vscp_firmware.c: 736: rv = (vscp_page_select & 0xff);
  9761  005BDC  C036  F024         	movff	_vscp_page_select,vscp_writeStdReg@rv
  9762                           
  9763                           ;vscp_firmware.c: 737: }
  9764  005BE0  D080               	goto	l11832
  9765  005BE2                     l11788:
  9766                           
  9767                           ;vscp_firmware.c: 742: else if ((reg > 0x88) && (reg < 0x91)) {
  9768  005BE2  0E88               	movlw	136
  9769  005BE4  641E               	cpfsgt	vscp_writeStdReg@reg,c
  9770  005BE6  D027               	goto	l11800
  9771  005BE8  0E91               	movlw	145
  9772  005BEA  601E               	cpfslt	vscp_writeStdReg@reg,c
  9773  005BEC  D024               	goto	l11800
  9774                           
  9775                           ;vscp_firmware.c: 744: if ((0xff != ((vscp_page_select >> 8) & 0xff)) ||
  9776                           ;vscp_firmware.c: 745: (0xff != (vscp_page_select & 0xff))) {
  9777  005BEE  C037  F020         	movff	_vscp_page_select+1,??_vscp_writeStdReg
  9778  005BF2  C020  F021         	movff	??_vscp_writeStdReg,??_vscp_writeStdReg+1
  9779  005BF6  6A22               	clrf	(??_vscp_writeStdReg+2)& (0+255),c
  9780  005BF8  0EFF               	movlw	255
  9781  005BFA  1621               	andwf	??_vscp_writeStdReg+1,f,c
  9782  005BFC  0E00               	movlw	0
  9783  005BFE  1622               	andwf	??_vscp_writeStdReg+2,f,c
  9784  005C00  2821               	incf	??_vscp_writeStdReg+1,w,c
  9785  005C02  1022               	iorwf	??_vscp_writeStdReg+2,w,c
  9786  005C04  A4D8               	btfss	status,2,c
  9787  005C06  D06A               	goto	l11830
  9788  005C08  0EFF               	movlw	255
  9789  005C0A  1436               	andwf	_vscp_page_select,w,c
  9790  005C0C  6E20               	movwf	??_vscp_writeStdReg& (0+255),c
  9791  005C0E  0E00               	movlw	0
  9792  005C10  1437               	andwf	_vscp_page_select+1,w,c
  9793  005C12  6E21               	movwf	(??_vscp_writeStdReg+1)& (0+255),c
  9794  005C14  2820               	incf	??_vscp_writeStdReg,w,c
  9795  005C16  1021               	iorwf	??_vscp_writeStdReg+1,w,c
  9796  005C18  A4D8               	btfss	status,2,c
  9797  005C1A  D060               	goto	l11830
  9798                           
  9799                           ;vscp_firmware.c: 749: else {
  9800                           ;vscp_firmware.c: 751: vscp_setManufacturerId(reg - 0x89, value);
  9801                           
  9802                           ;vscp_firmware.c: 748: }
  9803                           
  9804                           ;vscp_firmware.c: 747: rv = ~value;
  9805  005C1C  501E               	movf	vscp_writeStdReg@reg,w,c
  9806  005C1E  0F77               	addlw	119
  9807  005C20  6E1B               	movwf	?_vscp_setManufacturerId,c
  9808  005C22  C01F  F01C         	movff	vscp_writeStdReg@value,?_vscp_setManufacturerId+1
  9809  005C26  EC10  F037         	call	_vscp_setManufacturerId	;wreg free
  9810                           
  9811                           ;vscp_firmware.c: 752: rv = vscp_getManufacturerId(reg - 0x89);
  9812  005C2A  501E               	movf	vscp_writeStdReg@reg,w,c
  9813  005C2C  0F77               	addlw	119
  9814  005C2E  6E18               	movwf	?_vscp_getManufacturerId,c
  9815  005C30  ECB4  F037         	call	_vscp_getManufacturerId	;wreg free
  9816  005C34  D055               	goto	L76
  9817  005C36                     l11800:
  9818                           
  9819                           ;vscp_firmware.c: 755: else if ((reg > (0xD0 - 1)) && (reg < 0xE0)) {
  9820  005C36  0ECF               	movlw	207
  9821  005C38  641E               	cpfsgt	vscp_writeStdReg@reg,c
  9822  005C3A  D027               	goto	l11812
  9823  005C3C  0EE0               	movlw	224
  9824  005C3E  601E               	cpfslt	vscp_writeStdReg@reg,c
  9825  005C40  D024               	goto	l11812
  9826                           
  9827                           ;vscp_firmware.c: 757: if ((0xff != ((vscp_page_select >> 8) & 0xff)) ||
  9828                           ;vscp_firmware.c: 758: (0xff != (vscp_page_select & 0xff))) {
  9829  005C42  C037  F020         	movff	_vscp_page_select+1,??_vscp_writeStdReg
  9830  005C46  C020  F021         	movff	??_vscp_writeStdReg,??_vscp_writeStdReg+1
  9831  005C4A  6A22               	clrf	(??_vscp_writeStdReg+2)& (0+255),c
  9832  005C4C  0EFF               	movlw	255
  9833  005C4E  1621               	andwf	??_vscp_writeStdReg+1,f,c
  9834  005C50  0E00               	movlw	0
  9835  005C52  1622               	andwf	??_vscp_writeStdReg+2,f,c
  9836  005C54  2821               	incf	??_vscp_writeStdReg+1,w,c
  9837  005C56  1022               	iorwf	??_vscp_writeStdReg+2,w,c
  9838  005C58  A4D8               	btfss	status,2,c
  9839  005C5A  D040               	goto	l11830
  9840  005C5C  0EFF               	movlw	255
  9841  005C5E  1436               	andwf	_vscp_page_select,w,c
  9842  005C60  6E20               	movwf	??_vscp_writeStdReg& (0+255),c
  9843  005C62  0E00               	movlw	0
  9844  005C64  1437               	andwf	_vscp_page_select+1,w,c
  9845  005C66  6E21               	movwf	(??_vscp_writeStdReg+1)& (0+255),c
  9846  005C68  2820               	incf	??_vscp_writeStdReg,w,c
  9847  005C6A  1021               	iorwf	??_vscp_writeStdReg+1,w,c
  9848  005C6C  A4D8               	btfss	status,2,c
  9849  005C6E  D036               	goto	l11830
  9850                           
  9851                           ;vscp_firmware.c: 762: else {
  9852                           ;vscp_firmware.c: 763: vscp_setGUID(reg - 0xD0, value);
  9853                           
  9854                           ;vscp_firmware.c: 761: }
  9855                           
  9856                           ;vscp_firmware.c: 760: rv = ~value;
  9857  005C70  501E               	movf	vscp_writeStdReg@reg,w,c
  9858  005C72  0F30               	addlw	48
  9859  005C74  6E1B               	movwf	?_vscp_setGUID,c
  9860  005C76  C01F  F01C         	movff	vscp_writeStdReg@value,?_vscp_setGUID+1
  9861  005C7A  EC21  F037         	call	_vscp_setGUID	;wreg free
  9862                           
  9863                           ;vscp_firmware.c: 764: rv = vscp_getGUID(reg - 0xD0);
  9864  005C7E  501E               	movf	vscp_writeStdReg@reg,w,c
  9865  005C80  0F30               	addlw	48
  9866  005C82  6E18               	movwf	?_vscp_getGUID,c
  9867  005C84  ECC6  F037         	call	_vscp_getGUID	;wreg free
  9868  005C88  D02B               	goto	L76
  9869  005C8A                     l11812:
  9870                           
  9871                           ;vscp_firmware.c: 768: else if ( 0xA2 == reg ) {
  9872  005C8A  501E               	movf	vscp_writeStdReg@reg,w,c
  9873  005C8C  0AA2               	xorlw	162
  9874  005C8E  A4D8               	btfss	status,2,c
  9875  005C90  D025               	goto	l11830
  9876                           
  9877                           ;vscp_firmware.c: 769: if ( 0x55 == value ) {
  9878  005C92  501F               	movf	vscp_writeStdReg@value,w,c
  9879  005C94  0A55               	xorlw	85
  9880  005C96  A4D8               	btfss	status,2,c
  9881  005C98  D00A               	goto	l11820
  9882                           
  9883                           ;vscp_firmware.c: 770: vscp_configtimer = 0;
  9884  005C9A  0E00               	movlw	0
  9885  005C9C  0100               	movlb	0	; () banked
  9886  005C9E  0100               	movlb	0	; () banked
  9887  005CA0  6FDA               	movwf	(_vscp_configtimer+1)& (0+255),b	;volatile
  9888  005CA2  0E00               	movlw	0
  9889  005CA4  0100               	movlb	0	; () banked
  9890  005CA6  6FD9               	movwf	_vscp_configtimer& (0+255),b	;volatile
  9891                           
  9892                           ; BSR set to: 0
  9893                           ;vscp_firmware.c: 771: rv = 0x55;
  9894  005CA8  6E20               	movwf	??_vscp_writeStdReg& (0+255),c
  9895  005CAA  0E55               	movlw	85
  9896  005CAC  D014               	goto	L78
  9897  005CAE                     l11820:
  9898                           
  9899                           ;vscp_firmware.c: 773: else if ( 0xaa == value ) {
  9900  005CAE  501F               	movf	vscp_writeStdReg@value,w,c
  9901  005CB0  0AAA               	xorlw	170
  9902  005CB2  A4D8               	btfss	status,2,c
  9903  005CB4  D016               	goto	l11832
  9904                           
  9905                           ;vscp_firmware.c: 774: if ( vscp_configtimer < 1000 ) {
  9906  005CB6  0EE8               	movlw	232
  9907  005CB8  0100               	movlb	0	; () banked
  9908  005CBA  0100               	movlb	0	; () banked
  9909  005CBC  5DD9               	subwf	_vscp_configtimer& (0+255),w,b	;volatile
  9910  005CBE  0E03               	movlw	3
  9911  005CC0  0100               	movlb	0	; () banked
  9912  005CC2  59DA               	subwfb	(_vscp_configtimer+1)& (0+255),w,b	;volatile
  9913  005CC4  B0D8               	btfsc	status,0,c
  9914  005CC6  D005               	goto	l11828
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;vscp_firmware.c: 775: vscp_restoreDefaults();
  9918  005CC8  EC0B  F038         	call	_vscp_restoreDefaults	;wreg free
  9919                           
  9920                           ;vscp_firmware.c: 776: rv = 0xaa;
  9921  005CCC  6E20               	movwf	??_vscp_writeStdReg& (0+255),c
  9922  005CCE  0EAA               	movlw	170
  9923  005CD0  D002               	goto	L78
  9924  005CD2                     l11828:
  9925                           
  9926                           ;vscp_firmware.c: 778: else {
  9927                           ;vscp_firmware.c: 779: rv = 0;
  9928  005CD2  6E20               	movwf	??_vscp_writeStdReg& (0+255),c
  9929  005CD4  0E00               	movlw	0
  9930  005CD6                     L78:
  9931  005CD6  6E24               	movwf	vscp_writeStdReg@rv,c
  9932  005CD8  5020               	movf	??_vscp_writeStdReg& (0+255),w,c
  9933  005CDA  D003               	goto	l11832
  9934  005CDC                     l11830:
  9935                           
  9936                           ;vscp_firmware.c: 784: else {
  9937                           ;vscp_firmware.c: 786: rv = ~value;
  9938  005CDC  501F               	movf	vscp_writeStdReg@value,w,c
  9939  005CDE  0AFF               	xorlw	255
  9940  005CE0                     L76:
  9941  005CE0  6E24               	movwf	vscp_writeStdReg@rv,c
  9942  005CE2                     l11832:
  9943                           
  9944                           ;vscp_firmware.c: 787: }
  9945                           ;vscp_firmware.c: 789: return rv;
  9946  005CE2  5024               	movf	vscp_writeStdReg@rv,w,c
  9947  005CE4  0012               	return	
  9948  005CE6                     __end_of_vscp_writeStdReg:
  9949                           	opt stack 0
  9950                           tblptru	equ	0xFF8
  9951                           prodh	equ	0xFF4
  9952                           prodl	equ	0xFF3
  9953                           postinc0	equ	0xFEE
  9954                           wreg	equ	0xFE8
  9955                           indf2	equ	0xFDF
  9956                           postinc2	equ	0xFDE
  9957                           postdec2	equ	0xFDD
  9958                           fsr2h	equ	0xFDA
  9959                           fsr2l	equ	0xFD9
  9960                           status	equ	0xFD8
  9961                           
  9962 ;; *************** function _vscp_restoreDefaults *****************
  9963 ;; Defined at:
  9964 ;;		line 3084 in file "../main.c"
  9965 ;; Parameters:    Size  Location     Type
  9966 ;;		None
  9967 ;; Auto vars:     Size  Location     Type
  9968 ;;		None
  9969 ;; Return value:  Size  Location     Type
  9970 ;;		None               void
  9971 ;; Registers used:
  9972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9973 ;; Tracked objects:
  9974 ;;		On entry : 0/0
  9975 ;;		On exit  : 0/0
  9976 ;;		Unchanged: 0/0
  9977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9978 ;;      Params:         0       0       0       0       0       0       0
  9979 ;;      Locals:         0       0       0       0       0       0       0
  9980 ;;      Temps:          0       0       0       0       0       0       0
  9981 ;;      Totals:         0       0       0       0       0       0       0
  9982 ;;Total ram usage:        0 bytes
  9983 ;; Hardware stack levels used:    1
  9984 ;; Hardware stack levels required when called:    4
  9985 ;; This function calls:
  9986 ;;		_init_app_eeprom
  9987 ;;		_init_app_ram
  9988 ;; This function is called by:
  9989 ;;		_vscp_writeStdReg
  9990 ;; This function uses a non-reentrant model
  9991 ;;
  9992                           
  9993                           	psect	text18
  9994  007016                     __ptext18:
  9995                           	opt stack 0
  9996  007016                     _vscp_restoreDefaults:
  9997                           	opt stack 23
  9998                           
  9999                           ;main.c: 3085: init_app_eeprom();
 10000                           
 10001                           ;incstack = 0
 10002                           ;incstack = 0
 10003  007016  ECFF  F02B         	call	_init_app_eeprom	;wreg free
 10004                           
 10005                           ;main.c: 3086: init_app_ram();
 10006  00701A  EC44  F023         	call	_init_app_ram	;wreg free
 10007  00701E  0012               	return	
 10008  007020                     __end_of_vscp_restoreDefaults:
 10009                           	opt stack 0
 10010                           tblptru	equ	0xFF8
 10011                           prodh	equ	0xFF4
 10012                           prodl	equ	0xFF3
 10013                           postinc0	equ	0xFEE
 10014                           wreg	equ	0xFE8
 10015                           indf2	equ	0xFDF
 10016                           postinc2	equ	0xFDE
 10017                           postdec2	equ	0xFDD
 10018                           fsr2h	equ	0xFDA
 10019                           fsr2l	equ	0xFD9
 10020                           status	equ	0xFD8
 10021                           
 10022 ;; *************** function _init_app_ram *****************
 10023 ;; Defined at:
 10024 ;;		line 438 in file "../main.c"
 10025 ;; Parameters:    Size  Location     Type
 10026 ;;		None
 10027 ;; Auto vars:     Size  Location     Type
 10028 ;;  i               1   24[COMRAM] unsigned char 
 10029 ;;  dir             1   23[COMRAM] unsigned char 
 10030 ;; Return value:  Size  Location     Type
 10031 ;;		None               void
 10032 ;; Registers used:
 10033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10034 ;; Tracked objects:
 10035 ;;		On entry : 0/0
 10036 ;;		On exit  : 0/0
 10037 ;;		Unchanged: 0/0
 10038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10039 ;;      Params:         0       0       0       0       0       0       0
 10040 ;;      Locals:         2       0       0       0       0       0       0
 10041 ;;      Temps:          0      37       0       0       0       0       0
 10042 ;;      Totals:         2      37       0       0       0       0       0
 10043 ;;Total ram usage:       39 bytes
 10044 ;; Hardware stack levels used:    1
 10045 ;; Hardware stack levels required when called:    3
 10046 ;; This function calls:
 10047 ;;		_Read_b_eep
 10048 ;; This function is called by:
 10049 ;;		_main
 10050 ;;		_vscp_restoreDefaults
 10051 ;; This function uses a non-reentrant model
 10052 ;;
 10053                           
 10054                           	psect	text19
 10055  004688                     __ptext19:
 10056                           	opt stack 0
 10057  004688                     _init_app_ram:
 10058                           	opt stack 23
 10059                           
 10060                           ;main.c: 439: uint8_t i;
 10061                           ;main.c: 440: uint8_t dir;
 10062                           ;main.c: 442: measurement_clock = 0;
 10063                           
 10064                           ;incstack = 0
 10065                           ;incstack = 0
 10066  004688  0E00               	movlw	0
 10067  00468A  0100               	movlb	0	; () banked
 10068  00468C  0100               	movlb	0	; () banked
 10069  00468E  6FD1               	movwf	_measurement_clock& (0+255),b	;volatile
 10070  004690  0E00               	movlw	0
 10071  004692  0100               	movlb	0	; () banked
 10072  004694  6FD2               	movwf	(_measurement_clock+1)& (0+255),b	;volatile
 10073  004696  0E00               	movlw	0
 10074  004698  0100               	movlb	0	; () banked
 10075  00469A  6FD3               	movwf	(_measurement_clock+2)& (0+255),b	;volatile
 10076  00469C  0E00               	movlw	0
 10077  00469E  0100               	movlb	0	; () banked
 10078  0046A0  6FD4               	movwf	(_measurement_clock+3)& (0+255),b	;volatile
 10079                           
 10080                           ; BSR set to: 0
 10081                           ;main.c: 444: seconds = 0;
 10082  0046A2  0100               	movlb	0	; () banked
 10083  0046A4  6F60               	movwf	??_init_app_ram& (0+255),b
 10084  0046A6  0E00               	movlw	0
 10085  0046A8  0100               	movlb	0	; () banked
 10086  0046AA  0100               	movlb	0	; () banked
 10087  0046AC  6FE5               	movwf	_seconds& (0+255),b
 10088  0046AE  0100               	movlb	0	; () banked
 10089  0046B0  5160               	movf	??_init_app_ram& (0+255),w,b
 10090                           
 10091                           ; BSR set to: 0
 10092                           ;main.c: 445: minutes = 0;
 10093  0046B2  0100               	movlb	0	; () banked
 10094  0046B4  6F60               	movwf	??_init_app_ram& (0+255),b
 10095  0046B6  0E00               	movlw	0
 10096  0046B8  0100               	movlb	0	; () banked
 10097  0046BA  0100               	movlb	0	; () banked
 10098  0046BC  6FE4               	movwf	_minutes& (0+255),b
 10099  0046BE  0100               	movlb	0	; () banked
 10100  0046C0  5160               	movf	??_init_app_ram& (0+255),w,b
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;main.c: 446: hours = 0;
 10104  0046C2  0100               	movlb	0	; () banked
 10105  0046C4  6F60               	movwf	??_init_app_ram& (0+255),b
 10106  0046C6  0E00               	movlw	0
 10107  0046C8  0100               	movlb	0	; () banked
 10108  0046CA  0100               	movlb	0	; () banked
 10109  0046CC  6FE3               	movwf	_hours& (0+255),b
 10110  0046CE  0100               	movlb	0	; () banked
 10111  0046D0  5160               	movf	??_init_app_ram& (0+255),w,b
 10112                           
 10113                           ; BSR set to: 0
 10114                           ;main.c: 448: channel_pulse_flags = 0;
 10115  0046D2  0E00               	movlw	0
 10116  0046D4  0100               	movlb	0	; () banked
 10117  0046D6  0100               	movlb	0	; () banked
 10118  0046D8  6FD6               	movwf	(_channel_pulse_flags+1)& (0+255),b
 10119  0046DA  0E00               	movlw	0
 10120  0046DC  0100               	movlb	0	; () banked
 10121  0046DE  6FD5               	movwf	_channel_pulse_flags& (0+255),b
 10122                           
 10123                           ;main.c: 451: for ( i = 0; i < 10; i++ ) {
 10124  0046E0  0100               	movlb	0	; () banked
 10125  0046E2  6F60               	movwf	??_init_app_ram& (0+255),b
 10126  0046E4  0E00               	movlw	0
 10127  0046E6  6E19               	movwf	init_app_ram@i,c
 10128  0046E8  0100               	movlb	0	; () banked
 10129  0046EA  5160               	movf	??_init_app_ram& (0+255),w,b
 10130  0046EC  D01D               	goto	L79
 10131  0046EE                     l9318:
 10132                           
 10133                           ; BSR set to: 0
 10134                           ;main.c: 452: channel_pulse_timer[ i ] = 0;
 10135  0046EE  5019               	movf	init_app_ram@i,w,c
 10136  0046F0  0D02               	mullw	2
 10137  0046F2  0101               	movlb	1	; () banked
 10138  0046F4  0E26               	movlw	low _channel_pulse_timer
 10139  0046F6  24F3               	addwf	prodl,w,c
 10140  0046F8  6ED9               	movwf	fsr2l,c
 10141  0046FA  0101               	movlb	1	; () banked
 10142  0046FC  0E01               	movlw	high _channel_pulse_timer
 10143  0046FE  20F4               	addwfc	prodh,w,c
 10144  004700  6EDA               	movwf	fsr2h,c
 10145  004702  0E00               	movlw	0
 10146  004704  6EDE               	movwf	postinc2,c
 10147  004706  0E00               	movlw	0
 10148  004708  6EDD               	movwf	postdec2,c
 10149                           
 10150                           ;main.c: 453: channel_protection_timer[ i ] = 0;
 10151  00470A  5019               	movf	init_app_ram@i,w,c
 10152  00470C  0D02               	mullw	2
 10153  00470E  0100               	movlb	0	; () banked
 10154  004710  0EBD               	movlw	low _channel_protection_timer
 10155  004712  24F3               	addwf	prodl,w,c
 10156  004714  6ED9               	movwf	fsr2l,c
 10157  004716  0100               	movlb	0	; () banked
 10158  004718  0E00               	movlw	high _channel_protection_timer
 10159  00471A  20F4               	addwfc	prodh,w,c
 10160  00471C  6EDA               	movwf	fsr2h,c
 10161  00471E  0E00               	movlw	0
 10162  004720  6EDE               	movwf	postinc2,c
 10163  004722  0E00               	movlw	0
 10164  004724  6EDD               	movwf	postdec2,c
 10165                           
 10166                           ; BSR set to: 0
 10167  004726  2A19               	incf	init_app_ram@i,f,c
 10168  004728                     L79:
 10169                           
 10170                           ; BSR set to: 0
 10171  004728  0E09               	movlw	9
 10172  00472A  6419               	cpfsgt	init_app_ram@i,c
 10173  00472C  D7E0               	goto	l9318
 10174                           
 10175                           ; BSR set to: 0
 10176                           ;main.c: 454: }
 10177                           ;main.c: 456: for ( i=0; i<10; i++ ) {
 10178                           
 10179                           ; BSR set to: 0
 10180  00472E  0100               	movlb	0	; () banked
 10181  004730  6F60               	movwf	??_init_app_ram& (0+255),b
 10182  004732  0E00               	movlw	0
 10183  004734  6E19               	movwf	init_app_ram@i,c
 10184  004736  0100               	movlb	0	; () banked
 10185  004738  5160               	movf	??_init_app_ram& (0+255),w,b
 10186  00473A  D08F               	goto	L80
 10187  00473C                     l9330:
 10188                           
 10189                           ; BSR set to: 0
 10190                           ;main.c: 459: if ( Read_b_eep(0x43 + 24 + i) &
 10191                           ;main.c: 460: 0x01 ) {
 10192  00473C  0E5B               	movlw	91
 10193  00473E  2419               	addwf	init_app_ram@i,w,c
 10194  004740  6E16               	movwf	?_Read_b_eep,c
 10195  004742  6A17               	clrf	?_Read_b_eep+1,c
 10196  004744  0E00               	movlw	0
 10197  004746  2217               	addwfc	?_Read_b_eep+1,f,c
 10198  004748  ECD8  F037         	call	_Read_b_eep	;wreg free
 10199  00474C  0100               	movlb	0	; () banked
 10200  00474E  6F60               	movwf	??_init_app_ram& (0+255),b
 10201  004750  0100               	movlb	0	; () banked
 10202  004752  A160               	btfss	??_init_app_ram& (0+255),0,b
 10203  004754  D047               	goto	l9336
 10204                           
 10205                           ; BSR set to: 0
 10206                           ;main.c: 462: channel_pulse_flags |= (1<<i);
 10207  004756  C019  F060         	movff	init_app_ram@i,??_init_app_ram
 10208  00475A  0E01               	movlw	1
 10209  00475C  0100               	movlb	0	; () banked
 10210  00475E  6F61               	movwf	(??_init_app_ram+1)& (0+255),b
 10211  004760  6B62               	clrf	(??_init_app_ram+2)& (0+255),b
 10212  004762  0100               	movlb	0	; () banked
 10213  004764  2B60               	incf	??_init_app_ram& (0+255),f,b
 10214  004766  D004               	goto	u10604
 10215  004768                     u10605:
 10216  004768  90D8               	bcf	status,0,c
 10217  00476A  0100               	movlb	0	; () banked
 10218  00476C  3761               	rlcf	(??_init_app_ram+1)& (0+255),f,b
 10219  00476E  3762               	rlcf	(??_init_app_ram+2)& (0+255),f,b
 10220  004770                     u10604:
 10221  004770  0100               	movlb	0	; () banked
 10222  004772  2F60               	decfsz	??_init_app_ram& (0+255),f,b
 10223  004774  D7F9               	goto	u10605
 10224  004776  0100               	movlb	0	; () banked
 10225  004778  5161               	movf	(??_init_app_ram+1)& (0+255),w,b
 10226  00477A  0100               	movlb	0	; () banked
 10227  00477C  0100               	movlb	0	; () banked
 10228  00477E  13D5               	iorwf	_channel_pulse_flags& (0+255),f,b
 10229  004780  0100               	movlb	0	; () banked
 10230  004782  5162               	movf	(??_init_app_ram+2)& (0+255),w,b
 10231  004784  0100               	movlb	0	; () banked
 10232  004786  0100               	movlb	0	; () banked
 10233  004788  13D6               	iorwf	(_channel_pulse_flags+1)& (0+255),f,b
 10234                           
 10235                           ; BSR set to: 0
 10236                           ;main.c: 463: channel_pulse_timer[ i ] =
 10237                           ;main.c: 464: Read_b_eep(0x43 + 46 + 0 + i) * 256 +
 10238                           ;main.c: 465: Read_b_eep(0x43 + 46 + 1 + i);
 10239  00478A  0E71               	movlw	113
 10240  00478C  2419               	addwf	init_app_ram@i,w,c
 10241  00478E  6E16               	movwf	?_Read_b_eep,c
 10242  004790  6A17               	clrf	?_Read_b_eep+1,c
 10243  004792  0E00               	movlw	0
 10244  004794  2217               	addwfc	?_Read_b_eep+1,f,c
 10245  004796  ECD8  F037         	call	_Read_b_eep	;wreg free
 10246  00479A  0100               	movlb	0	; () banked
 10247  00479C  6F60               	movwf	??_init_app_ram& (0+255),b
 10248  00479E  0100               	movlb	0	; () banked
 10249  0047A0  5160               	movf	??_init_app_ram& (0+255),w,b
 10250  0047A2  0100               	movlb	0	; () banked
 10251  0047A4  6F62               	movwf	(??_init_app_ram+2)& (0+255),b
 10252  0047A6  6B61               	clrf	(??_init_app_ram+1)& (0+255),b
 10253  0047A8  0E72               	movlw	114
 10254  0047AA  2419               	addwf	init_app_ram@i,w,c
 10255  0047AC  6E16               	movwf	?_Read_b_eep,c
 10256  0047AE  6A17               	clrf	?_Read_b_eep+1,c
 10257  0047B0  0E00               	movlw	0
 10258  0047B2  2217               	addwfc	?_Read_b_eep+1,f,c
 10259  0047B4  ECD8  F037         	call	_Read_b_eep	;wreg free
 10260  0047B8  0100               	movlb	0	; () banked
 10261  0047BA  6F63               	movwf	(??_init_app_ram+3)& (0+255),b
 10262  0047BC  0100               	movlb	0	; () banked
 10263  0047BE  5163               	movf	(??_init_app_ram+3)& (0+255),w,b
 10264  0047C0  0100               	movlb	0	; () banked
 10265  0047C2  2761               	addwf	(??_init_app_ram+1)& (0+255),f,b
 10266  0047C4  0E00               	movlw	0
 10267  0047C6  2362               	addwfc	(??_init_app_ram+2)& (0+255),f,b
 10268  0047C8  5019               	movf	init_app_ram@i,w,c
 10269  0047CA  0D02               	mullw	2
 10270  0047CC  0101               	movlb	1	; () banked
 10271  0047CE  0E26               	movlw	low _channel_pulse_timer
 10272  0047D0  24F3               	addwf	prodl,w,c
 10273  0047D2  6ED9               	movwf	fsr2l,c
 10274  0047D4  0101               	movlb	1	; () banked
 10275  0047D6  0E01               	movlw	high _channel_pulse_timer
 10276  0047D8  20F4               	addwfc	prodh,w,c
 10277  0047DA  6EDA               	movwf	fsr2h,c
 10278  0047DC  C061  FFDE         	movff	??_init_app_ram+1,postinc2
 10279  0047E0  C062  FFDD         	movff	??_init_app_ram+2,postdec2
 10280  0047E4                     l9336:
 10281                           
 10282                           ;main.c: 466: }
 10283                           ;main.c: 469: if ( Read_b_eep(0x43 + 29 + i) & 0x04) {
 10284  0047E4  0E60               	movlw	96
 10285  0047E6  2419               	addwf	init_app_ram@i,w,c
 10286  0047E8  6E16               	movwf	?_Read_b_eep,c
 10287  0047EA  6A17               	clrf	?_Read_b_eep+1,c
 10288  0047EC  0E00               	movlw	0
 10289  0047EE  2217               	addwfc	?_Read_b_eep+1,f,c
 10290  0047F0  ECD8  F037         	call	_Read_b_eep	;wreg free
 10291  0047F4  0100               	movlb	0	; () banked
 10292  0047F6  6F60               	movwf	??_init_app_ram& (0+255),b
 10293  0047F8  0100               	movlb	0	; () banked
 10294  0047FA  A560               	btfss	??_init_app_ram& (0+255),2,b
 10295  0047FC  D02D               	goto	l9340
 10296                           
 10297                           ; BSR set to: 0
 10298                           ;main.c: 470: channel_protection_timer[ i ] =
 10299                           ;main.c: 471: Read_b_eep(0x43 + 46 + 0 + i) * 256 +
 10300                           ;main.c: 472: Read_b_eep(0x43 + 46 + 1 + i);
 10301  0047FE  0E71               	movlw	113
 10302  004800  2419               	addwf	init_app_ram@i,w,c
 10303  004802  6E16               	movwf	?_Read_b_eep,c
 10304  004804  6A17               	clrf	?_Read_b_eep+1,c
 10305  004806  0E00               	movlw	0
 10306  004808  2217               	addwfc	?_Read_b_eep+1,f,c
 10307  00480A  ECD8  F037         	call	_Read_b_eep	;wreg free
 10308  00480E  0100               	movlb	0	; () banked
 10309  004810  6F60               	movwf	??_init_app_ram& (0+255),b
 10310  004812  0100               	movlb	0	; () banked
 10311  004814  5160               	movf	??_init_app_ram& (0+255),w,b
 10312  004816  0100               	movlb	0	; () banked
 10313  004818  6F62               	movwf	(??_init_app_ram+2)& (0+255),b
 10314  00481A  6B61               	clrf	(??_init_app_ram+1)& (0+255),b
 10315  00481C  0E72               	movlw	114
 10316  00481E  2419               	addwf	init_app_ram@i,w,c
 10317  004820  6E16               	movwf	?_Read_b_eep,c
 10318  004822  6A17               	clrf	?_Read_b_eep+1,c
 10319  004824  0E00               	movlw	0
 10320  004826  2217               	addwfc	?_Read_b_eep+1,f,c
 10321  004828  ECD8  F037         	call	_Read_b_eep	;wreg free
 10322  00482C  0100               	movlb	0	; () banked
 10323  00482E  6F63               	movwf	(??_init_app_ram+3)& (0+255),b
 10324  004830  0100               	movlb	0	; () banked
 10325  004832  5163               	movf	(??_init_app_ram+3)& (0+255),w,b
 10326  004834  0100               	movlb	0	; () banked
 10327  004836  2761               	addwf	(??_init_app_ram+1)& (0+255),f,b
 10328  004838  0E00               	movlw	0
 10329  00483A  2362               	addwfc	(??_init_app_ram+2)& (0+255),f,b
 10330  00483C  5019               	movf	init_app_ram@i,w,c
 10331  00483E  0D02               	mullw	2
 10332  004840  0100               	movlb	0	; () banked
 10333  004842  0EBD               	movlw	low _channel_protection_timer
 10334  004844  24F3               	addwf	prodl,w,c
 10335  004846  6ED9               	movwf	fsr2l,c
 10336  004848  0100               	movlb	0	; () banked
 10337  00484A  0E00               	movlw	high _channel_protection_timer
 10338  00484C  20F4               	addwfc	prodh,w,c
 10339  00484E  6EDA               	movwf	fsr2h,c
 10340  004850  C061  FFDE         	movff	??_init_app_ram+1,postinc2
 10341  004854  C062  FFDD         	movff	??_init_app_ram+2,postdec2
 10342  004858                     l9340:
 10343                           
 10344                           ; BSR set to: 0
 10345  004858  2A19               	incf	init_app_ram@i,f,c
 10346  00485A                     L80:
 10347                           
 10348                           ; BSR set to: 0
 10349  00485A  0E09               	movlw	9
 10350  00485C  6419               	cpfsgt	init_app_ram@i,c
 10351  00485E  D76E               	goto	l9330
 10352                           
 10353                           ; BSR set to: 0
 10354                           ;main.c: 473: }
 10355                           ;main.c: 475: }
 10356                           ;main.c: 477: dir = Read_b_eep(0x43 + 12);
 10357                           
 10358                           ; BSR set to: 0
 10359  004860  0E00               	movlw	0
 10360  004862  6E17               	movwf	?_Read_b_eep+1,c
 10361  004864  0E4F               	movlw	79
 10362  004866  6E16               	movwf	?_Read_b_eep,c
 10363  004868  ECD8  F037         	call	_Read_b_eep	;wreg free
 10364  00486C  6E18               	movwf	init_app_ram@dir,c
 10365                           
 10366                           ;main.c: 478: TRISA = ( dir & 0x03 ) | 0b00000000;
 10367  00486E  5018               	movf	init_app_ram@dir,w,c
 10368  004870  0B03               	andlw	3
 10369  004872  6E92               	movwf	3986,c	;volatile
 10370                           
 10371                           ;main.c: 480: dir = Read_b_eep(0x43 + 13);
 10372  004874  0E00               	movlw	0
 10373  004876  6E17               	movwf	?_Read_b_eep+1,c
 10374  004878  0E50               	movlw	80
 10375  00487A  6E16               	movwf	?_Read_b_eep,c
 10376  00487C  ECD8  F037         	call	_Read_b_eep	;wreg free
 10377  004880  6E18               	movwf	init_app_ram@dir,c
 10378                           
 10379                           ;main.c: 481: TRISB = ( dir & 0x03 ) |
 10380                           ;main.c: 482: 0b00001000;
 10381  004882  5018               	movf	init_app_ram@dir,w,c
 10382  004884  0B03               	andlw	3
 10383  004886  0908               	iorlw	8
 10384  004888  6E93               	movwf	3987,c	;volatile
 10385                           
 10386                           ;main.c: 485: if ( Read_b_eep(0x43 + 44) & 0x01 ) {
 10387  00488A  0E00               	movlw	0
 10388  00488C  6E17               	movwf	?_Read_b_eep+1,c
 10389  00488E  0E6F               	movlw	111
 10390  004890  6E16               	movwf	?_Read_b_eep,c
 10391  004892  ECD8  F037         	call	_Read_b_eep	;wreg free
 10392  004896  0100               	movlb	0	; () banked
 10393  004898  6F60               	movwf	??_init_app_ram& (0+255),b
 10394  00489A  0100               	movlb	0	; () banked
 10395  00489C  B160               	btfsc	??_init_app_ram& (0+255),0,b
 10396                           
 10397                           ; BSR set to: 0
 10398                           ;main.c: 486: INTCON2bits.RBPU = 0;
 10399  00489E  9EF1               	bcf	intcon2,7,c	;volatile
 10400                           
 10401                           ; BSR set to: 0
 10402                           ;main.c: 487: }
 10403                           ;main.c: 489: dir = ( Read_b_eep(0x43 + 13) << 1 ) & 0b11111000;
 10404                           
 10405                           ; BSR set to: 0
 10406  0048A0  0E00               	movlw	0
 10407  0048A2  6E17               	movwf	?_Read_b_eep+1,c
 10408  0048A4  0E50               	movlw	80
 10409  0048A6  6E16               	movwf	?_Read_b_eep,c
 10410  0048A8  ECD8  F037         	call	_Read_b_eep	;wreg free
 10411  0048AC  0100               	movlb	0	; () banked
 10412  0048AE  6F60               	movwf	??_init_app_ram& (0+255),b
 10413  0048B0  0100               	movlb	0	; () banked
 10414  0048B2  90D8               	bcf	status,0,c
 10415  0048B4  3560               	rlcf	??_init_app_ram& (0+255),w,b
 10416  0048B6  0BF8               	andlw	248
 10417  0048B8  6E18               	movwf	init_app_ram@dir,c
 10418                           
 10419                           ; BSR set to: 0
 10420                           ;main.c: 490: TRISC = dir |
 10421                           ;main.c: 491: 0b00000001;
 10422  0048BA  5018               	movf	init_app_ram@dir,w,c
 10423  0048BC  0901               	iorlw	1
 10424  0048BE  6E94               	movwf	3988,c	;volatile
 10425                           
 10426                           ; BSR set to: 0
 10427                           ;main.c: 494: current_iostate = ( LATAbits.LATA0 << 9 ) +
 10428                           ;main.c: 495: ( LATAbits.LATA1 << 8 ) +
 10429                           ;main.c: 496: ( LATAbits.LATA2 << 7 ) +
 10430                           ;main.c: 497: ( LATCbits.LATC7 << 6 ) +
 10431                           ;main.c: 498: ( LATCbits.LATC6 << 5 ) +
 10432                           ;main.c: 499: ( LATCbits.LATC5 << 4 ) +
 10433                           ;main.c: 500: ( LATCbits.LATC4 << 3 ) +
 10434                           ;main.c: 501: ( LATCbits.LATC3 << 2 ) +
 10435                           ;main.c: 502: ( LATBbits.LATB1 << 1 ) +
 10436                           ;main.c: 503: LATBbits.LATB0;
 10437  0048C0  508A               	movf	3978,w,c	;volatile
 10438  0048C2  0B01               	andlw	1
 10439  0048C4  0100               	movlb	0	; () banked
 10440  0048C6  6F60               	movwf	??_init_app_ram& (0+255),b
 10441  0048C8  308A               	rrcf	3978,w,c	;volatile
 10442  0048CA  0B01               	andlw	1
 10443  0048CC  0100               	movlb	0	; () banked
 10444  0048CE  6F61               	movwf	(??_init_app_ram+1)& (0+255),b
 10445  0048D0  90D8               	bcf	status,0,c
 10446  0048D2  0100               	movlb	0	; () banked
 10447  0048D4  3561               	rlcf	(??_init_app_ram+1)& (0+255),w,b
 10448  0048D6  0100               	movlb	0	; () banked
 10449  0048D8  6F62               	movwf	(??_init_app_ram+2)& (0+255),b
 10450  0048DA  0100               	movlb	0	; () banked
 10451  0048DC  6B63               	clrf	(??_init_app_ram+3)& (0+255),b
 10452  0048DE  0100               	movlb	0	; () banked
 10453  0048E0  3763               	rlcf	(??_init_app_ram+3)& (0+255),f,b
 10454  0048E2  308B               	rrcf	3979,w,c	;volatile
 10455  0048E4  32E8               	rrcf	wreg,f,c
 10456  0048E6  32E8               	rrcf	wreg,f,c
 10457  0048E8  0B01               	andlw	1
 10458  0048EA  0100               	movlb	0	; () banked
 10459  0048EC  6F64               	movwf	(??_init_app_ram+4)& (0+255),b
 10460  0048EE  6B65               	clrf	(??_init_app_ram+5)& (0+255),b
 10461  0048F0  0100               	movlb	0	; () banked
 10462  0048F2  90D8               	bcf	status,0,c
 10463  0048F4  3764               	rlcf	(??_init_app_ram+4)& (0+255),f,b
 10464  0048F6  3765               	rlcf	(??_init_app_ram+5)& (0+255),f,b
 10465  0048F8  0100               	movlb	0	; () banked
 10466  0048FA  90D8               	bcf	status,0,c
 10467  0048FC  3764               	rlcf	(??_init_app_ram+4)& (0+255),f,b
 10468  0048FE  3765               	rlcf	(??_init_app_ram+5)& (0+255),f,b
 10469  004900  388B               	swapf	3979,w,c	;volatile
 10470  004902  0B01               	andlw	1
 10471  004904  0100               	movlb	0	; () banked
 10472  004906  6F66               	movwf	(??_init_app_ram+6)& (0+255),b
 10473  004908  6B67               	clrf	(??_init_app_ram+7)& (0+255),b
 10474  00490A  0100               	movlb	0	; () banked
 10475  00490C  90D8               	bcf	status,0,c
 10476  00490E  3766               	rlcf	(??_init_app_ram+6)& (0+255),f,b
 10477  004910  3767               	rlcf	(??_init_app_ram+7)& (0+255),f,b
 10478  004912  0100               	movlb	0	; () banked
 10479  004914  90D8               	bcf	status,0,c
 10480  004916  3766               	rlcf	(??_init_app_ram+6)& (0+255),f,b
 10481  004918  3767               	rlcf	(??_init_app_ram+7)& (0+255),f,b
 10482  00491A  0100               	movlb	0	; () banked
 10483  00491C  90D8               	bcf	status,0,c
 10484  00491E  3766               	rlcf	(??_init_app_ram+6)& (0+255),f,b
 10485  004920  3767               	rlcf	(??_init_app_ram+7)& (0+255),f,b
 10486  004922  388B               	swapf	3979,w,c	;volatile
 10487  004924  32E8               	rrcf	wreg,f,c
 10488  004926  0B01               	andlw	1
 10489  004928  0100               	movlb	0	; () banked
 10490  00492A  6F68               	movwf	(??_init_app_ram+8)& (0+255),b
 10491  00492C  6B69               	clrf	(??_init_app_ram+9)& (0+255),b
 10492  00492E  0100               	movlb	0	; () banked
 10493  004930  3B68               	swapf	(??_init_app_ram+8)& (0+255),f,b
 10494  004932  3B69               	swapf	(??_init_app_ram+9)& (0+255),f,b
 10495  004934  0EF0               	movlw	240
 10496  004936  1769               	andwf	(??_init_app_ram+9)& (0+255),f,b
 10497  004938  5168               	movf	(??_init_app_ram+8)& (0+255),w,b
 10498  00493A  0B0F               	andlw	15
 10499  00493C  1369               	iorwf	(??_init_app_ram+9)& (0+255),f,b
 10500  00493E  0EF0               	movlw	240
 10501  004940  1768               	andwf	(??_init_app_ram+8)& (0+255),f,b
 10502  004942  388B               	swapf	3979,w,c	;volatile
 10503  004944  32E8               	rrcf	wreg,f,c
 10504  004946  32E8               	rrcf	wreg,f,c
 10505  004948  0B01               	andlw	1
 10506  00494A  0100               	movlb	0	; () banked
 10507  00494C  6F6A               	movwf	(??_init_app_ram+10)& (0+255),b
 10508  00494E  6B6B               	clrf	(??_init_app_ram+11)& (0+255),b
 10509  004950  0E05               	movlw	5
 10510  004952                     u10645:
 10511  004952  90D8               	bcf	status,0,c
 10512  004954  0100               	movlb	0	; () banked
 10513  004956  376A               	rlcf	(??_init_app_ram+10)& (0+255),f,b
 10514  004958  376B               	rlcf	(??_init_app_ram+11)& (0+255),f,b
 10515  00495A  2EE8               	decfsz	wreg,f,c
 10516  00495C  D7FA               	goto	u10645
 10517  00495E  348B               	rlcf	3979,w,c	;volatile
 10518  004960  36E8               	rlcf	wreg,f,c
 10519  004962  0B01               	andlw	1
 10520  004964  0100               	movlb	0	; () banked
 10521  004966  6F6C               	movwf	(??_init_app_ram+12)& (0+255),b
 10522  004968  6B6D               	clrf	(??_init_app_ram+13)& (0+255),b
 10523  00496A  0E06               	movlw	6
 10524  00496C                     u10655:
 10525  00496C  90D8               	bcf	status,0,c
 10526  00496E  0100               	movlb	0	; () banked
 10527  004970  376C               	rlcf	(??_init_app_ram+12)& (0+255),f,b
 10528  004972  376D               	rlcf	(??_init_app_ram+13)& (0+255),f,b
 10529  004974  2EE8               	decfsz	wreg,f,c
 10530  004976  D7FA               	goto	u10655
 10531  004978  3089               	rrcf	3977,w,c	;volatile
 10532  00497A  32E8               	rrcf	wreg,f,c
 10533  00497C  0B01               	andlw	1
 10534  00497E  0100               	movlb	0	; () banked
 10535  004980  6F6E               	movwf	(??_init_app_ram+14)& (0+255),b
 10536  004982  6B6F               	clrf	(??_init_app_ram+15)& (0+255),b
 10537  004984  0E07               	movlw	7
 10538  004986                     u10665:
 10539  004986  90D8               	bcf	status,0,c
 10540  004988  0100               	movlb	0	; () banked
 10541  00498A  376E               	rlcf	(??_init_app_ram+14)& (0+255),f,b
 10542  00498C  376F               	rlcf	(??_init_app_ram+15)& (0+255),f,b
 10543  00498E  2EE8               	decfsz	wreg,f,c
 10544  004990  D7FA               	goto	u10665
 10545  004992  3089               	rrcf	3977,w,c	;volatile
 10546  004994  0B01               	andlw	1
 10547  004996  0100               	movlb	0	; () banked
 10548  004998  6F70               	movwf	(??_init_app_ram+16)& (0+255),b
 10549  00499A  0100               	movlb	0	; () banked
 10550  00499C  5170               	movf	(??_init_app_ram+16)& (0+255),w,b
 10551  00499E  0100               	movlb	0	; () banked
 10552  0049A0  6F72               	movwf	(??_init_app_ram+18)& (0+255),b
 10553  0049A2  6B71               	clrf	(??_init_app_ram+17)& (0+255),b
 10554  0049A4  5089               	movf	3977,w,c	;volatile
 10555  0049A6  0B01               	andlw	1
 10556  0049A8  0100               	movlb	0	; () banked
 10557  0049AA  6F73               	movwf	(??_init_app_ram+19)& (0+255),b
 10558  0049AC  6B74               	clrf	(??_init_app_ram+20)& (0+255),b
 10559  0049AE  0E09               	movlw	9
 10560  0049B0                     u10675:
 10561  0049B0  90D8               	bcf	status,0,c
 10562  0049B2  0100               	movlb	0	; () banked
 10563  0049B4  3773               	rlcf	(??_init_app_ram+19)& (0+255),f,b
 10564  0049B6  3774               	rlcf	(??_init_app_ram+20)& (0+255),f,b
 10565  0049B8  2EE8               	decfsz	wreg,f,c
 10566  0049BA  D7FA               	goto	u10675
 10567  0049BC  0100               	movlb	0	; () banked
 10568  0049BE  5171               	movf	(??_init_app_ram+17)& (0+255),w,b
 10569  0049C0  0100               	movlb	0	; () banked
 10570  0049C2  2573               	addwf	(??_init_app_ram+19)& (0+255),w,b
 10571  0049C4  0100               	movlb	0	; () banked
 10572  0049C6  6F75               	movwf	(??_init_app_ram+21)& (0+255),b
 10573  0049C8  0100               	movlb	0	; () banked
 10574  0049CA  5172               	movf	(??_init_app_ram+18)& (0+255),w,b
 10575  0049CC  0100               	movlb	0	; () banked
 10576  0049CE  2174               	addwfc	(??_init_app_ram+20)& (0+255),w,b
 10577  0049D0  0100               	movlb	0	; () banked
 10578  0049D2  6F76               	movwf	(??_init_app_ram+22)& (0+255),b
 10579  0049D4  0100               	movlb	0	; () banked
 10580  0049D6  516E               	movf	(??_init_app_ram+14)& (0+255),w,b
 10581  0049D8  0100               	movlb	0	; () banked
 10582  0049DA  2575               	addwf	(??_init_app_ram+21)& (0+255),w,b
 10583  0049DC  0100               	movlb	0	; () banked
 10584  0049DE  6F77               	movwf	(??_init_app_ram+23)& (0+255),b
 10585  0049E0  0100               	movlb	0	; () banked
 10586  0049E2  516F               	movf	(??_init_app_ram+15)& (0+255),w,b
 10587  0049E4  0100               	movlb	0	; () banked
 10588  0049E6  2176               	addwfc	(??_init_app_ram+22)& (0+255),w,b
 10589  0049E8  0100               	movlb	0	; () banked
 10590  0049EA  6F78               	movwf	(??_init_app_ram+24)& (0+255),b
 10591  0049EC  0100               	movlb	0	; () banked
 10592  0049EE  516C               	movf	(??_init_app_ram+12)& (0+255),w,b
 10593  0049F0  0100               	movlb	0	; () banked
 10594  0049F2  2577               	addwf	(??_init_app_ram+23)& (0+255),w,b
 10595  0049F4  0100               	movlb	0	; () banked
 10596  0049F6  6F79               	movwf	(??_init_app_ram+25)& (0+255),b
 10597  0049F8  0100               	movlb	0	; () banked
 10598  0049FA  516D               	movf	(??_init_app_ram+13)& (0+255),w,b
 10599  0049FC  0100               	movlb	0	; () banked
 10600  0049FE  2178               	addwfc	(??_init_app_ram+24)& (0+255),w,b
 10601  004A00  0100               	movlb	0	; () banked
 10602  004A02  6F7A               	movwf	(??_init_app_ram+26)& (0+255),b
 10603  004A04  0100               	movlb	0	; () banked
 10604  004A06  516A               	movf	(??_init_app_ram+10)& (0+255),w,b
 10605  004A08  0100               	movlb	0	; () banked
 10606  004A0A  2579               	addwf	(??_init_app_ram+25)& (0+255),w,b
 10607  004A0C  0100               	movlb	0	; () banked
 10608  004A0E  6F7B               	movwf	(??_init_app_ram+27)& (0+255),b
 10609  004A10  0100               	movlb	0	; () banked
 10610  004A12  516B               	movf	(??_init_app_ram+11)& (0+255),w,b
 10611  004A14  0100               	movlb	0	; () banked
 10612  004A16  217A               	addwfc	(??_init_app_ram+26)& (0+255),w,b
 10613  004A18  0100               	movlb	0	; () banked
 10614  004A1A  6F7C               	movwf	(??_init_app_ram+28)& (0+255),b
 10615  004A1C  0100               	movlb	0	; () banked
 10616  004A1E  5168               	movf	(??_init_app_ram+8)& (0+255),w,b
 10617  004A20  0100               	movlb	0	; () banked
 10618  004A22  257B               	addwf	(??_init_app_ram+27)& (0+255),w,b
 10619  004A24  0100               	movlb	0	; () banked
 10620  004A26  6F7D               	movwf	(??_init_app_ram+29)& (0+255),b
 10621  004A28  0100               	movlb	0	; () banked
 10622  004A2A  5169               	movf	(??_init_app_ram+9)& (0+255),w,b
 10623  004A2C  0100               	movlb	0	; () banked
 10624  004A2E  217C               	addwfc	(??_init_app_ram+28)& (0+255),w,b
 10625  004A30  0100               	movlb	0	; () banked
 10626  004A32  6F7E               	movwf	(??_init_app_ram+30)& (0+255),b
 10627  004A34  0100               	movlb	0	; () banked
 10628  004A36  5166               	movf	(??_init_app_ram+6)& (0+255),w,b
 10629  004A38  0100               	movlb	0	; () banked
 10630  004A3A  257D               	addwf	(??_init_app_ram+29)& (0+255),w,b
 10631  004A3C  0100               	movlb	0	; () banked
 10632  004A3E  6F7F               	movwf	(??_init_app_ram+31)& (0+255),b
 10633  004A40  0100               	movlb	0	; () banked
 10634  004A42  5167               	movf	(??_init_app_ram+7)& (0+255),w,b
 10635  004A44  0100               	movlb	0	; () banked
 10636  004A46  217E               	addwfc	(??_init_app_ram+30)& (0+255),w,b
 10637  004A48  0100               	movlb	0	; () banked
 10638  004A4A  6F80               	movwf	(??_init_app_ram+32)& (0+255),b
 10639  004A4C  0100               	movlb	0	; () banked
 10640  004A4E  5164               	movf	(??_init_app_ram+4)& (0+255),w,b
 10641  004A50  0100               	movlb	0	; () banked
 10642  004A52  257F               	addwf	(??_init_app_ram+31)& (0+255),w,b
 10643  004A54  0100               	movlb	0	; () banked
 10644  004A56  6F81               	movwf	(??_init_app_ram+33)& (0+255),b
 10645  004A58  0100               	movlb	0	; () banked
 10646  004A5A  5165               	movf	(??_init_app_ram+5)& (0+255),w,b
 10647  004A5C  0100               	movlb	0	; () banked
 10648  004A5E  2180               	addwfc	(??_init_app_ram+32)& (0+255),w,b
 10649  004A60  0100               	movlb	0	; () banked
 10650  004A62  6F82               	movwf	(??_init_app_ram+34)& (0+255),b
 10651  004A64  0100               	movlb	0	; () banked
 10652  004A66  5162               	movf	(??_init_app_ram+2)& (0+255),w,b
 10653  004A68  0100               	movlb	0	; () banked
 10654  004A6A  2581               	addwf	(??_init_app_ram+33)& (0+255),w,b
 10655  004A6C  0100               	movlb	0	; () banked
 10656  004A6E  6F83               	movwf	(??_init_app_ram+35)& (0+255),b
 10657  004A70  0100               	movlb	0	; () banked
 10658  004A72  5163               	movf	(??_init_app_ram+3)& (0+255),w,b
 10659  004A74  0100               	movlb	0	; () banked
 10660  004A76  2182               	addwfc	(??_init_app_ram+34)& (0+255),w,b
 10661  004A78  0100               	movlb	0	; () banked
 10662  004A7A  6F84               	movwf	(??_init_app_ram+36)& (0+255),b
 10663  004A7C  0100               	movlb	0	; () banked
 10664  004A7E  5160               	movf	??_init_app_ram& (0+255),w,b
 10665  004A80  0100               	movlb	0	; () banked
 10666  004A82  2583               	addwf	(??_init_app_ram+35)& (0+255),w,b
 10667  004A84  0100               	movlb	0	; () banked
 10668  004A86  0100               	movlb	0	; () banked
 10669  004A88  6FD7               	movwf	_current_iostate& (0+255),b
 10670  004A8A  0100               	movlb	0	; () banked
 10671  004A8C  0E00               	movlw	0
 10672  004A8E  0100               	movlb	0	; () banked
 10673  004A90  2184               	addwfc	(??_init_app_ram+36)& (0+255),w,b
 10674  004A92  0100               	movlb	0	; () banked
 10675  004A94  6FD8               	movwf	(_current_iostate+1)& (0+255),b
 10676                           
 10677                           ; BSR set to: 0
 10678  004A96  0012               	return	
 10679  004A98                     __end_of_init_app_ram:
 10680                           	opt stack 0
 10681                           tblptru	equ	0xFF8
 10682                           prodh	equ	0xFF4
 10683                           prodl	equ	0xFF3
 10684                           intcon2	equ	0xFF1
 10685                           postinc0	equ	0xFEE
 10686                           wreg	equ	0xFE8
 10687                           indf2	equ	0xFDF
 10688                           postinc2	equ	0xFDE
 10689                           postdec2	equ	0xFDD
 10690                           fsr2h	equ	0xFDA
 10691                           fsr2l	equ	0xFD9
 10692                           status	equ	0xFD8
 10693                           
 10694 ;; *************** function _init_app_eeprom *****************
 10695 ;; Defined at:
 10696 ;;		line 513 in file "../main.c"
 10697 ;; Parameters:    Size  Location     Type
 10698 ;;		None
 10699 ;; Auto vars:     Size  Location     Type
 10700 ;;  i               1   28[COMRAM] unsigned char 
 10701 ;;  j               1   27[COMRAM] unsigned char 
 10702 ;; Return value:  Size  Location     Type
 10703 ;;		None               void
 10704 ;; Registers used:
 10705 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10706 ;; Tracked objects:
 10707 ;;		On entry : 0/0
 10708 ;;		On exit  : 0/0
 10709 ;;		Unchanged: 0/0
 10710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10711 ;;      Params:         0       0       0       0       0       0       0
 10712 ;;      Locals:         2       0       0       0       0       0       0
 10713 ;;      Temps:          1       0       0       0       0       0       0
 10714 ;;      Totals:         3       0       0       0       0       0       0
 10715 ;;Total ram usage:        3 bytes
 10716 ;; Hardware stack levels used:    1
 10717 ;; Hardware stack levels required when called:    3
 10718 ;; This function calls:
 10719 ;;		_Busy_eep
 10720 ;;		_Write_b_eep
 10721 ;; This function is called by:
 10722 ;;		_main
 10723 ;;		_vscp_restoreDefaults
 10724 ;; This function uses a non-reentrant model
 10725 ;;
 10726                           
 10727                           	psect	text20
 10728  0057FE                     __ptext20:
 10729                           	opt stack 0
 10730  0057FE                     _init_app_eeprom:
 10731                           	opt stack 23
 10732                           
 10733                           ;main.c: 514: unsigned char i, j;
 10734                           ;main.c: 516: (Busy_eep(), Write_b_eep(0x43 + 0,0));
 10735                           
 10736                           ; BSR set to: 0
 10737                           ;incstack = 0
 10738                           ;incstack = 0
 10739  0057FE  EC10  F038         	call	_Busy_eep	;wreg free
 10740  005802  0E00               	movlw	0
 10741  005804  6E17               	movwf	?_Write_b_eep+1,c
 10742  005806  0E43               	movlw	67
 10743  005808  6E16               	movwf	?_Write_b_eep,c
 10744  00580A  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10745  00580C  0E00               	movlw	0
 10746  00580E  6E18               	movwf	?_Write_b_eep+2,c
 10747  005810  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10748  005812  EC40  F036         	call	_Write_b_eep	;wreg free
 10749                           
 10750                           ;main.c: 517: (Busy_eep(), Write_b_eep(0x43 + 1,0));
 10751  005816  EC10  F038         	call	_Busy_eep	;wreg free
 10752  00581A  0E00               	movlw	0
 10753  00581C  6E17               	movwf	?_Write_b_eep+1,c
 10754  00581E  0E44               	movlw	68
 10755  005820  6E16               	movwf	?_Write_b_eep,c
 10756  005822  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10757  005824  0E00               	movlw	0
 10758  005826  6E18               	movwf	?_Write_b_eep+2,c
 10759  005828  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10760  00582A  EC40  F036         	call	_Write_b_eep	;wreg free
 10761                           
 10762                           ;main.c: 519: for ( i=0; i<10; i++ ) {
 10763  00582E  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10764  005830  0E00               	movlw	0
 10765  005832  6E1D               	movwf	init_app_eeprom@i,c
 10766  005834  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10767  005836  D00D               	goto	L81
 10768  005838                     l9214:
 10769                           
 10770                           ;main.c: 520: (Busy_eep(), Write_b_eep(0x43 + 2 + i,i));
 10771  005838  EC10  F038         	call	_Busy_eep	;wreg free
 10772  00583C  0E45               	movlw	69
 10773  00583E  241D               	addwf	init_app_eeprom@i,w,c
 10774  005840  6E16               	movwf	?_Write_b_eep,c
 10775  005842  6A17               	clrf	?_Write_b_eep+1,c
 10776  005844  0E00               	movlw	0
 10777  005846  2217               	addwfc	?_Write_b_eep+1,f,c
 10778  005848  C01D  F018         	movff	init_app_eeprom@i,?_Write_b_eep+2
 10779  00584C  EC40  F036         	call	_Write_b_eep	;wreg free
 10780  005850  2A1D               	incf	init_app_eeprom@i,f,c
 10781  005852                     L81:
 10782  005852  0E09               	movlw	9
 10783  005854  641D               	cpfsgt	init_app_eeprom@i,c
 10784  005856  D7F0               	goto	l9214
 10785                           
 10786                           ;main.c: 521: }
 10787                           ;main.c: 523: (Busy_eep(), Write_b_eep(0x43 + 12,0x00));
 10788  005858  EC10  F038         	call	_Busy_eep	;wreg free
 10789  00585C  0E00               	movlw	0
 10790  00585E  6E17               	movwf	?_Write_b_eep+1,c
 10791  005860  0E4F               	movlw	79
 10792  005862  6E16               	movwf	?_Write_b_eep,c
 10793  005864  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10794  005866  0E00               	movlw	0
 10795  005868  6E18               	movwf	?_Write_b_eep+2,c
 10796  00586A  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10797  00586C  EC40  F036         	call	_Write_b_eep	;wreg free
 10798                           
 10799                           ;main.c: 524: (Busy_eep(), Write_b_eep(0x43 + 13,0x00));
 10800  005870  EC10  F038         	call	_Busy_eep	;wreg free
 10801  005874  0E00               	movlw	0
 10802  005876  6E17               	movwf	?_Write_b_eep+1,c
 10803  005878  0E50               	movlw	80
 10804  00587A  6E16               	movwf	?_Write_b_eep,c
 10805  00587C  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10806  00587E  0E00               	movlw	0
 10807  005880  6E18               	movwf	?_Write_b_eep+2,c
 10808  005882  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10809  005884  EC40  F036         	call	_Write_b_eep	;wreg free
 10810                           
 10811                           ;main.c: 526: for ( i=0; i<10; i++ ) {
 10812  005888  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10813  00588A  0E00               	movlw	0
 10814  00588C  6E1D               	movwf	init_app_eeprom@i,c
 10815  00588E  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10816  005890  D00F               	goto	L82
 10817  005892                     l9232:
 10818                           
 10819                           ;main.c: 527: (Busy_eep(), Write_b_eep(0x43 + 24 + i,0x08 | 0x10 | 0x80));
 10820  005892  EC10  F038         	call	_Busy_eep	;wreg free
 10821  005896  0E5B               	movlw	91
 10822  005898  241D               	addwf	init_app_eeprom@i,w,c
 10823  00589A  6E16               	movwf	?_Write_b_eep,c
 10824  00589C  6A17               	clrf	?_Write_b_eep+1,c
 10825  00589E  0E00               	movlw	0
 10826  0058A0  2217               	addwfc	?_Write_b_eep+1,f,c
 10827  0058A2  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10828  0058A4  0E98               	movlw	152
 10829  0058A6  6E18               	movwf	?_Write_b_eep+2,c
 10830  0058A8  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10831  0058AA  EC40  F036         	call	_Write_b_eep	;wreg free
 10832  0058AE  2A1D               	incf	init_app_eeprom@i,f,c
 10833  0058B0                     L82:
 10834  0058B0  0E09               	movlw	9
 10835  0058B2  641D               	cpfsgt	init_app_eeprom@i,c
 10836  0058B4  D7EE               	goto	l9232
 10837                           
 10838                           ;main.c: 531: }
 10839                           ;main.c: 533: for ( i=0; i<10; i++ ) {
 10840  0058B6  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10841  0058B8  0E00               	movlw	0
 10842  0058BA  6E1D               	movwf	init_app_eeprom@i,c
 10843  0058BC  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10844  0058BE  D00F               	goto	L83
 10845  0058C0                     l9244:
 10846                           
 10847                           ;main.c: 534: (Busy_eep(), Write_b_eep(0x43 + 34 + i,0x01 | 0x02 | 0x80));
 10848  0058C0  EC10  F038         	call	_Busy_eep	;wreg free
 10849  0058C4  0E65               	movlw	101
 10850  0058C6  241D               	addwf	init_app_eeprom@i,w,c
 10851  0058C8  6E16               	movwf	?_Write_b_eep,c
 10852  0058CA  6A17               	clrf	?_Write_b_eep+1,c
 10853  0058CC  0E00               	movlw	0
 10854  0058CE  2217               	addwfc	?_Write_b_eep+1,f,c
 10855  0058D0  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10856  0058D2  0E83               	movlw	131
 10857  0058D4  6E18               	movwf	?_Write_b_eep+2,c
 10858  0058D6  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10859  0058D8  EC40  F036         	call	_Write_b_eep	;wreg free
 10860  0058DC  2A1D               	incf	init_app_eeprom@i,f,c
 10861  0058DE                     L83:
 10862  0058DE  0E09               	movlw	9
 10863  0058E0  641D               	cpfsgt	init_app_eeprom@i,c
 10864  0058E2  D7EE               	goto	l9244
 10865                           
 10866                           ;main.c: 538: }
 10867                           ;main.c: 540: (Busy_eep(), Write_b_eep(0x43 + 44,0));
 10868  0058E4  EC10  F038         	call	_Busy_eep	;wreg free
 10869  0058E8  0E00               	movlw	0
 10870  0058EA  6E17               	movwf	?_Write_b_eep+1,c
 10871  0058EC  0E6F               	movlw	111
 10872  0058EE  6E16               	movwf	?_Write_b_eep,c
 10873  0058F0  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10874  0058F2  0E00               	movlw	0
 10875  0058F4  6E18               	movwf	?_Write_b_eep+2,c
 10876  0058F6  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10877  0058F8  EC40  F036         	call	_Write_b_eep	;wreg free
 10878                           
 10879                           ;main.c: 542: (Busy_eep(), Write_b_eep(0x43 + 45,0));
 10880  0058FC  EC10  F038         	call	_Busy_eep	;wreg free
 10881  005900  0E00               	movlw	0
 10882  005902  6E17               	movwf	?_Write_b_eep+1,c
 10883  005904  0E70               	movlw	112
 10884  005906  6E16               	movwf	?_Write_b_eep,c
 10885  005908  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10886  00590A  0E00               	movlw	0
 10887  00590C  6E18               	movwf	?_Write_b_eep+2,c
 10888  00590E  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10889  005910  EC40  F036         	call	_Write_b_eep	;wreg free
 10890                           
 10891                           ;main.c: 544: for ( i=0; i<20; i++ ) {
 10892  005914  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10893  005916  0E00               	movlw	0
 10894  005918  6E1D               	movwf	init_app_eeprom@i,c
 10895  00591A  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10896  00591C  D00F               	goto	L84
 10897  00591E                     l9262:
 10898                           
 10899                           ;main.c: 545: (Busy_eep(), Write_b_eep(0x43 + 46 + 0 + i,0));
 10900  00591E  EC10  F038         	call	_Busy_eep	;wreg free
 10901  005922  0E71               	movlw	113
 10902  005924  241D               	addwf	init_app_eeprom@i,w,c
 10903  005926  6E16               	movwf	?_Write_b_eep,c
 10904  005928  6A17               	clrf	?_Write_b_eep+1,c
 10905  00592A  0E00               	movlw	0
 10906  00592C  2217               	addwfc	?_Write_b_eep+1,f,c
 10907  00592E  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10908  005930  0E00               	movlw	0
 10909  005932  6E18               	movwf	?_Write_b_eep+2,c
 10910  005934  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10911  005936  EC40  F036         	call	_Write_b_eep	;wreg free
 10912  00593A  2A1D               	incf	init_app_eeprom@i,f,c
 10913  00593C                     L84:
 10914  00593C  0E13               	movlw	19
 10915  00593E  641D               	cpfsgt	init_app_eeprom@i,c
 10916  005940  D7EE               	goto	l9262
 10917                           
 10918                           ;main.c: 548: }
 10919                           ;main.c: 550: for ( i=0; i<20; i++ ) {
 10920  005942  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10921  005944  0E00               	movlw	0
 10922  005946  6E1D               	movwf	init_app_eeprom@i,c
 10923  005948  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10924  00594A  D00F               	goto	L85
 10925  00594C                     l9274:
 10926                           
 10927                           ;main.c: 551: (Busy_eep(), Write_b_eep(0x43 + 46 + 20 + i,0));
 10928  00594C  EC10  F038         	call	_Busy_eep	;wreg free
 10929  005950  0E85               	movlw	133
 10930  005952  241D               	addwf	init_app_eeprom@i,w,c
 10931  005954  6E16               	movwf	?_Write_b_eep,c
 10932  005956  6A17               	clrf	?_Write_b_eep+1,c
 10933  005958  0E00               	movlw	0
 10934  00595A  2217               	addwfc	?_Write_b_eep+1,f,c
 10935  00595C  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10936  00595E  0E00               	movlw	0
 10937  005960  6E18               	movwf	?_Write_b_eep+2,c
 10938  005962  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10939  005964  EC40  F036         	call	_Write_b_eep	;wreg free
 10940  005968  2A1D               	incf	init_app_eeprom@i,f,c
 10941  00596A                     L85:
 10942  00596A  0E13               	movlw	19
 10943  00596C  641D               	cpfsgt	init_app_eeprom@i,c
 10944  00596E  D7EE               	goto	l9274
 10945                           
 10946                           ;main.c: 554: }
 10947                           ;main.c: 558: for ( i = 0; i < 8; i++ ) {
 10948  005970  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10949  005972  0E00               	movlw	0
 10950  005974  6E1D               	movwf	init_app_eeprom@i,c
 10951  005976  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10952  005978  D01E               	goto	L86
 10953  00597A                     l9286:
 10954                           
 10955                           ;main.c: 559: for ( j = 0; j < 8; j++ ) {
 10956  00597A  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10957  00597C  0E00               	movlw	0
 10958  00597E  6E1C               	movwf	init_app_eeprom@j,c
 10959  005980  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10960  005982  D015               	goto	L87
 10961  005984                     l9292:
 10962                           
 10963                           ;main.c: 560: (Busy_eep(), Write_b_eep(0x43 + 46 + 40 + 0 + i * 8 + j,0));
 10964  005984  EC10  F038         	call	_Busy_eep	;wreg free
 10965  005988  501D               	movf	init_app_eeprom@i,w,c
 10966  00598A  0D08               	mullw	8
 10967  00598C  501C               	movf	init_app_eeprom@j,w,c
 10968  00598E  26F3               	addwf	prodl,f,c
 10969  005990  0E00               	movlw	0
 10970  005992  22F4               	addwfc	prodh,f,c
 10971  005994  0E99               	movlw	153
 10972  005996  24F3               	addwf	prodl,w,c
 10973  005998  6E16               	movwf	?_Write_b_eep,c
 10974  00599A  0E00               	movlw	0
 10975  00599C  20F4               	addwfc	prodh,w,c
 10976  00599E  6E17               	movwf	?_Write_b_eep+1,c
 10977  0059A0  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10978  0059A2  0E00               	movlw	0
 10979  0059A4  6E18               	movwf	?_Write_b_eep+2,c
 10980  0059A6  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10981  0059A8  EC40  F036         	call	_Write_b_eep	;wreg free
 10982  0059AC  2A1C               	incf	init_app_eeprom@j,f,c
 10983  0059AE                     L87:
 10984  0059AE  0E07               	movlw	7
 10985  0059B0  641C               	cpfsgt	init_app_eeprom@j,c
 10986  0059B2  D7E8               	goto	l9292
 10987  0059B4  2A1D               	incf	init_app_eeprom@i,f,c
 10988  0059B6                     L86:
 10989  0059B6  0E07               	movlw	7
 10990  0059B8  641D               	cpfsgt	init_app_eeprom@i,c
 10991  0059BA  D7DF               	goto	l9286
 10992  0059BC  0012               	return	
 10993  0059BE                     __end_of_init_app_eeprom:
 10994                           	opt stack 0
 10995                           tblptru	equ	0xFF8
 10996                           prodh	equ	0xFF4
 10997                           prodl	equ	0xFF3
 10998                           intcon2	equ	0xFF1
 10999                           postinc0	equ	0xFEE
 11000                           wreg	equ	0xFE8
 11001                           indf2	equ	0xFDF
 11002                           postinc2	equ	0xFDE
 11003                           postdec2	equ	0xFDD
 11004                           fsr2h	equ	0xFDA
 11005                           fsr2l	equ	0xFD9
 11006                           status	equ	0xFD8
 11007                           
 11008 ;; *************** function _vscp_setUserID *****************
 11009 ;; Defined at:
 11010 ;;		line 2899 in file "../main.c"
 11011 ;; Parameters:    Size  Location     Type
 11012 ;;  idx             1   26[COMRAM] unsigned char 
 11013 ;;  data            1   27[COMRAM] unsigned char 
 11014 ;; Auto vars:     Size  Location     Type
 11015 ;;		None
 11016 ;; Return value:  Size  Location     Type
 11017 ;;		None               void
 11018 ;; Registers used:
 11019 ;;		wreg, status,2, status,0, cstack
 11020 ;; Tracked objects:
 11021 ;;		On entry : 0/0
 11022 ;;		On exit  : 0/0
 11023 ;;		Unchanged: 0/0
 11024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11025 ;;      Params:         2       0       0       0       0       0       0
 11026 ;;      Locals:         0       0       0       0       0       0       0
 11027 ;;      Temps:          0       0       0       0       0       0       0
 11028 ;;      Totals:         2       0       0       0       0       0       0
 11029 ;;Total ram usage:        2 bytes
 11030 ;; Hardware stack levels used:    1
 11031 ;; Hardware stack levels required when called:    3
 11032 ;; This function calls:
 11033 ;;		_Busy_eep
 11034 ;;		_Write_b_eep
 11035 ;; This function is called by:
 11036 ;;		_vscp_writeStdReg
 11037 ;; This function uses a non-reentrant model
 11038 ;;
 11039                           
 11040                           	psect	text21
 11041  006EA4                     __ptext21:
 11042                           	opt stack 0
 11043  006EA4                     _vscp_setUserID:
 11044                           	opt stack 24
 11045                           
 11046                           ;main.c: 2900: (Busy_eep(), Write_b_eep(idx + 0x06,data));
 11047                           
 11048                           ;incstack = 0
 11049                           ;incstack = 0
 11050  006EA4  EC10  F038         	call	_Busy_eep	;wreg free
 11051  006EA8  0E06               	movlw	6
 11052  006EAA  241B               	addwf	vscp_setUserID@idx,w,c
 11053  006EAC  6E16               	movwf	?_Write_b_eep,c
 11054  006EAE  6A17               	clrf	?_Write_b_eep+1,c
 11055  006EB0  0E00               	movlw	0
 11056  006EB2  2217               	addwfc	?_Write_b_eep+1,f,c
 11057  006EB4  C01C  F018         	movff	vscp_setUserID@data,?_Write_b_eep+2
 11058  006EB8  EC40  F036         	call	_Write_b_eep	;wreg free
 11059  006EBC  0012               	return	
 11060  006EBE                     __end_of_vscp_setUserID:
 11061                           	opt stack 0
 11062                           tblptru	equ	0xFF8
 11063                           prodh	equ	0xFF4
 11064                           prodl	equ	0xFF3
 11065                           intcon2	equ	0xFF1
 11066                           postinc0	equ	0xFEE
 11067                           wreg	equ	0xFE8
 11068                           indf2	equ	0xFDF
 11069                           postinc2	equ	0xFDE
 11070                           postdec2	equ	0xFDD
 11071                           fsr2h	equ	0xFDA
 11072                           fsr2l	equ	0xFD9
 11073                           status	equ	0xFD8
 11074                           
 11075 ;; *************** function _vscp_setManufacturerId *****************
 11076 ;; Defined at:
 11077 ;;		line 928 in file "../main.c"
 11078 ;; Parameters:    Size  Location     Type
 11079 ;;  idx             1   26[COMRAM] unsigned char 
 11080 ;;  data            1   27[COMRAM] unsigned char 
 11081 ;; Auto vars:     Size  Location     Type
 11082 ;;		None
 11083 ;; Return value:  Size  Location     Type
 11084 ;;		None               void
 11085 ;; Registers used:
 11086 ;;		wreg, status,2, status,0, cstack
 11087 ;; Tracked objects:
 11088 ;;		On entry : 0/0
 11089 ;;		On exit  : 0/0
 11090 ;;		Unchanged: 0/0
 11091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11092 ;;      Params:         2       0       0       0       0       0       0
 11093 ;;      Locals:         0       0       0       0       0       0       0
 11094 ;;      Temps:          0       0       0       0       0       0       0
 11095 ;;      Totals:         2       0       0       0       0       0       0
 11096 ;;Total ram usage:        2 bytes
 11097 ;; Hardware stack levels used:    1
 11098 ;; Hardware stack levels required when called:    3
 11099 ;; This function calls:
 11100 ;;		_Busy_eep
 11101 ;;		_Write_b_eep
 11102 ;; This function is called by:
 11103 ;;		_vscp_writeStdReg
 11104 ;; This function uses a non-reentrant model
 11105 ;;
 11106                           
 11107                           	psect	text22
 11108  006E20                     __ptext22:
 11109                           	opt stack 0
 11110  006E20                     _vscp_setManufacturerId:
 11111                           	opt stack 24
 11112                           
 11113                           ;main.c: 929: if ( idx>7 ) return;
 11114                           
 11115                           ;incstack = 0
 11116                           ;incstack = 0
 11117  006E20  0E07               	movlw	7
 11118  006E22  641B               	cpfsgt	vscp_setManufacturerId@idx,c
 11119  006E24  D001               	goto	l10282
 11120  006E26  D00C               	goto	l542
 11121  006E28                     l10282:
 11122                           
 11123                           ;main.c: 930: (Busy_eep(), Write_b_eep(0x0B + idx,data));
 11124  006E28  EC10  F038         	call	_Busy_eep	;wreg free
 11125  006E2C  0E0B               	movlw	11
 11126  006E2E  241B               	addwf	vscp_setManufacturerId@idx,w,c
 11127  006E30  6E16               	movwf	?_Write_b_eep,c
 11128  006E32  6A17               	clrf	?_Write_b_eep+1,c
 11129  006E34  0E00               	movlw	0
 11130  006E36  2217               	addwfc	?_Write_b_eep+1,f,c
 11131  006E38  C01C  F018         	movff	vscp_setManufacturerId@data,?_Write_b_eep+2
 11132  006E3C  EC40  F036         	call	_Write_b_eep	;wreg free
 11133  006E40                     l542:
 11134  006E40  0012               	return	
 11135  006E42                     __end_of_vscp_setManufacturerId:
 11136                           	opt stack 0
 11137                           tblptru	equ	0xFF8
 11138                           prodh	equ	0xFF4
 11139                           prodl	equ	0xFF3
 11140                           intcon2	equ	0xFF1
 11141                           postinc0	equ	0xFEE
 11142                           wreg	equ	0xFE8
 11143                           indf2	equ	0xFDF
 11144                           postinc2	equ	0xFDE
 11145                           postdec2	equ	0xFDD
 11146                           fsr2h	equ	0xFDA
 11147                           fsr2l	equ	0xFD9
 11148                           status	equ	0xFD8
 11149                           
 11150 ;; *************** function _vscp_setGUID *****************
 11151 ;; Defined at:
 11152 ;;		line 916 in file "../main.c"
 11153 ;; Parameters:    Size  Location     Type
 11154 ;;  idx             1   26[COMRAM] unsigned char 
 11155 ;;  data            1   27[COMRAM] unsigned char 
 11156 ;; Auto vars:     Size  Location     Type
 11157 ;;		None
 11158 ;; Return value:  Size  Location     Type
 11159 ;;		None               void
 11160 ;; Registers used:
 11161 ;;		wreg, status,2, status,0, cstack
 11162 ;; Tracked objects:
 11163 ;;		On entry : 0/0
 11164 ;;		On exit  : 0/0
 11165 ;;		Unchanged: 0/0
 11166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11167 ;;      Params:         2       0       0       0       0       0       0
 11168 ;;      Locals:         0       0       0       0       0       0       0
 11169 ;;      Temps:          0       0       0       0       0       0       0
 11170 ;;      Totals:         2       0       0       0       0       0       0
 11171 ;;Total ram usage:        2 bytes
 11172 ;; Hardware stack levels used:    1
 11173 ;; Hardware stack levels required when called:    3
 11174 ;; This function calls:
 11175 ;;		_Busy_eep
 11176 ;;		_Write_b_eep
 11177 ;; This function is called by:
 11178 ;;		_vscp_writeStdReg
 11179 ;; This function uses a non-reentrant model
 11180 ;;
 11181                           
 11182                           	psect	text23
 11183  006E42                     __ptext23:
 11184                           	opt stack 0
 11185  006E42                     _vscp_setGUID:
 11186                           	opt stack 24
 11187                           
 11188                           ;main.c: 917: if ( idx>15 ) return;
 11189                           
 11190                           ;incstack = 0
 11191                           ;incstack = 0
 11192  006E42  0E0F               	movlw	15
 11193  006E44  641B               	cpfsgt	vscp_setGUID@idx,c
 11194  006E46  D001               	goto	l10274
 11195  006E48  D00C               	goto	l538
 11196  006E4A                     l10274:
 11197                           
 11198                           ;main.c: 918: (Busy_eep(), Write_b_eep(0x13 + idx,data));
 11199  006E4A  EC10  F038         	call	_Busy_eep	;wreg free
 11200  006E4E  0E13               	movlw	19
 11201  006E50  241B               	addwf	vscp_setGUID@idx,w,c
 11202  006E52  6E16               	movwf	?_Write_b_eep,c
 11203  006E54  6A17               	clrf	?_Write_b_eep+1,c
 11204  006E56  0E00               	movlw	0
 11205  006E58  2217               	addwfc	?_Write_b_eep+1,f,c
 11206  006E5A  C01C  F018         	movff	vscp_setGUID@data,?_Write_b_eep+2
 11207  006E5E  EC40  F036         	call	_Write_b_eep	;wreg free
 11208  006E62                     l538:
 11209  006E62  0012               	return	
 11210  006E64                     __end_of_vscp_setGUID:
 11211                           	opt stack 0
 11212                           tblptru	equ	0xFF8
 11213                           prodh	equ	0xFF4
 11214                           prodl	equ	0xFF3
 11215                           intcon2	equ	0xFF1
 11216                           postinc0	equ	0xFEE
 11217                           wreg	equ	0xFE8
 11218                           indf2	equ	0xFDF
 11219                           postinc2	equ	0xFDE
 11220                           postdec2	equ	0xFDD
 11221                           fsr2h	equ	0xFDA
 11222                           fsr2l	equ	0xFD9
 11223                           status	equ	0xFD8
 11224                           
 11225 ;; *************** function _vscp_writeAppReg *****************
 11226 ;; Defined at:
 11227 ;;		line 1113 in file "../main.c"
 11228 ;; Parameters:    Size  Location     Type
 11229 ;;  reg             1   66[BANK0 ] unsigned char 
 11230 ;;  val             1   67[BANK0 ] unsigned char 
 11231 ;; Auto vars:     Size  Location     Type
 11232 ;;  val             1   72[BANK0 ] unsigned char 
 11233 ;;  bOn             1   75[BANK0 ] enum E15660
 11234 ;;  rv              1   74[BANK0 ] unsigned char 
 11235 ;;  bInfoEvent      1   73[BANK0 ] enum E15660
 11236 ;; Return value:  Size  Location     Type
 11237 ;;                  1    wreg      unsigned char 
 11238 ;; Registers used:
 11239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 11240 ;; Tracked objects:
 11241 ;;		On entry : 0/0
 11242 ;;		On exit  : 0/0
 11243 ;;		Unchanged: 0/0
 11244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11245 ;;      Params:         0       2       0       0       0       0       0
 11246 ;;      Locals:         0       4       0       0       0       0       0
 11247 ;;      Temps:          0       4       0       0       0       0       0
 11248 ;;      Totals:         0      10       0       0       0       0       0
 11249 ;;Total ram usage:       10 bytes
 11250 ;; Hardware stack levels used:    1
 11251 ;; Hardware stack levels required when called:    7
 11252 ;; This function calls:
 11253 ;;		_Busy_eep
 11254 ;;		_Write_b_eep
 11255 ;;		_Read_b_eep
 11256 ;;		_SendInformationEvent
 11257 ;;		_calculateSetFilterMask
 11258 ;; This function is called by:
 11259 ;;		_vscp_writeRegister
 11260 ;;		_vscp_handleProtocolEvent
 11261 ;; This function uses a non-reentrant model
 11262 ;;
 11263                           
 11264                           	psect	text24
 11265  000622                     __ptext24:
 11266                           	opt stack 0
 11267  000622                     _vscp_writeAppReg:
 11268                           	opt stack 20
 11269                           
 11270                           ;main.c: 1114: uint8_t rv;
 11271                           ;main.c: 1115: BOOL bInfoEvent = 0;
 11272                           
 11273                           ;incstack = 0
 11274                           ;incstack = 0
 11275  000622  0100               	movlb	0	; () banked
 11276  000624  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11277  000626  0E00               	movlw	0
 11278  000628  0100               	movlb	0	; () banked
 11279  00062A  0100               	movlb	0	; () banked
 11280  00062C  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 11281  00062E  0100               	movlb	0	; () banked
 11282  000630  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11283                           
 11284                           ;main.c: 1116: BOOL bOn = 0;
 11285  000632  0100               	movlb	0	; () banked
 11286  000634  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11287  000636  0E00               	movlw	0
 11288  000638  0100               	movlb	0	; () banked
 11289  00063A  0100               	movlb	0	; () banked
 11290  00063C  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11291  00063E  0100               	movlb	0	; () banked
 11292  000640  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11293                           
 11294                           ; BSR set to: 0
 11295                           ;main.c: 1118: rv = ~val;
 11296  000642  0100               	movlb	0	; () banked
 11297  000644  0100               	movlb	0	; () banked
 11298  000646  51A3               	movf	vscp_writeAppReg@val& (0+255),w,b
 11299  000648  0AFF               	xorlw	255
 11300  00064A  0100               	movlb	0	; () banked
 11301  00064C  0100               	movlb	0	; () banked
 11302  00064E  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 11303                           
 11304                           ; BSR set to: 0
 11305                           ;main.c: 1121: if ( 0 == vscp_page_select ) {
 11306  000650  5037               	movf	_vscp_page_select+1,w,c
 11307  000652  1036               	iorwf	_vscp_page_select,w,c
 11308  000654  A4D8               	btfss	status,2,c
 11309  000656  EF9B  F00B         	goto	l10896
 11310                           
 11311                           ; BSR set to: 0
 11312                           ;main.c: 1124: if ( reg == 0 ) {
 11313  00065A  0100               	movlb	0	; () banked
 11314  00065C  0100               	movlb	0	; () banked
 11315  00065E  67A2               	tstfsz	vscp_writeAppReg@reg& (0+255),b
 11316  000660  D012               	goto	l10386
 11317                           
 11318                           ; BSR set to: 0
 11319                           ;main.c: 1125: (Busy_eep(), Write_b_eep(0x43 + 0,val));
 11320  000662  EC10  F038         	call	_Busy_eep	;wreg free
 11321  000666  0E00               	movlw	0
 11322  000668  6E17               	movwf	?_Write_b_eep+1,c
 11323  00066A  0E43               	movlw	67
 11324  00066C  6E16               	movwf	?_Write_b_eep,c
 11325  00066E  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 11326  000672  EC40  F036         	call	_Write_b_eep	;wreg free
 11327                           
 11328                           ;main.c: 1126: rv = Read_b_eep(0x43 + 0);
 11329  000676  0E00               	movlw	0
 11330  000678  6E17               	movwf	?_Read_b_eep+1,c
 11331  00067A  0E43               	movlw	67
 11332  00067C  6E16               	movwf	?_Read_b_eep,c
 11333  00067E  ECD8  F037         	call	_Read_b_eep	;wreg free
 11334  000682  EF0A  F00F         	goto	L90
 11335  000686                     l10386:
 11336                           
 11337                           ; BSR set to: 0
 11338                           ;main.c: 1128: else if ( reg == 1 ) {
 11339  000686  0100               	movlb	0	; () banked
 11340  000688  0100               	movlb	0	; () banked
 11341  00068A  05A2               	decf	vscp_writeAppReg@reg& (0+255),w,b
 11342  00068C  A4D8               	btfss	status,2,c
 11343  00068E  D012               	goto	l10394
 11344                           
 11345                           ; BSR set to: 0
 11346                           ;main.c: 1130: (Busy_eep(), Write_b_eep(0x43 + 1,val));
 11347  000690  EC10  F038         	call	_Busy_eep	;wreg free
 11348  000694  0E00               	movlw	0
 11349  000696  6E17               	movwf	?_Write_b_eep+1,c
 11350  000698  0E44               	movlw	68
 11351  00069A  6E16               	movwf	?_Write_b_eep,c
 11352  00069C  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 11353  0006A0  EC40  F036         	call	_Write_b_eep	;wreg free
 11354                           
 11355                           ;main.c: 1131: rv = Read_b_eep(0x43 + 1);
 11356  0006A4  0E00               	movlw	0
 11357  0006A6  6E17               	movwf	?_Read_b_eep+1,c
 11358  0006A8  0E44               	movlw	68
 11359  0006AA  6E16               	movwf	?_Read_b_eep,c
 11360  0006AC  ECD8  F037         	call	_Read_b_eep	;wreg free
 11361  0006B0  EF0A  F00F         	goto	L90
 11362  0006B4                     l10394:
 11363                           
 11364                           ; BSR set to: 0
 11365                           ;main.c: 1134: else if ( ( reg >= 2 ) &&
 11366                           ;main.c: 1135: ( reg <= 11 ) ) {
 11367  0006B4  0E01               	movlw	1
 11368  0006B6  0100               	movlb	0	; () banked
 11369  0006B8  0100               	movlb	0	; () banked
 11370  0006BA  65A2               	cpfsgt	vscp_writeAppReg@reg& (0+255),b
 11371  0006BC  D01F               	goto	l10404
 11372                           
 11373                           ; BSR set to: 0
 11374  0006BE  0E0C               	movlw	12
 11375  0006C0  0100               	movlb	0	; () banked
 11376  0006C2  0100               	movlb	0	; () banked
 11377  0006C4  61A2               	cpfslt	vscp_writeAppReg@reg& (0+255),b
 11378  0006C6  D01A               	goto	l10404
 11379                           
 11380                           ; BSR set to: 0
 11381                           ;main.c: 1136: (Busy_eep(), Write_b_eep(0x43 + 2 + ( reg - 2 ),val));
 11382  0006C8  EC10  F038         	call	_Busy_eep	;wreg free
 11383  0006CC  0E43               	movlw	67
 11384  0006CE  0100               	movlb	0	; () banked
 11385  0006D0  0100               	movlb	0	; () banked
 11386  0006D2  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 11387  0006D4  6E16               	movwf	?_Write_b_eep,c
 11388  0006D6  6A17               	clrf	?_Write_b_eep+1,c
 11389  0006D8  0E00               	movlw	0
 11390  0006DA  2217               	addwfc	?_Write_b_eep+1,f,c
 11391  0006DC  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 11392  0006E0  EC40  F036         	call	_Write_b_eep	;wreg free
 11393                           
 11394                           ;main.c: 1139: rv = Read_b_eep(0x43 + 2 + ( reg - 2 ));
 11395  0006E4  0E43               	movlw	67
 11396  0006E6  0100               	movlb	0	; () banked
 11397  0006E8  0100               	movlb	0	; () banked
 11398  0006EA  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 11399  0006EC  6E16               	movwf	?_Read_b_eep,c
 11400  0006EE  6A17               	clrf	?_Read_b_eep+1,c
 11401  0006F0  0E00               	movlw	0
 11402  0006F2  2217               	addwfc	?_Read_b_eep+1,f,c
 11403  0006F4  ECD8  F037         	call	_Read_b_eep	;wreg free
 11404  0006F8  EF0A  F00F         	goto	L90
 11405  0006FC                     l10404:
 11406                           
 11407                           ; BSR set to: 0
 11408                           ;main.c: 1144: else if ( (reg >= 14) && (reg <= 23) ) {
 11409  0006FC  0E0D               	movlw	13
 11410  0006FE  0100               	movlb	0	; () banked
 11411  000700  0100               	movlb	0	; () banked
 11412  000702  65A2               	cpfsgt	vscp_writeAppReg@reg& (0+255),b
 11413  000704  D345               	goto	l10616
 11414                           
 11415                           ; BSR set to: 0
 11416  000706  0E18               	movlw	24
 11417  000708  0100               	movlb	0	; () banked
 11418  00070A  0100               	movlb	0	; () banked
 11419  00070C  61A2               	cpfslt	vscp_writeAppReg@reg& (0+255),b
 11420  00070E  D340               	goto	l10616
 11421                           
 11422                           ; BSR set to: 0
 11423                           ;main.c: 1147: if ( Read_b_eep(0x43 + 24 + ( reg - 14 )) &
 11424                           ;main.c: 1150: 0x80 ) {
 11425  000710  0E4D               	movlw	77
 11426  000712  0100               	movlb	0	; () banked
 11427  000714  0100               	movlb	0	; () banked
 11428  000716  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 11429  000718  6E16               	movwf	?_Read_b_eep,c
 11430  00071A  6A17               	clrf	?_Read_b_eep+1,c
 11431  00071C  0E00               	movlw	0
 11432  00071E  2217               	addwfc	?_Read_b_eep+1,f,c
 11433  000720  ECD8  F037         	call	_Read_b_eep	;wreg free
 11434  000724  0100               	movlb	0	; () banked
 11435  000726  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11436  000728  0100               	movlb	0	; () banked
 11437  00072A  BFA4               	btfsc	??_vscp_writeAppReg& (0+255),7,b
 11438  00072C  D30E               	goto	l10614
 11439  00072E  EF0D  F00F         	goto	l10976
 11440  000732                     l10412:
 11441                           
 11442                           ; BSR set to: 0
 11443                           ;main.c: 1157: bInfoEvent = 1;
 11444  000732  0100               	movlb	0	; () banked
 11445  000734  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11446  000736  0E01               	movlw	1
 11447  000738  0100               	movlb	0	; () banked
 11448  00073A  0100               	movlb	0	; () banked
 11449  00073C  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 11450  00073E  0100               	movlb	0	; () banked
 11451  000740  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11452                           
 11453                           ; BSR set to: 0
 11454                           ;main.c: 1159: if ( 1 == val ) {
 11455  000742  0100               	movlb	0	; () banked
 11456  000744  0100               	movlb	0	; () banked
 11457  000746  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 11458  000748  A4D8               	btfss	status,2,c
 11459  00074A  D02B               	goto	l609
 11460                           
 11461                           ; BSR set to: 0
 11462                           ;main.c: 1161: LATBbits.LATB0 = 1;
 11463  00074C  808A               	bsf	3978,0,c	;volatile
 11464                           
 11465                           ; BSR set to: 0
 11466                           ;main.c: 1162: rv = LATBbits.LATB0;
 11467  00074E  0E00               	movlw	0
 11468  000750  B08A               	btfsc	3978,0,c	;volatile
 11469  000752  0E01               	movlw	1
 11470  000754  0100               	movlb	0	; () banked
 11471  000756  0100               	movlb	0	; () banked
 11472  000758  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 11473                           
 11474                           ; BSR set to: 0
 11475                           ;main.c: 1163: bOn = 1;
 11476  00075A  0100               	movlb	0	; () banked
 11477  00075C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11478  00075E  0E01               	movlw	1
 11479  000760  0100               	movlb	0	; () banked
 11480  000762  0100               	movlb	0	; () banked
 11481  000764  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11482  000766  0100               	movlb	0	; () banked
 11483  000768  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11484                           
 11485                           ; BSR set to: 0
 11486                           ;main.c: 1166: if ( Read_b_eep(0x43 + 24) & 0x04 ) {
 11487  00076A  0E00               	movlw	0
 11488  00076C  6E17               	movwf	?_Read_b_eep+1,c
 11489  00076E  0E5B               	movlw	91
 11490  000770  6E16               	movwf	?_Read_b_eep,c
 11491  000772  ECD8  F037         	call	_Read_b_eep	;wreg free
 11492  000776  0100               	movlb	0	; () banked
 11493  000778  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11494  00077A  0100               	movlb	0	; () banked
 11495  00077C  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 11496  00077E  EF0D  F00F         	goto	l10976
 11497                           
 11498                           ; BSR set to: 0
 11499                           ;main.c: 1167: channel_protection_timer[ 0 ] =
 11500                           ;main.c: 1168: Read_b_eep(0x43 + 46 + 20) * 256 +
 11501                           ;main.c: 1170: Read_b_eep(0x43 + 46 + 21);
 11502  000782  0E00               	movlw	0
 11503  000784  6E17               	movwf	?_Read_b_eep+1,c
 11504  000786  0E86               	movlw	134
 11505  000788  6E16               	movwf	?_Read_b_eep,c
 11506  00078A  ECD8  F037         	call	_Read_b_eep	;wreg free
 11507  00078E  0100               	movlb	0	; () banked
 11508  000790  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11509  000792  0E00               	movlw	0
 11510  000794  6E17               	movwf	?_Read_b_eep+1,c
 11511  000796  0E85               	movlw	133
 11512  000798  6E16               	movwf	?_Read_b_eep,c
 11513  00079A  ECD8  F037         	call	_Read_b_eep	;wreg free
 11514  00079E  EF74  F00D         	goto	L101
 11515  0007A2                     l609:
 11516                           
 11517                           ; BSR set to: 0
 11518                           ;main.c: 1175: else if (0 == val) {
 11519  0007A2  0100               	movlb	0	; () banked
 11520  0007A4  0100               	movlb	0	; () banked
 11521  0007A6  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 11522  0007A8  EF0D  F00F         	goto	l10976
 11523                           
 11524                           ; BSR set to: 0
 11525                           ;main.c: 1176: LATBbits.LATB0 = 0;
 11526  0007AC  908A               	bcf	3978,0,c	;volatile
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;main.c: 1177: rv = LATBbits.LATB0;
 11530  0007AE  0E00               	movlw	0
 11531  0007B0  B08A               	btfsc	3978,0,c	;volatile
 11532  0007B2  0E01               	movlw	1
 11533  0007B4  0100               	movlb	0	; () banked
 11534  0007B6  0100               	movlb	0	; () banked
 11535  0007B8  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 11536                           
 11537                           ; BSR set to: 0
 11538                           ;main.c: 1178: bOn = 0;
 11539  0007BA  0100               	movlb	0	; () banked
 11540  0007BC  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11541  0007BE  0E00               	movlw	0
 11542  0007C0  0100               	movlb	0	; () banked
 11543  0007C2  0100               	movlb	0	; () banked
 11544  0007C4  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11545  0007C6  0100               	movlb	0	; () banked
 11546  0007C8  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11547  0007CA  EF0D  F00F         	goto	l10976
 11548  0007CE                     l10432:
 11549                           
 11550                           ; BSR set to: 0
 11551                           ;main.c: 1185: bInfoEvent = 1;
 11552  0007CE  0100               	movlb	0	; () banked
 11553  0007D0  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11554  0007D2  0E01               	movlw	1
 11555  0007D4  0100               	movlb	0	; () banked
 11556  0007D6  0100               	movlb	0	; () banked
 11557  0007D8  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 11558  0007DA  0100               	movlb	0	; () banked
 11559  0007DC  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11560                           
 11561                           ; BSR set to: 0
 11562                           ;main.c: 1187: if (1 == val) {
 11563  0007DE  0100               	movlb	0	; () banked
 11564  0007E0  0100               	movlb	0	; () banked
 11565  0007E2  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 11566  0007E4  A4D8               	btfss	status,2,c
 11567  0007E6  D02B               	goto	l615
 11568                           
 11569                           ; BSR set to: 0
 11570                           ;main.c: 1189: LATBbits.LATB1 = 1;
 11571  0007E8  828A               	bsf	3978,1,c	;volatile
 11572                           
 11573                           ; BSR set to: 0
 11574                           ;main.c: 1190: rv = LATBbits.LATB1;
 11575  0007EA  0E00               	movlw	0
 11576  0007EC  B28A               	btfsc	3978,1,c	;volatile
 11577  0007EE  0E01               	movlw	1
 11578  0007F0  0100               	movlb	0	; () banked
 11579  0007F2  0100               	movlb	0	; () banked
 11580  0007F4  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 11581                           
 11582                           ; BSR set to: 0
 11583                           ;main.c: 1191: bOn = 1;
 11584  0007F6  0100               	movlb	0	; () banked
 11585  0007F8  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11586  0007FA  0E01               	movlw	1
 11587  0007FC  0100               	movlb	0	; () banked
 11588  0007FE  0100               	movlb	0	; () banked
 11589  000800  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11590  000802  0100               	movlb	0	; () banked
 11591  000804  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11592                           
 11593                           ; BSR set to: 0
 11594                           ;main.c: 1193: if (Read_b_eep(0x43 + 25) & 0x04) {
 11595  000806  0E00               	movlw	0
 11596  000808  6E17               	movwf	?_Read_b_eep+1,c
 11597  00080A  0E5C               	movlw	92
 11598  00080C  6E16               	movwf	?_Read_b_eep,c
 11599  00080E  ECD8  F037         	call	_Read_b_eep	;wreg free
 11600  000812  0100               	movlb	0	; () banked
 11601  000814  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11602  000816  0100               	movlb	0	; () banked
 11603  000818  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 11604  00081A  EF0D  F00F         	goto	l10976
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;main.c: 1194: channel_protection_timer[ 1 ] =
 11608                           ;main.c: 1195: Read_b_eep(0x43 + 46 + 22) * 256 +
 11609                           ;main.c: 1197: Read_b_eep(0x43 + 46 + 23);
 11610  00081E  0E00               	movlw	0
 11611  000820  6E17               	movwf	?_Read_b_eep+1,c
 11612  000822  0E88               	movlw	136
 11613  000824  6E16               	movwf	?_Read_b_eep,c
 11614  000826  ECD8  F037         	call	_Read_b_eep	;wreg free
 11615  00082A  0100               	movlb	0	; () banked
 11616  00082C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11617  00082E  0E00               	movlw	0
 11618  000830  6E17               	movwf	?_Read_b_eep+1,c
 11619  000832  0E87               	movlw	135
 11620  000834  6E16               	movwf	?_Read_b_eep,c
 11621  000836  ECD8  F037         	call	_Read_b_eep	;wreg free
 11622  00083A  EF97  F00D         	goto	L102
 11623  00083E                     l615:
 11624                           
 11625                           ; BSR set to: 0
 11626                           ;main.c: 1202: else if (0 == val) {
 11627  00083E  0100               	movlb	0	; () banked
 11628  000840  0100               	movlb	0	; () banked
 11629  000842  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 11630  000844  EF0D  F00F         	goto	l10976
 11631                           
 11632                           ; BSR set to: 0
 11633                           ;main.c: 1203: LATBbits.LATB1 = 0;
 11634  000848  928A               	bcf	3978,1,c	;volatile
 11635                           
 11636                           ; BSR set to: 0
 11637                           ;main.c: 1204: rv = LATBbits.LATB1;
 11638  00084A  0E00               	movlw	0
 11639  00084C  B28A               	btfsc	3978,1,c	;volatile
 11640  00084E  0E01               	movlw	1
 11641  000850  0100               	movlb	0	; () banked
 11642  000852  0100               	movlb	0	; () banked
 11643  000854  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 11644                           
 11645                           ; BSR set to: 0
 11646                           ;main.c: 1205: bOn = 0;
 11647  000856  0100               	movlb	0	; () banked
 11648  000858  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11649  00085A  0E00               	movlw	0
 11650  00085C  0100               	movlb	0	; () banked
 11651  00085E  0100               	movlb	0	; () banked
 11652  000860  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11653  000862  0100               	movlb	0	; () banked
 11654  000864  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11655  000866  EF0D  F00F         	goto	l10976
 11656  00086A                     l10452:
 11657                           
 11658                           ; BSR set to: 0
 11659                           ;main.c: 1212: bInfoEvent = 1;
 11660  00086A  0100               	movlb	0	; () banked
 11661  00086C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11662  00086E  0E01               	movlw	1
 11663  000870  0100               	movlb	0	; () banked
 11664  000872  0100               	movlb	0	; () banked
 11665  000874  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 11666  000876  0100               	movlb	0	; () banked
 11667  000878  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11668                           
 11669                           ; BSR set to: 0
 11670                           ;main.c: 1214: if (1 == val) {
 11671  00087A  0100               	movlb	0	; () banked
 11672  00087C  0100               	movlb	0	; () banked
 11673  00087E  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 11674  000880  A4D8               	btfss	status,2,c
 11675  000882  D02B               	goto	l620
 11676                           
 11677                           ; BSR set to: 0
 11678                           ;main.c: 1216: LATCbits.LATC3 = 1;
 11679  000884  868B               	bsf	3979,3,c	;volatile
 11680                           
 11681                           ; BSR set to: 0
 11682                           ;main.c: 1217: rv = LATCbits.LATC3;
 11683  000886  0E00               	movlw	0
 11684  000888  B68B               	btfsc	3979,3,c	;volatile
 11685  00088A  0E01               	movlw	1
 11686  00088C  0100               	movlb	0	; () banked
 11687  00088E  0100               	movlb	0	; () banked
 11688  000890  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 11689                           
 11690                           ; BSR set to: 0
 11691                           ;main.c: 1218: bOn = 1;
 11692  000892  0100               	movlb	0	; () banked
 11693  000894  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11694  000896  0E01               	movlw	1
 11695  000898  0100               	movlb	0	; () banked
 11696  00089A  0100               	movlb	0	; () banked
 11697  00089C  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11698  00089E  0100               	movlb	0	; () banked
 11699  0008A0  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11700                           
 11701                           ; BSR set to: 0
 11702                           ;main.c: 1220: if ( Read_b_eep(0x43 + 26) & 0x04) {
 11703  0008A2  0E00               	movlw	0
 11704  0008A4  6E17               	movwf	?_Read_b_eep+1,c
 11705  0008A6  0E5D               	movlw	93
 11706  0008A8  6E16               	movwf	?_Read_b_eep,c
 11707  0008AA  ECD8  F037         	call	_Read_b_eep	;wreg free
 11708  0008AE  0100               	movlb	0	; () banked
 11709  0008B0  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11710  0008B2  0100               	movlb	0	; () banked
 11711  0008B4  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 11712  0008B6  EF0D  F00F         	goto	l10976
 11713                           
 11714                           ; BSR set to: 0
 11715                           ;main.c: 1221: channel_protection_timer[ 2 ] =
 11716                           ;main.c: 1222: Read_b_eep(0x43 + 46 + 24) * 256 +
 11717                           ;main.c: 1224: Read_b_eep(0x43 + 46 + 25);
 11718  0008BA  0E00               	movlw	0
 11719  0008BC  6E17               	movwf	?_Read_b_eep+1,c
 11720  0008BE  0E8A               	movlw	138
 11721  0008C0  6E16               	movwf	?_Read_b_eep,c
 11722  0008C2  ECD8  F037         	call	_Read_b_eep	;wreg free
 11723  0008C6  0100               	movlb	0	; () banked
 11724  0008C8  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11725  0008CA  0E00               	movlw	0
 11726  0008CC  6E17               	movwf	?_Read_b_eep+1,c
 11727  0008CE  0E89               	movlw	137
 11728  0008D0  6E16               	movwf	?_Read_b_eep,c
 11729  0008D2  ECD8  F037         	call	_Read_b_eep	;wreg free
 11730  0008D6  EFBA  F00D         	goto	L103
 11731  0008DA                     l620:
 11732                           
 11733                           ; BSR set to: 0
 11734                           ;main.c: 1229: else if (0 == val) {
 11735  0008DA  0100               	movlb	0	; () banked
 11736  0008DC  0100               	movlb	0	; () banked
 11737  0008DE  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 11738  0008E0  EF0D  F00F         	goto	l10976
 11739                           
 11740                           ; BSR set to: 0
 11741                           ;main.c: 1230: LATCbits.LATC3 = 0;
 11742  0008E4  968B               	bcf	3979,3,c	;volatile
 11743                           
 11744                           ; BSR set to: 0
 11745                           ;main.c: 1231: rv = LATCbits.LATC3;
 11746  0008E6  0E00               	movlw	0
 11747  0008E8  B68B               	btfsc	3979,3,c	;volatile
 11748  0008EA  0E01               	movlw	1
 11749  0008EC  0100               	movlb	0	; () banked
 11750  0008EE  0100               	movlb	0	; () banked
 11751  0008F0  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 11752                           
 11753                           ; BSR set to: 0
 11754                           ;main.c: 1232: bOn = 0;
 11755  0008F2  0100               	movlb	0	; () banked
 11756  0008F4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11757  0008F6  0E00               	movlw	0
 11758  0008F8  0100               	movlb	0	; () banked
 11759  0008FA  0100               	movlb	0	; () banked
 11760  0008FC  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11761  0008FE  0100               	movlb	0	; () banked
 11762  000900  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11763  000902  EF0D  F00F         	goto	l10976
 11764  000906                     l10472:
 11765                           
 11766                           ; BSR set to: 0
 11767                           ;main.c: 1240: bInfoEvent = 1;
 11768  000906  0100               	movlb	0	; () banked
 11769  000908  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11770  00090A  0E01               	movlw	1
 11771  00090C  0100               	movlb	0	; () banked
 11772  00090E  0100               	movlb	0	; () banked
 11773  000910  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 11774  000912  0100               	movlb	0	; () banked
 11775  000914  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11776                           
 11777                           ; BSR set to: 0
 11778                           ;main.c: 1242: if (1 == val) {
 11779  000916  0100               	movlb	0	; () banked
 11780  000918  0100               	movlb	0	; () banked
 11781  00091A  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 11782  00091C  A4D8               	btfss	status,2,c
 11783  00091E  D02B               	goto	l625
 11784                           
 11785                           ; BSR set to: 0
 11786                           ;main.c: 1244: LATCbits.LATC4 = 1;
 11787  000920  888B               	bsf	3979,4,c	;volatile
 11788                           
 11789                           ; BSR set to: 0
 11790                           ;main.c: 1245: rv = LATCbits.LATC4;
 11791  000922  0E00               	movlw	0
 11792  000924  B88B               	btfsc	3979,4,c	;volatile
 11793  000926  0E01               	movlw	1
 11794  000928  0100               	movlb	0	; () banked
 11795  00092A  0100               	movlb	0	; () banked
 11796  00092C  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 11797                           
 11798                           ; BSR set to: 0
 11799                           ;main.c: 1246: bOn = 1;
 11800  00092E  0100               	movlb	0	; () banked
 11801  000930  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11802  000932  0E01               	movlw	1
 11803  000934  0100               	movlb	0	; () banked
 11804  000936  0100               	movlb	0	; () banked
 11805  000938  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11806  00093A  0100               	movlb	0	; () banked
 11807  00093C  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11808                           
 11809                           ; BSR set to: 0
 11810                           ;main.c: 1248: if (Read_b_eep(0x43 + 27) & 0x04) {
 11811  00093E  0E00               	movlw	0
 11812  000940  6E17               	movwf	?_Read_b_eep+1,c
 11813  000942  0E5E               	movlw	94
 11814  000944  6E16               	movwf	?_Read_b_eep,c
 11815  000946  ECD8  F037         	call	_Read_b_eep	;wreg free
 11816  00094A  0100               	movlb	0	; () banked
 11817  00094C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11818  00094E  0100               	movlb	0	; () banked
 11819  000950  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 11820  000952  EF0D  F00F         	goto	l10976
 11821                           
 11822                           ; BSR set to: 0
 11823                           ;main.c: 1249: channel_protection_timer[ 3 ] =
 11824                           ;main.c: 1250: Read_b_eep(0x43 + 46 + 26) * 256 +
 11825                           ;main.c: 1252: Read_b_eep(0x43 + 46 + 27);
 11826  000956  0E00               	movlw	0
 11827  000958  6E17               	movwf	?_Read_b_eep+1,c
 11828  00095A  0E8C               	movlw	140
 11829  00095C  6E16               	movwf	?_Read_b_eep,c
 11830  00095E  ECD8  F037         	call	_Read_b_eep	;wreg free
 11831  000962  0100               	movlb	0	; () banked
 11832  000964  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11833  000966  0E00               	movlw	0
 11834  000968  6E17               	movwf	?_Read_b_eep+1,c
 11835  00096A  0E8B               	movlw	139
 11836  00096C  6E16               	movwf	?_Read_b_eep,c
 11837  00096E  ECD8  F037         	call	_Read_b_eep	;wreg free
 11838  000972  EFDD  F00D         	goto	L104
 11839  000976                     l625:
 11840                           
 11841                           ; BSR set to: 0
 11842                           ;main.c: 1257: else if (0 == val) {
 11843  000976  0100               	movlb	0	; () banked
 11844  000978  0100               	movlb	0	; () banked
 11845  00097A  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 11846  00097C  EF0D  F00F         	goto	l10976
 11847                           
 11848                           ; BSR set to: 0
 11849                           ;main.c: 1258: LATCbits.LATC4 = 0;
 11850  000980  988B               	bcf	3979,4,c	;volatile
 11851                           
 11852                           ; BSR set to: 0
 11853                           ;main.c: 1259: rv = LATCbits.LATC4;
 11854  000982  0E00               	movlw	0
 11855  000984  B88B               	btfsc	3979,4,c	;volatile
 11856  000986  0E01               	movlw	1
 11857  000988  0100               	movlb	0	; () banked
 11858  00098A  0100               	movlb	0	; () banked
 11859  00098C  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;main.c: 1260: bOn = 0;
 11863  00098E  0100               	movlb	0	; () banked
 11864  000990  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11865  000992  0E00               	movlw	0
 11866  000994  0100               	movlb	0	; () banked
 11867  000996  0100               	movlb	0	; () banked
 11868  000998  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11869  00099A  0100               	movlb	0	; () banked
 11870  00099C  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11871  00099E  EF0D  F00F         	goto	l10976
 11872  0009A2                     l10492:
 11873                           
 11874                           ; BSR set to: 0
 11875                           ;main.c: 1268: bInfoEvent = 1;
 11876  0009A2  0100               	movlb	0	; () banked
 11877  0009A4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11878  0009A6  0E01               	movlw	1
 11879  0009A8  0100               	movlb	0	; () banked
 11880  0009AA  0100               	movlb	0	; () banked
 11881  0009AC  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 11882  0009AE  0100               	movlb	0	; () banked
 11883  0009B0  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11884                           
 11885                           ; BSR set to: 0
 11886                           ;main.c: 1270: if (1 == val) {
 11887  0009B2  0100               	movlb	0	; () banked
 11888  0009B4  0100               	movlb	0	; () banked
 11889  0009B6  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 11890  0009B8  A4D8               	btfss	status,2,c
 11891  0009BA  D02B               	goto	l630
 11892                           
 11893                           ; BSR set to: 0
 11894                           ;main.c: 1272: LATCbits.LATC5 = 1;
 11895  0009BC  8A8B               	bsf	3979,5,c	;volatile
 11896                           
 11897                           ; BSR set to: 0
 11898                           ;main.c: 1273: rv = LATCbits.LATC5;
 11899  0009BE  0E00               	movlw	0
 11900  0009C0  BA8B               	btfsc	3979,5,c	;volatile
 11901  0009C2  0E01               	movlw	1
 11902  0009C4  0100               	movlb	0	; () banked
 11903  0009C6  0100               	movlb	0	; () banked
 11904  0009C8  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 11905                           
 11906                           ; BSR set to: 0
 11907                           ;main.c: 1274: bOn = 1;
 11908  0009CA  0100               	movlb	0	; () banked
 11909  0009CC  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11910  0009CE  0E01               	movlw	1
 11911  0009D0  0100               	movlb	0	; () banked
 11912  0009D2  0100               	movlb	0	; () banked
 11913  0009D4  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11914  0009D6  0100               	movlb	0	; () banked
 11915  0009D8  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11916                           
 11917                           ; BSR set to: 0
 11918                           ;main.c: 1276: if (Read_b_eep(0x43 + 28) & 0x04) {
 11919  0009DA  0E00               	movlw	0
 11920  0009DC  6E17               	movwf	?_Read_b_eep+1,c
 11921  0009DE  0E5F               	movlw	95
 11922  0009E0  6E16               	movwf	?_Read_b_eep,c
 11923  0009E2  ECD8  F037         	call	_Read_b_eep	;wreg free
 11924  0009E6  0100               	movlb	0	; () banked
 11925  0009E8  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11926  0009EA  0100               	movlb	0	; () banked
 11927  0009EC  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 11928  0009EE  EF0D  F00F         	goto	l10976
 11929                           
 11930                           ; BSR set to: 0
 11931                           ;main.c: 1277: channel_protection_timer[ 4 ] =
 11932                           ;main.c: 1278: Read_b_eep(0x43 + 46 + 28) * 256 +
 11933                           ;main.c: 1280: Read_b_eep(0x43 + 46 + 29);
 11934  0009F2  0E00               	movlw	0
 11935  0009F4  6E17               	movwf	?_Read_b_eep+1,c
 11936  0009F6  0E8E               	movlw	142
 11937  0009F8  6E16               	movwf	?_Read_b_eep,c
 11938  0009FA  ECD8  F037         	call	_Read_b_eep	;wreg free
 11939  0009FE  0100               	movlb	0	; () banked
 11940  000A00  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11941  000A02  0E00               	movlw	0
 11942  000A04  6E17               	movwf	?_Read_b_eep+1,c
 11943  000A06  0E8D               	movlw	141
 11944  000A08  6E16               	movwf	?_Read_b_eep,c
 11945  000A0A  ECD8  F037         	call	_Read_b_eep	;wreg free
 11946  000A0E  EF00  F00E         	goto	L105
 11947  000A12                     l630:
 11948                           
 11949                           ; BSR set to: 0
 11950                           ;main.c: 1285: else if (0 == val) {
 11951  000A12  0100               	movlb	0	; () banked
 11952  000A14  0100               	movlb	0	; () banked
 11953  000A16  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 11954  000A18  EF0D  F00F         	goto	l10976
 11955                           
 11956                           ; BSR set to: 0
 11957                           ;main.c: 1286: LATCbits.LATC5 = 0;
 11958  000A1C  9A8B               	bcf	3979,5,c	;volatile
 11959                           
 11960                           ; BSR set to: 0
 11961                           ;main.c: 1287: rv = LATCbits.LATC5;
 11962  000A1E  0E00               	movlw	0
 11963  000A20  BA8B               	btfsc	3979,5,c	;volatile
 11964  000A22  0E01               	movlw	1
 11965  000A24  0100               	movlb	0	; () banked
 11966  000A26  0100               	movlb	0	; () banked
 11967  000A28  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 11968                           
 11969                           ; BSR set to: 0
 11970                           ;main.c: 1288: bOn = 0;
 11971  000A2A  0100               	movlb	0	; () banked
 11972  000A2C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11973  000A2E  0E00               	movlw	0
 11974  000A30  0100               	movlb	0	; () banked
 11975  000A32  0100               	movlb	0	; () banked
 11976  000A34  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11977  000A36  0100               	movlb	0	; () banked
 11978  000A38  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11979  000A3A  EF0D  F00F         	goto	l10976
 11980  000A3E                     l10512:
 11981                           
 11982                           ; BSR set to: 0
 11983                           ;main.c: 1296: bInfoEvent = 1;
 11984  000A3E  0100               	movlb	0	; () banked
 11985  000A40  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11986  000A42  0E01               	movlw	1
 11987  000A44  0100               	movlb	0	; () banked
 11988  000A46  0100               	movlb	0	; () banked
 11989  000A48  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 11990  000A4A  0100               	movlb	0	; () banked
 11991  000A4C  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11992                           
 11993                           ; BSR set to: 0
 11994                           ;main.c: 1298: if (1 == val) {
 11995  000A4E  0100               	movlb	0	; () banked
 11996  000A50  0100               	movlb	0	; () banked
 11997  000A52  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 11998  000A54  A4D8               	btfss	status,2,c
 11999  000A56  D02B               	goto	l635
 12000                           
 12001                           ; BSR set to: 0
 12002                           ;main.c: 1300: LATCbits.LATC6 = 1;
 12003  000A58  8C8B               	bsf	3979,6,c	;volatile
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;main.c: 1301: rv = LATCbits.LATC6;
 12007  000A5A  0E00               	movlw	0
 12008  000A5C  BC8B               	btfsc	3979,6,c	;volatile
 12009  000A5E  0E01               	movlw	1
 12010  000A60  0100               	movlb	0	; () banked
 12011  000A62  0100               	movlb	0	; () banked
 12012  000A64  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 12013                           
 12014                           ; BSR set to: 0
 12015                           ;main.c: 1302: bOn = 1;
 12016  000A66  0100               	movlb	0	; () banked
 12017  000A68  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12018  000A6A  0E01               	movlw	1
 12019  000A6C  0100               	movlb	0	; () banked
 12020  000A6E  0100               	movlb	0	; () banked
 12021  000A70  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12022  000A72  0100               	movlb	0	; () banked
 12023  000A74  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12024                           
 12025                           ; BSR set to: 0
 12026                           ;main.c: 1304: if (Read_b_eep(0x43 + 29) & 0x04) {
 12027  000A76  0E00               	movlw	0
 12028  000A78  6E17               	movwf	?_Read_b_eep+1,c
 12029  000A7A  0E60               	movlw	96
 12030  000A7C  6E16               	movwf	?_Read_b_eep,c
 12031  000A7E  ECD8  F037         	call	_Read_b_eep	;wreg free
 12032  000A82  0100               	movlb	0	; () banked
 12033  000A84  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12034  000A86  0100               	movlb	0	; () banked
 12035  000A88  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 12036  000A8A  EF0D  F00F         	goto	l10976
 12037                           
 12038                           ; BSR set to: 0
 12039                           ;main.c: 1305: channel_protection_timer[ 5 ] =
 12040                           ;main.c: 1306: Read_b_eep(0x43 + 46 + 30) * 256 +
 12041                           ;main.c: 1308: Read_b_eep(0x43 + 46 + 31);
 12042  000A8E  0E00               	movlw	0
 12043  000A90  6E17               	movwf	?_Read_b_eep+1,c
 12044  000A92  0E90               	movlw	144
 12045  000A94  6E16               	movwf	?_Read_b_eep,c
 12046  000A96  ECD8  F037         	call	_Read_b_eep	;wreg free
 12047  000A9A  0100               	movlb	0	; () banked
 12048  000A9C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12049  000A9E  0E00               	movlw	0
 12050  000AA0  6E17               	movwf	?_Read_b_eep+1,c
 12051  000AA2  0E8F               	movlw	143
 12052  000AA4  6E16               	movwf	?_Read_b_eep,c
 12053  000AA6  ECD8  F037         	call	_Read_b_eep	;wreg free
 12054  000AAA  EF23  F00E         	goto	L106
 12055  000AAE                     l635:
 12056                           
 12057                           ; BSR set to: 0
 12058                           ;main.c: 1313: else if (0 == val) {
 12059  000AAE  0100               	movlb	0	; () banked
 12060  000AB0  0100               	movlb	0	; () banked
 12061  000AB2  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 12062  000AB4  EF0D  F00F         	goto	l10976
 12063                           
 12064                           ; BSR set to: 0
 12065                           ;main.c: 1314: LATCbits.LATC6 = 0;
 12066  000AB8  9C8B               	bcf	3979,6,c	;volatile
 12067                           
 12068                           ; BSR set to: 0
 12069                           ;main.c: 1315: rv = LATCbits.LATC6;
 12070  000ABA  0E00               	movlw	0
 12071  000ABC  BC8B               	btfsc	3979,6,c	;volatile
 12072  000ABE  0E01               	movlw	1
 12073  000AC0  0100               	movlb	0	; () banked
 12074  000AC2  0100               	movlb	0	; () banked
 12075  000AC4  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 12076                           
 12077                           ; BSR set to: 0
 12078                           ;main.c: 1316: bOn = 0;
 12079  000AC6  0100               	movlb	0	; () banked
 12080  000AC8  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12081  000ACA  0E00               	movlw	0
 12082  000ACC  0100               	movlb	0	; () banked
 12083  000ACE  0100               	movlb	0	; () banked
 12084  000AD0  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12085  000AD2  0100               	movlb	0	; () banked
 12086  000AD4  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12087  000AD6  EF0D  F00F         	goto	l10976
 12088  000ADA                     l10532:
 12089                           
 12090                           ; BSR set to: 0
 12091                           ;main.c: 1323: bInfoEvent = 1;
 12092  000ADA  0100               	movlb	0	; () banked
 12093  000ADC  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12094  000ADE  0E01               	movlw	1
 12095  000AE0  0100               	movlb	0	; () banked
 12096  000AE2  0100               	movlb	0	; () banked
 12097  000AE4  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 12098  000AE6  0100               	movlb	0	; () banked
 12099  000AE8  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12100                           
 12101                           ; BSR set to: 0
 12102                           ;main.c: 1325: if (1 == val) {
 12103  000AEA  0100               	movlb	0	; () banked
 12104  000AEC  0100               	movlb	0	; () banked
 12105  000AEE  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 12106  000AF0  A4D8               	btfss	status,2,c
 12107  000AF2  D02B               	goto	l640
 12108                           
 12109                           ; BSR set to: 0
 12110                           ;main.c: 1327: LATCbits.LATC7 = 1;
 12111  000AF4  8E8B               	bsf	3979,7,c	;volatile
 12112                           
 12113                           ; BSR set to: 0
 12114                           ;main.c: 1328: rv = LATCbits.LATC7;
 12115  000AF6  0E00               	movlw	0
 12116  000AF8  BE8B               	btfsc	3979,7,c	;volatile
 12117  000AFA  0E01               	movlw	1
 12118  000AFC  0100               	movlb	0	; () banked
 12119  000AFE  0100               	movlb	0	; () banked
 12120  000B00  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 12121                           
 12122                           ; BSR set to: 0
 12123                           ;main.c: 1329: bOn = 1;
 12124  000B02  0100               	movlb	0	; () banked
 12125  000B04  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12126  000B06  0E01               	movlw	1
 12127  000B08  0100               	movlb	0	; () banked
 12128  000B0A  0100               	movlb	0	; () banked
 12129  000B0C  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12130  000B0E  0100               	movlb	0	; () banked
 12131  000B10  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12132                           
 12133                           ; BSR set to: 0
 12134                           ;main.c: 1331: if (Read_b_eep(0x43 + 30) & 0x04) {
 12135  000B12  0E00               	movlw	0
 12136  000B14  6E17               	movwf	?_Read_b_eep+1,c
 12137  000B16  0E61               	movlw	97
 12138  000B18  6E16               	movwf	?_Read_b_eep,c
 12139  000B1A  ECD8  F037         	call	_Read_b_eep	;wreg free
 12140  000B1E  0100               	movlb	0	; () banked
 12141  000B20  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12142  000B22  0100               	movlb	0	; () banked
 12143  000B24  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 12144  000B26  EF0D  F00F         	goto	l10976
 12145                           
 12146                           ; BSR set to: 0
 12147                           ;main.c: 1332: channel_protection_timer[ 6 ] =
 12148                           ;main.c: 1333: Read_b_eep(0x43 + 46 + 32) * 256 +
 12149                           ;main.c: 1335: Read_b_eep(0x43 + 46 + 33);
 12150  000B2A  0E00               	movlw	0
 12151  000B2C  6E17               	movwf	?_Read_b_eep+1,c
 12152  000B2E  0E92               	movlw	146
 12153  000B30  6E16               	movwf	?_Read_b_eep,c
 12154  000B32  ECD8  F037         	call	_Read_b_eep	;wreg free
 12155  000B36  0100               	movlb	0	; () banked
 12156  000B38  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12157  000B3A  0E00               	movlw	0
 12158  000B3C  6E17               	movwf	?_Read_b_eep+1,c
 12159  000B3E  0E91               	movlw	145
 12160  000B40  6E16               	movwf	?_Read_b_eep,c
 12161  000B42  ECD8  F037         	call	_Read_b_eep	;wreg free
 12162  000B46  EF46  F00E         	goto	L107
 12163  000B4A                     l640:
 12164                           
 12165                           ; BSR set to: 0
 12166                           ;main.c: 1340: else if (0 == val) {
 12167  000B4A  0100               	movlb	0	; () banked
 12168  000B4C  0100               	movlb	0	; () banked
 12169  000B4E  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 12170  000B50  EF0D  F00F         	goto	l10976
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;main.c: 1341: LATCbits.LATC7 = 0;
 12174  000B54  9E8B               	bcf	3979,7,c	;volatile
 12175                           
 12176                           ; BSR set to: 0
 12177                           ;main.c: 1342: rv = LATCbits.LATC7;
 12178  000B56  0E00               	movlw	0
 12179  000B58  BE8B               	btfsc	3979,7,c	;volatile
 12180  000B5A  0E01               	movlw	1
 12181  000B5C  0100               	movlb	0	; () banked
 12182  000B5E  0100               	movlb	0	; () banked
 12183  000B60  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 12184                           
 12185                           ; BSR set to: 0
 12186                           ;main.c: 1343: bOn = 0;
 12187  000B62  0100               	movlb	0	; () banked
 12188  000B64  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12189  000B66  0E00               	movlw	0
 12190  000B68  0100               	movlb	0	; () banked
 12191  000B6A  0100               	movlb	0	; () banked
 12192  000B6C  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12193  000B6E  0100               	movlb	0	; () banked
 12194  000B70  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12195  000B72  EF0D  F00F         	goto	l10976
 12196  000B76                     l10552:
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;main.c: 1350: bInfoEvent = 1;
 12200  000B76  0100               	movlb	0	; () banked
 12201  000B78  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12202  000B7A  0E01               	movlw	1
 12203  000B7C  0100               	movlb	0	; () banked
 12204  000B7E  0100               	movlb	0	; () banked
 12205  000B80  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 12206  000B82  0100               	movlb	0	; () banked
 12207  000B84  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12208                           
 12209                           ; BSR set to: 0
 12210                           ;main.c: 1352: if (1 == val) {
 12211  000B86  0100               	movlb	0	; () banked
 12212  000B88  0100               	movlb	0	; () banked
 12213  000B8A  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 12214  000B8C  A4D8               	btfss	status,2,c
 12215  000B8E  D02B               	goto	l645
 12216                           
 12217                           ; BSR set to: 0
 12218                           ;main.c: 1354: LATAbits.LATA2 = 1;
 12219  000B90  8489               	bsf	3977,2,c	;volatile
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;main.c: 1355: rv = LATAbits.LATA2;
 12223  000B92  0E00               	movlw	0
 12224  000B94  B489               	btfsc	3977,2,c	;volatile
 12225  000B96  0E01               	movlw	1
 12226  000B98  0100               	movlb	0	; () banked
 12227  000B9A  0100               	movlb	0	; () banked
 12228  000B9C  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 12229                           
 12230                           ; BSR set to: 0
 12231                           ;main.c: 1356: bOn = 1;
 12232  000B9E  0100               	movlb	0	; () banked
 12233  000BA0  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12234  000BA2  0E01               	movlw	1
 12235  000BA4  0100               	movlb	0	; () banked
 12236  000BA6  0100               	movlb	0	; () banked
 12237  000BA8  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12238  000BAA  0100               	movlb	0	; () banked
 12239  000BAC  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12240                           
 12241                           ; BSR set to: 0
 12242                           ;main.c: 1358: if (Read_b_eep(0x43 + 31) & 0x04) {
 12243  000BAE  0E00               	movlw	0
 12244  000BB0  6E17               	movwf	?_Read_b_eep+1,c
 12245  000BB2  0E62               	movlw	98
 12246  000BB4  6E16               	movwf	?_Read_b_eep,c
 12247  000BB6  ECD8  F037         	call	_Read_b_eep	;wreg free
 12248  000BBA  0100               	movlb	0	; () banked
 12249  000BBC  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12250  000BBE  0100               	movlb	0	; () banked
 12251  000BC0  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 12252  000BC2  EF0D  F00F         	goto	l10976
 12253                           
 12254                           ; BSR set to: 0
 12255                           ;main.c: 1359: channel_protection_timer[ 7 ] =
 12256                           ;main.c: 1360: Read_b_eep(0x43 + 46 + 34) * 256 +
 12257                           ;main.c: 1362: Read_b_eep(0x43 + 46 + 35);
 12258  000BC6  0E00               	movlw	0
 12259  000BC8  6E17               	movwf	?_Read_b_eep+1,c
 12260  000BCA  0E94               	movlw	148
 12261  000BCC  6E16               	movwf	?_Read_b_eep,c
 12262  000BCE  ECD8  F037         	call	_Read_b_eep	;wreg free
 12263  000BD2  0100               	movlb	0	; () banked
 12264  000BD4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12265  000BD6  0E00               	movlw	0
 12266  000BD8  6E17               	movwf	?_Read_b_eep+1,c
 12267  000BDA  0E93               	movlw	147
 12268  000BDC  6E16               	movwf	?_Read_b_eep,c
 12269  000BDE  ECD8  F037         	call	_Read_b_eep	;wreg free
 12270  000BE2  EF69  F00E         	goto	L108
 12271  000BE6                     l645:
 12272                           
 12273                           ; BSR set to: 0
 12274                           ;main.c: 1367: else if (0 == val) {
 12275  000BE6  0100               	movlb	0	; () banked
 12276  000BE8  0100               	movlb	0	; () banked
 12277  000BEA  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 12278  000BEC  EF0D  F00F         	goto	l10976
 12279                           
 12280                           ; BSR set to: 0
 12281                           ;main.c: 1368: LATAbits.LATA2 = 0;
 12282  000BF0  9489               	bcf	3977,2,c	;volatile
 12283                           
 12284                           ; BSR set to: 0
 12285                           ;main.c: 1369: rv = LATAbits.LATA2;
 12286  000BF2  0E00               	movlw	0
 12287  000BF4  B489               	btfsc	3977,2,c	;volatile
 12288  000BF6  0E01               	movlw	1
 12289  000BF8  0100               	movlb	0	; () banked
 12290  000BFA  0100               	movlb	0	; () banked
 12291  000BFC  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;main.c: 1370: bOn = 0;
 12295  000BFE  0100               	movlb	0	; () banked
 12296  000C00  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12297  000C02  0E00               	movlw	0
 12298  000C04  0100               	movlb	0	; () banked
 12299  000C06  0100               	movlb	0	; () banked
 12300  000C08  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12301  000C0A  0100               	movlb	0	; () banked
 12302  000C0C  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12303  000C0E  EF0D  F00F         	goto	l10976
 12304  000C12                     l10572:
 12305                           
 12306                           ; BSR set to: 0
 12307                           ;main.c: 1377: bInfoEvent = 1;
 12308  000C12  0100               	movlb	0	; () banked
 12309  000C14  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12310  000C16  0E01               	movlw	1
 12311  000C18  0100               	movlb	0	; () banked
 12312  000C1A  0100               	movlb	0	; () banked
 12313  000C1C  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 12314  000C1E  0100               	movlb	0	; () banked
 12315  000C20  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12316                           
 12317                           ; BSR set to: 0
 12318                           ;main.c: 1379: if (1 == val) {
 12319  000C22  0100               	movlb	0	; () banked
 12320  000C24  0100               	movlb	0	; () banked
 12321  000C26  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 12322  000C28  A4D8               	btfss	status,2,c
 12323  000C2A  D02B               	goto	l650
 12324                           
 12325                           ; BSR set to: 0
 12326                           ;main.c: 1381: LATAbits.LATA1 = 1;
 12327  000C2C  8289               	bsf	3977,1,c	;volatile
 12328                           
 12329                           ; BSR set to: 0
 12330                           ;main.c: 1382: rv = LATAbits.LATA1;
 12331  000C2E  0E00               	movlw	0
 12332  000C30  B289               	btfsc	3977,1,c	;volatile
 12333  000C32  0E01               	movlw	1
 12334  000C34  0100               	movlb	0	; () banked
 12335  000C36  0100               	movlb	0	; () banked
 12336  000C38  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 12337                           
 12338                           ; BSR set to: 0
 12339                           ;main.c: 1383: bOn = 1;
 12340  000C3A  0100               	movlb	0	; () banked
 12341  000C3C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12342  000C3E  0E01               	movlw	1
 12343  000C40  0100               	movlb	0	; () banked
 12344  000C42  0100               	movlb	0	; () banked
 12345  000C44  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12346  000C46  0100               	movlb	0	; () banked
 12347  000C48  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12348                           
 12349                           ; BSR set to: 0
 12350                           ;main.c: 1385: if ( Read_b_eep(0x43 + 32) & 0x04 ) {
 12351  000C4A  0E00               	movlw	0
 12352  000C4C  6E17               	movwf	?_Read_b_eep+1,c
 12353  000C4E  0E63               	movlw	99
 12354  000C50  6E16               	movwf	?_Read_b_eep,c
 12355  000C52  ECD8  F037         	call	_Read_b_eep	;wreg free
 12356  000C56  0100               	movlb	0	; () banked
 12357  000C58  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12358  000C5A  0100               	movlb	0	; () banked
 12359  000C5C  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 12360  000C5E  EF0D  F00F         	goto	l10976
 12361                           
 12362                           ; BSR set to: 0
 12363                           ;main.c: 1386: channel_protection_timer[ 8 ] =
 12364                           ;main.c: 1387: Read_b_eep(0x43 + 46 + 36) * 256 +
 12365                           ;main.c: 1389: Read_b_eep(0x43 + 46 + 37);
 12366  000C62  0E00               	movlw	0
 12367  000C64  6E17               	movwf	?_Read_b_eep+1,c
 12368  000C66  0E96               	movlw	150
 12369  000C68  6E16               	movwf	?_Read_b_eep,c
 12370  000C6A  ECD8  F037         	call	_Read_b_eep	;wreg free
 12371  000C6E  0100               	movlb	0	; () banked
 12372  000C70  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12373  000C72  0E00               	movlw	0
 12374  000C74  6E17               	movwf	?_Read_b_eep+1,c
 12375  000C76  0E95               	movlw	149
 12376  000C78  6E16               	movwf	?_Read_b_eep,c
 12377  000C7A  ECD8  F037         	call	_Read_b_eep	;wreg free
 12378  000C7E  EF8C  F00E         	goto	L109
 12379  000C82                     l650:
 12380                           
 12381                           ; BSR set to: 0
 12382                           ;main.c: 1394: else if ( 0 == val ) {
 12383  000C82  0100               	movlb	0	; () banked
 12384  000C84  0100               	movlb	0	; () banked
 12385  000C86  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 12386  000C88  EF0D  F00F         	goto	l10976
 12387                           
 12388                           ; BSR set to: 0
 12389                           ;main.c: 1395: LATAbits.LATA1 = 0;
 12390  000C8C  9289               	bcf	3977,1,c	;volatile
 12391                           
 12392                           ; BSR set to: 0
 12393                           ;main.c: 1396: rv = LATAbits.LATA1;
 12394  000C8E  0E00               	movlw	0
 12395  000C90  B289               	btfsc	3977,1,c	;volatile
 12396  000C92  0E01               	movlw	1
 12397  000C94  0100               	movlb	0	; () banked
 12398  000C96  0100               	movlb	0	; () banked
 12399  000C98  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 12400                           
 12401                           ; BSR set to: 0
 12402                           ;main.c: 1397: bOn = 0;
 12403  000C9A  0100               	movlb	0	; () banked
 12404  000C9C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12405  000C9E  0E00               	movlw	0
 12406  000CA0  0100               	movlb	0	; () banked
 12407  000CA2  0100               	movlb	0	; () banked
 12408  000CA4  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12409  000CA6  0100               	movlb	0	; () banked
 12410  000CA8  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12411  000CAA  EF0D  F00F         	goto	l10976
 12412  000CAE                     l10592:
 12413                           
 12414                           ; BSR set to: 0
 12415                           ;main.c: 1404: bInfoEvent = 1;
 12416  000CAE  0100               	movlb	0	; () banked
 12417  000CB0  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12418  000CB2  0E01               	movlw	1
 12419  000CB4  0100               	movlb	0	; () banked
 12420  000CB6  0100               	movlb	0	; () banked
 12421  000CB8  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 12422  000CBA  0100               	movlb	0	; () banked
 12423  000CBC  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;main.c: 1406: if ( 1 == val ) {
 12427  000CBE  0100               	movlb	0	; () banked
 12428  000CC0  0100               	movlb	0	; () banked
 12429  000CC2  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 12430  000CC4  A4D8               	btfss	status,2,c
 12431  000CC6  D02B               	goto	l655
 12432                           
 12433                           ; BSR set to: 0
 12434                           ;main.c: 1408: LATAbits.LATA0 = 1;
 12435  000CC8  8089               	bsf	3977,0,c	;volatile
 12436                           
 12437                           ; BSR set to: 0
 12438                           ;main.c: 1409: rv = LATAbits.LATA0;
 12439  000CCA  0E00               	movlw	0
 12440  000CCC  B089               	btfsc	3977,0,c	;volatile
 12441  000CCE  0E01               	movlw	1
 12442  000CD0  0100               	movlb	0	; () banked
 12443  000CD2  0100               	movlb	0	; () banked
 12444  000CD4  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 12445                           
 12446                           ; BSR set to: 0
 12447                           ;main.c: 1410: bOn = 1;
 12448  000CD6  0100               	movlb	0	; () banked
 12449  000CD8  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12450  000CDA  0E01               	movlw	1
 12451  000CDC  0100               	movlb	0	; () banked
 12452  000CDE  0100               	movlb	0	; () banked
 12453  000CE0  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12454  000CE2  0100               	movlb	0	; () banked
 12455  000CE4  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12456                           
 12457                           ; BSR set to: 0
 12458                           ;main.c: 1412: if ( Read_b_eep(0x43 + 33) & 0x04 ) {
 12459  000CE6  0E00               	movlw	0
 12460  000CE8  6E17               	movwf	?_Read_b_eep+1,c
 12461  000CEA  0E64               	movlw	100
 12462  000CEC  6E16               	movwf	?_Read_b_eep,c
 12463  000CEE  ECD8  F037         	call	_Read_b_eep	;wreg free
 12464  000CF2  0100               	movlb	0	; () banked
 12465  000CF4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12466  000CF6  0100               	movlb	0	; () banked
 12467  000CF8  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 12468  000CFA  EF0D  F00F         	goto	l10976
 12469                           
 12470                           ; BSR set to: 0
 12471                           ;main.c: 1413: channel_protection_timer[ 9 ] =
 12472                           ;main.c: 1414: Read_b_eep(0x43 + 46 + 38) * 256 +
 12473                           ;main.c: 1416: Read_b_eep(0x43 + 46 + 39);
 12474  000CFE  0E00               	movlw	0
 12475  000D00  6E17               	movwf	?_Read_b_eep+1,c
 12476  000D02  0E98               	movlw	152
 12477  000D04  6E16               	movwf	?_Read_b_eep,c
 12478  000D06  ECD8  F037         	call	_Read_b_eep	;wreg free
 12479  000D0A  0100               	movlb	0	; () banked
 12480  000D0C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12481  000D0E  0E00               	movlw	0
 12482  000D10  6E17               	movwf	?_Read_b_eep+1,c
 12483  000D12  0E97               	movlw	151
 12484  000D14  6E16               	movwf	?_Read_b_eep,c
 12485  000D16  ECD8  F037         	call	_Read_b_eep	;wreg free
 12486  000D1A  EFAF  F00E         	goto	L110
 12487  000D1E                     l655:
 12488                           
 12489                           ; BSR set to: 0
 12490                           ;main.c: 1421: else if ( 0 == val ) {
 12491  000D1E  0100               	movlb	0	; () banked
 12492  000D20  0100               	movlb	0	; () banked
 12493  000D22  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 12494  000D24  EF0D  F00F         	goto	l10976
 12495                           
 12496                           ; BSR set to: 0
 12497                           ;main.c: 1422: LATAbits.LATA0 = 0;
 12498  000D28  9089               	bcf	3977,0,c	;volatile
 12499                           
 12500                           ; BSR set to: 0
 12501                           ;main.c: 1423: rv = LATAbits.LATA0;
 12502  000D2A  0E00               	movlw	0
 12503  000D2C  B089               	btfsc	3977,0,c	;volatile
 12504  000D2E  0E01               	movlw	1
 12505  000D30  0100               	movlb	0	; () banked
 12506  000D32  0100               	movlb	0	; () banked
 12507  000D34  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 12508                           
 12509                           ; BSR set to: 0
 12510                           ;main.c: 1424: bOn = 0;
 12511  000D36  0100               	movlb	0	; () banked
 12512  000D38  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12513  000D3A  0E00               	movlw	0
 12514  000D3C  0100               	movlb	0	; () banked
 12515  000D3E  0100               	movlb	0	; () banked
 12516  000D40  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12517  000D42  0100               	movlb	0	; () banked
 12518  000D44  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12519  000D46  EF0D  F00F         	goto	l10976
 12520  000D4A                     l10614:
 12521                           
 12522                           ; BSR set to: 0
 12523  000D4A  0100               	movlb	0	; () banked
 12524  000D4C  0100               	movlb	0	; () banked
 12525  000D4E  51A2               	movf	vscp_writeAppReg@reg& (0+255),w,b
 12526                           
 12527                           ; Switch size 1, requested type "space"
 12528                           ; Number of cases is 10, Range of values is 14 to 23
 12529                           ; switch strategies available:
 12530                           ; Name         Instructions Cycles
 12531                           ; simple_byte           31    16 (average)
 12532                           ;	Chosen strategy is simple_byte
 12533  000D50  0A0E               	xorlw	14	; case 14
 12534  000D52  B4D8               	btfsc	status,2,c
 12535  000D54  D4EE               	goto	l10412
 12536  000D56  0A01               	xorlw	1	; case 15
 12537  000D58  B4D8               	btfsc	status,2,c
 12538  000D5A  D539               	goto	l10432
 12539  000D5C  0A1F               	xorlw	31	; case 16
 12540  000D5E  B4D8               	btfsc	status,2,c
 12541  000D60  D584               	goto	l10452
 12542  000D62  0A01               	xorlw	1	; case 17
 12543  000D64  B4D8               	btfsc	status,2,c
 12544  000D66  D5CF               	goto	l10472
 12545  000D68  0A03               	xorlw	3	; case 18
 12546  000D6A  B4D8               	btfsc	status,2,c
 12547  000D6C  D61A               	goto	l10492
 12548  000D6E  0A01               	xorlw	1	; case 19
 12549  000D70  B4D8               	btfsc	status,2,c
 12550  000D72  D665               	goto	l10512
 12551  000D74  0A07               	xorlw	7	; case 20
 12552  000D76  B4D8               	btfsc	status,2,c
 12553  000D78  D6B0               	goto	l10532
 12554  000D7A  0A01               	xorlw	1	; case 21
 12555  000D7C  B4D8               	btfsc	status,2,c
 12556  000D7E  D6FB               	goto	l10552
 12557  000D80  0A03               	xorlw	3	; case 22
 12558  000D82  B4D8               	btfsc	status,2,c
 12559  000D84  D746               	goto	l10572
 12560  000D86  0A01               	xorlw	1	; case 23
 12561  000D88  B4D8               	btfsc	status,2,c
 12562  000D8A  D791               	goto	l10592
 12563  000D8C  EF0D  F00F         	goto	l10976
 12564  000D90                     l10616:
 12565                           
 12566                           ; BSR set to: 0
 12567                           ;main.c: 1433: else if ( (reg >= 24 ) &&
 12568                           ;main.c: 1434: (reg <= 33) ) {
 12569  000D90  0E17               	movlw	23
 12570  000D92  0100               	movlb	0	; () banked
 12571  000D94  0100               	movlb	0	; () banked
 12572  000D96  65A2               	cpfsgt	vscp_writeAppReg@reg& (0+255),b
 12573  000D98  EF74  F00B         	goto	l10886
 12574                           
 12575                           ; BSR set to: 0
 12576  000D9C  0E22               	movlw	34
 12577  000D9E  0100               	movlb	0	; () banked
 12578  000DA0  0100               	movlb	0	; () banked
 12579  000DA2  61A2               	cpfslt	vscp_writeAppReg@reg& (0+255),b
 12580  000DA4  EF74  F00B         	goto	l10886
 12581  000DA8  EF50  F00B         	goto	l10884
 12582  000DAC                     l10622:
 12583                           
 12584                           ; BSR set to: 0
 12585                           ;main.c: 1440: (Busy_eep(), Write_b_eep(0x43 + 46 + reg,val));
 12586  000DAC  EC10  F038         	call	_Busy_eep	;wreg free
 12587  000DB0  0E71               	movlw	113
 12588  000DB2  0100               	movlb	0	; () banked
 12589  000DB4  0100               	movlb	0	; () banked
 12590  000DB6  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12591  000DB8  6E16               	movwf	?_Write_b_eep,c
 12592  000DBA  6A17               	clrf	?_Write_b_eep+1,c
 12593  000DBC  0E00               	movlw	0
 12594  000DBE  2217               	addwfc	?_Write_b_eep+1,f,c
 12595  000DC0  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 12596  000DC4  EC40  F036         	call	_Write_b_eep	;wreg free
 12597                           
 12598                           ;main.c: 1441: rv = Read_b_eep(0x43 + 46 + reg);
 12599  000DC8  0E71               	movlw	113
 12600  000DCA  0100               	movlb	0	; () banked
 12601  000DCC  0100               	movlb	0	; () banked
 12602  000DCE  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12603  000DD0  6E16               	movwf	?_Read_b_eep,c
 12604  000DD2  6A17               	clrf	?_Read_b_eep+1,c
 12605  000DD4  0E00               	movlw	0
 12606  000DD6  2217               	addwfc	?_Read_b_eep+1,f,c
 12607  000DD8  ECD8  F037         	call	_Read_b_eep	;wreg free
 12608  000DDC  0100               	movlb	0	; () banked
 12609  000DDE  0100               	movlb	0	; () banked
 12610  000DE0  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 12611                           
 12612                           ; BSR set to: 0
 12613                           ;main.c: 1443: if ( val & 0x01 ) {
 12614  000DE2  0100               	movlb	0	; () banked
 12615  000DE4  0100               	movlb	0	; () banked
 12616  000DE6  A1A3               	btfss	vscp_writeAppReg@val& (0+255),0,b
 12617  000DE8  D02F               	goto	l10638
 12618                           
 12619                           ; BSR set to: 0
 12620                           ;main.c: 1445: LATBbits.LATB0 = 0;
 12621  000DEA  908A               	bcf	3978,0,c	;volatile
 12622                           
 12623                           ; BSR set to: 0
 12624                           ;main.c: 1446: bOn = 0;
 12625  000DEC  0100               	movlb	0	; () banked
 12626  000DEE  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12627  000DF0  0E00               	movlw	0
 12628  000DF2  0100               	movlb	0	; () banked
 12629  000DF4  0100               	movlb	0	; () banked
 12630  000DF6  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12631  000DF8  0100               	movlb	0	; () banked
 12632  000DFA  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12633                           
 12634                           ; BSR set to: 0
 12635                           ;main.c: 1448: channel_pulse_flags |= 0b0000000001;
 12636  000DFC  0100               	movlb	0	; () banked
 12637  000DFE  0100               	movlb	0	; () banked
 12638  000E00  81D5               	bsf	_channel_pulse_flags& (0+255),0,b
 12639                           
 12640                           ; BSR set to: 0
 12641                           ;main.c: 1449: channel_pulse_timer[ 0 ] =
 12642                           ;main.c: 1450: Read_b_eep(0x43 + 46 + 0) * 256 +
 12643                           ;main.c: 1452: Read_b_eep(0x43 + 46 + 0);
 12644  000E02  0E00               	movlw	0
 12645  000E04  6E17               	movwf	?_Read_b_eep+1,c
 12646  000E06  0E71               	movlw	113
 12647  000E08  6E16               	movwf	?_Read_b_eep,c
 12648  000E0A  ECD8  F037         	call	_Read_b_eep	;wreg free
 12649  000E0E  0100               	movlb	0	; () banked
 12650  000E10  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12651  000E12  0E00               	movlw	0
 12652  000E14  6E17               	movwf	?_Read_b_eep+1,c
 12653  000E16  0E71               	movlw	113
 12654  000E18  6E16               	movwf	?_Read_b_eep,c
 12655  000E1A  ECD8  F037         	call	_Read_b_eep	;wreg free
 12656  000E1E  0100               	movlb	0	; () banked
 12657  000E20  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 12658  000E22  0100               	movlb	0	; () banked
 12659  000E24  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 12660  000E26  0100               	movlb	0	; () banked
 12661  000E28  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 12662  000E2A  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 12663  000E2C  0100               	movlb	0	; () banked
 12664  000E2E  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12665  000E30  0100               	movlb	0	; () banked
 12666  000E32  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 12667  000E34  0101               	movlb	1	; () banked
 12668  000E36  0101               	movlb	1	; () banked
 12669  000E38  6F26               	movwf	_channel_pulse_timer& (0+255),b
 12670  000E3A  0100               	movlb	0	; () banked
 12671  000E3C  0E00               	movlw	0
 12672  000E3E  0100               	movlb	0	; () banked
 12673  000E40  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 12674  000E42  0101               	movlb	1	; () banked
 12675  000E44  6F27               	movwf	(_channel_pulse_timer+1)& (0+255),b
 12676                           
 12677                           ;main.c: 1454: }
 12678  000E46  D010               	goto	l10644
 12679  000E48                     l10638:
 12680                           
 12681                           ;main.c: 1455: else {
 12682                           ;main.c: 1456: channel_pulse_flags &= 0b1111111110;
 12683  000E48  0100               	movlb	0	; () banked
 12684  000E4A  0EFE               	movlw	254
 12685  000E4C  0100               	movlb	0	; () banked
 12686  000E4E  17D5               	andwf	_channel_pulse_flags& (0+255),f,b
 12687  000E50  0E03               	movlw	3
 12688  000E52  0100               	movlb	0	; () banked
 12689  000E54  17D6               	andwf	(_channel_pulse_flags+1)& (0+255),f,b
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;main.c: 1457: LATBbits.LATB0 = 0;
 12693  000E56  908A               	bcf	3978,0,c	;volatile
 12694                           
 12695                           ; BSR set to: 0
 12696                           ;main.c: 1458: bOn = 0;
 12697  000E58  0100               	movlb	0	; () banked
 12698  000E5A  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12699  000E5C  0E00               	movlw	0
 12700  000E5E  0100               	movlb	0	; () banked
 12701  000E60  0100               	movlb	0	; () banked
 12702  000E62  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12703  000E64  0100               	movlb	0	; () banked
 12704  000E66  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12705  000E68                     l10644:
 12706                           
 12707                           ;main.c: 1459: }
 12708                           ;main.c: 1461: if ( val & 0x04 ) {
 12709  000E68  0100               	movlb	0	; () banked
 12710  000E6A  0100               	movlb	0	; () banked
 12711  000E6C  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 12712  000E6E  EF0D  F00F         	goto	l10976
 12713                           
 12714                           ; BSR set to: 0
 12715                           ;main.c: 1462: channel_protection_timer[ 0 ] =
 12716                           ;main.c: 1463: Read_b_eep(0x43 + 46 + 20) * 256 +
 12717                           ;main.c: 1465: Read_b_eep(0x43 + 46 + 21);
 12718  000E72  0E00               	movlw	0
 12719  000E74  6E17               	movwf	?_Read_b_eep+1,c
 12720  000E76  0E86               	movlw	134
 12721  000E78  6E16               	movwf	?_Read_b_eep,c
 12722  000E7A  ECD8  F037         	call	_Read_b_eep	;wreg free
 12723  000E7E  0100               	movlb	0	; () banked
 12724  000E80  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12725  000E82  0E00               	movlw	0
 12726  000E84  6E17               	movwf	?_Read_b_eep+1,c
 12727  000E86  0E85               	movlw	133
 12728  000E88  6E16               	movwf	?_Read_b_eep,c
 12729  000E8A  ECD8  F037         	call	_Read_b_eep	;wreg free
 12730  000E8E  EF74  F00D         	goto	L101
 12731  000E92                     l10648:
 12732                           
 12733                           ; BSR set to: 0
 12734                           ;main.c: 1472: (Busy_eep(), Write_b_eep(0x43 + 46 + reg,val));
 12735  000E92  EC10  F038         	call	_Busy_eep	;wreg free
 12736  000E96  0E71               	movlw	113
 12737  000E98  0100               	movlb	0	; () banked
 12738  000E9A  0100               	movlb	0	; () banked
 12739  000E9C  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12740  000E9E  6E16               	movwf	?_Write_b_eep,c
 12741  000EA0  6A17               	clrf	?_Write_b_eep+1,c
 12742  000EA2  0E00               	movlw	0
 12743  000EA4  2217               	addwfc	?_Write_b_eep+1,f,c
 12744  000EA6  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 12745  000EAA  EC40  F036         	call	_Write_b_eep	;wreg free
 12746                           
 12747                           ;main.c: 1473: rv = Read_b_eep(0x43 + 46 + reg);
 12748  000EAE  0E71               	movlw	113
 12749  000EB0  0100               	movlb	0	; () banked
 12750  000EB2  0100               	movlb	0	; () banked
 12751  000EB4  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12752  000EB6  6E16               	movwf	?_Read_b_eep,c
 12753  000EB8  6A17               	clrf	?_Read_b_eep+1,c
 12754  000EBA  0E00               	movlw	0
 12755  000EBC  2217               	addwfc	?_Read_b_eep+1,f,c
 12756  000EBE  ECD8  F037         	call	_Read_b_eep	;wreg free
 12757  000EC2  0100               	movlb	0	; () banked
 12758  000EC4  0100               	movlb	0	; () banked
 12759  000EC6  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 12760                           
 12761                           ; BSR set to: 0
 12762                           ;main.c: 1475: if ( val & 0x02 ) {
 12763  000EC8  0100               	movlb	0	; () banked
 12764  000ECA  0100               	movlb	0	; () banked
 12765  000ECC  A3A3               	btfss	vscp_writeAppReg@val& (0+255),1,b
 12766  000ECE  D02F               	goto	l10664
 12767                           
 12768                           ; BSR set to: 0
 12769                           ;main.c: 1477: LATBbits.LATB1 = 0;
 12770  000ED0  928A               	bcf	3978,1,c	;volatile
 12771                           
 12772                           ; BSR set to: 0
 12773                           ;main.c: 1478: bOn = 0;
 12774  000ED2  0100               	movlb	0	; () banked
 12775  000ED4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12776  000ED6  0E00               	movlw	0
 12777  000ED8  0100               	movlb	0	; () banked
 12778  000EDA  0100               	movlb	0	; () banked
 12779  000EDC  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12780  000EDE  0100               	movlb	0	; () banked
 12781  000EE0  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12782                           
 12783                           ; BSR set to: 0
 12784                           ;main.c: 1480: channel_pulse_flags |= 0b0000000010;
 12785  000EE2  0100               	movlb	0	; () banked
 12786  000EE4  0100               	movlb	0	; () banked
 12787  000EE6  83D5               	bsf	_channel_pulse_flags& (0+255),1,b
 12788                           
 12789                           ; BSR set to: 0
 12790                           ;main.c: 1481: channel_pulse_timer[ 1 ] =
 12791                           ;main.c: 1482: Read_b_eep(0x43 + 46 + 0) * 256 +
 12792                           ;main.c: 1484: Read_b_eep(0x43 + 46 + 1);
 12793  000EE8  0E00               	movlw	0
 12794  000EEA  6E17               	movwf	?_Read_b_eep+1,c
 12795  000EEC  0E72               	movlw	114
 12796  000EEE  6E16               	movwf	?_Read_b_eep,c
 12797  000EF0  ECD8  F037         	call	_Read_b_eep	;wreg free
 12798  000EF4  0100               	movlb	0	; () banked
 12799  000EF6  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12800  000EF8  0E00               	movlw	0
 12801  000EFA  6E17               	movwf	?_Read_b_eep+1,c
 12802  000EFC  0E71               	movlw	113
 12803  000EFE  6E16               	movwf	?_Read_b_eep,c
 12804  000F00  ECD8  F037         	call	_Read_b_eep	;wreg free
 12805  000F04  0100               	movlb	0	; () banked
 12806  000F06  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 12807  000F08  0100               	movlb	0	; () banked
 12808  000F0A  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 12809  000F0C  0100               	movlb	0	; () banked
 12810  000F0E  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 12811  000F10  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 12812  000F12  0100               	movlb	0	; () banked
 12813  000F14  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12814  000F16  0100               	movlb	0	; () banked
 12815  000F18  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 12816  000F1A  0101               	movlb	1	; () banked
 12817  000F1C  0101               	movlb	1	; () banked
 12818  000F1E  6F28               	movwf	(_channel_pulse_timer+2)& (0+255),b
 12819  000F20  0100               	movlb	0	; () banked
 12820  000F22  0E00               	movlw	0
 12821  000F24  0100               	movlb	0	; () banked
 12822  000F26  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 12823  000F28  0101               	movlb	1	; () banked
 12824  000F2A  6F29               	movwf	(_channel_pulse_timer+3)& (0+255),b
 12825                           
 12826                           ;main.c: 1486: }
 12827  000F2C  D010               	goto	l10670
 12828  000F2E                     l10664:
 12829                           
 12830                           ;main.c: 1487: else {
 12831                           ;main.c: 1488: channel_pulse_flags &= 0b1111111101;
 12832  000F2E  0100               	movlb	0	; () banked
 12833  000F30  0EFD               	movlw	253
 12834  000F32  0100               	movlb	0	; () banked
 12835  000F34  17D5               	andwf	_channel_pulse_flags& (0+255),f,b
 12836  000F36  0E03               	movlw	3
 12837  000F38  0100               	movlb	0	; () banked
 12838  000F3A  17D6               	andwf	(_channel_pulse_flags+1)& (0+255),f,b
 12839                           
 12840                           ; BSR set to: 0
 12841                           ;main.c: 1489: LATBbits.LATB1 = 0;
 12842  000F3C  928A               	bcf	3978,1,c	;volatile
 12843                           
 12844                           ; BSR set to: 0
 12845                           ;main.c: 1490: bOn = 0;
 12846  000F3E  0100               	movlb	0	; () banked
 12847  000F40  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12848  000F42  0E00               	movlw	0
 12849  000F44  0100               	movlb	0	; () banked
 12850  000F46  0100               	movlb	0	; () banked
 12851  000F48  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12852  000F4A  0100               	movlb	0	; () banked
 12853  000F4C  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12854  000F4E                     l10670:
 12855                           
 12856                           ;main.c: 1491: }
 12857                           ;main.c: 1493: if ( val & 0x04 ) {
 12858  000F4E  0100               	movlb	0	; () banked
 12859  000F50  0100               	movlb	0	; () banked
 12860  000F52  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 12861  000F54  EF0D  F00F         	goto	l10976
 12862                           
 12863                           ; BSR set to: 0
 12864                           ;main.c: 1494: channel_protection_timer[ 1 ] =
 12865                           ;main.c: 1495: Read_b_eep(0x43 + 46 + 20) * 256 +
 12866                           ;main.c: 1497: Read_b_eep(0x43 + 46 + 21);
 12867  000F58  0E00               	movlw	0
 12868  000F5A  6E17               	movwf	?_Read_b_eep+1,c
 12869  000F5C  0E86               	movlw	134
 12870  000F5E  6E16               	movwf	?_Read_b_eep,c
 12871  000F60  ECD8  F037         	call	_Read_b_eep	;wreg free
 12872  000F64  0100               	movlb	0	; () banked
 12873  000F66  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12874  000F68  0E00               	movlw	0
 12875  000F6A  6E17               	movwf	?_Read_b_eep+1,c
 12876  000F6C  0E85               	movlw	133
 12877  000F6E  6E16               	movwf	?_Read_b_eep,c
 12878  000F70  ECD8  F037         	call	_Read_b_eep	;wreg free
 12879  000F74  EF97  F00D         	goto	L102
 12880  000F78                     l10674:
 12881                           
 12882                           ; BSR set to: 0
 12883                           ;main.c: 1504: (Busy_eep(), Write_b_eep(0x43 + 46 + reg,val));
 12884  000F78  EC10  F038         	call	_Busy_eep	;wreg free
 12885  000F7C  0E71               	movlw	113
 12886  000F7E  0100               	movlb	0	; () banked
 12887  000F80  0100               	movlb	0	; () banked
 12888  000F82  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12889  000F84  6E16               	movwf	?_Write_b_eep,c
 12890  000F86  6A17               	clrf	?_Write_b_eep+1,c
 12891  000F88  0E00               	movlw	0
 12892  000F8A  2217               	addwfc	?_Write_b_eep+1,f,c
 12893  000F8C  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 12894  000F90  EC40  F036         	call	_Write_b_eep	;wreg free
 12895                           
 12896                           ;main.c: 1505: rv = Read_b_eep(0x43 + 46 + reg);
 12897  000F94  0E71               	movlw	113
 12898  000F96  0100               	movlb	0	; () banked
 12899  000F98  0100               	movlb	0	; () banked
 12900  000F9A  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12901  000F9C  6E16               	movwf	?_Read_b_eep,c
 12902  000F9E  6A17               	clrf	?_Read_b_eep+1,c
 12903  000FA0  0E00               	movlw	0
 12904  000FA2  2217               	addwfc	?_Read_b_eep+1,f,c
 12905  000FA4  ECD8  F037         	call	_Read_b_eep	;wreg free
 12906  000FA8  0100               	movlb	0	; () banked
 12907  000FAA  0100               	movlb	0	; () banked
 12908  000FAC  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 12909                           
 12910                           ; BSR set to: 0
 12911                           ;main.c: 1507: if ( val & 0x01 ) {
 12912  000FAE  0100               	movlb	0	; () banked
 12913  000FB0  0100               	movlb	0	; () banked
 12914  000FB2  A1A3               	btfss	vscp_writeAppReg@val& (0+255),0,b
 12915  000FB4  D02F               	goto	l10690
 12916                           
 12917                           ; BSR set to: 0
 12918                           ;main.c: 1509: LATCbits.LATC3 = 0;
 12919  000FB6  968B               	bcf	3979,3,c	;volatile
 12920                           
 12921                           ; BSR set to: 0
 12922                           ;main.c: 1510: bOn = 0;
 12923  000FB8  0100               	movlb	0	; () banked
 12924  000FBA  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12925  000FBC  0E00               	movlw	0
 12926  000FBE  0100               	movlb	0	; () banked
 12927  000FC0  0100               	movlb	0	; () banked
 12928  000FC2  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12929  000FC4  0100               	movlb	0	; () banked
 12930  000FC6  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12931                           
 12932                           ; BSR set to: 0
 12933                           ;main.c: 1512: channel_pulse_flags |= 0b0000000100;
 12934  000FC8  0100               	movlb	0	; () banked
 12935  000FCA  0100               	movlb	0	; () banked
 12936  000FCC  85D5               	bsf	_channel_pulse_flags& (0+255),2,b
 12937                           
 12938                           ; BSR set to: 0
 12939                           ;main.c: 1513: channel_pulse_timer[ 2 ] =
 12940                           ;main.c: 1514: Read_b_eep(0x43 + 46 + 4) * 256 +
 12941                           ;main.c: 1516: Read_b_eep(0x43 + 46 + 5);
 12942  000FCE  0E00               	movlw	0
 12943  000FD0  6E17               	movwf	?_Read_b_eep+1,c
 12944  000FD2  0E76               	movlw	118
 12945  000FD4  6E16               	movwf	?_Read_b_eep,c
 12946  000FD6  ECD8  F037         	call	_Read_b_eep	;wreg free
 12947  000FDA  0100               	movlb	0	; () banked
 12948  000FDC  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12949  000FDE  0E00               	movlw	0
 12950  000FE0  6E17               	movwf	?_Read_b_eep+1,c
 12951  000FE2  0E75               	movlw	117
 12952  000FE4  6E16               	movwf	?_Read_b_eep,c
 12953  000FE6  ECD8  F037         	call	_Read_b_eep	;wreg free
 12954  000FEA  0100               	movlb	0	; () banked
 12955  000FEC  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 12956  000FEE  0100               	movlb	0	; () banked
 12957  000FF0  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 12958  000FF2  0100               	movlb	0	; () banked
 12959  000FF4  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 12960  000FF6  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 12961  000FF8  0100               	movlb	0	; () banked
 12962  000FFA  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12963  000FFC  0100               	movlb	0	; () banked
 12964  000FFE  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 12965  001000  0101               	movlb	1	; () banked
 12966  001002  0101               	movlb	1	; () banked
 12967  001004  6F2A               	movwf	(_channel_pulse_timer+4)& (0+255),b
 12968  001006  0100               	movlb	0	; () banked
 12969  001008  0E00               	movlw	0
 12970  00100A  0100               	movlb	0	; () banked
 12971  00100C  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 12972  00100E  0101               	movlb	1	; () banked
 12973  001010  6F2B               	movwf	(_channel_pulse_timer+5)& (0+255),b
 12974                           
 12975                           ;main.c: 1518: }
 12976  001012  D010               	goto	l10696
 12977  001014                     l10690:
 12978                           
 12979                           ;main.c: 1519: else {
 12980                           ;main.c: 1520: channel_pulse_flags &= 0b1111111011;
 12981  001014  0100               	movlb	0	; () banked
 12982  001016  0EFB               	movlw	251
 12983  001018  0100               	movlb	0	; () banked
 12984  00101A  17D5               	andwf	_channel_pulse_flags& (0+255),f,b
 12985  00101C  0E03               	movlw	3
 12986  00101E  0100               	movlb	0	; () banked
 12987  001020  17D6               	andwf	(_channel_pulse_flags+1)& (0+255),f,b
 12988                           
 12989                           ; BSR set to: 0
 12990                           ;main.c: 1521: LATCbits.LATC3 = 0;
 12991  001022  968B               	bcf	3979,3,c	;volatile
 12992                           
 12993                           ; BSR set to: 0
 12994                           ;main.c: 1522: bOn = 0;
 12995  001024  0100               	movlb	0	; () banked
 12996  001026  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12997  001028  0E00               	movlw	0
 12998  00102A  0100               	movlb	0	; () banked
 12999  00102C  0100               	movlb	0	; () banked
 13000  00102E  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 13001  001030  0100               	movlb	0	; () banked
 13002  001032  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13003  001034                     l10696:
 13004                           
 13005                           ;main.c: 1523: }
 13006                           ;main.c: 1525: if ( val & 0x04 ) {
 13007  001034  0100               	movlb	0	; () banked
 13008  001036  0100               	movlb	0	; () banked
 13009  001038  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 13010  00103A  EF0D  F00F         	goto	l10976
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;main.c: 1526: channel_protection_timer[ 2 ] =
 13014                           ;main.c: 1527: Read_b_eep(0x43 + 46 + 24) * 256 +
 13015                           ;main.c: 1529: Read_b_eep(0x43 + 46 + 25);
 13016  00103E  0E00               	movlw	0
 13017  001040  6E17               	movwf	?_Read_b_eep+1,c
 13018  001042  0E8A               	movlw	138
 13019  001044  6E16               	movwf	?_Read_b_eep,c
 13020  001046  ECD8  F037         	call	_Read_b_eep	;wreg free
 13021  00104A  0100               	movlb	0	; () banked
 13022  00104C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13023  00104E  0E00               	movlw	0
 13024  001050  6E17               	movwf	?_Read_b_eep+1,c
 13025  001052  0E89               	movlw	137
 13026  001054  6E16               	movwf	?_Read_b_eep,c
 13027  001056  ECD8  F037         	call	_Read_b_eep	;wreg free
 13028  00105A  EFBA  F00D         	goto	L103
 13029  00105E                     l10700:
 13030                           
 13031                           ; BSR set to: 0
 13032                           ;main.c: 1536: (Busy_eep(), Write_b_eep(0x43 + 46 + reg,val));
 13033  00105E  EC10  F038         	call	_Busy_eep	;wreg free
 13034  001062  0E71               	movlw	113
 13035  001064  0100               	movlb	0	; () banked
 13036  001066  0100               	movlb	0	; () banked
 13037  001068  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13038  00106A  6E16               	movwf	?_Write_b_eep,c
 13039  00106C  6A17               	clrf	?_Write_b_eep+1,c
 13040  00106E  0E00               	movlw	0
 13041  001070  2217               	addwfc	?_Write_b_eep+1,f,c
 13042  001072  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 13043  001076  EC40  F036         	call	_Write_b_eep	;wreg free
 13044                           
 13045                           ;main.c: 1537: rv = Read_b_eep(0x43 + 46 + reg);
 13046  00107A  0E71               	movlw	113
 13047  00107C  0100               	movlb	0	; () banked
 13048  00107E  0100               	movlb	0	; () banked
 13049  001080  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13050  001082  6E16               	movwf	?_Read_b_eep,c
 13051  001084  6A17               	clrf	?_Read_b_eep+1,c
 13052  001086  0E00               	movlw	0
 13053  001088  2217               	addwfc	?_Read_b_eep+1,f,c
 13054  00108A  ECD8  F037         	call	_Read_b_eep	;wreg free
 13055  00108E  0100               	movlb	0	; () banked
 13056  001090  0100               	movlb	0	; () banked
 13057  001092  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 13058                           
 13059                           ; BSR set to: 0
 13060                           ;main.c: 1539: if ( val & 0x01 ) {
 13061  001094  0100               	movlb	0	; () banked
 13062  001096  0100               	movlb	0	; () banked
 13063  001098  A1A3               	btfss	vscp_writeAppReg@val& (0+255),0,b
 13064  00109A  D02F               	goto	l10716
 13065                           
 13066                           ; BSR set to: 0
 13067                           ;main.c: 1541: LATCbits.LATC4 = 0;
 13068  00109C  988B               	bcf	3979,4,c	;volatile
 13069                           
 13070                           ; BSR set to: 0
 13071                           ;main.c: 1542: bOn = 0;
 13072  00109E  0100               	movlb	0	; () banked
 13073  0010A0  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13074  0010A2  0E00               	movlw	0
 13075  0010A4  0100               	movlb	0	; () banked
 13076  0010A6  0100               	movlb	0	; () banked
 13077  0010A8  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 13078  0010AA  0100               	movlb	0	; () banked
 13079  0010AC  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13080                           
 13081                           ; BSR set to: 0
 13082                           ;main.c: 1544: channel_pulse_flags |= 0b0000001000;
 13083  0010AE  0100               	movlb	0	; () banked
 13084  0010B0  0100               	movlb	0	; () banked
 13085  0010B2  87D5               	bsf	_channel_pulse_flags& (0+255),3,b
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;main.c: 1545: channel_pulse_timer[ 3 ] =
 13089                           ;main.c: 1546: Read_b_eep(0x43 + 46 + 6) * 256 +
 13090                           ;main.c: 1548: Read_b_eep(0x43 + 46 + 7);
 13091  0010B4  0E00               	movlw	0
 13092  0010B6  6E17               	movwf	?_Read_b_eep+1,c
 13093  0010B8  0E78               	movlw	120
 13094  0010BA  6E16               	movwf	?_Read_b_eep,c
 13095  0010BC  ECD8  F037         	call	_Read_b_eep	;wreg free
 13096  0010C0  0100               	movlb	0	; () banked
 13097  0010C2  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13098  0010C4  0E00               	movlw	0
 13099  0010C6  6E17               	movwf	?_Read_b_eep+1,c
 13100  0010C8  0E77               	movlw	119
 13101  0010CA  6E16               	movwf	?_Read_b_eep,c
 13102  0010CC  ECD8  F037         	call	_Read_b_eep	;wreg free
 13103  0010D0  0100               	movlb	0	; () banked
 13104  0010D2  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13105  0010D4  0100               	movlb	0	; () banked
 13106  0010D6  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13107  0010D8  0100               	movlb	0	; () banked
 13108  0010DA  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13109  0010DC  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13110  0010DE  0100               	movlb	0	; () banked
 13111  0010E0  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13112  0010E2  0100               	movlb	0	; () banked
 13113  0010E4  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13114  0010E6  0101               	movlb	1	; () banked
 13115  0010E8  0101               	movlb	1	; () banked
 13116  0010EA  6F2C               	movwf	(_channel_pulse_timer+6)& (0+255),b
 13117  0010EC  0100               	movlb	0	; () banked
 13118  0010EE  0E00               	movlw	0
 13119  0010F0  0100               	movlb	0	; () banked
 13120  0010F2  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13121  0010F4  0101               	movlb	1	; () banked
 13122  0010F6  6F2D               	movwf	(_channel_pulse_timer+7)& (0+255),b
 13123                           
 13124                           ;main.c: 1550: }
 13125  0010F8  D010               	goto	l10722
 13126  0010FA                     l10716:
 13127                           
 13128                           ;main.c: 1551: else {
 13129                           ;main.c: 1552: channel_pulse_flags &= 0b1111110111;
 13130  0010FA  0100               	movlb	0	; () banked
 13131  0010FC  0EF7               	movlw	247
 13132  0010FE  0100               	movlb	0	; () banked
 13133  001100  17D5               	andwf	_channel_pulse_flags& (0+255),f,b
 13134  001102  0E03               	movlw	3
 13135  001104  0100               	movlb	0	; () banked
 13136  001106  17D6               	andwf	(_channel_pulse_flags+1)& (0+255),f,b
 13137                           
 13138                           ; BSR set to: 0
 13139                           ;main.c: 1553: LATCbits.LATC4 = 0;
 13140  001108  988B               	bcf	3979,4,c	;volatile
 13141                           
 13142                           ; BSR set to: 0
 13143                           ;main.c: 1554: bOn = 0;
 13144  00110A  0100               	movlb	0	; () banked
 13145  00110C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13146  00110E  0E00               	movlw	0
 13147  001110  0100               	movlb	0	; () banked
 13148  001112  0100               	movlb	0	; () banked
 13149  001114  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 13150  001116  0100               	movlb	0	; () banked
 13151  001118  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13152  00111A                     l10722:
 13153                           
 13154                           ;main.c: 1555: }
 13155                           ;main.c: 1557: if ( val & 0x04 ) {
 13156  00111A  0100               	movlb	0	; () banked
 13157  00111C  0100               	movlb	0	; () banked
 13158  00111E  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 13159  001120  EF0D  F00F         	goto	l10976
 13160                           
 13161                           ; BSR set to: 0
 13162                           ;main.c: 1558: channel_protection_timer[ 3 ] =
 13163                           ;main.c: 1559: Read_b_eep(0x43 + 46 + 26) * 256 +
 13164                           ;main.c: 1561: Read_b_eep(0x43 + 46 + 27);
 13165  001124  0E00               	movlw	0
 13166  001126  6E17               	movwf	?_Read_b_eep+1,c
 13167  001128  0E8C               	movlw	140
 13168  00112A  6E16               	movwf	?_Read_b_eep,c
 13169  00112C  ECD8  F037         	call	_Read_b_eep	;wreg free
 13170  001130  0100               	movlb	0	; () banked
 13171  001132  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13172  001134  0E00               	movlw	0
 13173  001136  6E17               	movwf	?_Read_b_eep+1,c
 13174  001138  0E8B               	movlw	139
 13175  00113A  6E16               	movwf	?_Read_b_eep,c
 13176  00113C  ECD8  F037         	call	_Read_b_eep	;wreg free
 13177  001140  EFDD  F00D         	goto	L104
 13178  001144                     l10726:
 13179                           
 13180                           ; BSR set to: 0
 13181                           ;main.c: 1568: (Busy_eep(), Write_b_eep(0x43 + 46 + reg,val));
 13182  001144  EC10  F038         	call	_Busy_eep	;wreg free
 13183  001148  0E71               	movlw	113
 13184  00114A  0100               	movlb	0	; () banked
 13185  00114C  0100               	movlb	0	; () banked
 13186  00114E  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13187  001150  6E16               	movwf	?_Write_b_eep,c
 13188  001152  6A17               	clrf	?_Write_b_eep+1,c
 13189  001154  0E00               	movlw	0
 13190  001156  2217               	addwfc	?_Write_b_eep+1,f,c
 13191  001158  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 13192  00115C  EC40  F036         	call	_Write_b_eep	;wreg free
 13193                           
 13194                           ;main.c: 1569: rv = Read_b_eep(0x43 + 46 + reg);
 13195  001160  0E71               	movlw	113
 13196  001162  0100               	movlb	0	; () banked
 13197  001164  0100               	movlb	0	; () banked
 13198  001166  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13199  001168  6E16               	movwf	?_Read_b_eep,c
 13200  00116A  6A17               	clrf	?_Read_b_eep+1,c
 13201  00116C  0E00               	movlw	0
 13202  00116E  2217               	addwfc	?_Read_b_eep+1,f,c
 13203  001170  ECD8  F037         	call	_Read_b_eep	;wreg free
 13204  001174  0100               	movlb	0	; () banked
 13205  001176  0100               	movlb	0	; () banked
 13206  001178  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 13207                           
 13208                           ; BSR set to: 0
 13209                           ;main.c: 1571: if ( val & 0x04 ) {
 13210  00117A  0100               	movlb	0	; () banked
 13211  00117C  0100               	movlb	0	; () banked
 13212  00117E  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 13213  001180  D02F               	goto	l10742
 13214                           
 13215                           ; BSR set to: 0
 13216                           ;main.c: 1573: LATCbits.LATC5 = 0;
 13217  001182  9A8B               	bcf	3979,5,c	;volatile
 13218                           
 13219                           ; BSR set to: 0
 13220                           ;main.c: 1574: bOn = 0;
 13221  001184  0100               	movlb	0	; () banked
 13222  001186  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13223  001188  0E00               	movlw	0
 13224  00118A  0100               	movlb	0	; () banked
 13225  00118C  0100               	movlb	0	; () banked
 13226  00118E  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 13227  001190  0100               	movlb	0	; () banked
 13228  001192  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13229                           
 13230                           ; BSR set to: 0
 13231                           ;main.c: 1576: channel_pulse_flags |= 0b0000010000;
 13232  001194  0100               	movlb	0	; () banked
 13233  001196  0100               	movlb	0	; () banked
 13234  001198  89D5               	bsf	_channel_pulse_flags& (0+255),4,b
 13235                           
 13236                           ; BSR set to: 0
 13237                           ;main.c: 1577: channel_pulse_timer[ 4 ] =
 13238                           ;main.c: 1578: Read_b_eep(0x43 + 46 + 8) * 256 +
 13239                           ;main.c: 1580: Read_b_eep(0x43 + 46 + 9);
 13240  00119A  0E00               	movlw	0
 13241  00119C  6E17               	movwf	?_Read_b_eep+1,c
 13242  00119E  0E7A               	movlw	122
 13243  0011A0  6E16               	movwf	?_Read_b_eep,c
 13244  0011A2  ECD8  F037         	call	_Read_b_eep	;wreg free
 13245  0011A6  0100               	movlb	0	; () banked
 13246  0011A8  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13247  0011AA  0E00               	movlw	0
 13248  0011AC  6E17               	movwf	?_Read_b_eep+1,c
 13249  0011AE  0E79               	movlw	121
 13250  0011B0  6E16               	movwf	?_Read_b_eep,c
 13251  0011B2  ECD8  F037         	call	_Read_b_eep	;wreg free
 13252  0011B6  0100               	movlb	0	; () banked
 13253  0011B8  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13254  0011BA  0100               	movlb	0	; () banked
 13255  0011BC  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13256  0011BE  0100               	movlb	0	; () banked
 13257  0011C0  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13258  0011C2  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13259  0011C4  0100               	movlb	0	; () banked
 13260  0011C6  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13261  0011C8  0100               	movlb	0	; () banked
 13262  0011CA  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13263  0011CC  0101               	movlb	1	; () banked
 13264  0011CE  0101               	movlb	1	; () banked
 13265  0011D0  6F2E               	movwf	(_channel_pulse_timer+8)& (0+255),b
 13266  0011D2  0100               	movlb	0	; () banked
 13267  0011D4  0E00               	movlw	0
 13268  0011D6  0100               	movlb	0	; () banked
 13269  0011D8  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13270  0011DA  0101               	movlb	1	; () banked
 13271  0011DC  6F2F               	movwf	(_channel_pulse_timer+9)& (0+255),b
 13272                           
 13273                           ;main.c: 1582: }
 13274  0011DE  D010               	goto	l10748
 13275  0011E0                     l10742:
 13276                           
 13277                           ;main.c: 1583: else {
 13278                           ;main.c: 1584: channel_pulse_flags &= 0b1111101111;
 13279  0011E0  0100               	movlb	0	; () banked
 13280  0011E2  0EEF               	movlw	239
 13281  0011E4  0100               	movlb	0	; () banked
 13282  0011E6  17D5               	andwf	_channel_pulse_flags& (0+255),f,b
 13283  0011E8  0E03               	movlw	3
 13284  0011EA  0100               	movlb	0	; () banked
 13285  0011EC  17D6               	andwf	(_channel_pulse_flags+1)& (0+255),f,b
 13286                           
 13287                           ; BSR set to: 0
 13288                           ;main.c: 1585: LATCbits.LATC5 = 0;
 13289  0011EE  9A8B               	bcf	3979,5,c	;volatile
 13290                           
 13291                           ; BSR set to: 0
 13292                           ;main.c: 1586: bOn = 0;
 13293  0011F0  0100               	movlb	0	; () banked
 13294  0011F2  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13295  0011F4  0E00               	movlw	0
 13296  0011F6  0100               	movlb	0	; () banked
 13297  0011F8  0100               	movlb	0	; () banked
 13298  0011FA  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 13299  0011FC  0100               	movlb	0	; () banked
 13300  0011FE  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13301  001200                     l10748:
 13302                           
 13303                           ;main.c: 1587: }
 13304                           ;main.c: 1589: if ( val & 0x04 ) {
 13305  001200  0100               	movlb	0	; () banked
 13306  001202  0100               	movlb	0	; () banked
 13307  001204  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 13308  001206  EF0D  F00F         	goto	l10976
 13309                           
 13310                           ; BSR set to: 0
 13311                           ;main.c: 1590: channel_protection_timer[ 4 ] =
 13312                           ;main.c: 1591: Read_b_eep(0x43 + 46 + 28) * 256 +
 13313                           ;main.c: 1593: Read_b_eep(0x43 + 46 + 29);
 13314  00120A  0E00               	movlw	0
 13315  00120C  6E17               	movwf	?_Read_b_eep+1,c
 13316  00120E  0E8E               	movlw	142
 13317  001210  6E16               	movwf	?_Read_b_eep,c
 13318  001212  ECD8  F037         	call	_Read_b_eep	;wreg free
 13319  001216  0100               	movlb	0	; () banked
 13320  001218  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13321  00121A  0E00               	movlw	0
 13322  00121C  6E17               	movwf	?_Read_b_eep+1,c
 13323  00121E  0E8D               	movlw	141
 13324  001220  6E16               	movwf	?_Read_b_eep,c
 13325  001222  ECD8  F037         	call	_Read_b_eep	;wreg free
 13326  001226  EF00  F00E         	goto	L105
 13327  00122A                     l10752:
 13328                           
 13329                           ; BSR set to: 0
 13330                           ;main.c: 1600: (Busy_eep(), Write_b_eep(0x43 + 46 + reg,val));
 13331  00122A  EC10  F038         	call	_Busy_eep	;wreg free
 13332  00122E  0E71               	movlw	113
 13333  001230  0100               	movlb	0	; () banked
 13334  001232  0100               	movlb	0	; () banked
 13335  001234  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13336  001236  6E16               	movwf	?_Write_b_eep,c
 13337  001238  6A17               	clrf	?_Write_b_eep+1,c
 13338  00123A  0E00               	movlw	0
 13339  00123C  2217               	addwfc	?_Write_b_eep+1,f,c
 13340  00123E  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 13341  001242  EC40  F036         	call	_Write_b_eep	;wreg free
 13342                           
 13343                           ;main.c: 1601: rv = Read_b_eep(0x43 + 46 + reg);
 13344  001246  0E71               	movlw	113
 13345  001248  0100               	movlb	0	; () banked
 13346  00124A  0100               	movlb	0	; () banked
 13347  00124C  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13348  00124E  6E16               	movwf	?_Read_b_eep,c
 13349  001250  6A17               	clrf	?_Read_b_eep+1,c
 13350  001252  0E00               	movlw	0
 13351  001254  2217               	addwfc	?_Read_b_eep+1,f,c
 13352  001256  ECD8  F037         	call	_Read_b_eep	;wreg free
 13353  00125A  0100               	movlb	0	; () banked
 13354  00125C  0100               	movlb	0	; () banked
 13355  00125E  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 13356                           
 13357                           ; BSR set to: 0
 13358                           ;main.c: 1603: if ( val & 0x01 ) {
 13359  001260  0100               	movlb	0	; () banked
 13360  001262  0100               	movlb	0	; () banked
 13361  001264  A1A3               	btfss	vscp_writeAppReg@val& (0+255),0,b
 13362  001266  D02F               	goto	l10768
 13363                           
 13364                           ; BSR set to: 0
 13365                           ;main.c: 1605: LATCbits.LATC6 = 0;
 13366  001268  9C8B               	bcf	3979,6,c	;volatile
 13367                           
 13368                           ; BSR set to: 0
 13369                           ;main.c: 1606: bOn = 0;
 13370  00126A  0100               	movlb	0	; () banked
 13371  00126C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13372  00126E  0E00               	movlw	0
 13373  001270  0100               	movlb	0	; () banked
 13374  001272  0100               	movlb	0	; () banked
 13375  001274  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 13376  001276  0100               	movlb	0	; () banked
 13377  001278  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13378                           
 13379                           ; BSR set to: 0
 13380                           ;main.c: 1608: channel_pulse_flags |= 0b0000100000;
 13381  00127A  0100               	movlb	0	; () banked
 13382  00127C  0100               	movlb	0	; () banked
 13383  00127E  8BD5               	bsf	_channel_pulse_flags& (0+255),5,b
 13384                           
 13385                           ; BSR set to: 0
 13386                           ;main.c: 1609: channel_pulse_timer[ 5 ] =
 13387                           ;main.c: 1610: Read_b_eep(0x43 + 46 + 10) * 256 +
 13388                           ;main.c: 1612: Read_b_eep(0x43 + 46 + 11);
 13389  001280  0E00               	movlw	0
 13390  001282  6E17               	movwf	?_Read_b_eep+1,c
 13391  001284  0E7C               	movlw	124
 13392  001286  6E16               	movwf	?_Read_b_eep,c
 13393  001288  ECD8  F037         	call	_Read_b_eep	;wreg free
 13394  00128C  0100               	movlb	0	; () banked
 13395  00128E  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13396  001290  0E00               	movlw	0
 13397  001292  6E17               	movwf	?_Read_b_eep+1,c
 13398  001294  0E7B               	movlw	123
 13399  001296  6E16               	movwf	?_Read_b_eep,c
 13400  001298  ECD8  F037         	call	_Read_b_eep	;wreg free
 13401  00129C  0100               	movlb	0	; () banked
 13402  00129E  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13403  0012A0  0100               	movlb	0	; () banked
 13404  0012A2  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13405  0012A4  0100               	movlb	0	; () banked
 13406  0012A6  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13407  0012A8  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13408  0012AA  0100               	movlb	0	; () banked
 13409  0012AC  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13410  0012AE  0100               	movlb	0	; () banked
 13411  0012B0  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13412  0012B2  0101               	movlb	1	; () banked
 13413  0012B4  0101               	movlb	1	; () banked
 13414  0012B6  6F30               	movwf	(_channel_pulse_timer+10)& (0+255),b
 13415  0012B8  0100               	movlb	0	; () banked
 13416  0012BA  0E00               	movlw	0
 13417  0012BC  0100               	movlb	0	; () banked
 13418  0012BE  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13419  0012C0  0101               	movlb	1	; () banked
 13420  0012C2  6F31               	movwf	(_channel_pulse_timer+11)& (0+255),b
 13421                           
 13422                           ;main.c: 1614: }
 13423  0012C4  D010               	goto	l10774
 13424  0012C6                     l10768:
 13425                           
 13426                           ;main.c: 1615: else {
 13427                           ;main.c: 1616: channel_pulse_flags &= 0b1111011111;
 13428  0012C6  0100               	movlb	0	; () banked
 13429  0012C8  0EDF               	movlw	223
 13430  0012CA  0100               	movlb	0	; () banked
 13431  0012CC  17D5               	andwf	_channel_pulse_flags& (0+255),f,b
 13432  0012CE  0E03               	movlw	3
 13433  0012D0  0100               	movlb	0	; () banked
 13434  0012D2  17D6               	andwf	(_channel_pulse_flags+1)& (0+255),f,b
 13435                           
 13436                           ; BSR set to: 0
 13437                           ;main.c: 1617: LATCbits.LATC6 = 0;
 13438  0012D4  9C8B               	bcf	3979,6,c	;volatile
 13439                           
 13440                           ; BSR set to: 0
 13441                           ;main.c: 1618: bOn = 0;
 13442  0012D6  0100               	movlb	0	; () banked
 13443  0012D8  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13444  0012DA  0E00               	movlw	0
 13445  0012DC  0100               	movlb	0	; () banked
 13446  0012DE  0100               	movlb	0	; () banked
 13447  0012E0  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 13448  0012E2  0100               	movlb	0	; () banked
 13449  0012E4  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13450  0012E6                     l10774:
 13451                           
 13452                           ;main.c: 1619: }
 13453                           ;main.c: 1621: if ( val & 0x04 ) {
 13454  0012E6  0100               	movlb	0	; () banked
 13455  0012E8  0100               	movlb	0	; () banked
 13456  0012EA  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 13457  0012EC  EF0D  F00F         	goto	l10976
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;main.c: 1622: channel_protection_timer[ 5 ] =
 13461                           ;main.c: 1623: Read_b_eep(0x43 + 46 + 30) * 256 +
 13462                           ;main.c: 1625: Read_b_eep(0x43 + 46 + 31);
 13463  0012F0  0E00               	movlw	0
 13464  0012F2  6E17               	movwf	?_Read_b_eep+1,c
 13465  0012F4  0E90               	movlw	144
 13466  0012F6  6E16               	movwf	?_Read_b_eep,c
 13467  0012F8  ECD8  F037         	call	_Read_b_eep	;wreg free
 13468  0012FC  0100               	movlb	0	; () banked
 13469  0012FE  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13470  001300  0E00               	movlw	0
 13471  001302  6E17               	movwf	?_Read_b_eep+1,c
 13472  001304  0E8F               	movlw	143
 13473  001306  6E16               	movwf	?_Read_b_eep,c
 13474  001308  ECD8  F037         	call	_Read_b_eep	;wreg free
 13475  00130C  EF23  F00E         	goto	L106
 13476  001310                     l10778:
 13477                           
 13478                           ; BSR set to: 0
 13479                           ;main.c: 1632: (Busy_eep(), Write_b_eep(0x43 + 46 + reg,val));
 13480  001310  EC10  F038         	call	_Busy_eep	;wreg free
 13481  001314  0E71               	movlw	113
 13482  001316  0100               	movlb	0	; () banked
 13483  001318  0100               	movlb	0	; () banked
 13484  00131A  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13485  00131C  6E16               	movwf	?_Write_b_eep,c
 13486  00131E  6A17               	clrf	?_Write_b_eep+1,c
 13487  001320  0E00               	movlw	0
 13488  001322  2217               	addwfc	?_Write_b_eep+1,f,c
 13489  001324  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 13490  001328  EC40  F036         	call	_Write_b_eep	;wreg free
 13491                           
 13492                           ;main.c: 1633: rv = Read_b_eep(0x43 + 46 + reg);
 13493  00132C  0E71               	movlw	113
 13494  00132E  0100               	movlb	0	; () banked
 13495  001330  0100               	movlb	0	; () banked
 13496  001332  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13497  001334  6E16               	movwf	?_Read_b_eep,c
 13498  001336  6A17               	clrf	?_Read_b_eep+1,c
 13499  001338  0E00               	movlw	0
 13500  00133A  2217               	addwfc	?_Read_b_eep+1,f,c
 13501  00133C  ECD8  F037         	call	_Read_b_eep	;wreg free
 13502  001340  0100               	movlb	0	; () banked
 13503  001342  0100               	movlb	0	; () banked
 13504  001344  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 13505                           
 13506                           ; BSR set to: 0
 13507                           ;main.c: 1635: if ( val & 0x01 ) {
 13508  001346  0100               	movlb	0	; () banked
 13509  001348  0100               	movlb	0	; () banked
 13510  00134A  A1A3               	btfss	vscp_writeAppReg@val& (0+255),0,b
 13511  00134C  D02F               	goto	l10794
 13512                           
 13513                           ; BSR set to: 0
 13514                           ;main.c: 1637: LATCbits.LATC7 = 0;
 13515  00134E  9E8B               	bcf	3979,7,c	;volatile
 13516                           
 13517                           ; BSR set to: 0
 13518                           ;main.c: 1638: bOn = 0;
 13519  001350  0100               	movlb	0	; () banked
 13520  001352  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13521  001354  0E00               	movlw	0
 13522  001356  0100               	movlb	0	; () banked
 13523  001358  0100               	movlb	0	; () banked
 13524  00135A  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 13525  00135C  0100               	movlb	0	; () banked
 13526  00135E  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13527                           
 13528                           ; BSR set to: 0
 13529                           ;main.c: 1640: channel_pulse_flags |= 0b0001000000;
 13530  001360  0100               	movlb	0	; () banked
 13531  001362  0100               	movlb	0	; () banked
 13532  001364  8DD5               	bsf	_channel_pulse_flags& (0+255),6,b
 13533                           
 13534                           ; BSR set to: 0
 13535                           ;main.c: 1641: channel_pulse_timer[ 6 ] =
 13536                           ;main.c: 1642: Read_b_eep(0x43 + 46 + 12) * 256 +
 13537                           ;main.c: 1644: Read_b_eep(0x43 + 46 + 13);
 13538  001366  0E00               	movlw	0
 13539  001368  6E17               	movwf	?_Read_b_eep+1,c
 13540  00136A  0E7E               	movlw	126
 13541  00136C  6E16               	movwf	?_Read_b_eep,c
 13542  00136E  ECD8  F037         	call	_Read_b_eep	;wreg free
 13543  001372  0100               	movlb	0	; () banked
 13544  001374  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13545  001376  0E00               	movlw	0
 13546  001378  6E17               	movwf	?_Read_b_eep+1,c
 13547  00137A  0E7D               	movlw	125
 13548  00137C  6E16               	movwf	?_Read_b_eep,c
 13549  00137E  ECD8  F037         	call	_Read_b_eep	;wreg free
 13550  001382  0100               	movlb	0	; () banked
 13551  001384  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13552  001386  0100               	movlb	0	; () banked
 13553  001388  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13554  00138A  0100               	movlb	0	; () banked
 13555  00138C  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13556  00138E  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13557  001390  0100               	movlb	0	; () banked
 13558  001392  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13559  001394  0100               	movlb	0	; () banked
 13560  001396  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13561  001398  0101               	movlb	1	; () banked
 13562  00139A  0101               	movlb	1	; () banked
 13563  00139C  6F32               	movwf	(_channel_pulse_timer+12)& (0+255),b
 13564  00139E  0100               	movlb	0	; () banked
 13565  0013A0  0E00               	movlw	0
 13566  0013A2  0100               	movlb	0	; () banked
 13567  0013A4  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13568  0013A6  0101               	movlb	1	; () banked
 13569  0013A8  6F33               	movwf	(_channel_pulse_timer+13)& (0+255),b
 13570                           
 13571                           ;main.c: 1646: }
 13572  0013AA  D010               	goto	l10800
 13573  0013AC                     l10794:
 13574                           
 13575                           ;main.c: 1647: else {
 13576                           ;main.c: 1648: channel_pulse_flags &= 0b1110111111;
 13577  0013AC  0100               	movlb	0	; () banked
 13578  0013AE  0EBF               	movlw	191
 13579  0013B0  0100               	movlb	0	; () banked
 13580  0013B2  17D5               	andwf	_channel_pulse_flags& (0+255),f,b
 13581  0013B4  0E03               	movlw	3
 13582  0013B6  0100               	movlb	0	; () banked
 13583  0013B8  17D6               	andwf	(_channel_pulse_flags+1)& (0+255),f,b
 13584                           
 13585                           ; BSR set to: 0
 13586                           ;main.c: 1649: LATCbits.LATC7 = 0;
 13587  0013BA  9E8B               	bcf	3979,7,c	;volatile
 13588                           
 13589                           ; BSR set to: 0
 13590                           ;main.c: 1650: bOn = 0;
 13591  0013BC  0100               	movlb	0	; () banked
 13592  0013BE  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13593  0013C0  0E00               	movlw	0
 13594  0013C2  0100               	movlb	0	; () banked
 13595  0013C4  0100               	movlb	0	; () banked
 13596  0013C6  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 13597  0013C8  0100               	movlb	0	; () banked
 13598  0013CA  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13599  0013CC                     l10800:
 13600                           
 13601                           ;main.c: 1651: }
 13602                           ;main.c: 1653: if ( val & 0x04 ) {
 13603  0013CC  0100               	movlb	0	; () banked
 13604  0013CE  0100               	movlb	0	; () banked
 13605  0013D0  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 13606  0013D2  EF0D  F00F         	goto	l10976
 13607                           
 13608                           ; BSR set to: 0
 13609                           ;main.c: 1654: channel_protection_timer[ 6 ] =
 13610                           ;main.c: 1655: Read_b_eep(0x43 + 46 + 32) * 256 +
 13611                           ;main.c: 1657: Read_b_eep(0x43 + 46 + 33);
 13612  0013D6  0E00               	movlw	0
 13613  0013D8  6E17               	movwf	?_Read_b_eep+1,c
 13614  0013DA  0E92               	movlw	146
 13615  0013DC  6E16               	movwf	?_Read_b_eep,c
 13616  0013DE  ECD8  F037         	call	_Read_b_eep	;wreg free
 13617  0013E2  0100               	movlb	0	; () banked
 13618  0013E4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13619  0013E6  0E00               	movlw	0
 13620  0013E8  6E17               	movwf	?_Read_b_eep+1,c
 13621  0013EA  0E91               	movlw	145
 13622  0013EC  6E16               	movwf	?_Read_b_eep,c
 13623  0013EE  ECD8  F037         	call	_Read_b_eep	;wreg free
 13624  0013F2  EF46  F00E         	goto	L107
 13625  0013F6                     l10804:
 13626                           
 13627                           ; BSR set to: 0
 13628                           ;main.c: 1664: (Busy_eep(), Write_b_eep(0x43 + 46 + reg,val));
 13629  0013F6  EC10  F038         	call	_Busy_eep	;wreg free
 13630  0013FA  0E71               	movlw	113
 13631  0013FC  0100               	movlb	0	; () banked
 13632  0013FE  0100               	movlb	0	; () banked
 13633  001400  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13634  001402  6E16               	movwf	?_Write_b_eep,c
 13635  001404  6A17               	clrf	?_Write_b_eep+1,c
 13636  001406  0E00               	movlw	0
 13637  001408  2217               	addwfc	?_Write_b_eep+1,f,c
 13638  00140A  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 13639  00140E  EC40  F036         	call	_Write_b_eep	;wreg free
 13640                           
 13641                           ;main.c: 1665: rv = Read_b_eep(0x43 + 46 + reg);
 13642  001412  0E71               	movlw	113
 13643  001414  0100               	movlb	0	; () banked
 13644  001416  0100               	movlb	0	; () banked
 13645  001418  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13646  00141A  6E16               	movwf	?_Read_b_eep,c
 13647  00141C  6A17               	clrf	?_Read_b_eep+1,c
 13648  00141E  0E00               	movlw	0
 13649  001420  2217               	addwfc	?_Read_b_eep+1,f,c
 13650  001422  ECD8  F037         	call	_Read_b_eep	;wreg free
 13651  001426  0100               	movlb	0	; () banked
 13652  001428  0100               	movlb	0	; () banked
 13653  00142A  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 13654                           
 13655                           ; BSR set to: 0
 13656                           ;main.c: 1667: if ( val & 0x01 ) {
 13657  00142C  0100               	movlb	0	; () banked
 13658  00142E  0100               	movlb	0	; () banked
 13659  001430  A1A3               	btfss	vscp_writeAppReg@val& (0+255),0,b
 13660  001432  D02F               	goto	l10820
 13661                           
 13662                           ; BSR set to: 0
 13663                           ;main.c: 1669: LATAbits.LATA2 = 0;
 13664  001434  9489               	bcf	3977,2,c	;volatile
 13665                           
 13666                           ; BSR set to: 0
 13667                           ;main.c: 1670: bOn = 0;
 13668  001436  0100               	movlb	0	; () banked
 13669  001438  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13670  00143A  0E00               	movlw	0
 13671  00143C  0100               	movlb	0	; () banked
 13672  00143E  0100               	movlb	0	; () banked
 13673  001440  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 13674  001442  0100               	movlb	0	; () banked
 13675  001444  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13676                           
 13677                           ; BSR set to: 0
 13678                           ;main.c: 1672: channel_pulse_flags |= 0b0010000000;
 13679  001446  0100               	movlb	0	; () banked
 13680  001448  0100               	movlb	0	; () banked
 13681  00144A  8FD5               	bsf	_channel_pulse_flags& (0+255),7,b
 13682                           
 13683                           ; BSR set to: 0
 13684                           ;main.c: 1673: channel_pulse_timer[ 7 ] =
 13685                           ;main.c: 1674: Read_b_eep(0x43 + 46 + 14) * 256 +
 13686                           ;main.c: 1676: Read_b_eep(0x43 + 46 + 15);
 13687  00144C  0E00               	movlw	0
 13688  00144E  6E17               	movwf	?_Read_b_eep+1,c
 13689  001450  0E80               	movlw	128
 13690  001452  6E16               	movwf	?_Read_b_eep,c
 13691  001454  ECD8  F037         	call	_Read_b_eep	;wreg free
 13692  001458  0100               	movlb	0	; () banked
 13693  00145A  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13694  00145C  0E00               	movlw	0
 13695  00145E  6E17               	movwf	?_Read_b_eep+1,c
 13696  001460  0E7F               	movlw	127
 13697  001462  6E16               	movwf	?_Read_b_eep,c
 13698  001464  ECD8  F037         	call	_Read_b_eep	;wreg free
 13699  001468  0100               	movlb	0	; () banked
 13700  00146A  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13701  00146C  0100               	movlb	0	; () banked
 13702  00146E  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13703  001470  0100               	movlb	0	; () banked
 13704  001472  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13705  001474  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13706  001476  0100               	movlb	0	; () banked
 13707  001478  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13708  00147A  0100               	movlb	0	; () banked
 13709  00147C  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13710  00147E  0101               	movlb	1	; () banked
 13711  001480  0101               	movlb	1	; () banked
 13712  001482  6F34               	movwf	(_channel_pulse_timer+14)& (0+255),b
 13713  001484  0100               	movlb	0	; () banked
 13714  001486  0E00               	movlw	0
 13715  001488  0100               	movlb	0	; () banked
 13716  00148A  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13717  00148C  0101               	movlb	1	; () banked
 13718  00148E  6F35               	movwf	(_channel_pulse_timer+15)& (0+255),b
 13719                           
 13720                           ;main.c: 1678: }
 13721  001490  D010               	goto	l10826
 13722  001492                     l10820:
 13723                           
 13724                           ;main.c: 1679: else {
 13725                           ;main.c: 1680: channel_pulse_flags &= 0b1101111111;
 13726  001492  0100               	movlb	0	; () banked
 13727  001494  0E7F               	movlw	127
 13728  001496  0100               	movlb	0	; () banked
 13729  001498  17D5               	andwf	_channel_pulse_flags& (0+255),f,b
 13730  00149A  0E03               	movlw	3
 13731  00149C  0100               	movlb	0	; () banked
 13732  00149E  17D6               	andwf	(_channel_pulse_flags+1)& (0+255),f,b
 13733                           
 13734                           ; BSR set to: 0
 13735                           ;main.c: 1681: LATAbits.LATA2 = 0;
 13736  0014A0  9489               	bcf	3977,2,c	;volatile
 13737                           
 13738                           ; BSR set to: 0
 13739                           ;main.c: 1682: bOn = 0;
 13740  0014A2  0100               	movlb	0	; () banked
 13741  0014A4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13742  0014A6  0E00               	movlw	0
 13743  0014A8  0100               	movlb	0	; () banked
 13744  0014AA  0100               	movlb	0	; () banked
 13745  0014AC  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 13746  0014AE  0100               	movlb	0	; () banked
 13747  0014B0  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13748  0014B2                     l10826:
 13749                           
 13750                           ;main.c: 1683: }
 13751                           ;main.c: 1685: if ( val & 0x04 ) {
 13752  0014B2  0100               	movlb	0	; () banked
 13753  0014B4  0100               	movlb	0	; () banked
 13754  0014B6  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 13755  0014B8  EF0D  F00F         	goto	l10976
 13756                           
 13757                           ; BSR set to: 0
 13758                           ;main.c: 1686: channel_protection_timer[ 7 ] =
 13759                           ;main.c: 1687: Read_b_eep(0x43 + 46 + 34) * 256 +
 13760                           ;main.c: 1689: Read_b_eep(0x43 + 46 + 35);
 13761  0014BC  0E00               	movlw	0
 13762  0014BE  6E17               	movwf	?_Read_b_eep+1,c
 13763  0014C0  0E94               	movlw	148
 13764  0014C2  6E16               	movwf	?_Read_b_eep,c
 13765  0014C4  ECD8  F037         	call	_Read_b_eep	;wreg free
 13766  0014C8  0100               	movlb	0	; () banked
 13767  0014CA  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13768  0014CC  0E00               	movlw	0
 13769  0014CE  6E17               	movwf	?_Read_b_eep+1,c
 13770  0014D0  0E93               	movlw	147
 13771  0014D2  6E16               	movwf	?_Read_b_eep,c
 13772  0014D4  ECD8  F037         	call	_Read_b_eep	;wreg free
 13773  0014D8  D3FC               	goto	L108
 13774  0014DA                     l10830:
 13775                           
 13776                           ; BSR set to: 0
 13777                           ;main.c: 1696: (Busy_eep(), Write_b_eep(0x43 + 46 + reg,val));
 13778  0014DA  EC10  F038         	call	_Busy_eep	;wreg free
 13779  0014DE  0E71               	movlw	113
 13780  0014E0  0100               	movlb	0	; () banked
 13781  0014E2  0100               	movlb	0	; () banked
 13782  0014E4  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13783  0014E6  6E16               	movwf	?_Write_b_eep,c
 13784  0014E8  6A17               	clrf	?_Write_b_eep+1,c
 13785  0014EA  0E00               	movlw	0
 13786  0014EC  2217               	addwfc	?_Write_b_eep+1,f,c
 13787  0014EE  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 13788  0014F2  EC40  F036         	call	_Write_b_eep	;wreg free
 13789                           
 13790                           ;main.c: 1697: rv = Read_b_eep(0x43 + 46 + reg);
 13791  0014F6  0E71               	movlw	113
 13792  0014F8  0100               	movlb	0	; () banked
 13793  0014FA  0100               	movlb	0	; () banked
 13794  0014FC  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13795  0014FE  6E16               	movwf	?_Read_b_eep,c
 13796  001500  6A17               	clrf	?_Read_b_eep+1,c
 13797  001502  0E00               	movlw	0
 13798  001504  2217               	addwfc	?_Read_b_eep+1,f,c
 13799  001506  ECD8  F037         	call	_Read_b_eep	;wreg free
 13800  00150A  0100               	movlb	0	; () banked
 13801  00150C  0100               	movlb	0	; () banked
 13802  00150E  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 13803                           
 13804                           ; BSR set to: 0
 13805                           ;main.c: 1699: if ( val & 0x01 ) {
 13806  001510  0100               	movlb	0	; () banked
 13807  001512  0100               	movlb	0	; () banked
 13808  001514  A1A3               	btfss	vscp_writeAppReg@val& (0+255),0,b
 13809  001516  D02F               	goto	l10846
 13810                           
 13811                           ; BSR set to: 0
 13812                           ;main.c: 1701: LATAbits.LATA1 = 0;
 13813  001518  9289               	bcf	3977,1,c	;volatile
 13814                           
 13815                           ; BSR set to: 0
 13816                           ;main.c: 1702: bOn = 0;
 13817  00151A  0100               	movlb	0	; () banked
 13818  00151C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13819  00151E  0E00               	movlw	0
 13820  001520  0100               	movlb	0	; () banked
 13821  001522  0100               	movlb	0	; () banked
 13822  001524  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 13823  001526  0100               	movlb	0	; () banked
 13824  001528  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13825                           
 13826                           ; BSR set to: 0
 13827                           ;main.c: 1704: channel_pulse_flags |= 0b0100000000;
 13828  00152A  0100               	movlb	0	; () banked
 13829  00152C  0100               	movlb	0	; () banked
 13830  00152E  81D6               	bsf	(_channel_pulse_flags+1)& (0+255),0,b
 13831                           
 13832                           ; BSR set to: 0
 13833                           ;main.c: 1705: channel_pulse_timer[ 8 ] =
 13834                           ;main.c: 1706: Read_b_eep(0x43 + 46 + 16) * 256 +
 13835                           ;main.c: 1708: Read_b_eep(0x43 + 46 + 17);
 13836  001530  0E00               	movlw	0
 13837  001532  6E17               	movwf	?_Read_b_eep+1,c
 13838  001534  0E82               	movlw	130
 13839  001536  6E16               	movwf	?_Read_b_eep,c
 13840  001538  ECD8  F037         	call	_Read_b_eep	;wreg free
 13841  00153C  0100               	movlb	0	; () banked
 13842  00153E  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13843  001540  0E00               	movlw	0
 13844  001542  6E17               	movwf	?_Read_b_eep+1,c
 13845  001544  0E81               	movlw	129
 13846  001546  6E16               	movwf	?_Read_b_eep,c
 13847  001548  ECD8  F037         	call	_Read_b_eep	;wreg free
 13848  00154C  0100               	movlb	0	; () banked
 13849  00154E  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13850  001550  0100               	movlb	0	; () banked
 13851  001552  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13852  001554  0100               	movlb	0	; () banked
 13853  001556  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13854  001558  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13855  00155A  0100               	movlb	0	; () banked
 13856  00155C  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13857  00155E  0100               	movlb	0	; () banked
 13858  001560  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13859  001562  0101               	movlb	1	; () banked
 13860  001564  0101               	movlb	1	; () banked
 13861  001566  6F36               	movwf	(_channel_pulse_timer+16)& (0+255),b
 13862  001568  0100               	movlb	0	; () banked
 13863  00156A  0E00               	movlw	0
 13864  00156C  0100               	movlb	0	; () banked
 13865  00156E  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13866  001570  0101               	movlb	1	; () banked
 13867  001572  6F37               	movwf	(_channel_pulse_timer+17)& (0+255),b
 13868                           
 13869                           ;main.c: 1710: }
 13870  001574  D010               	goto	l10852
 13871  001576                     l10846:
 13872                           
 13873                           ;main.c: 1711: else {
 13874                           ;main.c: 1712: channel_pulse_flags &= 0b1011111111;
 13875  001576  0100               	movlb	0	; () banked
 13876  001578  0EFF               	movlw	255
 13877  00157A  0100               	movlb	0	; () banked
 13878  00157C  17D5               	andwf	_channel_pulse_flags& (0+255),f,b
 13879  00157E  0E02               	movlw	2
 13880  001580  0100               	movlb	0	; () banked
 13881  001582  17D6               	andwf	(_channel_pulse_flags+1)& (0+255),f,b
 13882                           
 13883                           ; BSR set to: 0
 13884                           ;main.c: 1713: LATAbits.LATA1 = 0;
 13885  001584  9289               	bcf	3977,1,c	;volatile
 13886                           
 13887                           ; BSR set to: 0
 13888                           ;main.c: 1714: bOn = 0;
 13889  001586  0100               	movlb	0	; () banked
 13890  001588  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13891  00158A  0E00               	movlw	0
 13892  00158C  0100               	movlb	0	; () banked
 13893  00158E  0100               	movlb	0	; () banked
 13894  001590  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 13895  001592  0100               	movlb	0	; () banked
 13896  001594  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13897  001596                     l10852:
 13898                           
 13899                           ;main.c: 1715: }
 13900                           ;main.c: 1717: if ( val & 0x04 ) {
 13901  001596  0100               	movlb	0	; () banked
 13902  001598  0100               	movlb	0	; () banked
 13903  00159A  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 13904  00159C  EF0D  F00F         	goto	l10976
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;main.c: 1718: channel_protection_timer[ 8 ] =
 13908                           ;main.c: 1719: Read_b_eep(0x43 + 46 + 36) * 256 +
 13909                           ;main.c: 1721: Read_b_eep(0x43 + 46 + 37);
 13910  0015A0  0E00               	movlw	0
 13911  0015A2  6E17               	movwf	?_Read_b_eep+1,c
 13912  0015A4  0E96               	movlw	150
 13913  0015A6  6E16               	movwf	?_Read_b_eep,c
 13914  0015A8  ECD8  F037         	call	_Read_b_eep	;wreg free
 13915  0015AC  0100               	movlb	0	; () banked
 13916  0015AE  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13917  0015B0  0E00               	movlw	0
 13918  0015B2  6E17               	movwf	?_Read_b_eep+1,c
 13919  0015B4  0E95               	movlw	149
 13920  0015B6  6E16               	movwf	?_Read_b_eep,c
 13921  0015B8  ECD8  F037         	call	_Read_b_eep	;wreg free
 13922  0015BC  D3AD               	goto	L109
 13923  0015BE                     l10856:
 13924                           
 13925                           ; BSR set to: 0
 13926                           ;main.c: 1728: (Busy_eep(), Write_b_eep(0x43 + 46 + reg,val));
 13927  0015BE  EC10  F038         	call	_Busy_eep	;wreg free
 13928  0015C2  0E71               	movlw	113
 13929  0015C4  0100               	movlb	0	; () banked
 13930  0015C6  0100               	movlb	0	; () banked
 13931  0015C8  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13932  0015CA  6E16               	movwf	?_Write_b_eep,c
 13933  0015CC  6A17               	clrf	?_Write_b_eep+1,c
 13934  0015CE  0E00               	movlw	0
 13935  0015D0  2217               	addwfc	?_Write_b_eep+1,f,c
 13936  0015D2  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 13937  0015D6  EC40  F036         	call	_Write_b_eep	;wreg free
 13938                           
 13939                           ;main.c: 1729: rv = Read_b_eep(0x43 + 46 + reg);
 13940  0015DA  0E71               	movlw	113
 13941  0015DC  0100               	movlb	0	; () banked
 13942  0015DE  0100               	movlb	0	; () banked
 13943  0015E0  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13944  0015E2  6E16               	movwf	?_Read_b_eep,c
 13945  0015E4  6A17               	clrf	?_Read_b_eep+1,c
 13946  0015E6  0E00               	movlw	0
 13947  0015E8  2217               	addwfc	?_Read_b_eep+1,f,c
 13948  0015EA  ECD8  F037         	call	_Read_b_eep	;wreg free
 13949  0015EE  0100               	movlb	0	; () banked
 13950  0015F0  0100               	movlb	0	; () banked
 13951  0015F2  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 13952                           
 13953                           ; BSR set to: 0
 13954                           ;main.c: 1731: if ( val & 0x01 ) {
 13955  0015F4  0100               	movlb	0	; () banked
 13956  0015F6  0100               	movlb	0	; () banked
 13957  0015F8  A1A3               	btfss	vscp_writeAppReg@val& (0+255),0,b
 13958  0015FA  D02F               	goto	l10872
 13959                           
 13960                           ; BSR set to: 0
 13961                           ;main.c: 1733: LATAbits.LATA0 = 0;
 13962  0015FC  9089               	bcf	3977,0,c	;volatile
 13963                           
 13964                           ; BSR set to: 0
 13965                           ;main.c: 1734: bOn = 0;
 13966  0015FE  0100               	movlb	0	; () banked
 13967  001600  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13968  001602  0E00               	movlw	0
 13969  001604  0100               	movlb	0	; () banked
 13970  001606  0100               	movlb	0	; () banked
 13971  001608  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 13972  00160A  0100               	movlb	0	; () banked
 13973  00160C  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13974                           
 13975                           ; BSR set to: 0
 13976                           ;main.c: 1736: channel_pulse_flags |= 0b1000000000;
 13977  00160E  0100               	movlb	0	; () banked
 13978  001610  0100               	movlb	0	; () banked
 13979  001612  83D6               	bsf	(_channel_pulse_flags+1)& (0+255),1,b
 13980                           
 13981                           ; BSR set to: 0
 13982                           ;main.c: 1737: channel_pulse_timer[ 9 ] =
 13983                           ;main.c: 1738: Read_b_eep(0x43 + 46 + 18) * 256 +
 13984                           ;main.c: 1740: Read_b_eep(0x43 + 46 + 19);
 13985  001614  0E00               	movlw	0
 13986  001616  6E17               	movwf	?_Read_b_eep+1,c
 13987  001618  0E84               	movlw	132
 13988  00161A  6E16               	movwf	?_Read_b_eep,c
 13989  00161C  ECD8  F037         	call	_Read_b_eep	;wreg free
 13990  001620  0100               	movlb	0	; () banked
 13991  001622  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13992  001624  0E00               	movlw	0
 13993  001626  6E17               	movwf	?_Read_b_eep+1,c
 13994  001628  0E83               	movlw	131
 13995  00162A  6E16               	movwf	?_Read_b_eep,c
 13996  00162C  ECD8  F037         	call	_Read_b_eep	;wreg free
 13997  001630  0100               	movlb	0	; () banked
 13998  001632  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13999  001634  0100               	movlb	0	; () banked
 14000  001636  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14001  001638  0100               	movlb	0	; () banked
 14002  00163A  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14003  00163C  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14004  00163E  0100               	movlb	0	; () banked
 14005  001640  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14006  001642  0100               	movlb	0	; () banked
 14007  001644  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14008  001646  0101               	movlb	1	; () banked
 14009  001648  0101               	movlb	1	; () banked
 14010  00164A  6F38               	movwf	(_channel_pulse_timer+18)& (0+255),b
 14011  00164C  0100               	movlb	0	; () banked
 14012  00164E  0E00               	movlw	0
 14013  001650  0100               	movlb	0	; () banked
 14014  001652  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14015  001654  0101               	movlb	1	; () banked
 14016  001656  6F39               	movwf	(_channel_pulse_timer+19)& (0+255),b
 14017                           
 14018                           ;main.c: 1742: }
 14019  001658  D010               	goto	l10878
 14020  00165A                     l10872:
 14021                           
 14022                           ;main.c: 1743: else {
 14023                           ;main.c: 1744: channel_pulse_flags &= 0b0111111111;
 14024  00165A  0100               	movlb	0	; () banked
 14025  00165C  0EFF               	movlw	255
 14026  00165E  0100               	movlb	0	; () banked
 14027  001660  17D5               	andwf	_channel_pulse_flags& (0+255),f,b
 14028  001662  0E01               	movlw	1
 14029  001664  0100               	movlb	0	; () banked
 14030  001666  17D6               	andwf	(_channel_pulse_flags+1)& (0+255),f,b
 14031                           
 14032                           ; BSR set to: 0
 14033                           ;main.c: 1745: LATAbits.LATA0 = 0;
 14034  001668  9089               	bcf	3977,0,c	;volatile
 14035                           
 14036                           ; BSR set to: 0
 14037                           ;main.c: 1746: bOn = 0;
 14038  00166A  0100               	movlb	0	; () banked
 14039  00166C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14040  00166E  0E00               	movlw	0
 14041  001670  0100               	movlb	0	; () banked
 14042  001672  0100               	movlb	0	; () banked
 14043  001674  6FAB               	movwf	vscp_writeAppReg@bOn& (0+255),b
 14044  001676  0100               	movlb	0	; () banked
 14045  001678  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14046  00167A                     l10878:
 14047                           
 14048                           ;main.c: 1747: }
 14049                           ;main.c: 1749: if ( val & 0x04 ) {
 14050  00167A  0100               	movlb	0	; () banked
 14051  00167C  0100               	movlb	0	; () banked
 14052  00167E  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 14053  001680  D3CC               	goto	l10976
 14054                           
 14055                           ; BSR set to: 0
 14056                           ;main.c: 1750: channel_protection_timer[ 9 ] =
 14057                           ;main.c: 1751: Read_b_eep(0x43 + 46 + 38) * 256 +
 14058                           ;main.c: 1753: Read_b_eep(0x43 + 46 + 39);
 14059  001682  0E00               	movlw	0
 14060  001684  6E17               	movwf	?_Read_b_eep+1,c
 14061  001686  0E98               	movlw	152
 14062  001688  6E16               	movwf	?_Read_b_eep,c
 14063  00168A  ECD8  F037         	call	_Read_b_eep	;wreg free
 14064  00168E  0100               	movlb	0	; () banked
 14065  001690  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14066  001692  0E00               	movlw	0
 14067  001694  6E17               	movwf	?_Read_b_eep+1,c
 14068  001696  0E97               	movlw	151
 14069  001698  6E16               	movwf	?_Read_b_eep,c
 14070  00169A  ECD8  F037         	call	_Read_b_eep	;wreg free
 14071  00169E  D35F               	goto	L110
 14072  0016A0                     l10884:
 14073                           
 14074                           ; BSR set to: 0
 14075  0016A0  0100               	movlb	0	; () banked
 14076  0016A2  0100               	movlb	0	; () banked
 14077  0016A4  51A2               	movf	vscp_writeAppReg@reg& (0+255),w,b
 14078                           
 14079                           ; Switch size 1, requested type "space"
 14080                           ; Number of cases is 10, Range of values is 24 to 33
 14081                           ; switch strategies available:
 14082                           ; Name         Instructions Cycles
 14083                           ; simple_byte           31    16 (average)
 14084                           ;	Chosen strategy is simple_byte
 14085  0016A6  0A18               	xorlw	24	; case 24
 14086  0016A8  B4D8               	btfsc	status,2,c
 14087  0016AA  EFD6  F006         	goto	l10622
 14088  0016AE  0A01               	xorlw	1	; case 25
 14089  0016B0  B4D8               	btfsc	status,2,c
 14090  0016B2  EF49  F007         	goto	l10648
 14091  0016B6  0A03               	xorlw	3	; case 26
 14092  0016B8  B4D8               	btfsc	status,2,c
 14093  0016BA  D45E               	goto	l10674
 14094  0016BC  0A01               	xorlw	1	; case 27
 14095  0016BE  B4D8               	btfsc	status,2,c
 14096  0016C0  D4CE               	goto	l10700
 14097  0016C2  0A07               	xorlw	7	; case 28
 14098  0016C4  B4D8               	btfsc	status,2,c
 14099  0016C6  D53E               	goto	l10726
 14100  0016C8  0A01               	xorlw	1	; case 29
 14101  0016CA  B4D8               	btfsc	status,2,c
 14102  0016CC  D5AE               	goto	l10752
 14103  0016CE  0A03               	xorlw	3	; case 30
 14104  0016D0  B4D8               	btfsc	status,2,c
 14105  0016D2  D61E               	goto	l10778
 14106  0016D4  0A01               	xorlw	1	; case 31
 14107  0016D6  B4D8               	btfsc	status,2,c
 14108  0016D8  D68E               	goto	l10804
 14109  0016DA  0A3F               	xorlw	63	; case 32
 14110  0016DC  B4D8               	btfsc	status,2,c
 14111  0016DE  D6FD               	goto	l10830
 14112  0016E0  0A01               	xorlw	1	; case 33
 14113  0016E2  B4D8               	btfsc	status,2,c
 14114  0016E4  D76C               	goto	l10856
 14115  0016E6  D399               	goto	l10976
 14116  0016E8                     l10886:
 14117                           
 14118                           ; BSR set to: 0
 14119                           ;main.c: 1761: else if ( ( reg >= 44 ) &&
 14120                           ;main.c: 1762: ( reg <= 45 ) ) {
 14121  0016E8  0E2B               	movlw	43
 14122  0016EA  0100               	movlb	0	; () banked
 14123  0016EC  0100               	movlb	0	; () banked
 14124  0016EE  65A2               	cpfsgt	vscp_writeAppReg@reg& (0+255),b
 14125  0016F0  D394               	goto	l10976
 14126                           
 14127                           ; BSR set to: 0
 14128  0016F2  0E2E               	movlw	46
 14129  0016F4  0100               	movlb	0	; () banked
 14130  0016F6  0100               	movlb	0	; () banked
 14131  0016F8  61A2               	cpfslt	vscp_writeAppReg@reg& (0+255),b
 14132  0016FA  D38F               	goto	l10976
 14133                           
 14134                           ; BSR set to: 0
 14135                           ;main.c: 1763: (Busy_eep(), Write_b_eep(0x43 + reg,val));
 14136  0016FC  EC10  F038         	call	_Busy_eep	;wreg free
 14137  001700  0E43               	movlw	67
 14138  001702  0100               	movlb	0	; () banked
 14139  001704  0100               	movlb	0	; () banked
 14140  001706  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 14141  001708  6E16               	movwf	?_Write_b_eep,c
 14142  00170A  6A17               	clrf	?_Write_b_eep+1,c
 14143  00170C  0E00               	movlw	0
 14144  00170E  2217               	addwfc	?_Write_b_eep+1,f,c
 14145  001710  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 14146  001714  EC40  F036         	call	_Write_b_eep	;wreg free
 14147                           
 14148                           ;main.c: 1764: rv = Read_b_eep(0x43 + reg);
 14149  001718  0E43               	movlw	67
 14150  00171A  0100               	movlb	0	; () banked
 14151  00171C  0100               	movlb	0	; () banked
 14152  00171E  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 14153  001720  6E16               	movwf	?_Read_b_eep,c
 14154  001722  6A17               	clrf	?_Read_b_eep+1,c
 14155  001724  0E00               	movlw	0
 14156  001726  2217               	addwfc	?_Read_b_eep+1,f,c
 14157  001728  ECD8  F037         	call	_Read_b_eep	;wreg free
 14158  00172C  0100               	movlb	0	; () banked
 14159  00172E  0100               	movlb	0	; () banked
 14160  001730  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 14161  001732  F000               	nop		;# 
 14162  001734  D372               	goto	l10976
 14163  001736                     l10896:
 14164                           
 14165                           ;main.c: 1771: else if ( 1 == vscp_page_select ) {
 14166  001736  0436               	decf	_vscp_page_select,w,c
 14167  001738  1037               	iorwf	_vscp_page_select+1,w,c
 14168  00173A  A4D8               	btfss	status,2,c
 14169  00173C  D347               	goto	l10964
 14170                           
 14171                           ;main.c: 1774: if ( (reg >= 0 ) &&
 14172                           ;main.c: 1775: (reg <= 19 ) ) {
 14173  00173E  0E14               	movlw	20
 14174  001740  0100               	movlb	0	; () banked
 14175  001742  0100               	movlb	0	; () banked
 14176  001744  61A2               	cpfslt	vscp_writeAppReg@reg& (0+255),b
 14177  001746  D19C               	goto	l10930
 14178                           
 14179                           ; BSR set to: 0
 14180                           ;main.c: 1778: (Busy_eep(), Write_b_eep(0x43 + 46 + reg,val));
 14181  001748  EC10  F038         	call	_Busy_eep	;wreg free
 14182  00174C  0E71               	movlw	113
 14183  00174E  0100               	movlb	0	; () banked
 14184  001750  0100               	movlb	0	; () banked
 14185  001752  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 14186  001754  6E16               	movwf	?_Write_b_eep,c
 14187  001756  6A17               	clrf	?_Write_b_eep+1,c
 14188  001758  0E00               	movlw	0
 14189  00175A  2217               	addwfc	?_Write_b_eep+1,f,c
 14190  00175C  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 14191  001760  EC40  F036         	call	_Write_b_eep	;wreg free
 14192                           
 14193                           ;main.c: 1779: rv = Read_b_eep(0x43 + 46 + reg);
 14194  001764  0E71               	movlw	113
 14195  001766  0100               	movlb	0	; () banked
 14196  001768  0100               	movlb	0	; () banked
 14197  00176A  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 14198  00176C  6E16               	movwf	?_Read_b_eep,c
 14199  00176E  6A17               	clrf	?_Read_b_eep+1,c
 14200  001770  0E00               	movlw	0
 14201  001772  2217               	addwfc	?_Read_b_eep+1,f,c
 14202  001774  ECD8  F037         	call	_Read_b_eep	;wreg free
 14203  001778  0100               	movlb	0	; () banked
 14204  00177A  0100               	movlb	0	; () banked
 14205  00177C  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 14206                           
 14207                           ;main.c: 1783: switch ( reg ) {
 14208  00177E  D15E               	goto	l10928
 14209  001780                     l10906:
 14210                           
 14211                           ; BSR set to: 0
 14212                           ;main.c: 1786: channel_pulse_timer[ 0 ] =
 14213                           ;main.c: 1787: Read_b_eep(0x43 + 46 + 0) * 256 +
 14214                           ;main.c: 1789: Read_b_eep(0x43 + 46 + 1);
 14215  001780  0E00               	movlw	0
 14216  001782  6E17               	movwf	?_Read_b_eep+1,c
 14217  001784  0E72               	movlw	114
 14218  001786  6E16               	movwf	?_Read_b_eep,c
 14219  001788  ECD8  F037         	call	_Read_b_eep	;wreg free
 14220  00178C  0100               	movlb	0	; () banked
 14221  00178E  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14222  001790  0E00               	movlw	0
 14223  001792  6E17               	movwf	?_Read_b_eep+1,c
 14224  001794  0E71               	movlw	113
 14225  001796  6E16               	movwf	?_Read_b_eep,c
 14226  001798  ECD8  F037         	call	_Read_b_eep	;wreg free
 14227  00179C  0100               	movlb	0	; () banked
 14228  00179E  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14229  0017A0  0100               	movlb	0	; () banked
 14230  0017A2  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14231  0017A4  0100               	movlb	0	; () banked
 14232  0017A6  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14233  0017A8  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14234  0017AA  0100               	movlb	0	; () banked
 14235  0017AC  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14236  0017AE  0100               	movlb	0	; () banked
 14237  0017B0  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14238  0017B2  0101               	movlb	1	; () banked
 14239  0017B4  0101               	movlb	1	; () banked
 14240  0017B6  6F26               	movwf	_channel_pulse_timer& (0+255),b
 14241  0017B8  0100               	movlb	0	; () banked
 14242  0017BA  0E00               	movlw	0
 14243  0017BC  0100               	movlb	0	; () banked
 14244  0017BE  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14245  0017C0  0101               	movlb	1	; () banked
 14246  0017C2  6F27               	movwf	(_channel_pulse_timer+1)& (0+255),b
 14247                           
 14248                           ;main.c: 1791: break;
 14249  0017C4  D32A               	goto	l10976
 14250  0017C6                     l10908:
 14251                           
 14252                           ;main.c: 1794: channel_pulse_timer[ 1 ] =
 14253                           ;main.c: 1795: Read_b_eep(0x43 + 46 + 2) * 256 +
 14254                           ;main.c: 1797: Read_b_eep(0x43 + 46 + 3);
 14255  0017C6  0E00               	movlw	0
 14256  0017C8  6E17               	movwf	?_Read_b_eep+1,c
 14257  0017CA  0E74               	movlw	116
 14258  0017CC  6E16               	movwf	?_Read_b_eep,c
 14259  0017CE  ECD8  F037         	call	_Read_b_eep	;wreg free
 14260  0017D2  0100               	movlb	0	; () banked
 14261  0017D4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14262  0017D6  0E00               	movlw	0
 14263  0017D8  6E17               	movwf	?_Read_b_eep+1,c
 14264  0017DA  0E73               	movlw	115
 14265  0017DC  6E16               	movwf	?_Read_b_eep,c
 14266  0017DE  ECD8  F037         	call	_Read_b_eep	;wreg free
 14267  0017E2  0100               	movlb	0	; () banked
 14268  0017E4  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14269  0017E6  0100               	movlb	0	; () banked
 14270  0017E8  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14271  0017EA  0100               	movlb	0	; () banked
 14272  0017EC  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14273  0017EE  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14274  0017F0  0100               	movlb	0	; () banked
 14275  0017F2  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14276  0017F4  0100               	movlb	0	; () banked
 14277  0017F6  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14278  0017F8  0101               	movlb	1	; () banked
 14279  0017FA  0101               	movlb	1	; () banked
 14280  0017FC  6F28               	movwf	(_channel_pulse_timer+2)& (0+255),b
 14281  0017FE  0100               	movlb	0	; () banked
 14282  001800  0E00               	movlw	0
 14283  001802  0100               	movlb	0	; () banked
 14284  001804  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14285  001806  0101               	movlb	1	; () banked
 14286  001808  6F29               	movwf	(_channel_pulse_timer+3)& (0+255),b
 14287                           
 14288                           ;main.c: 1799: break;
 14289  00180A  D307               	goto	l10976
 14290  00180C                     l10910:
 14291                           
 14292                           ;main.c: 1802: channel_pulse_timer[ 2 ] =
 14293                           ;main.c: 1803: Read_b_eep(0x43 + 46 + 4) * 256 +
 14294                           ;main.c: 1805: Read_b_eep(0x43 + 46 + 5);
 14295  00180C  0E00               	movlw	0
 14296  00180E  6E17               	movwf	?_Read_b_eep+1,c
 14297  001810  0E76               	movlw	118
 14298  001812  6E16               	movwf	?_Read_b_eep,c
 14299  001814  ECD8  F037         	call	_Read_b_eep	;wreg free
 14300  001818  0100               	movlb	0	; () banked
 14301  00181A  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14302  00181C  0E00               	movlw	0
 14303  00181E  6E17               	movwf	?_Read_b_eep+1,c
 14304  001820  0E75               	movlw	117
 14305  001822  6E16               	movwf	?_Read_b_eep,c
 14306  001824  ECD8  F037         	call	_Read_b_eep	;wreg free
 14307  001828  0100               	movlb	0	; () banked
 14308  00182A  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14309  00182C  0100               	movlb	0	; () banked
 14310  00182E  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14311  001830  0100               	movlb	0	; () banked
 14312  001832  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14313  001834  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14314  001836  0100               	movlb	0	; () banked
 14315  001838  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14316  00183A  0100               	movlb	0	; () banked
 14317  00183C  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14318  00183E  0101               	movlb	1	; () banked
 14319  001840  0101               	movlb	1	; () banked
 14320  001842  6F2A               	movwf	(_channel_pulse_timer+4)& (0+255),b
 14321  001844  0100               	movlb	0	; () banked
 14322  001846  0E00               	movlw	0
 14323  001848  0100               	movlb	0	; () banked
 14324  00184A  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14325  00184C  0101               	movlb	1	; () banked
 14326  00184E  6F2B               	movwf	(_channel_pulse_timer+5)& (0+255),b
 14327                           
 14328                           ;main.c: 1807: break;
 14329  001850  D2E4               	goto	l10976
 14330  001852                     l10912:
 14331                           
 14332                           ;main.c: 1810: channel_pulse_timer[ 3 ] =
 14333                           ;main.c: 1811: Read_b_eep(0x43 + 46 + 6) * 256 +
 14334                           ;main.c: 1813: Read_b_eep(0x43 + 46 + 7);
 14335  001852  0E00               	movlw	0
 14336  001854  6E17               	movwf	?_Read_b_eep+1,c
 14337  001856  0E78               	movlw	120
 14338  001858  6E16               	movwf	?_Read_b_eep,c
 14339  00185A  ECD8  F037         	call	_Read_b_eep	;wreg free
 14340  00185E  0100               	movlb	0	; () banked
 14341  001860  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14342  001862  0E00               	movlw	0
 14343  001864  6E17               	movwf	?_Read_b_eep+1,c
 14344  001866  0E77               	movlw	119
 14345  001868  6E16               	movwf	?_Read_b_eep,c
 14346  00186A  ECD8  F037         	call	_Read_b_eep	;wreg free
 14347  00186E  0100               	movlb	0	; () banked
 14348  001870  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14349  001872  0100               	movlb	0	; () banked
 14350  001874  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14351  001876  0100               	movlb	0	; () banked
 14352  001878  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14353  00187A  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14354  00187C  0100               	movlb	0	; () banked
 14355  00187E  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14356  001880  0100               	movlb	0	; () banked
 14357  001882  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14358  001884  0101               	movlb	1	; () banked
 14359  001886  0101               	movlb	1	; () banked
 14360  001888  6F2C               	movwf	(_channel_pulse_timer+6)& (0+255),b
 14361  00188A  0100               	movlb	0	; () banked
 14362  00188C  0E00               	movlw	0
 14363  00188E  0100               	movlb	0	; () banked
 14364  001890  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14365  001892  0101               	movlb	1	; () banked
 14366  001894  6F2D               	movwf	(_channel_pulse_timer+7)& (0+255),b
 14367                           
 14368                           ;main.c: 1815: break;
 14369  001896  D2C1               	goto	l10976
 14370  001898                     l10914:
 14371                           
 14372                           ;main.c: 1818: channel_pulse_timer[ 4 ] =
 14373                           ;main.c: 1819: Read_b_eep(0x43 + 46 + 8) * 256 +
 14374                           ;main.c: 1821: Read_b_eep(0x43 + 46 + 9);
 14375  001898  0E00               	movlw	0
 14376  00189A  6E17               	movwf	?_Read_b_eep+1,c
 14377  00189C  0E7A               	movlw	122
 14378  00189E  6E16               	movwf	?_Read_b_eep,c
 14379  0018A0  ECD8  F037         	call	_Read_b_eep	;wreg free
 14380  0018A4  0100               	movlb	0	; () banked
 14381  0018A6  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14382  0018A8  0E00               	movlw	0
 14383  0018AA  6E17               	movwf	?_Read_b_eep+1,c
 14384  0018AC  0E79               	movlw	121
 14385  0018AE  6E16               	movwf	?_Read_b_eep,c
 14386  0018B0  ECD8  F037         	call	_Read_b_eep	;wreg free
 14387  0018B4  0100               	movlb	0	; () banked
 14388  0018B6  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14389  0018B8  0100               	movlb	0	; () banked
 14390  0018BA  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14391  0018BC  0100               	movlb	0	; () banked
 14392  0018BE  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14393  0018C0  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14394  0018C2  0100               	movlb	0	; () banked
 14395  0018C4  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14396  0018C6  0100               	movlb	0	; () banked
 14397  0018C8  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14398  0018CA  0101               	movlb	1	; () banked
 14399  0018CC  0101               	movlb	1	; () banked
 14400  0018CE  6F2E               	movwf	(_channel_pulse_timer+8)& (0+255),b
 14401  0018D0  0100               	movlb	0	; () banked
 14402  0018D2  0E00               	movlw	0
 14403  0018D4  0100               	movlb	0	; () banked
 14404  0018D6  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14405  0018D8  0101               	movlb	1	; () banked
 14406  0018DA  6F2F               	movwf	(_channel_pulse_timer+9)& (0+255),b
 14407                           
 14408                           ;main.c: 1823: break;
 14409  0018DC  D29E               	goto	l10976
 14410  0018DE                     l10916:
 14411                           
 14412                           ;main.c: 1826: channel_pulse_timer[ 5 ] =
 14413                           ;main.c: 1827: Read_b_eep(0x43 + 46 + 10) * 256 +
 14414                           ;main.c: 1829: Read_b_eep(0x43 + 46 + 11);
 14415  0018DE  0E00               	movlw	0
 14416  0018E0  6E17               	movwf	?_Read_b_eep+1,c
 14417  0018E2  0E7C               	movlw	124
 14418  0018E4  6E16               	movwf	?_Read_b_eep,c
 14419  0018E6  ECD8  F037         	call	_Read_b_eep	;wreg free
 14420  0018EA  0100               	movlb	0	; () banked
 14421  0018EC  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14422  0018EE  0E00               	movlw	0
 14423  0018F0  6E17               	movwf	?_Read_b_eep+1,c
 14424  0018F2  0E7B               	movlw	123
 14425  0018F4  6E16               	movwf	?_Read_b_eep,c
 14426  0018F6  ECD8  F037         	call	_Read_b_eep	;wreg free
 14427  0018FA  0100               	movlb	0	; () banked
 14428  0018FC  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14429  0018FE  0100               	movlb	0	; () banked
 14430  001900  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14431  001902  0100               	movlb	0	; () banked
 14432  001904  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14433  001906  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14434  001908  0100               	movlb	0	; () banked
 14435  00190A  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14436  00190C  0100               	movlb	0	; () banked
 14437  00190E  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14438  001910  0101               	movlb	1	; () banked
 14439  001912  0101               	movlb	1	; () banked
 14440  001914  6F30               	movwf	(_channel_pulse_timer+10)& (0+255),b
 14441  001916  0100               	movlb	0	; () banked
 14442  001918  0E00               	movlw	0
 14443  00191A  0100               	movlb	0	; () banked
 14444  00191C  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14445  00191E  0101               	movlb	1	; () banked
 14446  001920  6F31               	movwf	(_channel_pulse_timer+11)& (0+255),b
 14447                           
 14448                           ;main.c: 1831: break;
 14449  001922  D27B               	goto	l10976
 14450  001924                     l10918:
 14451                           
 14452                           ;main.c: 1834: channel_pulse_timer[ 6 ] =
 14453                           ;main.c: 1835: Read_b_eep(0x43 + 46 + 12) * 256 +
 14454                           ;main.c: 1837: Read_b_eep(0x43 + 46 + 13);
 14455  001924  0E00               	movlw	0
 14456  001926  6E17               	movwf	?_Read_b_eep+1,c
 14457  001928  0E7E               	movlw	126
 14458  00192A  6E16               	movwf	?_Read_b_eep,c
 14459  00192C  ECD8  F037         	call	_Read_b_eep	;wreg free
 14460  001930  0100               	movlb	0	; () banked
 14461  001932  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14462  001934  0E00               	movlw	0
 14463  001936  6E17               	movwf	?_Read_b_eep+1,c
 14464  001938  0E7D               	movlw	125
 14465  00193A  6E16               	movwf	?_Read_b_eep,c
 14466  00193C  ECD8  F037         	call	_Read_b_eep	;wreg free
 14467  001940  0100               	movlb	0	; () banked
 14468  001942  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14469  001944  0100               	movlb	0	; () banked
 14470  001946  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14471  001948  0100               	movlb	0	; () banked
 14472  00194A  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14473  00194C  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14474  00194E  0100               	movlb	0	; () banked
 14475  001950  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14476  001952  0100               	movlb	0	; () banked
 14477  001954  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14478  001956  0101               	movlb	1	; () banked
 14479  001958  0101               	movlb	1	; () banked
 14480  00195A  6F32               	movwf	(_channel_pulse_timer+12)& (0+255),b
 14481  00195C  0100               	movlb	0	; () banked
 14482  00195E  0E00               	movlw	0
 14483  001960  0100               	movlb	0	; () banked
 14484  001962  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14485  001964  0101               	movlb	1	; () banked
 14486  001966  6F33               	movwf	(_channel_pulse_timer+13)& (0+255),b
 14487                           
 14488                           ;main.c: 1839: break;
 14489  001968  D258               	goto	l10976
 14490  00196A                     l10920:
 14491                           
 14492                           ;main.c: 1842: channel_pulse_timer[ 7 ] =
 14493                           ;main.c: 1843: Read_b_eep(0x43 + 46 + 14) * 256 +
 14494                           ;main.c: 1845: Read_b_eep(0x43 + 46 + 15);
 14495  00196A  0E00               	movlw	0
 14496  00196C  6E17               	movwf	?_Read_b_eep+1,c
 14497  00196E  0E80               	movlw	128
 14498  001970  6E16               	movwf	?_Read_b_eep,c
 14499  001972  ECD8  F037         	call	_Read_b_eep	;wreg free
 14500  001976  0100               	movlb	0	; () banked
 14501  001978  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14502  00197A  0E00               	movlw	0
 14503  00197C  6E17               	movwf	?_Read_b_eep+1,c
 14504  00197E  0E7F               	movlw	127
 14505  001980  6E16               	movwf	?_Read_b_eep,c
 14506  001982  ECD8  F037         	call	_Read_b_eep	;wreg free
 14507  001986  0100               	movlb	0	; () banked
 14508  001988  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14509  00198A  0100               	movlb	0	; () banked
 14510  00198C  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14511  00198E  0100               	movlb	0	; () banked
 14512  001990  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14513  001992  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14514  001994  0100               	movlb	0	; () banked
 14515  001996  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14516  001998  0100               	movlb	0	; () banked
 14517  00199A  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14518  00199C  0101               	movlb	1	; () banked
 14519  00199E  0101               	movlb	1	; () banked
 14520  0019A0  6F34               	movwf	(_channel_pulse_timer+14)& (0+255),b
 14521  0019A2  0100               	movlb	0	; () banked
 14522  0019A4  0E00               	movlw	0
 14523  0019A6  0100               	movlb	0	; () banked
 14524  0019A8  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14525  0019AA  0101               	movlb	1	; () banked
 14526  0019AC  6F35               	movwf	(_channel_pulse_timer+15)& (0+255),b
 14527                           
 14528                           ;main.c: 1847: break;
 14529  0019AE  D235               	goto	l10976
 14530  0019B0                     l10922:
 14531                           
 14532                           ;main.c: 1850: channel_pulse_timer[ 8 ] =
 14533                           ;main.c: 1851: Read_b_eep(0x43 + 46 + 16) * 256 +
 14534                           ;main.c: 1853: Read_b_eep(0x43 + 46 + 17);
 14535  0019B0  0E00               	movlw	0
 14536  0019B2  6E17               	movwf	?_Read_b_eep+1,c
 14537  0019B4  0E82               	movlw	130
 14538  0019B6  6E16               	movwf	?_Read_b_eep,c
 14539  0019B8  ECD8  F037         	call	_Read_b_eep	;wreg free
 14540  0019BC  0100               	movlb	0	; () banked
 14541  0019BE  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14542  0019C0  0E00               	movlw	0
 14543  0019C2  6E17               	movwf	?_Read_b_eep+1,c
 14544  0019C4  0E81               	movlw	129
 14545  0019C6  6E16               	movwf	?_Read_b_eep,c
 14546  0019C8  ECD8  F037         	call	_Read_b_eep	;wreg free
 14547  0019CC  0100               	movlb	0	; () banked
 14548  0019CE  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14549  0019D0  0100               	movlb	0	; () banked
 14550  0019D2  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14551  0019D4  0100               	movlb	0	; () banked
 14552  0019D6  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14553  0019D8  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14554  0019DA  0100               	movlb	0	; () banked
 14555  0019DC  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14556  0019DE  0100               	movlb	0	; () banked
 14557  0019E0  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14558  0019E2  0101               	movlb	1	; () banked
 14559  0019E4  0101               	movlb	1	; () banked
 14560  0019E6  6F36               	movwf	(_channel_pulse_timer+16)& (0+255),b
 14561  0019E8  0100               	movlb	0	; () banked
 14562  0019EA  0E00               	movlw	0
 14563  0019EC  0100               	movlb	0	; () banked
 14564  0019EE  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14565  0019F0  0101               	movlb	1	; () banked
 14566  0019F2  6F37               	movwf	(_channel_pulse_timer+17)& (0+255),b
 14567                           
 14568                           ;main.c: 1855: break;
 14569  0019F4  D212               	goto	l10976
 14570  0019F6                     l10924:
 14571                           
 14572                           ;main.c: 1858: channel_pulse_timer[ 9 ] =
 14573                           ;main.c: 1859: Read_b_eep(0x43 + 46 + 18) * 256 +
 14574                           ;main.c: 1861: Read_b_eep(0x43 + 46 + 19);
 14575  0019F6  0E00               	movlw	0
 14576  0019F8  6E17               	movwf	?_Read_b_eep+1,c
 14577  0019FA  0E84               	movlw	132
 14578  0019FC  6E16               	movwf	?_Read_b_eep,c
 14579  0019FE  ECD8  F037         	call	_Read_b_eep	;wreg free
 14580  001A02  0100               	movlb	0	; () banked
 14581  001A04  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14582  001A06  0E00               	movlw	0
 14583  001A08  6E17               	movwf	?_Read_b_eep+1,c
 14584  001A0A  0E83               	movlw	131
 14585  001A0C  6E16               	movwf	?_Read_b_eep,c
 14586  001A0E  ECD8  F037         	call	_Read_b_eep	;wreg free
 14587  001A12  0100               	movlb	0	; () banked
 14588  001A14  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14589  001A16  0100               	movlb	0	; () banked
 14590  001A18  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14591  001A1A  0100               	movlb	0	; () banked
 14592  001A1C  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14593  001A1E  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14594  001A20  0100               	movlb	0	; () banked
 14595  001A22  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14596  001A24  0100               	movlb	0	; () banked
 14597  001A26  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14598  001A28  0101               	movlb	1	; () banked
 14599  001A2A  0101               	movlb	1	; () banked
 14600  001A2C  6F38               	movwf	(_channel_pulse_timer+18)& (0+255),b
 14601  001A2E  0100               	movlb	0	; () banked
 14602  001A30  0E00               	movlw	0
 14603  001A32  0100               	movlb	0	; () banked
 14604  001A34  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14605  001A36  0101               	movlb	1	; () banked
 14606  001A38  6F39               	movwf	(_channel_pulse_timer+19)& (0+255),b
 14607                           
 14608                           ;main.c: 1863: break;
 14609  001A3A  D1EF               	goto	l10976
 14610  001A3C                     l10928:
 14611  001A3C  0100               	movlb	0	; () banked
 14612  001A3E  0100               	movlb	0	; () banked
 14613  001A40  51A2               	movf	vscp_writeAppReg@reg& (0+255),w,b
 14614                           
 14615                           ; Switch size 1, requested type "space"
 14616                           ; Number of cases is 10, Range of values is 1 to 19
 14617                           ; switch strategies available:
 14618                           ; Name         Instructions Cycles
 14619                           ; simple_byte           31    16 (average)
 14620                           ;	Chosen strategy is simple_byte
 14621  001A42  0A01               	xorlw	1	; case 1
 14622  001A44  B4D8               	btfsc	status,2,c
 14623  001A46  D69C               	goto	l10906
 14624  001A48  0A02               	xorlw	2	; case 3
 14625  001A4A  B4D8               	btfsc	status,2,c
 14626  001A4C  D6BC               	goto	l10908
 14627  001A4E  0A06               	xorlw	6	; case 5
 14628  001A50  B4D8               	btfsc	status,2,c
 14629  001A52  D6DC               	goto	l10910
 14630  001A54  0A02               	xorlw	2	; case 7
 14631  001A56  B4D8               	btfsc	status,2,c
 14632  001A58  D6FC               	goto	l10912
 14633  001A5A  0A0E               	xorlw	14	; case 9
 14634  001A5C  B4D8               	btfsc	status,2,c
 14635  001A5E  D71C               	goto	l10914
 14636  001A60  0A02               	xorlw	2	; case 11
 14637  001A62  B4D8               	btfsc	status,2,c
 14638  001A64  D73C               	goto	l10916
 14639  001A66  0A06               	xorlw	6	; case 13
 14640  001A68  B4D8               	btfsc	status,2,c
 14641  001A6A  D75C               	goto	l10918
 14642  001A6C  0A02               	xorlw	2	; case 15
 14643  001A6E  B4D8               	btfsc	status,2,c
 14644  001A70  D77C               	goto	l10920
 14645  001A72  0A1E               	xorlw	30	; case 17
 14646  001A74  B4D8               	btfsc	status,2,c
 14647  001A76  D79C               	goto	l10922
 14648  001A78  0A02               	xorlw	2	; case 19
 14649  001A7A  B4D8               	btfsc	status,2,c
 14650  001A7C  D7BC               	goto	l10924
 14651  001A7E  D1CD               	goto	l10976
 14652  001A80                     l10930:
 14653                           
 14654                           ; BSR set to: 0
 14655                           ;main.c: 1871: else if ( ( reg >= 20 ) &&
 14656                           ;main.c: 1872: ( reg <= 39 ) ) {
 14657  001A80  0E13               	movlw	19
 14658  001A82  0100               	movlb	0	; () banked
 14659  001A84  0100               	movlb	0	; () banked
 14660  001A86  65A2               	cpfsgt	vscp_writeAppReg@reg& (0+255),b
 14661  001A88  D1C8               	goto	l10976
 14662                           
 14663                           ; BSR set to: 0
 14664  001A8A  0E28               	movlw	40
 14665  001A8C  0100               	movlb	0	; () banked
 14666  001A8E  0100               	movlb	0	; () banked
 14667  001A90  61A2               	cpfslt	vscp_writeAppReg@reg& (0+255),b
 14668  001A92  D1C3               	goto	l10976
 14669                           
 14670                           ; BSR set to: 0
 14671                           ;main.c: 1875: (Busy_eep(), Write_b_eep(0x43 + 46 + reg,val));
 14672  001A94  EC10  F038         	call	_Busy_eep	;wreg free
 14673  001A98  0E71               	movlw	113
 14674  001A9A  0100               	movlb	0	; () banked
 14675  001A9C  0100               	movlb	0	; () banked
 14676  001A9E  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 14677  001AA0  6E16               	movwf	?_Write_b_eep,c
 14678  001AA2  6A17               	clrf	?_Write_b_eep+1,c
 14679  001AA4  0E00               	movlw	0
 14680  001AA6  2217               	addwfc	?_Write_b_eep+1,f,c
 14681  001AA8  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 14682  001AAC  EC40  F036         	call	_Write_b_eep	;wreg free
 14683                           
 14684                           ;main.c: 1876: rv = Read_b_eep(0x43 + 46 + reg);
 14685  001AB0  0E71               	movlw	113
 14686  001AB2  0100               	movlb	0	; () banked
 14687  001AB4  0100               	movlb	0	; () banked
 14688  001AB6  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 14689  001AB8  6E16               	movwf	?_Read_b_eep,c
 14690  001ABA  6A17               	clrf	?_Read_b_eep+1,c
 14691  001ABC  0E00               	movlw	0
 14692  001ABE  2217               	addwfc	?_Read_b_eep+1,f,c
 14693  001AC0  ECD8  F037         	call	_Read_b_eep	;wreg free
 14694  001AC4  0100               	movlb	0	; () banked
 14695  001AC6  0100               	movlb	0	; () banked
 14696  001AC8  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 14697                           
 14698                           ;main.c: 1878: switch ( reg ) {
 14699  001ACA  D15E               	goto	l10962
 14700  001ACC                     l10940:
 14701                           
 14702                           ; BSR set to: 0
 14703                           ;main.c: 1881: channel_protection_timer[ 0 ] =
 14704                           ;main.c: 1882: Read_b_eep(0x43 + 46 + 20) * 256 +
 14705                           ;main.c: 1884: Read_b_eep(0x43 + 46 + 21);
 14706  001ACC  0E00               	movlw	0
 14707  001ACE  6E17               	movwf	?_Read_b_eep+1,c
 14708  001AD0  0E86               	movlw	134
 14709  001AD2  6E16               	movwf	?_Read_b_eep,c
 14710  001AD4  ECD8  F037         	call	_Read_b_eep	;wreg free
 14711  001AD8  0100               	movlb	0	; () banked
 14712  001ADA  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14713  001ADC  0E00               	movlw	0
 14714  001ADE  6E17               	movwf	?_Read_b_eep+1,c
 14715  001AE0  0E85               	movlw	133
 14716  001AE2  6E16               	movwf	?_Read_b_eep,c
 14717  001AE4  ECD8  F037         	call	_Read_b_eep	;wreg free
 14718  001AE8                     L101:
 14719  001AE8  0100               	movlb	0	; () banked
 14720  001AEA  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14721  001AEC  0100               	movlb	0	; () banked
 14722  001AEE  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14723  001AF0  0100               	movlb	0	; () banked
 14724  001AF2  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14725  001AF4  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14726  001AF6  0100               	movlb	0	; () banked
 14727  001AF8  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14728  001AFA  0100               	movlb	0	; () banked
 14729  001AFC  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14730  001AFE  0100               	movlb	0	; () banked
 14731  001B00  0100               	movlb	0	; () banked
 14732  001B02  6FBD               	movwf	_channel_protection_timer& (0+255),b
 14733  001B04  0100               	movlb	0	; () banked
 14734  001B06  0E00               	movlw	0
 14735  001B08  0100               	movlb	0	; () banked
 14736  001B0A  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14737  001B0C  0100               	movlb	0	; () banked
 14738  001B0E  6FBE               	movwf	(_channel_protection_timer+1)& (0+255),b
 14739                           
 14740                           ;main.c: 1886: break;
 14741  001B10  D184               	goto	l10976
 14742  001B12                     l10942:
 14743                           
 14744                           ; BSR set to: 0
 14745                           ;main.c: 1889: channel_protection_timer[ 1 ] =
 14746                           ;main.c: 1890: Read_b_eep(0x43 + 46 + 22) * 256 +
 14747                           ;main.c: 1892: Read_b_eep(0x43 + 46 + 23);
 14748  001B12  0E00               	movlw	0
 14749  001B14  6E17               	movwf	?_Read_b_eep+1,c
 14750  001B16  0E88               	movlw	136
 14751  001B18  6E16               	movwf	?_Read_b_eep,c
 14752  001B1A  ECD8  F037         	call	_Read_b_eep	;wreg free
 14753  001B1E  0100               	movlb	0	; () banked
 14754  001B20  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14755  001B22  0E00               	movlw	0
 14756  001B24  6E17               	movwf	?_Read_b_eep+1,c
 14757  001B26  0E87               	movlw	135
 14758  001B28  6E16               	movwf	?_Read_b_eep,c
 14759  001B2A  ECD8  F037         	call	_Read_b_eep	;wreg free
 14760  001B2E                     L102:
 14761  001B2E  0100               	movlb	0	; () banked
 14762  001B30  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14763  001B32  0100               	movlb	0	; () banked
 14764  001B34  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14765  001B36  0100               	movlb	0	; () banked
 14766  001B38  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14767  001B3A  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14768  001B3C  0100               	movlb	0	; () banked
 14769  001B3E  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14770  001B40  0100               	movlb	0	; () banked
 14771  001B42  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14772  001B44  0100               	movlb	0	; () banked
 14773  001B46  0100               	movlb	0	; () banked
 14774  001B48  6FBF               	movwf	(_channel_protection_timer+2)& (0+255),b
 14775  001B4A  0100               	movlb	0	; () banked
 14776  001B4C  0E00               	movlw	0
 14777  001B4E  0100               	movlb	0	; () banked
 14778  001B50  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14779  001B52  0100               	movlb	0	; () banked
 14780  001B54  6FC0               	movwf	(_channel_protection_timer+3)& (0+255),b
 14781                           
 14782                           ;main.c: 1894: break;
 14783  001B56  D161               	goto	l10976
 14784  001B58                     l10944:
 14785                           
 14786                           ; BSR set to: 0
 14787                           ;main.c: 1897: channel_protection_timer[ 2 ] =
 14788                           ;main.c: 1898: Read_b_eep(0x43 + 46 + 24) * 256 +
 14789                           ;main.c: 1900: Read_b_eep(0x43 + 46 + 25);
 14790  001B58  0E00               	movlw	0
 14791  001B5A  6E17               	movwf	?_Read_b_eep+1,c
 14792  001B5C  0E8A               	movlw	138
 14793  001B5E  6E16               	movwf	?_Read_b_eep,c
 14794  001B60  ECD8  F037         	call	_Read_b_eep	;wreg free
 14795  001B64  0100               	movlb	0	; () banked
 14796  001B66  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14797  001B68  0E00               	movlw	0
 14798  001B6A  6E17               	movwf	?_Read_b_eep+1,c
 14799  001B6C  0E89               	movlw	137
 14800  001B6E  6E16               	movwf	?_Read_b_eep,c
 14801  001B70  ECD8  F037         	call	_Read_b_eep	;wreg free
 14802  001B74                     L103:
 14803  001B74  0100               	movlb	0	; () banked
 14804  001B76  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14805  001B78  0100               	movlb	0	; () banked
 14806  001B7A  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14807  001B7C  0100               	movlb	0	; () banked
 14808  001B7E  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14809  001B80  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14810  001B82  0100               	movlb	0	; () banked
 14811  001B84  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14812  001B86  0100               	movlb	0	; () banked
 14813  001B88  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14814  001B8A  0100               	movlb	0	; () banked
 14815  001B8C  0100               	movlb	0	; () banked
 14816  001B8E  6FC1               	movwf	(_channel_protection_timer+4)& (0+255),b
 14817  001B90  0100               	movlb	0	; () banked
 14818  001B92  0E00               	movlw	0
 14819  001B94  0100               	movlb	0	; () banked
 14820  001B96  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14821  001B98  0100               	movlb	0	; () banked
 14822  001B9A  6FC2               	movwf	(_channel_protection_timer+5)& (0+255),b
 14823                           
 14824                           ;main.c: 1902: break;
 14825  001B9C  D13E               	goto	l10976
 14826  001B9E                     l10946:
 14827                           
 14828                           ; BSR set to: 0
 14829                           ;main.c: 1905: channel_protection_timer[ 3 ] =
 14830                           ;main.c: 1906: Read_b_eep(0x43 + 46 + 26) * 256 +
 14831                           ;main.c: 1908: Read_b_eep(0x43 + 46 + 27);
 14832  001B9E  0E00               	movlw	0
 14833  001BA0  6E17               	movwf	?_Read_b_eep+1,c
 14834  001BA2  0E8C               	movlw	140
 14835  001BA4  6E16               	movwf	?_Read_b_eep,c
 14836  001BA6  ECD8  F037         	call	_Read_b_eep	;wreg free
 14837  001BAA  0100               	movlb	0	; () banked
 14838  001BAC  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14839  001BAE  0E00               	movlw	0
 14840  001BB0  6E17               	movwf	?_Read_b_eep+1,c
 14841  001BB2  0E8B               	movlw	139
 14842  001BB4  6E16               	movwf	?_Read_b_eep,c
 14843  001BB6  ECD8  F037         	call	_Read_b_eep	;wreg free
 14844  001BBA                     L104:
 14845  001BBA  0100               	movlb	0	; () banked
 14846  001BBC  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14847  001BBE  0100               	movlb	0	; () banked
 14848  001BC0  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14849  001BC2  0100               	movlb	0	; () banked
 14850  001BC4  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14851  001BC6  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14852  001BC8  0100               	movlb	0	; () banked
 14853  001BCA  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14854  001BCC  0100               	movlb	0	; () banked
 14855  001BCE  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14856  001BD0  0100               	movlb	0	; () banked
 14857  001BD2  0100               	movlb	0	; () banked
 14858  001BD4  6FC3               	movwf	(_channel_protection_timer+6)& (0+255),b
 14859  001BD6  0100               	movlb	0	; () banked
 14860  001BD8  0E00               	movlw	0
 14861  001BDA  0100               	movlb	0	; () banked
 14862  001BDC  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14863  001BDE  0100               	movlb	0	; () banked
 14864  001BE0  6FC4               	movwf	(_channel_protection_timer+7)& (0+255),b
 14865                           
 14866                           ;main.c: 1910: break;
 14867  001BE2  D11B               	goto	l10976
 14868  001BE4                     l10948:
 14869                           
 14870                           ; BSR set to: 0
 14871                           ;main.c: 1913: channel_protection_timer[ 4 ] =
 14872                           ;main.c: 1914: Read_b_eep(0x43 + 46 + 28) * 256 +
 14873                           ;main.c: 1916: Read_b_eep(0x43 + 46 + 29);
 14874  001BE4  0E00               	movlw	0
 14875  001BE6  6E17               	movwf	?_Read_b_eep+1,c
 14876  001BE8  0E8E               	movlw	142
 14877  001BEA  6E16               	movwf	?_Read_b_eep,c
 14878  001BEC  ECD8  F037         	call	_Read_b_eep	;wreg free
 14879  001BF0  0100               	movlb	0	; () banked
 14880  001BF2  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14881  001BF4  0E00               	movlw	0
 14882  001BF6  6E17               	movwf	?_Read_b_eep+1,c
 14883  001BF8  0E8D               	movlw	141
 14884  001BFA  6E16               	movwf	?_Read_b_eep,c
 14885  001BFC  ECD8  F037         	call	_Read_b_eep	;wreg free
 14886  001C00                     L105:
 14887  001C00  0100               	movlb	0	; () banked
 14888  001C02  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14889  001C04  0100               	movlb	0	; () banked
 14890  001C06  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14891  001C08  0100               	movlb	0	; () banked
 14892  001C0A  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14893  001C0C  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14894  001C0E  0100               	movlb	0	; () banked
 14895  001C10  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14896  001C12  0100               	movlb	0	; () banked
 14897  001C14  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14898  001C16  0100               	movlb	0	; () banked
 14899  001C18  0100               	movlb	0	; () banked
 14900  001C1A  6FC5               	movwf	(_channel_protection_timer+8)& (0+255),b
 14901  001C1C  0100               	movlb	0	; () banked
 14902  001C1E  0E00               	movlw	0
 14903  001C20  0100               	movlb	0	; () banked
 14904  001C22  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14905  001C24  0100               	movlb	0	; () banked
 14906  001C26  6FC6               	movwf	(_channel_protection_timer+9)& (0+255),b
 14907                           
 14908                           ;main.c: 1918: break;
 14909  001C28  D0F8               	goto	l10976
 14910  001C2A                     l10950:
 14911                           
 14912                           ; BSR set to: 0
 14913                           ;main.c: 1921: channel_protection_timer[ 5 ] =
 14914                           ;main.c: 1922: Read_b_eep(0x43 + 46 + 30) * 256 +
 14915                           ;main.c: 1924: Read_b_eep(0x43 + 46 + 31);
 14916  001C2A  0E00               	movlw	0
 14917  001C2C  6E17               	movwf	?_Read_b_eep+1,c
 14918  001C2E  0E90               	movlw	144
 14919  001C30  6E16               	movwf	?_Read_b_eep,c
 14920  001C32  ECD8  F037         	call	_Read_b_eep	;wreg free
 14921  001C36  0100               	movlb	0	; () banked
 14922  001C38  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14923  001C3A  0E00               	movlw	0
 14924  001C3C  6E17               	movwf	?_Read_b_eep+1,c
 14925  001C3E  0E8F               	movlw	143
 14926  001C40  6E16               	movwf	?_Read_b_eep,c
 14927  001C42  ECD8  F037         	call	_Read_b_eep	;wreg free
 14928  001C46                     L106:
 14929  001C46  0100               	movlb	0	; () banked
 14930  001C48  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14931  001C4A  0100               	movlb	0	; () banked
 14932  001C4C  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14933  001C4E  0100               	movlb	0	; () banked
 14934  001C50  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14935  001C52  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14936  001C54  0100               	movlb	0	; () banked
 14937  001C56  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14938  001C58  0100               	movlb	0	; () banked
 14939  001C5A  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14940  001C5C  0100               	movlb	0	; () banked
 14941  001C5E  0100               	movlb	0	; () banked
 14942  001C60  6FC7               	movwf	(_channel_protection_timer+10)& (0+255),b
 14943  001C62  0100               	movlb	0	; () banked
 14944  001C64  0E00               	movlw	0
 14945  001C66  0100               	movlb	0	; () banked
 14946  001C68  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14947  001C6A  0100               	movlb	0	; () banked
 14948  001C6C  6FC8               	movwf	(_channel_protection_timer+11)& (0+255),b
 14949                           
 14950                           ;main.c: 1926: break;
 14951  001C6E  D0D5               	goto	l10976
 14952  001C70                     l10952:
 14953                           
 14954                           ; BSR set to: 0
 14955                           ;main.c: 1929: channel_protection_timer[ 6 ] =
 14956                           ;main.c: 1930: Read_b_eep(0x43 + 46 + 32) * 256 +
 14957                           ;main.c: 1932: Read_b_eep(0x43 + 46 + 33);
 14958  001C70  0E00               	movlw	0
 14959  001C72  6E17               	movwf	?_Read_b_eep+1,c
 14960  001C74  0E92               	movlw	146
 14961  001C76  6E16               	movwf	?_Read_b_eep,c
 14962  001C78  ECD8  F037         	call	_Read_b_eep	;wreg free
 14963  001C7C  0100               	movlb	0	; () banked
 14964  001C7E  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14965  001C80  0E00               	movlw	0
 14966  001C82  6E17               	movwf	?_Read_b_eep+1,c
 14967  001C84  0E91               	movlw	145
 14968  001C86  6E16               	movwf	?_Read_b_eep,c
 14969  001C88  ECD8  F037         	call	_Read_b_eep	;wreg free
 14970  001C8C                     L107:
 14971  001C8C  0100               	movlb	0	; () banked
 14972  001C8E  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14973  001C90  0100               	movlb	0	; () banked
 14974  001C92  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14975  001C94  0100               	movlb	0	; () banked
 14976  001C96  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14977  001C98  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14978  001C9A  0100               	movlb	0	; () banked
 14979  001C9C  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14980  001C9E  0100               	movlb	0	; () banked
 14981  001CA0  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14982  001CA2  0100               	movlb	0	; () banked
 14983  001CA4  0100               	movlb	0	; () banked
 14984  001CA6  6FC9               	movwf	(_channel_protection_timer+12)& (0+255),b
 14985  001CA8  0100               	movlb	0	; () banked
 14986  001CAA  0E00               	movlw	0
 14987  001CAC  0100               	movlb	0	; () banked
 14988  001CAE  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14989  001CB0  0100               	movlb	0	; () banked
 14990  001CB2  6FCA               	movwf	(_channel_protection_timer+13)& (0+255),b
 14991                           
 14992                           ;main.c: 1934: break;
 14993  001CB4  D0B2               	goto	l10976
 14994  001CB6                     l10954:
 14995                           
 14996                           ; BSR set to: 0
 14997                           ;main.c: 1937: channel_protection_timer[ 7 ] =
 14998                           ;main.c: 1938: Read_b_eep(0x43 + 46 + 34) * 256 +
 14999                           ;main.c: 1940: Read_b_eep(0x43 + 46 + 35);
 15000  001CB6  0E00               	movlw	0
 15001  001CB8  6E17               	movwf	?_Read_b_eep+1,c
 15002  001CBA  0E94               	movlw	148
 15003  001CBC  6E16               	movwf	?_Read_b_eep,c
 15004  001CBE  ECD8  F037         	call	_Read_b_eep	;wreg free
 15005  001CC2  0100               	movlb	0	; () banked
 15006  001CC4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 15007  001CC6  0E00               	movlw	0
 15008  001CC8  6E17               	movwf	?_Read_b_eep+1,c
 15009  001CCA  0E93               	movlw	147
 15010  001CCC  6E16               	movwf	?_Read_b_eep,c
 15011  001CCE  ECD8  F037         	call	_Read_b_eep	;wreg free
 15012  001CD2                     L108:
 15013  001CD2  0100               	movlb	0	; () banked
 15014  001CD4  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 15015  001CD6  0100               	movlb	0	; () banked
 15016  001CD8  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 15017  001CDA  0100               	movlb	0	; () banked
 15018  001CDC  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 15019  001CDE  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 15020  001CE0  0100               	movlb	0	; () banked
 15021  001CE2  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 15022  001CE4  0100               	movlb	0	; () banked
 15023  001CE6  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 15024  001CE8  0100               	movlb	0	; () banked
 15025  001CEA  0100               	movlb	0	; () banked
 15026  001CEC  6FCB               	movwf	(_channel_protection_timer+14)& (0+255),b
 15027  001CEE  0100               	movlb	0	; () banked
 15028  001CF0  0E00               	movlw	0
 15029  001CF2  0100               	movlb	0	; () banked
 15030  001CF4  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 15031  001CF6  0100               	movlb	0	; () banked
 15032  001CF8  6FCC               	movwf	(_channel_protection_timer+15)& (0+255),b
 15033                           
 15034                           ;main.c: 1942: break;
 15035  001CFA  D08F               	goto	l10976
 15036  001CFC                     l10956:
 15037                           
 15038                           ; BSR set to: 0
 15039                           ;main.c: 1945: channel_protection_timer[ 8 ] =
 15040                           ;main.c: 1946: Read_b_eep(0x43 + 46 + 36) * 256 +
 15041                           ;main.c: 1948: Read_b_eep(0x43 + 46 + 37);
 15042  001CFC  0E00               	movlw	0
 15043  001CFE  6E17               	movwf	?_Read_b_eep+1,c
 15044  001D00  0E96               	movlw	150
 15045  001D02  6E16               	movwf	?_Read_b_eep,c
 15046  001D04  ECD8  F037         	call	_Read_b_eep	;wreg free
 15047  001D08  0100               	movlb	0	; () banked
 15048  001D0A  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 15049  001D0C  0E00               	movlw	0
 15050  001D0E  6E17               	movwf	?_Read_b_eep+1,c
 15051  001D10  0E95               	movlw	149
 15052  001D12  6E16               	movwf	?_Read_b_eep,c
 15053  001D14  ECD8  F037         	call	_Read_b_eep	;wreg free
 15054  001D18                     L109:
 15055  001D18  0100               	movlb	0	; () banked
 15056  001D1A  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 15057  001D1C  0100               	movlb	0	; () banked
 15058  001D1E  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 15059  001D20  0100               	movlb	0	; () banked
 15060  001D22  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 15061  001D24  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 15062  001D26  0100               	movlb	0	; () banked
 15063  001D28  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 15064  001D2A  0100               	movlb	0	; () banked
 15065  001D2C  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 15066  001D2E  0100               	movlb	0	; () banked
 15067  001D30  0100               	movlb	0	; () banked
 15068  001D32  6FCD               	movwf	(_channel_protection_timer+16)& (0+255),b
 15069  001D34  0100               	movlb	0	; () banked
 15070  001D36  0E00               	movlw	0
 15071  001D38  0100               	movlb	0	; () banked
 15072  001D3A  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 15073  001D3C  0100               	movlb	0	; () banked
 15074  001D3E  6FCE               	movwf	(_channel_protection_timer+17)& (0+255),b
 15075                           
 15076                           ;main.c: 1950: break;
 15077  001D40  D06C               	goto	l10976
 15078  001D42                     l10958:
 15079                           
 15080                           ; BSR set to: 0
 15081                           ;main.c: 1953: channel_protection_timer[ 9 ] =
 15082                           ;main.c: 1954: Read_b_eep(0x43 + 46 + 38) * 256 +
 15083                           ;main.c: 1956: Read_b_eep(0x43 + 46 + 39);
 15084  001D42  0E00               	movlw	0
 15085  001D44  6E17               	movwf	?_Read_b_eep+1,c
 15086  001D46  0E98               	movlw	152
 15087  001D48  6E16               	movwf	?_Read_b_eep,c
 15088  001D4A  ECD8  F037         	call	_Read_b_eep	;wreg free
 15089  001D4E  0100               	movlb	0	; () banked
 15090  001D50  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 15091  001D52  0E00               	movlw	0
 15092  001D54  6E17               	movwf	?_Read_b_eep+1,c
 15093  001D56  0E97               	movlw	151
 15094  001D58  6E16               	movwf	?_Read_b_eep,c
 15095  001D5A  ECD8  F037         	call	_Read_b_eep	;wreg free
 15096  001D5E                     L110:
 15097  001D5E  0100               	movlb	0	; () banked
 15098  001D60  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 15099  001D62  0100               	movlb	0	; () banked
 15100  001D64  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 15101  001D66  0100               	movlb	0	; () banked
 15102  001D68  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 15103  001D6A  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 15104  001D6C  0100               	movlb	0	; () banked
 15105  001D6E  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 15106  001D70  0100               	movlb	0	; () banked
 15107  001D72  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 15108  001D74  0100               	movlb	0	; () banked
 15109  001D76  0100               	movlb	0	; () banked
 15110  001D78  6FCF               	movwf	(_channel_protection_timer+18)& (0+255),b
 15111  001D7A  0100               	movlb	0	; () banked
 15112  001D7C  0E00               	movlw	0
 15113  001D7E  0100               	movlb	0	; () banked
 15114  001D80  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 15115  001D82  0100               	movlb	0	; () banked
 15116  001D84  6FD0               	movwf	(_channel_protection_timer+19)& (0+255),b
 15117                           
 15118                           ;main.c: 1958: break;
 15119  001D86  D049               	goto	l10976
 15120  001D88                     l10962:
 15121                           
 15122                           ; BSR set to: 0
 15123  001D88  0100               	movlb	0	; () banked
 15124  001D8A  0100               	movlb	0	; () banked
 15125  001D8C  51A2               	movf	vscp_writeAppReg@reg& (0+255),w,b
 15126                           
 15127                           ; Switch size 1, requested type "space"
 15128                           ; Number of cases is 10, Range of values is 21 to 39
 15129                           ; switch strategies available:
 15130                           ; Name         Instructions Cycles
 15131                           ; simple_byte           31    16 (average)
 15132                           ;	Chosen strategy is simple_byte
 15133  001D8E  0A15               	xorlw	21	; case 21
 15134  001D90  B4D8               	btfsc	status,2,c
 15135  001D92  D69C               	goto	l10940
 15136  001D94  0A02               	xorlw	2	; case 23
 15137  001D96  B4D8               	btfsc	status,2,c
 15138  001D98  D6BC               	goto	l10942
 15139  001D9A  0A0E               	xorlw	14	; case 25
 15140  001D9C  B4D8               	btfsc	status,2,c
 15141  001D9E  D6DC               	goto	l10944
 15142  001DA0  0A02               	xorlw	2	; case 27
 15143  001DA2  B4D8               	btfsc	status,2,c
 15144  001DA4  D6FC               	goto	l10946
 15145  001DA6  0A06               	xorlw	6	; case 29
 15146  001DA8  B4D8               	btfsc	status,2,c
 15147  001DAA  D71C               	goto	l10948
 15148  001DAC  0A02               	xorlw	2	; case 31
 15149  001DAE  B4D8               	btfsc	status,2,c
 15150  001DB0  D73C               	goto	l10950
 15151  001DB2  0A3E               	xorlw	62	; case 33
 15152  001DB4  B4D8               	btfsc	status,2,c
 15153  001DB6  D75C               	goto	l10952
 15154  001DB8  0A02               	xorlw	2	; case 35
 15155  001DBA  B4D8               	btfsc	status,2,c
 15156  001DBC  D77C               	goto	l10954
 15157  001DBE  0A06               	xorlw	6	; case 37
 15158  001DC0  B4D8               	btfsc	status,2,c
 15159  001DC2  D79C               	goto	l10956
 15160  001DC4  0A02               	xorlw	2	; case 39
 15161  001DC6  B4D8               	btfsc	status,2,c
 15162  001DC8  D7BC               	goto	l10958
 15163  001DCA  D027               	goto	l10976
 15164  001DCC                     l10964:
 15165                           
 15166                           ;main.c: 1969: else if ( 2 == vscp_page_select ) {
 15167  001DCC  5036               	movf	_vscp_page_select,w,c
 15168  001DCE  0A02               	xorlw	2
 15169  001DD0  1037               	iorwf	_vscp_page_select+1,w,c
 15170  001DD2  A4D8               	btfss	status,2,c
 15171  001DD4  D022               	goto	l10976
 15172                           
 15173                           ;main.c: 1971: if ( reg < (0 + 8 * 8) ) {
 15174  001DD6  0E40               	movlw	64
 15175  001DD8  0100               	movlb	0	; () banked
 15176  001DDA  0100               	movlb	0	; () banked
 15177  001DDC  61A2               	cpfslt	vscp_writeAppReg@reg& (0+255),b
 15178  001DDE  D01D               	goto	l10976
 15179                           
 15180                           ; BSR set to: 0
 15181                           ;main.c: 1972: (Busy_eep(), Write_b_eep(0x43 + 46 + 40 + reg,val));
 15182  001DE0  EC10  F038         	call	_Busy_eep	;wreg free
 15183  001DE4  0E99               	movlw	153
 15184  001DE6  0100               	movlb	0	; () banked
 15185  001DE8  0100               	movlb	0	; () banked
 15186  001DEA  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 15187  001DEC  6E16               	movwf	?_Write_b_eep,c
 15188  001DEE  6A17               	clrf	?_Write_b_eep+1,c
 15189  001DF0  0E00               	movlw	0
 15190  001DF2  2217               	addwfc	?_Write_b_eep+1,f,c
 15191  001DF4  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 15192  001DF8  EC40  F036         	call	_Write_b_eep	;wreg free
 15193                           
 15194                           ;main.c: 1973: calculateSetFilterMask();
 15195  001DFC  EC3D  F01B         	call	_calculateSetFilterMask	;wreg free
 15196                           
 15197                           ;main.c: 1974: rv = Read_b_eep(0x43 + 46 + 40 + reg);
 15198  001E00  0E99               	movlw	153
 15199  001E02  0100               	movlb	0	; () banked
 15200  001E04  0100               	movlb	0	; () banked
 15201  001E06  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 15202  001E08  6E16               	movwf	?_Read_b_eep,c
 15203  001E0A  6A17               	clrf	?_Read_b_eep+1,c
 15204  001E0C  0E00               	movlw	0
 15205  001E0E  2217               	addwfc	?_Read_b_eep+1,f,c
 15206  001E10  ECD8  F037         	call	_Read_b_eep	;wreg free
 15207  001E14                     L90:
 15208  001E14  0100               	movlb	0	; () banked
 15209  001E16  0100               	movlb	0	; () banked
 15210  001E18  6FAA               	movwf	vscp_writeAppReg@rv& (0+255),b
 15211  001E1A                     l10976:
 15212                           
 15213                           ;main.c: 1975: }
 15214                           ;main.c: 1977: }
 15215                           ;main.c: 1983: if ( bInfoEvent ) {
 15216  001E1A  0100               	movlb	0	; () banked
 15217  001E1C  0100               	movlb	0	; () banked
 15218  001E1E  51A9               	movf	vscp_writeAppReg@bInfoEvent& (0+255),w,b
 15219  001E20  B4D8               	btfsc	status,2,c
 15220  001E22  D041               	goto	l10988
 15221                           
 15222                           ; BSR set to: 0
 15223                           ;main.c: 1985: unsigned char val;
 15224                           ;main.c: 1986: val = Read_b_eep(0x43 + 14 + ( reg - 14 ));
 15225  001E24  0E43               	movlw	67
 15226  001E26  0100               	movlb	0	; () banked
 15227  001E28  0100               	movlb	0	; () banked
 15228  001E2A  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 15229  001E2C  6E16               	movwf	?_Read_b_eep,c
 15230  001E2E  6A17               	clrf	?_Read_b_eep+1,c
 15231  001E30  0E00               	movlw	0
 15232  001E32  2217               	addwfc	?_Read_b_eep+1,f,c
 15233  001E34  ECD8  F037         	call	_Read_b_eep	;wreg free
 15234  001E38  0100               	movlb	0	; () banked
 15235  001E3A  0100               	movlb	0	; () banked
 15236  001E3C  6FA8               	movwf	vscp_writeAppReg@val_1166& (0+255),b
 15237                           
 15238                           ; BSR set to: 0
 15239                           ;main.c: 1990: if ( bOn ) {
 15240  001E3E  0100               	movlb	0	; () banked
 15241  001E40  0100               	movlb	0	; () banked
 15242  001E42  51AB               	movf	vscp_writeAppReg@bOn& (0+255),w,b
 15243  001E44  B4D8               	btfsc	status,2,c
 15244  001E46  D018               	goto	l740
 15245                           
 15246                           ; BSR set to: 0
 15247                           ;main.c: 1992: if ( val & 0x08 ) {
 15248  001E48  0100               	movlb	0	; () banked
 15249  001E4A  0100               	movlb	0	; () banked
 15250  001E4C  A7A8               	btfss	vscp_writeAppReg@val_1166& (0+255),3,b
 15251  001E4E  D02B               	goto	l10988
 15252                           
 15253                           ; BSR set to: 0
 15254                           ;main.c: 1993: SendInformationEvent( reg - 14,
 15255                           ;main.c: 1994: 20,
 15256                           ;main.c: 1995: 3 );
 15257  001E50  0100               	movlb	0	; () banked
 15258  001E52  0100               	movlb	0	; () banked
 15259  001E54  51A2               	movf	vscp_writeAppReg@reg& (0+255),w,b
 15260  001E56  0FF2               	addlw	242
 15261  001E58  6E30               	movwf	?_SendInformationEvent,c
 15262  001E5A  0100               	movlb	0	; () banked
 15263  001E5C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 15264  001E5E  0E14               	movlw	20
 15265  001E60  6E31               	movwf	?_SendInformationEvent+1,c
 15266  001E62  0100               	movlb	0	; () banked
 15267  001E64  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 15268  001E66  0100               	movlb	0	; () banked
 15269  001E68  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 15270  001E6A  0E03               	movlw	3
 15271  001E6C  6E32               	movwf	?_SendInformationEvent+2,c
 15272  001E6E  0100               	movlb	0	; () banked
 15273  001E70  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 15274  001E72  ECFC  F034         	call	_SendInformationEvent	;wreg free
 15275  001E76  D017               	goto	l10988
 15276  001E78                     l740:
 15277                           
 15278                           ; BSR set to: 0
 15279                           ;main.c: 1999: else {
 15280                           ;main.c: 2001: if ( val & 0x10 ) {
 15281  001E78  0100               	movlb	0	; () banked
 15282  001E7A  0100               	movlb	0	; () banked
 15283  001E7C  A9A8               	btfss	vscp_writeAppReg@val_1166& (0+255),4,b
 15284  001E7E  D013               	goto	l10988
 15285                           
 15286                           ; BSR set to: 0
 15287                           ;main.c: 2002: SendInformationEvent( reg - 14,
 15288                           ;main.c: 2003: 20,
 15289                           ;main.c: 2004: 4 );
 15290  001E80  0100               	movlb	0	; () banked
 15291  001E82  0100               	movlb	0	; () banked
 15292  001E84  51A2               	movf	vscp_writeAppReg@reg& (0+255),w,b
 15293  001E86  0FF2               	addlw	242
 15294  001E88  6E30               	movwf	?_SendInformationEvent,c
 15295  001E8A  0100               	movlb	0	; () banked
 15296  001E8C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 15297  001E8E  0E14               	movlw	20
 15298  001E90  6E31               	movwf	?_SendInformationEvent+1,c
 15299  001E92  0100               	movlb	0	; () banked
 15300  001E94  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 15301  001E96  0100               	movlb	0	; () banked
 15302  001E98  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 15303  001E9A  0E04               	movlw	4
 15304  001E9C  6E32               	movwf	?_SendInformationEvent+2,c
 15305  001E9E  0100               	movlb	0	; () banked
 15306  001EA0  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 15307  001EA2  ECFC  F034         	call	_SendInformationEvent	;wreg free
 15308  001EA6                     l10988:
 15309                           
 15310                           ;main.c: 2005: }
 15311                           ;main.c: 2007: }
 15312                           ;main.c: 2008: }
 15313                           ;main.c: 2010: return rv;
 15314  001EA6  0100               	movlb	0	; () banked
 15315  001EA8  0100               	movlb	0	; () banked
 15316  001EAA  51AA               	movf	vscp_writeAppReg@rv& (0+255),w,b
 15317                           
 15318                           ; BSR set to: 0
 15319                           
 15320                           ; BSR set to: 0
 15321  001EAC  0012               	return	
 15322  001EAE                     __end_of_vscp_writeAppReg:
 15323                           	opt stack 0
 15324                           tblptru	equ	0xFF8
 15325                           prodh	equ	0xFF4
 15326                           prodl	equ	0xFF3
 15327                           intcon2	equ	0xFF1
 15328                           postinc0	equ	0xFEE
 15329                           wreg	equ	0xFE8
 15330                           indf2	equ	0xFDF
 15331                           postinc2	equ	0xFDE
 15332                           postdec2	equ	0xFDD
 15333                           fsr2h	equ	0xFDA
 15334                           fsr2l	equ	0xFD9
 15335                           status	equ	0xFD8
 15336                           
 15337 ;; *************** function _calculateSetFilterMask *****************
 15338 ;; Defined at:
 15339 ;;		line 3205 in file "../main.c"
 15340 ;; Parameters:    Size  Location     Type
 15341 ;;		None
 15342 ;; Auto vars:     Size  Location     Type
 15343 ;;  rowfilter       4   45[COMRAM] unsigned long 
 15344 ;;  filter          4   41[COMRAM] unsigned long 
 15345 ;;  mask            4   37[COMRAM] unsigned long 
 15346 ;;  rowmask         4   32[COMRAM] unsigned long 
 15347 ;;  i               1   50[COMRAM] unsigned char 
 15348 ;;  j               1   49[COMRAM] unsigned char 
 15349 ;;  lastOID         1   36[COMRAM] unsigned char 
 15350 ;; Return value:  Size  Location     Type
 15351 ;;		None               void
 15352 ;; Registers used:
 15353 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 15354 ;; Tracked objects:
 15355 ;;		On entry : 0/0
 15356 ;;		On exit  : 0/0
 15357 ;;		Unchanged: 0/0
 15358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15359 ;;      Params:         0       0       0       0       0       0       0
 15360 ;;      Locals:        19       0       0       0       0       0       0
 15361 ;;      Temps:          0      32       0       0       0       0       0
 15362 ;;      Totals:        19      32       0       0       0       0       0
 15363 ;;Total ram usage:       51 bytes
 15364 ;; Hardware stack levels used:    1
 15365 ;; Hardware stack levels required when called:    3
 15366 ;; This function calls:
 15367 ;;		_ECANSetOperationMode
 15368 ;;		__CANIDToRegs
 15369 ;;		_Read_b_eep
 15370 ;; This function is called by:
 15371 ;;		_vscp_writeAppReg
 15372 ;; This function uses a non-reentrant model
 15373 ;;
 15374                           
 15375                           	psect	text25
 15376  00367A                     __ptext25:
 15377                           	opt stack 0
 15378  00367A                     _calculateSetFilterMask:
 15379                           	opt stack 23
 15380                           
 15381                           ;main.c: 3206: uint8_t i,j;
 15382                           ;main.c: 3207: uint8_t lastOID;
 15383                           ;main.c: 3208: uint32_t rowmask;
 15384                           ;main.c: 3209: uint32_t rowfilter;
 15385                           ;main.c: 3212: uint32_t mask = 0xffffffff;
 15386                           
 15387                           ; BSR set to: 0
 15388                           ;incstack = 0
 15389                           ;incstack = 0
 15390  00367A  6826               	setf	calculateSetFilterMask@mask,c
 15391  00367C  6827               	setf	calculateSetFilterMask@mask+1,c
 15392  00367E  6828               	setf	calculateSetFilterMask@mask+2,c
 15393  003680  6829               	setf	calculateSetFilterMask@mask+3,c
 15394                           
 15395                           ;main.c: 3213: uint32_t filter = 0;
 15396  003682  0E00               	movlw	0
 15397  003684  6E2A               	movwf	calculateSetFilterMask@filter,c
 15398  003686  0E00               	movlw	0
 15399  003688  6E2B               	movwf	calculateSetFilterMask@filter+1,c
 15400  00368A  0E00               	movlw	0
 15401  00368C  6E2C               	movwf	calculateSetFilterMask@filter+2,c
 15402  00368E  0E00               	movlw	0
 15403  003690  6E2D               	movwf	calculateSetFilterMask@filter+3,c
 15404                           
 15405                           ;main.c: 3216: for ( i=0; i < 8; i++ ) {
 15406  003692  0100               	movlb	0	; () banked
 15407  003694  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 15408  003696  0E00               	movlw	0
 15409  003698  6E33               	movwf	calculateSetFilterMask@i,c
 15410  00369A  0100               	movlb	0	; () banked
 15411  00369C  5160               	movf	??_calculateSetFilterMask& (0+255),w,b
 15412  00369E  D313               	goto	L112
 15413  0036A0                     l11000:
 15414                           
 15415                           ;main.c: 3219: if ( Read_b_eep(0x43 + 8*i + 1) & 0x80 ) {
 15416  0036A0  5033               	movf	calculateSetFilterMask@i,w,c
 15417  0036A2  0100               	movlb	0	; () banked
 15418  0036A4  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 15419  0036A6  6B61               	clrf	(??_calculateSetFilterMask+1)& (0+255),b
 15420  0036A8  0100               	movlb	0	; () banked
 15421  0036AA  90D8               	bcf	status,0,c
 15422  0036AC  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 15423  0036AE  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15424  0036B0  0100               	movlb	0	; () banked
 15425  0036B2  90D8               	bcf	status,0,c
 15426  0036B4  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 15427  0036B6  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15428  0036B8  0100               	movlb	0	; () banked
 15429  0036BA  90D8               	bcf	status,0,c
 15430  0036BC  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 15431  0036BE  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15432  0036C0  0E44               	movlw	68
 15433  0036C2  0100               	movlb	0	; () banked
 15434  0036C4  2560               	addwf	??_calculateSetFilterMask& (0+255),w,b
 15435  0036C6  6E16               	movwf	?_Read_b_eep,c
 15436  0036C8  0E00               	movlw	0
 15437  0036CA  0100               	movlb	0	; () banked
 15438  0036CC  2161               	addwfc	(??_calculateSetFilterMask+1)& (0+255),w,b
 15439  0036CE  6E17               	movwf	?_Read_b_eep+1,c
 15440  0036D0  ECD8  F037         	call	_Read_b_eep	;wreg free
 15441  0036D4  0100               	movlb	0	; () banked
 15442  0036D6  6F62               	movwf	(??_calculateSetFilterMask+2)& (0+255),b
 15443  0036D8  0100               	movlb	0	; () banked
 15444  0036DA  AF62               	btfss	(??_calculateSetFilterMask+2)& (0+255),7,b
 15445  0036DC  D2F3               	goto	l11044
 15446                           
 15447                           ; BSR set to: 0
 15448                           ;main.c: 3228: rowmask =
 15449                           ;main.c: 3230: ( (uint32_t)( Read_b_eep(0x43 + 8*i + 1) & 2 ) << 23 ) |
 15450                           ;main.c: 3232: ( (uint32_t)Read_b_eep(0x43 + 8*i + 2) << 16 ) |
 15451                           ;main.c: 3234: ( (uint32_t)Read_b_eep(0x43 + 8*i + 4) << 8 ) |
 15452                           ;main.c: 3236: 0xff;
 15453  0036DE  5033               	movf	calculateSetFilterMask@i,w,c
 15454  0036E0  0100               	movlb	0	; () banked
 15455  0036E2  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 15456  0036E4  6B61               	clrf	(??_calculateSetFilterMask+1)& (0+255),b
 15457  0036E6  0100               	movlb	0	; () banked
 15458  0036E8  90D8               	bcf	status,0,c
 15459  0036EA  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 15460  0036EC  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15461  0036EE  0100               	movlb	0	; () banked
 15462  0036F0  90D8               	bcf	status,0,c
 15463  0036F2  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 15464  0036F4  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15465  0036F6  0100               	movlb	0	; () banked
 15466  0036F8  90D8               	bcf	status,0,c
 15467  0036FA  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 15468  0036FC  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15469  0036FE  0E47               	movlw	71
 15470  003700  0100               	movlb	0	; () banked
 15471  003702  2560               	addwf	??_calculateSetFilterMask& (0+255),w,b
 15472  003704  6E16               	movwf	?_Read_b_eep,c
 15473  003706  0E00               	movlw	0
 15474  003708  0100               	movlb	0	; () banked
 15475  00370A  2161               	addwfc	(??_calculateSetFilterMask+1)& (0+255),w,b
 15476  00370C  6E17               	movwf	?_Read_b_eep+1,c
 15477  00370E  ECD8  F037         	call	_Read_b_eep	;wreg free
 15478  003712  0100               	movlb	0	; () banked
 15479  003714  6F62               	movwf	(??_calculateSetFilterMask+2)& (0+255),b
 15480  003716  C062  F063         	movff	??_calculateSetFilterMask+2,??_calculateSetFilterMask+3
 15481  00371A  0100               	movlb	0	; () banked
 15482  00371C  6B64               	clrf	(??_calculateSetFilterMask+4)& (0+255),b
 15483  00371E  6B65               	clrf	(??_calculateSetFilterMask+5)& (0+255),b
 15484  003720  6B66               	clrf	(??_calculateSetFilterMask+6)& (0+255),b
 15485  003722  C065  F066         	movff	??_calculateSetFilterMask+5,??_calculateSetFilterMask+6
 15486  003726  C064  F065         	movff	??_calculateSetFilterMask+4,??_calculateSetFilterMask+5
 15487  00372A  C063  F064         	movff	??_calculateSetFilterMask+3,??_calculateSetFilterMask+4
 15488  00372E  0100               	movlb	0	; () banked
 15489  003730  6B63               	clrf	(??_calculateSetFilterMask+3)& (0+255),b
 15490  003732  5033               	movf	calculateSetFilterMask@i,w,c
 15491  003734  0100               	movlb	0	; () banked
 15492  003736  6F67               	movwf	(??_calculateSetFilterMask+7)& (0+255),b
 15493  003738  6B68               	clrf	(??_calculateSetFilterMask+8)& (0+255),b
 15494  00373A  0100               	movlb	0	; () banked
 15495  00373C  90D8               	bcf	status,0,c
 15496  00373E  3767               	rlcf	(??_calculateSetFilterMask+7)& (0+255),f,b
 15497  003740  3768               	rlcf	(??_calculateSetFilterMask+8)& (0+255),f,b
 15498  003742  0100               	movlb	0	; () banked
 15499  003744  90D8               	bcf	status,0,c
 15500  003746  3767               	rlcf	(??_calculateSetFilterMask+7)& (0+255),f,b
 15501  003748  3768               	rlcf	(??_calculateSetFilterMask+8)& (0+255),f,b
 15502  00374A  0100               	movlb	0	; () banked
 15503  00374C  90D8               	bcf	status,0,c
 15504  00374E  3767               	rlcf	(??_calculateSetFilterMask+7)& (0+255),f,b
 15505  003750  3768               	rlcf	(??_calculateSetFilterMask+8)& (0+255),f,b
 15506  003752  0E45               	movlw	69
 15507  003754  0100               	movlb	0	; () banked
 15508  003756  2567               	addwf	(??_calculateSetFilterMask+7)& (0+255),w,b
 15509  003758  6E16               	movwf	?_Read_b_eep,c
 15510  00375A  0E00               	movlw	0
 15511  00375C  0100               	movlb	0	; () banked
 15512  00375E  2168               	addwfc	(??_calculateSetFilterMask+8)& (0+255),w,b
 15513  003760  6E17               	movwf	?_Read_b_eep+1,c
 15514  003762  ECD8  F037         	call	_Read_b_eep	;wreg free
 15515  003766  0100               	movlb	0	; () banked
 15516  003768  6F69               	movwf	(??_calculateSetFilterMask+9)& (0+255),b
 15517  00376A  C069  F06A         	movff	??_calculateSetFilterMask+9,??_calculateSetFilterMask+10
 15518  00376E  0100               	movlb	0	; () banked
 15519  003770  6B6B               	clrf	(??_calculateSetFilterMask+11)& (0+255),b
 15520  003772  6B6C               	clrf	(??_calculateSetFilterMask+12)& (0+255),b
 15521  003774  6B6D               	clrf	(??_calculateSetFilterMask+13)& (0+255),b
 15522  003776  C06B  F06D         	movff	??_calculateSetFilterMask+11,??_calculateSetFilterMask+13
 15523  00377A  C06A  F06C         	movff	??_calculateSetFilterMask+10,??_calculateSetFilterMask+12
 15524  00377E  0100               	movlb	0	; () banked
 15525  003780  6B6B               	clrf	(??_calculateSetFilterMask+11)& (0+255),b
 15526  003782  6B6A               	clrf	(??_calculateSetFilterMask+10)& (0+255),b
 15527  003784  5033               	movf	calculateSetFilterMask@i,w,c
 15528  003786  0100               	movlb	0	; () banked
 15529  003788  6F6E               	movwf	(??_calculateSetFilterMask+14)& (0+255),b
 15530  00378A  6B6F               	clrf	(??_calculateSetFilterMask+15)& (0+255),b
 15531  00378C  0100               	movlb	0	; () banked
 15532  00378E  90D8               	bcf	status,0,c
 15533  003790  376E               	rlcf	(??_calculateSetFilterMask+14)& (0+255),f,b
 15534  003792  376F               	rlcf	(??_calculateSetFilterMask+15)& (0+255),f,b
 15535  003794  0100               	movlb	0	; () banked
 15536  003796  90D8               	bcf	status,0,c
 15537  003798  376E               	rlcf	(??_calculateSetFilterMask+14)& (0+255),f,b
 15538  00379A  376F               	rlcf	(??_calculateSetFilterMask+15)& (0+255),f,b
 15539  00379C  0100               	movlb	0	; () banked
 15540  00379E  90D8               	bcf	status,0,c
 15541  0037A0  376E               	rlcf	(??_calculateSetFilterMask+14)& (0+255),f,b
 15542  0037A2  376F               	rlcf	(??_calculateSetFilterMask+15)& (0+255),f,b
 15543  0037A4  0E44               	movlw	68
 15544  0037A6  0100               	movlb	0	; () banked
 15545  0037A8  256E               	addwf	(??_calculateSetFilterMask+14)& (0+255),w,b
 15546  0037AA  6E16               	movwf	?_Read_b_eep,c
 15547  0037AC  0E00               	movlw	0
 15548  0037AE  0100               	movlb	0	; () banked
 15549  0037B0  216F               	addwfc	(??_calculateSetFilterMask+15)& (0+255),w,b
 15550  0037B2  6E17               	movwf	?_Read_b_eep+1,c
 15551  0037B4  ECD8  F037         	call	_Read_b_eep	;wreg free
 15552  0037B8  0100               	movlb	0	; () banked
 15553  0037BA  6F70               	movwf	(??_calculateSetFilterMask+16)& (0+255),b
 15554  0037BC  0E02               	movlw	2
 15555  0037BE  0100               	movlb	0	; () banked
 15556  0037C0  1770               	andwf	(??_calculateSetFilterMask+16)& (0+255),f,b
 15557  0037C2  C070  F071         	movff	??_calculateSetFilterMask+16,??_calculateSetFilterMask+17
 15558  0037C6  0100               	movlb	0	; () banked
 15559  0037C8  6B72               	clrf	(??_calculateSetFilterMask+18)& (0+255),b
 15560  0037CA  6B73               	clrf	(??_calculateSetFilterMask+19)& (0+255),b
 15561  0037CC  6B74               	clrf	(??_calculateSetFilterMask+20)& (0+255),b
 15562  0037CE  0E17               	movlw	23
 15563  0037D0                     u13115:
 15564  0037D0  90D8               	bcf	status,0,c
 15565  0037D2  0100               	movlb	0	; () banked
 15566  0037D4  3771               	rlcf	(??_calculateSetFilterMask+17)& (0+255),f,b
 15567  0037D6  3772               	rlcf	(??_calculateSetFilterMask+18)& (0+255),f,b
 15568  0037D8  3773               	rlcf	(??_calculateSetFilterMask+19)& (0+255),f,b
 15569  0037DA  3774               	rlcf	(??_calculateSetFilterMask+20)& (0+255),f,b
 15570  0037DC  2EE8               	decfsz	wreg,f,c
 15571  0037DE  D7F8               	goto	u13115
 15572  0037E0  0100               	movlb	0	; () banked
 15573  0037E2  516A               	movf	(??_calculateSetFilterMask+10)& (0+255),w,b
 15574  0037E4  0100               	movlb	0	; () banked
 15575  0037E6  1171               	iorwf	(??_calculateSetFilterMask+17)& (0+255),w,b
 15576  0037E8  0100               	movlb	0	; () banked
 15577  0037EA  6F75               	movwf	(??_calculateSetFilterMask+21)& (0+255),b
 15578  0037EC  0100               	movlb	0	; () banked
 15579  0037EE  516B               	movf	(??_calculateSetFilterMask+11)& (0+255),w,b
 15580  0037F0  0100               	movlb	0	; () banked
 15581  0037F2  1172               	iorwf	(??_calculateSetFilterMask+18)& (0+255),w,b
 15582  0037F4  0100               	movlb	0	; () banked
 15583  0037F6  6F76               	movwf	(??_calculateSetFilterMask+22)& (0+255),b
 15584  0037F8  0100               	movlb	0	; () banked
 15585  0037FA  516C               	movf	(??_calculateSetFilterMask+12)& (0+255),w,b
 15586  0037FC  0100               	movlb	0	; () banked
 15587  0037FE  1173               	iorwf	(??_calculateSetFilterMask+19)& (0+255),w,b
 15588  003800  0100               	movlb	0	; () banked
 15589  003802  6F77               	movwf	(??_calculateSetFilterMask+23)& (0+255),b
 15590  003804  0100               	movlb	0	; () banked
 15591  003806  516D               	movf	(??_calculateSetFilterMask+13)& (0+255),w,b
 15592  003808  0100               	movlb	0	; () banked
 15593  00380A  1174               	iorwf	(??_calculateSetFilterMask+20)& (0+255),w,b
 15594  00380C  0100               	movlb	0	; () banked
 15595  00380E  6F78               	movwf	(??_calculateSetFilterMask+24)& (0+255),b
 15596  003810  0100               	movlb	0	; () banked
 15597  003812  5163               	movf	(??_calculateSetFilterMask+3)& (0+255),w,b
 15598  003814  0100               	movlb	0	; () banked
 15599  003816  1175               	iorwf	(??_calculateSetFilterMask+21)& (0+255),w,b
 15600  003818  0100               	movlb	0	; () banked
 15601  00381A  6F79               	movwf	(??_calculateSetFilterMask+25)& (0+255),b
 15602  00381C  0100               	movlb	0	; () banked
 15603  00381E  5164               	movf	(??_calculateSetFilterMask+4)& (0+255),w,b
 15604  003820  0100               	movlb	0	; () banked
 15605  003822  1176               	iorwf	(??_calculateSetFilterMask+22)& (0+255),w,b
 15606  003824  0100               	movlb	0	; () banked
 15607  003826  6F7A               	movwf	(??_calculateSetFilterMask+26)& (0+255),b
 15608  003828  0100               	movlb	0	; () banked
 15609  00382A  5165               	movf	(??_calculateSetFilterMask+5)& (0+255),w,b
 15610  00382C  0100               	movlb	0	; () banked
 15611  00382E  1177               	iorwf	(??_calculateSetFilterMask+23)& (0+255),w,b
 15612  003830  0100               	movlb	0	; () banked
 15613  003832  6F7B               	movwf	(??_calculateSetFilterMask+27)& (0+255),b
 15614  003834  0100               	movlb	0	; () banked
 15615  003836  5166               	movf	(??_calculateSetFilterMask+6)& (0+255),w,b
 15616  003838  0100               	movlb	0	; () banked
 15617  00383A  1178               	iorwf	(??_calculateSetFilterMask+24)& (0+255),w,b
 15618  00383C  0100               	movlb	0	; () banked
 15619  00383E  6F7C               	movwf	(??_calculateSetFilterMask+28)& (0+255),b
 15620  003840  0EFF               	movlw	255
 15621  003842  0100               	movlb	0	; () banked
 15622  003844  1179               	iorwf	(??_calculateSetFilterMask+25)& (0+255),w,b
 15623  003846  6E21               	movwf	calculateSetFilterMask@rowmask,c
 15624  003848  0100               	movlb	0	; () banked
 15625  00384A  517A               	movf	(??_calculateSetFilterMask+26)& (0+255),w,b
 15626  00384C  6E22               	movwf	calculateSetFilterMask@rowmask+1,c
 15627  00384E  0100               	movlb	0	; () banked
 15628  003850  517B               	movf	(??_calculateSetFilterMask+27)& (0+255),w,b
 15629  003852  6E23               	movwf	calculateSetFilterMask@rowmask+2,c
 15630  003854  0100               	movlb	0	; () banked
 15631  003856  517C               	movf	(??_calculateSetFilterMask+28)& (0+255),w,b
 15632  003858  6E24               	movwf	calculateSetFilterMask@rowmask+3,c
 15633                           
 15634                           ;main.c: 3237: ;
 15635                           ;main.c: 3242: rowfilter =
 15636                           ;main.c: 3244: ( (uint32_t)( Read_b_eep(0x43 + 8*i + 1) & 1 ) << 24 ) |
 15637                           ;main.c: 3246: ( (uint32_t)Read_b_eep(0x43 + 8*i + 3) << 16 ) |
 15638                           ;main.c: 3248: ( (uint32_t)Read_b_eep(0x43 + 8*i + 5) << 8 ) |
 15639                           ;main.c: 3251: Read_b_eep(0x43 + 8*i);
 15640  00385A  5033               	movf	calculateSetFilterMask@i,w,c
 15641  00385C  0100               	movlb	0	; () banked
 15642  00385E  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 15643  003860  6B61               	clrf	(??_calculateSetFilterMask+1)& (0+255),b
 15644  003862  0100               	movlb	0	; () banked
 15645  003864  90D8               	bcf	status,0,c
 15646  003866  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 15647  003868  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15648  00386A  0100               	movlb	0	; () banked
 15649  00386C  90D8               	bcf	status,0,c
 15650  00386E  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 15651  003870  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15652  003872  0100               	movlb	0	; () banked
 15653  003874  90D8               	bcf	status,0,c
 15654  003876  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 15655  003878  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15656  00387A  0E48               	movlw	72
 15657  00387C  0100               	movlb	0	; () banked
 15658  00387E  2560               	addwf	??_calculateSetFilterMask& (0+255),w,b
 15659  003880  6E16               	movwf	?_Read_b_eep,c
 15660  003882  0E00               	movlw	0
 15661  003884  0100               	movlb	0	; () banked
 15662  003886  2161               	addwfc	(??_calculateSetFilterMask+1)& (0+255),w,b
 15663  003888  6E17               	movwf	?_Read_b_eep+1,c
 15664  00388A  ECD8  F037         	call	_Read_b_eep	;wreg free
 15665  00388E  0100               	movlb	0	; () banked
 15666  003890  6F62               	movwf	(??_calculateSetFilterMask+2)& (0+255),b
 15667  003892  C062  F063         	movff	??_calculateSetFilterMask+2,??_calculateSetFilterMask+3
 15668  003896  0100               	movlb	0	; () banked
 15669  003898  6B64               	clrf	(??_calculateSetFilterMask+4)& (0+255),b
 15670  00389A  6B65               	clrf	(??_calculateSetFilterMask+5)& (0+255),b
 15671  00389C  6B66               	clrf	(??_calculateSetFilterMask+6)& (0+255),b
 15672  00389E  C065  F066         	movff	??_calculateSetFilterMask+5,??_calculateSetFilterMask+6
 15673  0038A2  C064  F065         	movff	??_calculateSetFilterMask+4,??_calculateSetFilterMask+5
 15674  0038A6  C063  F064         	movff	??_calculateSetFilterMask+3,??_calculateSetFilterMask+4
 15675  0038AA  0100               	movlb	0	; () banked
 15676  0038AC  6B63               	clrf	(??_calculateSetFilterMask+3)& (0+255),b
 15677  0038AE  5033               	movf	calculateSetFilterMask@i,w,c
 15678  0038B0  0100               	movlb	0	; () banked
 15679  0038B2  6F67               	movwf	(??_calculateSetFilterMask+7)& (0+255),b
 15680  0038B4  6B68               	clrf	(??_calculateSetFilterMask+8)& (0+255),b
 15681  0038B6  0100               	movlb	0	; () banked
 15682  0038B8  90D8               	bcf	status,0,c
 15683  0038BA  3767               	rlcf	(??_calculateSetFilterMask+7)& (0+255),f,b
 15684  0038BC  3768               	rlcf	(??_calculateSetFilterMask+8)& (0+255),f,b
 15685  0038BE  0100               	movlb	0	; () banked
 15686  0038C0  90D8               	bcf	status,0,c
 15687  0038C2  3767               	rlcf	(??_calculateSetFilterMask+7)& (0+255),f,b
 15688  0038C4  3768               	rlcf	(??_calculateSetFilterMask+8)& (0+255),f,b
 15689  0038C6  0100               	movlb	0	; () banked
 15690  0038C8  90D8               	bcf	status,0,c
 15691  0038CA  3767               	rlcf	(??_calculateSetFilterMask+7)& (0+255),f,b
 15692  0038CC  3768               	rlcf	(??_calculateSetFilterMask+8)& (0+255),f,b
 15693  0038CE  0E46               	movlw	70
 15694  0038D0  0100               	movlb	0	; () banked
 15695  0038D2  2567               	addwf	(??_calculateSetFilterMask+7)& (0+255),w,b
 15696  0038D4  6E16               	movwf	?_Read_b_eep,c
 15697  0038D6  0E00               	movlw	0
 15698  0038D8  0100               	movlb	0	; () banked
 15699  0038DA  2168               	addwfc	(??_calculateSetFilterMask+8)& (0+255),w,b
 15700  0038DC  6E17               	movwf	?_Read_b_eep+1,c
 15701  0038DE  ECD8  F037         	call	_Read_b_eep	;wreg free
 15702  0038E2  0100               	movlb	0	; () banked
 15703  0038E4  6F69               	movwf	(??_calculateSetFilterMask+9)& (0+255),b
 15704  0038E6  C069  F06A         	movff	??_calculateSetFilterMask+9,??_calculateSetFilterMask+10
 15705  0038EA  0100               	movlb	0	; () banked
 15706  0038EC  6B6B               	clrf	(??_calculateSetFilterMask+11)& (0+255),b
 15707  0038EE  6B6C               	clrf	(??_calculateSetFilterMask+12)& (0+255),b
 15708  0038F0  6B6D               	clrf	(??_calculateSetFilterMask+13)& (0+255),b
 15709  0038F2  C06B  F06D         	movff	??_calculateSetFilterMask+11,??_calculateSetFilterMask+13
 15710  0038F6  C06A  F06C         	movff	??_calculateSetFilterMask+10,??_calculateSetFilterMask+12
 15711  0038FA  0100               	movlb	0	; () banked
 15712  0038FC  6B6B               	clrf	(??_calculateSetFilterMask+11)& (0+255),b
 15713  0038FE  6B6A               	clrf	(??_calculateSetFilterMask+10)& (0+255),b
 15714  003900  5033               	movf	calculateSetFilterMask@i,w,c
 15715  003902  0100               	movlb	0	; () banked
 15716  003904  6F6E               	movwf	(??_calculateSetFilterMask+14)& (0+255),b
 15717  003906  6B6F               	clrf	(??_calculateSetFilterMask+15)& (0+255),b
 15718  003908  0100               	movlb	0	; () banked
 15719  00390A  90D8               	bcf	status,0,c
 15720  00390C  376E               	rlcf	(??_calculateSetFilterMask+14)& (0+255),f,b
 15721  00390E  376F               	rlcf	(??_calculateSetFilterMask+15)& (0+255),f,b
 15722  003910  0100               	movlb	0	; () banked
 15723  003912  90D8               	bcf	status,0,c
 15724  003914  376E               	rlcf	(??_calculateSetFilterMask+14)& (0+255),f,b
 15725  003916  376F               	rlcf	(??_calculateSetFilterMask+15)& (0+255),f,b
 15726  003918  0100               	movlb	0	; () banked
 15727  00391A  90D8               	bcf	status,0,c
 15728  00391C  376E               	rlcf	(??_calculateSetFilterMask+14)& (0+255),f,b
 15729  00391E  376F               	rlcf	(??_calculateSetFilterMask+15)& (0+255),f,b
 15730  003920  0E44               	movlw	68
 15731  003922  0100               	movlb	0	; () banked
 15732  003924  256E               	addwf	(??_calculateSetFilterMask+14)& (0+255),w,b
 15733  003926  6E16               	movwf	?_Read_b_eep,c
 15734  003928  0E00               	movlw	0
 15735  00392A  0100               	movlb	0	; () banked
 15736  00392C  216F               	addwfc	(??_calculateSetFilterMask+15)& (0+255),w,b
 15737  00392E  6E17               	movwf	?_Read_b_eep+1,c
 15738  003930  ECD8  F037         	call	_Read_b_eep	;wreg free
 15739  003934  0100               	movlb	0	; () banked
 15740  003936  6F70               	movwf	(??_calculateSetFilterMask+16)& (0+255),b
 15741  003938  0E01               	movlw	1
 15742  00393A  0100               	movlb	0	; () banked
 15743  00393C  1770               	andwf	(??_calculateSetFilterMask+16)& (0+255),f,b
 15744  00393E  C070  F071         	movff	??_calculateSetFilterMask+16,??_calculateSetFilterMask+17
 15745  003942  0100               	movlb	0	; () banked
 15746  003944  6B72               	clrf	(??_calculateSetFilterMask+18)& (0+255),b
 15747  003946  6B73               	clrf	(??_calculateSetFilterMask+19)& (0+255),b
 15748  003948  6B74               	clrf	(??_calculateSetFilterMask+20)& (0+255),b
 15749  00394A  C071  F074         	movff	??_calculateSetFilterMask+17,??_calculateSetFilterMask+20
 15750  00394E  0100               	movlb	0	; () banked
 15751  003950  6B73               	clrf	(??_calculateSetFilterMask+19)& (0+255),b
 15752  003952  6B72               	clrf	(??_calculateSetFilterMask+18)& (0+255),b
 15753  003954  6B71               	clrf	(??_calculateSetFilterMask+17)& (0+255),b
 15754  003956  0100               	movlb	0	; () banked
 15755  003958  516A               	movf	(??_calculateSetFilterMask+10)& (0+255),w,b
 15756  00395A  0100               	movlb	0	; () banked
 15757  00395C  1171               	iorwf	(??_calculateSetFilterMask+17)& (0+255),w,b
 15758  00395E  0100               	movlb	0	; () banked
 15759  003960  6F75               	movwf	(??_calculateSetFilterMask+21)& (0+255),b
 15760  003962  0100               	movlb	0	; () banked
 15761  003964  516B               	movf	(??_calculateSetFilterMask+11)& (0+255),w,b
 15762  003966  0100               	movlb	0	; () banked
 15763  003968  1172               	iorwf	(??_calculateSetFilterMask+18)& (0+255),w,b
 15764  00396A  0100               	movlb	0	; () banked
 15765  00396C  6F76               	movwf	(??_calculateSetFilterMask+22)& (0+255),b
 15766  00396E  0100               	movlb	0	; () banked
 15767  003970  516C               	movf	(??_calculateSetFilterMask+12)& (0+255),w,b
 15768  003972  0100               	movlb	0	; () banked
 15769  003974  1173               	iorwf	(??_calculateSetFilterMask+19)& (0+255),w,b
 15770  003976  0100               	movlb	0	; () banked
 15771  003978  6F77               	movwf	(??_calculateSetFilterMask+23)& (0+255),b
 15772  00397A  0100               	movlb	0	; () banked
 15773  00397C  516D               	movf	(??_calculateSetFilterMask+13)& (0+255),w,b
 15774  00397E  0100               	movlb	0	; () banked
 15775  003980  1174               	iorwf	(??_calculateSetFilterMask+20)& (0+255),w,b
 15776  003982  0100               	movlb	0	; () banked
 15777  003984  6F78               	movwf	(??_calculateSetFilterMask+24)& (0+255),b
 15778  003986  0100               	movlb	0	; () banked
 15779  003988  5163               	movf	(??_calculateSetFilterMask+3)& (0+255),w,b
 15780  00398A  0100               	movlb	0	; () banked
 15781  00398C  1175               	iorwf	(??_calculateSetFilterMask+21)& (0+255),w,b
 15782  00398E  0100               	movlb	0	; () banked
 15783  003990  6F79               	movwf	(??_calculateSetFilterMask+25)& (0+255),b
 15784  003992  0100               	movlb	0	; () banked
 15785  003994  5164               	movf	(??_calculateSetFilterMask+4)& (0+255),w,b
 15786  003996  0100               	movlb	0	; () banked
 15787  003998  1176               	iorwf	(??_calculateSetFilterMask+22)& (0+255),w,b
 15788  00399A  0100               	movlb	0	; () banked
 15789  00399C  6F7A               	movwf	(??_calculateSetFilterMask+26)& (0+255),b
 15790  00399E  0100               	movlb	0	; () banked
 15791  0039A0  5165               	movf	(??_calculateSetFilterMask+5)& (0+255),w,b
 15792  0039A2  0100               	movlb	0	; () banked
 15793  0039A4  1177               	iorwf	(??_calculateSetFilterMask+23)& (0+255),w,b
 15794  0039A6  0100               	movlb	0	; () banked
 15795  0039A8  6F7B               	movwf	(??_calculateSetFilterMask+27)& (0+255),b
 15796  0039AA  0100               	movlb	0	; () banked
 15797  0039AC  5166               	movf	(??_calculateSetFilterMask+6)& (0+255),w,b
 15798  0039AE  0100               	movlb	0	; () banked
 15799  0039B0  1178               	iorwf	(??_calculateSetFilterMask+24)& (0+255),w,b
 15800  0039B2  0100               	movlb	0	; () banked
 15801  0039B4  6F7C               	movwf	(??_calculateSetFilterMask+28)& (0+255),b
 15802  0039B6  5033               	movf	calculateSetFilterMask@i,w,c
 15803  0039B8  0100               	movlb	0	; () banked
 15804  0039BA  6F7D               	movwf	(??_calculateSetFilterMask+29)& (0+255),b
 15805  0039BC  6B7E               	clrf	(??_calculateSetFilterMask+30)& (0+255),b
 15806  0039BE  0100               	movlb	0	; () banked
 15807  0039C0  90D8               	bcf	status,0,c
 15808  0039C2  377D               	rlcf	(??_calculateSetFilterMask+29)& (0+255),f,b
 15809  0039C4  377E               	rlcf	(??_calculateSetFilterMask+30)& (0+255),f,b
 15810  0039C6  0100               	movlb	0	; () banked
 15811  0039C8  90D8               	bcf	status,0,c
 15812  0039CA  377D               	rlcf	(??_calculateSetFilterMask+29)& (0+255),f,b
 15813  0039CC  377E               	rlcf	(??_calculateSetFilterMask+30)& (0+255),f,b
 15814  0039CE  0100               	movlb	0	; () banked
 15815  0039D0  90D8               	bcf	status,0,c
 15816  0039D2  377D               	rlcf	(??_calculateSetFilterMask+29)& (0+255),f,b
 15817  0039D4  377E               	rlcf	(??_calculateSetFilterMask+30)& (0+255),f,b
 15818  0039D6  0E43               	movlw	67
 15819  0039D8  0100               	movlb	0	; () banked
 15820  0039DA  257D               	addwf	(??_calculateSetFilterMask+29)& (0+255),w,b
 15821  0039DC  6E16               	movwf	?_Read_b_eep,c
 15822  0039DE  0E00               	movlw	0
 15823  0039E0  0100               	movlb	0	; () banked
 15824  0039E2  217E               	addwfc	(??_calculateSetFilterMask+30)& (0+255),w,b
 15825  0039E4  6E17               	movwf	?_Read_b_eep+1,c
 15826  0039E6  ECD8  F037         	call	_Read_b_eep	;wreg free
 15827  0039EA  0100               	movlb	0	; () banked
 15828  0039EC  6F7F               	movwf	(??_calculateSetFilterMask+31)& (0+255),b
 15829  0039EE  0100               	movlb	0	; () banked
 15830  0039F0  517F               	movf	(??_calculateSetFilterMask+31)& (0+255),w,b
 15831  0039F2  0100               	movlb	0	; () banked
 15832  0039F4  1179               	iorwf	(??_calculateSetFilterMask+25)& (0+255),w,b
 15833  0039F6  6E2E               	movwf	calculateSetFilterMask@rowfilter,c
 15834  0039F8  0100               	movlb	0	; () banked
 15835  0039FA  517A               	movf	(??_calculateSetFilterMask+26)& (0+255),w,b
 15836  0039FC  6E2F               	movwf	calculateSetFilterMask@rowfilter+1,c
 15837  0039FE  0100               	movlb	0	; () banked
 15838  003A00  517B               	movf	(??_calculateSetFilterMask+27)& (0+255),w,b
 15839  003A02  6E30               	movwf	calculateSetFilterMask@rowfilter+2,c
 15840  003A04  0100               	movlb	0	; () banked
 15841  003A06  517C               	movf	(??_calculateSetFilterMask+28)& (0+255),w,b
 15842  003A08  6E31               	movwf	calculateSetFilterMask@rowfilter+3,c
 15843                           
 15844                           ; BSR set to: 0
 15845                           ;main.c: 3253: if ( 0 == i ) filter = rowfilter;
 15846  003A0A  6633               	tstfsz	calculateSetFilterMask@i,c
 15847  003A0C  D008               	goto	l11008
 15848                           
 15849                           ; BSR set to: 0
 15850  003A0E  C02E  F02A         	movff	calculateSetFilterMask@rowfilter,calculateSetFilterMask@filter
 15851  003A12  C02F  F02B         	movff	calculateSetFilterMask@rowfilter+1,calculateSetFilterMask@filter+1
 15852  003A16  C030  F02C         	movff	calculateSetFilterMask@rowfilter+2,calculateSetFilterMask@filter+2
 15853  003A1A  C031  F02D         	movff	calculateSetFilterMask@rowfilter+3,calculateSetFilterMask@filter+3
 15854  003A1E                     l11008:
 15855                           
 15856                           ; BSR set to: 0
 15857                           ;main.c: 3257: mask &= rowmask;
 15858  003A1E  5021               	movf	calculateSetFilterMask@rowmask,w,c
 15859  003A20  1626               	andwf	calculateSetFilterMask@mask,f,c
 15860  003A22  5022               	movf	calculateSetFilterMask@rowmask+1,w,c
 15861  003A24  1627               	andwf	calculateSetFilterMask@mask+1,f,c
 15862  003A26  5023               	movf	calculateSetFilterMask@rowmask+2,w,c
 15863  003A28  1628               	andwf	calculateSetFilterMask@mask+2,f,c
 15864  003A2A  5024               	movf	calculateSetFilterMask@rowmask+3,w,c
 15865  003A2C  1629               	andwf	calculateSetFilterMask@mask+3,f,c
 15866                           
 15867                           ; BSR set to: 0
 15868                           ;main.c: 3262: for ( j=0; j<32; j++ ) {
 15869  003A2E  0100               	movlb	0	; () banked
 15870  003A30  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 15871  003A32  0E00               	movlw	0
 15872  003A34  6E32               	movwf	calculateSetFilterMask@j,c
 15873  003A36  0100               	movlb	0	; () banked
 15874  003A38  5160               	movf	??_calculateSetFilterMask& (0+255),w,b
 15875  003A3A  D091               	goto	L113
 15876  003A3C                     l11016:
 15877                           
 15878                           ; BSR set to: 0
 15879                           ;main.c: 3264: if ( ( ( filter >> j ) & 1 ) != ( ( rowfilter >> j ) & 1 ) ) {
 15880  003A3C  5032               	movf	calculateSetFilterMask@j,w,c
 15881  003A3E  C02E  F060         	movff	calculateSetFilterMask@rowfilter,??_calculateSetFilterMask
 15882  003A42  C02F  F061         	movff	calculateSetFilterMask@rowfilter+1,??_calculateSetFilterMask+1
 15883  003A46  C030  F062         	movff	calculateSetFilterMask@rowfilter+2,??_calculateSetFilterMask+2
 15884  003A4A  C031  F063         	movff	calculateSetFilterMask@rowfilter+3,??_calculateSetFilterMask+3
 15885  003A4E  2AE8               	incf	wreg,f,c
 15886  003A50  D006               	goto	u13140
 15887  003A52                     u13145:
 15888  003A52  0100               	movlb	0	; () banked
 15889  003A54  90D8               	bcf	status,0,c
 15890  003A56  3363               	rrcf	(??_calculateSetFilterMask+3)& (0+255),f,b
 15891  003A58  3362               	rrcf	(??_calculateSetFilterMask+2)& (0+255),f,b
 15892  003A5A  3361               	rrcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15893  003A5C  3360               	rrcf	??_calculateSetFilterMask& (0+255),f,b
 15894  003A5E                     u13140:
 15895  003A5E  2EE8               	decfsz	wreg,f,c
 15896  003A60  D7F8               	goto	u13145
 15897  003A62  0E01               	movlw	1
 15898  003A64  0100               	movlb	0	; () banked
 15899  003A66  1560               	andwf	??_calculateSetFilterMask& (0+255),w,b
 15900  003A68  0100               	movlb	0	; () banked
 15901  003A6A  6F64               	movwf	(??_calculateSetFilterMask+4)& (0+255),b
 15902  003A6C  0E00               	movlw	0
 15903  003A6E  0100               	movlb	0	; () banked
 15904  003A70  1561               	andwf	(??_calculateSetFilterMask+1)& (0+255),w,b
 15905  003A72  0100               	movlb	0	; () banked
 15906  003A74  6F65               	movwf	(??_calculateSetFilterMask+5)& (0+255),b
 15907  003A76  0E00               	movlw	0
 15908  003A78  0100               	movlb	0	; () banked
 15909  003A7A  1562               	andwf	(??_calculateSetFilterMask+2)& (0+255),w,b
 15910  003A7C  0100               	movlb	0	; () banked
 15911  003A7E  6F66               	movwf	(??_calculateSetFilterMask+6)& (0+255),b
 15912  003A80  0E00               	movlw	0
 15913  003A82  0100               	movlb	0	; () banked
 15914  003A84  1563               	andwf	(??_calculateSetFilterMask+3)& (0+255),w,b
 15915  003A86  0100               	movlb	0	; () banked
 15916  003A88  6F67               	movwf	(??_calculateSetFilterMask+7)& (0+255),b
 15917  003A8A  5032               	movf	calculateSetFilterMask@j,w,c
 15918  003A8C  C02A  F068         	movff	calculateSetFilterMask@filter,??_calculateSetFilterMask+8
 15919  003A90  C02B  F069         	movff	calculateSetFilterMask@filter+1,??_calculateSetFilterMask+9
 15920  003A94  C02C  F06A         	movff	calculateSetFilterMask@filter+2,??_calculateSetFilterMask+10
 15921  003A98  C02D  F06B         	movff	calculateSetFilterMask@filter+3,??_calculateSetFilterMask+11
 15922  003A9C  2AE8               	incf	wreg,f,c
 15923  003A9E  D006               	goto	u13150
 15924  003AA0                     u13155:
 15925  003AA0  0100               	movlb	0	; () banked
 15926  003AA2  90D8               	bcf	status,0,c
 15927  003AA4  336B               	rrcf	(??_calculateSetFilterMask+11)& (0+255),f,b
 15928  003AA6  336A               	rrcf	(??_calculateSetFilterMask+10)& (0+255),f,b
 15929  003AA8  3369               	rrcf	(??_calculateSetFilterMask+9)& (0+255),f,b
 15930  003AAA  3368               	rrcf	(??_calculateSetFilterMask+8)& (0+255),f,b
 15931  003AAC                     u13150:
 15932  003AAC  2EE8               	decfsz	wreg,f,c
 15933  003AAE  D7F8               	goto	u13155
 15934  003AB0  0E01               	movlw	1
 15935  003AB2  0100               	movlb	0	; () banked
 15936  003AB4  1568               	andwf	(??_calculateSetFilterMask+8)& (0+255),w,b
 15937  003AB6  0100               	movlb	0	; () banked
 15938  003AB8  6F6C               	movwf	(??_calculateSetFilterMask+12)& (0+255),b
 15939  003ABA  0E00               	movlw	0
 15940  003ABC  0100               	movlb	0	; () banked
 15941  003ABE  1569               	andwf	(??_calculateSetFilterMask+9)& (0+255),w,b
 15942  003AC0  0100               	movlb	0	; () banked
 15943  003AC2  6F6D               	movwf	(??_calculateSetFilterMask+13)& (0+255),b
 15944  003AC4  0E00               	movlw	0
 15945  003AC6  0100               	movlb	0	; () banked
 15946  003AC8  156A               	andwf	(??_calculateSetFilterMask+10)& (0+255),w,b
 15947  003ACA  0100               	movlb	0	; () banked
 15948  003ACC  6F6E               	movwf	(??_calculateSetFilterMask+14)& (0+255),b
 15949  003ACE  0E00               	movlw	0
 15950  003AD0  0100               	movlb	0	; () banked
 15951  003AD2  156B               	andwf	(??_calculateSetFilterMask+11)& (0+255),w,b
 15952  003AD4  0100               	movlb	0	; () banked
 15953  003AD6  6F6F               	movwf	(??_calculateSetFilterMask+15)& (0+255),b
 15954  003AD8  0100               	movlb	0	; () banked
 15955  003ADA  5167               	movf	(??_calculateSetFilterMask+7)& (0+255),w,b
 15956  003ADC  0100               	movlb	0	; () banked
 15957  003ADE  196F               	xorwf	(??_calculateSetFilterMask+15)& (0+255),w,b
 15958  003AE0  E10E               	bnz	u13165
 15959  003AE2  0100               	movlb	0	; () banked
 15960  003AE4  5166               	movf	(??_calculateSetFilterMask+6)& (0+255),w,b
 15961  003AE6  0100               	movlb	0	; () banked
 15962  003AE8  196E               	xorwf	(??_calculateSetFilterMask+14)& (0+255),w,b
 15963  003AEA  E109               	bnz	u13165
 15964  003AEC  0100               	movlb	0	; () banked
 15965  003AEE  5165               	movf	(??_calculateSetFilterMask+5)& (0+255),w,b
 15966  003AF0  0100               	movlb	0	; () banked
 15967  003AF2  196D               	xorwf	(??_calculateSetFilterMask+13)& (0+255),w,b
 15968  003AF4  E104               	bnz	u13165
 15969  003AF6  0100               	movlb	0	; () banked
 15970  003AF8  5164               	movf	(??_calculateSetFilterMask+4)& (0+255),w,b
 15971  003AFA  0100               	movlb	0	; () banked
 15972  003AFC  196C               	xorwf	(??_calculateSetFilterMask+12)& (0+255),w,b
 15973  003AFE                     u13165:
 15974  003AFE  B4D8               	btfsc	status,2,c
 15975  003B00  D02D               	goto	l11020
 15976                           
 15977                           ; BSR set to: 0
 15978                           ;main.c: 3265: mask &= ~(1<<j);
 15979  003B02  C032  F060         	movff	calculateSetFilterMask@j,??_calculateSetFilterMask
 15980  003B06  0E01               	movlw	1
 15981  003B08  0100               	movlb	0	; () banked
 15982  003B0A  6F61               	movwf	(??_calculateSetFilterMask+1)& (0+255),b
 15983  003B0C  6B62               	clrf	(??_calculateSetFilterMask+2)& (0+255),b
 15984  003B0E  0100               	movlb	0	; () banked
 15985  003B10  2B60               	incf	??_calculateSetFilterMask& (0+255),f,b
 15986  003B12  D004               	goto	u13174
 15987  003B14                     u13175:
 15988  003B14  90D8               	bcf	status,0,c
 15989  003B16  0100               	movlb	0	; () banked
 15990  003B18  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15991  003B1A  3762               	rlcf	(??_calculateSetFilterMask+2)& (0+255),f,b
 15992  003B1C                     u13174:
 15993  003B1C  0100               	movlb	0	; () banked
 15994  003B1E  2F60               	decfsz	??_calculateSetFilterMask& (0+255),f,b
 15995  003B20  D7F9               	goto	u13175
 15996  003B22  0100               	movlb	0	; () banked
 15997  003B24  1D61               	comf	(??_calculateSetFilterMask+1)& (0+255),w,b
 15998  003B26  0100               	movlb	0	; () banked
 15999  003B28  6F63               	movwf	(??_calculateSetFilterMask+3)& (0+255),b
 16000  003B2A  0100               	movlb	0	; () banked
 16001  003B2C  0100               	movlb	0	; () banked
 16002  003B2E  1D62               	comf	(??_calculateSetFilterMask+2)& (0+255),w,b
 16003  003B30  6F64               	movwf	(??_calculateSetFilterMask+4)& (0+255),b
 16004  003B32  0100               	movlb	0	; () banked
 16005  003B34  6B65               	clrf	(??_calculateSetFilterMask+5)& (0+255),b
 16006  003B36  0100               	movlb	0	; () banked
 16007  003B38  BF64               	btfsc	(??_calculateSetFilterMask+4)& (0+255),7,b
 16008  003B3A  0765               	decf	(??_calculateSetFilterMask+5)& (0+255),f,b
 16009  003B3C  0100               	movlb	0	; () banked
 16010  003B3E  5165               	movf	(??_calculateSetFilterMask+5)& (0+255),w,b
 16011  003B40  0100               	movlb	0	; () banked
 16012  003B42  6F66               	movwf	(??_calculateSetFilterMask+6)& (0+255),b
 16013  003B44  0100               	movlb	0	; () banked
 16014  003B46  5163               	movf	(??_calculateSetFilterMask+3)& (0+255),w,b
 16015  003B48  1626               	andwf	calculateSetFilterMask@mask,f,c
 16016  003B4A  0100               	movlb	0	; () banked
 16017  003B4C  5164               	movf	(??_calculateSetFilterMask+4)& (0+255),w,b
 16018  003B4E  1627               	andwf	calculateSetFilterMask@mask+1,f,c
 16019  003B50  0100               	movlb	0	; () banked
 16020  003B52  5165               	movf	(??_calculateSetFilterMask+5)& (0+255),w,b
 16021  003B54  1628               	andwf	calculateSetFilterMask@mask+2,f,c
 16022  003B56  0100               	movlb	0	; () banked
 16023  003B58  5166               	movf	(??_calculateSetFilterMask+6)& (0+255),w,b
 16024  003B5A  1629               	andwf	calculateSetFilterMask@mask+3,f,c
 16025  003B5C                     l11020:
 16026                           
 16027                           ; BSR set to: 0
 16028  003B5C  2A32               	incf	calculateSetFilterMask@j,f,c
 16029  003B5E                     L113:
 16030  003B5E  0E1F               	movlw	31
 16031  003B60  6432               	cpfsgt	calculateSetFilterMask@j,c
 16032  003B62  D76C               	goto	l11016
 16033                           
 16034                           ; BSR set to: 0
 16035                           ;main.c: 3266: }
 16036                           ;main.c: 3267: }
 16037                           ;main.c: 3273: filter &= rowfilter;
 16038                           
 16039                           ; BSR set to: 0
 16040  003B64  502E               	movf	calculateSetFilterMask@rowfilter,w,c
 16041  003B66  162A               	andwf	calculateSetFilterMask@filter,f,c
 16042  003B68  502F               	movf	calculateSetFilterMask@rowfilter+1,w,c
 16043  003B6A  162B               	andwf	calculateSetFilterMask@filter+1,f,c
 16044  003B6C  5030               	movf	calculateSetFilterMask@rowfilter+2,w,c
 16045  003B6E  162C               	andwf	calculateSetFilterMask@filter+2,f,c
 16046  003B70  5031               	movf	calculateSetFilterMask@rowfilter+3,w,c
 16047  003B72  162D               	andwf	calculateSetFilterMask@filter+3,f,c
 16048                           
 16049                           ; BSR set to: 0
 16050                           ;main.c: 3281: }
 16051                           ;main.c: 3283: if (i) {
 16052                           
 16053                           ; BSR set to: 0
 16054                           
 16055                           ; BSR set to: 0
 16056                           ;main.c: 3280: mask &= ~0xff;
 16057                           
 16058                           ;main.c: 3276: if ( !Read_b_eep(0x43 + 8*i + 1) & 0x40 ) {
 16059  003B74  5033               	movf	calculateSetFilterMask@i,w,c
 16060  003B76  B4D8               	btfsc	status,2,c
 16061  003B78  D08A               	goto	l11042
 16062                           
 16063                           ; BSR set to: 0
 16064                           ;main.c: 3286: for (j = 0; j < 8; j++) {
 16065  003B7A  0100               	movlb	0	; () banked
 16066  003B7C  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 16067  003B7E  0E00               	movlw	0
 16068  003B80  6E32               	movwf	calculateSetFilterMask@j,c
 16069  003B82  0100               	movlb	0	; () banked
 16070  003B84  5160               	movf	??_calculateSetFilterMask& (0+255),w,b
 16071  003B86  D065               	goto	L114
 16072  003B88                     l11034:
 16073                           
 16074                           ; BSR set to: 0
 16075                           ;main.c: 3287: if ((lastOID >> i & 1)
 16076                           ;main.c: 3288: != (Read_b_eep(0x43 + 8 * i) >> i & 1)) {
 16077  003B88  C033  F060         	movff	calculateSetFilterMask@i,??_calculateSetFilterMask
 16078  003B8C  5033               	movf	calculateSetFilterMask@i,w,c
 16079  003B8E  0100               	movlb	0	; () banked
 16080  003B90  6F61               	movwf	(??_calculateSetFilterMask+1)& (0+255),b
 16081  003B92  6B62               	clrf	(??_calculateSetFilterMask+2)& (0+255),b
 16082  003B94  0100               	movlb	0	; () banked
 16083  003B96  90D8               	bcf	status,0,c
 16084  003B98  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 16085  003B9A  3762               	rlcf	(??_calculateSetFilterMask+2)& (0+255),f,b
 16086  003B9C  0100               	movlb	0	; () banked
 16087  003B9E  90D8               	bcf	status,0,c
 16088  003BA0  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 16089  003BA2  3762               	rlcf	(??_calculateSetFilterMask+2)& (0+255),f,b
 16090  003BA4  0100               	movlb	0	; () banked
 16091  003BA6  90D8               	bcf	status,0,c
 16092  003BA8  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 16093  003BAA  3762               	rlcf	(??_calculateSetFilterMask+2)& (0+255),f,b
 16094  003BAC  0E43               	movlw	67
 16095  003BAE  0100               	movlb	0	; () banked
 16096  003BB0  2561               	addwf	(??_calculateSetFilterMask+1)& (0+255),w,b
 16097  003BB2  6E16               	movwf	?_Read_b_eep,c
 16098  003BB4  0E00               	movlw	0
 16099  003BB6  0100               	movlb	0	; () banked
 16100  003BB8  2162               	addwfc	(??_calculateSetFilterMask+2)& (0+255),w,b
 16101  003BBA  6E17               	movwf	?_Read_b_eep+1,c
 16102  003BBC  ECD8  F037         	call	_Read_b_eep	;wreg free
 16103  003BC0  0100               	movlb	0	; () banked
 16104  003BC2  6F63               	movwf	(??_calculateSetFilterMask+3)& (0+255),b
 16105  003BC4  0100               	movlb	0	; () banked
 16106  003BC6  2B60               	incf	??_calculateSetFilterMask& (0+255),f,b
 16107  003BC8  D003               	goto	u13214
 16108  003BCA                     u13215:
 16109  003BCA  0100               	movlb	0	; () banked
 16110  003BCC  90D8               	bcf	status,0,c
 16111  003BCE  3363               	rrcf	(??_calculateSetFilterMask+3)& (0+255),f,b
 16112  003BD0                     u13214:
 16113  003BD0  0100               	movlb	0	; () banked
 16114  003BD2  2F60               	decfsz	??_calculateSetFilterMask& (0+255),f,b
 16115  003BD4  D7FA               	goto	u13215
 16116  003BD6  0E01               	movlw	1
 16117  003BD8  0100               	movlb	0	; () banked
 16118  003BDA  1763               	andwf	(??_calculateSetFilterMask+3)& (0+255),f,b
 16119  003BDC  C033  F064         	movff	calculateSetFilterMask@i,??_calculateSetFilterMask+4
 16120  003BE0  C025  F065         	movff	calculateSetFilterMask@lastOID,??_calculateSetFilterMask+5
 16121  003BE4  0100               	movlb	0	; () banked
 16122  003BE6  2B64               	incf	(??_calculateSetFilterMask+4)& (0+255),f,b
 16123  003BE8  D003               	goto	u13224
 16124  003BEA                     u13225:
 16125  003BEA  0100               	movlb	0	; () banked
 16126  003BEC  90D8               	bcf	status,0,c
 16127  003BEE  3365               	rrcf	(??_calculateSetFilterMask+5)& (0+255),f,b
 16128  003BF0                     u13224:
 16129  003BF0  0100               	movlb	0	; () banked
 16130  003BF2  2F64               	decfsz	(??_calculateSetFilterMask+4)& (0+255),f,b
 16131  003BF4  D7FA               	goto	u13225
 16132  003BF6  0100               	movlb	0	; () banked
 16133  003BF8  5165               	movf	(??_calculateSetFilterMask+5)& (0+255),w,b
 16134  003BFA  0B01               	andlw	1
 16135  003BFC  0100               	movlb	0	; () banked
 16136  003BFE  1963               	xorwf	(??_calculateSetFilterMask+3)& (0+255),w,b
 16137  003C00  B4D8               	btfsc	status,2,c
 16138  003C02  D026               	goto	l11038
 16139                           
 16140                           ; BSR set to: 0
 16141                           ;main.c: 3289: mask &= (1 << i);
 16142  003C04  C033  F060         	movff	calculateSetFilterMask@i,??_calculateSetFilterMask
 16143  003C08  0E01               	movlw	1
 16144  003C0A  0100               	movlb	0	; () banked
 16145  003C0C  6F61               	movwf	(??_calculateSetFilterMask+1)& (0+255),b
 16146  003C0E  6B62               	clrf	(??_calculateSetFilterMask+2)& (0+255),b
 16147  003C10  0100               	movlb	0	; () banked
 16148  003C12  2B60               	incf	??_calculateSetFilterMask& (0+255),f,b
 16149  003C14  D004               	goto	u13244
 16150  003C16                     u13245:
 16151  003C16  90D8               	bcf	status,0,c
 16152  003C18  0100               	movlb	0	; () banked
 16153  003C1A  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 16154  003C1C  3762               	rlcf	(??_calculateSetFilterMask+2)& (0+255),f,b
 16155  003C1E                     u13244:
 16156  003C1E  0100               	movlb	0	; () banked
 16157  003C20  2F60               	decfsz	??_calculateSetFilterMask& (0+255),f,b
 16158  003C22  D7F9               	goto	u13245
 16159  003C24  C061  F063         	movff	??_calculateSetFilterMask+1,??_calculateSetFilterMask+3
 16160  003C28  C062  F064         	movff	??_calculateSetFilterMask+2,??_calculateSetFilterMask+4
 16161  003C2C  0E00               	movlw	0
 16162  003C2E  0100               	movlb	0	; () banked
 16163  003C30  BF64               	btfsc	(??_calculateSetFilterMask+4)& (0+255),7,b
 16164  003C32  0EFF               	movlw	255
 16165  003C34  6F65               	movwf	(??_calculateSetFilterMask+5)& (0+255),b
 16166  003C36  6F66               	movwf	(??_calculateSetFilterMask+6)& (0+255),b
 16167  003C38  0100               	movlb	0	; () banked
 16168  003C3A  5163               	movf	(??_calculateSetFilterMask+3)& (0+255),w,b
 16169  003C3C  1626               	andwf	calculateSetFilterMask@mask,f,c
 16170  003C3E  0100               	movlb	0	; () banked
 16171  003C40  5164               	movf	(??_calculateSetFilterMask+4)& (0+255),w,b
 16172  003C42  1627               	andwf	calculateSetFilterMask@mask+1,f,c
 16173  003C44  0100               	movlb	0	; () banked
 16174  003C46  5165               	movf	(??_calculateSetFilterMask+5)& (0+255),w,b
 16175  003C48  1628               	andwf	calculateSetFilterMask@mask+2,f,c
 16176  003C4A  0100               	movlb	0	; () banked
 16177  003C4C  5166               	movf	(??_calculateSetFilterMask+6)& (0+255),w,b
 16178  003C4E  1629               	andwf	calculateSetFilterMask@mask+3,f,c
 16179  003C50                     l11038:
 16180                           
 16181                           ; BSR set to: 0
 16182  003C50  2A32               	incf	calculateSetFilterMask@j,f,c
 16183  003C52                     L114:
 16184  003C52  0E07               	movlw	7
 16185  003C54  6432               	cpfsgt	calculateSetFilterMask@j,c
 16186  003C56  D798               	goto	l11034
 16187                           
 16188                           ; BSR set to: 0
 16189                           ;main.c: 3290: }
 16190                           ;main.c: 3291: }
 16191                           ;main.c: 3293: lastOID = Read_b_eep(0x43 + 8 * i);
 16192                           
 16193                           ; BSR set to: 0
 16194  003C58  5033               	movf	calculateSetFilterMask@i,w,c
 16195  003C5A  0100               	movlb	0	; () banked
 16196  003C5C  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 16197  003C5E  6B61               	clrf	(??_calculateSetFilterMask+1)& (0+255),b
 16198  003C60  0100               	movlb	0	; () banked
 16199  003C62  90D8               	bcf	status,0,c
 16200  003C64  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 16201  003C66  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 16202  003C68  0100               	movlb	0	; () banked
 16203  003C6A  90D8               	bcf	status,0,c
 16204  003C6C  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 16205  003C6E  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 16206  003C70  0100               	movlb	0	; () banked
 16207  003C72  90D8               	bcf	status,0,c
 16208  003C74  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 16209  003C76  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 16210  003C78  0E43               	movlw	67
 16211  003C7A  0100               	movlb	0	; () banked
 16212  003C7C  2560               	addwf	??_calculateSetFilterMask& (0+255),w,b
 16213  003C7E  6E16               	movwf	?_Read_b_eep,c
 16214  003C80  0E00               	movlw	0
 16215  003C82  0100               	movlb	0	; () banked
 16216  003C84  2161               	addwfc	(??_calculateSetFilterMask+1)& (0+255),w,b
 16217  003C86  6E17               	movwf	?_Read_b_eep+1,c
 16218  003C88  ECD8  F037         	call	_Read_b_eep	;wreg free
 16219  003C8C  D01A               	goto	L111
 16220  003C8E                     l11042:
 16221                           
 16222                           ;main.c: 3296: else {
 16223                           ;main.c: 3298: lastOID = Read_b_eep(0x43 + 8 * i);
 16224  003C8E  5033               	movf	calculateSetFilterMask@i,w,c
 16225  003C90  0100               	movlb	0	; () banked
 16226  003C92  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 16227  003C94  6B61               	clrf	(??_calculateSetFilterMask+1)& (0+255),b
 16228  003C96  0100               	movlb	0	; () banked
 16229  003C98  90D8               	bcf	status,0,c
 16230  003C9A  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 16231  003C9C  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 16232  003C9E  0100               	movlb	0	; () banked
 16233  003CA0  90D8               	bcf	status,0,c
 16234  003CA2  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 16235  003CA4  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 16236  003CA6  0100               	movlb	0	; () banked
 16237  003CA8  90D8               	bcf	status,0,c
 16238  003CAA  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 16239  003CAC  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 16240  003CAE  0E43               	movlw	67
 16241  003CB0  0100               	movlb	0	; () banked
 16242  003CB2  2560               	addwf	??_calculateSetFilterMask& (0+255),w,b
 16243  003CB4  6E16               	movwf	?_Read_b_eep,c
 16244  003CB6  0E00               	movlw	0
 16245  003CB8  0100               	movlb	0	; () banked
 16246  003CBA  2161               	addwfc	(??_calculateSetFilterMask+1)& (0+255),w,b
 16247  003CBC  6E17               	movwf	?_Read_b_eep+1,c
 16248  003CBE  ECD8  F037         	call	_Read_b_eep	;wreg free
 16249  003CC2                     L111:
 16250  003CC2  6E25               	movwf	calculateSetFilterMask@lastOID,c
 16251  003CC4                     l11044:
 16252  003CC4  2A33               	incf	calculateSetFilterMask@i,f,c
 16253  003CC6                     L112:
 16254  003CC6  0E07               	movlw	7
 16255  003CC8  6433               	cpfsgt	calculateSetFilterMask@i,c
 16256  003CCA  D4EA               	goto	l11000
 16257                           
 16258                           ;main.c: 3299: }
 16259                           ;main.c: 3301: }
 16260                           ;main.c: 3302: }
 16261                           ;main.c: 3305: ECANSetOperationMode( ECAN_OP_MODE_CONFIG );
 16262  003CCC  0100               	movlb	0	; () banked
 16263  003CCE  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 16264  003CD0  0E80               	movlw	128
 16265  003CD2  6E16               	movwf	?_ECANSetOperationMode,c
 16266  003CD4  0100               	movlb	0	; () banked
 16267  003CD6  5160               	movf	??_calculateSetFilterMask& (0+255),w,b
 16268  003CD8  EC98  F037         	call	_ECANSetOperationMode	;wreg free
 16269                           
 16270                           ;main.c: 3308: _CANIDToRegs((BYTE*)&RXM1SIDH, mask, 1);
 16271  003CDC  010F               	movlb	15	; () banked
 16272  003CDE  0E0F               	movlw	15	;volatile
 16273  003CE0  6E17               	movwf	?__CANIDToRegs+1,c
 16274  003CE2  010F               	movlb	15	; () banked
 16275  003CE4  0E1C               	movlw	28	;volatile
 16276  003CE6  6E16               	movwf	?__CANIDToRegs,c
 16277  003CE8  C026  F018         	movff	calculateSetFilterMask@mask,?__CANIDToRegs+2
 16278  003CEC  C027  F019         	movff	calculateSetFilterMask@mask+1,?__CANIDToRegs+3
 16279  003CF0  C028  F01A         	movff	calculateSetFilterMask@mask+2,?__CANIDToRegs+4
 16280  003CF4  C029  F01B         	movff	calculateSetFilterMask@mask+3,?__CANIDToRegs+5
 16281  003CF8  0100               	movlb	0	; () banked
 16282  003CFA  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 16283  003CFC  0E01               	movlw	1
 16284  003CFE  6E1C               	movwf	?__CANIDToRegs+6,c
 16285  003D00  0100               	movlb	0	; () banked
 16286  003D02  5160               	movf	??_calculateSetFilterMask& (0+255),w,b
 16287  003D04  EC9C  F030         	call	__CANIDToRegs	;wreg free
 16288                           
 16289                           ;main.c: 3311: RXF1EN = 1; _CANIDToRegs((BYTE*)&RXF1SIDH, filter, 1);;
 16290  003D08  010D               	movlb	13
 16291  003D0A  010D               	movlb	13	; () banked
 16292  003D0C  83D4               	bsf	212,1,b	;volatile
 16293                           
 16294                           ; BSR set to: 13
 16295  003D0E  010F               	movlb	15	; () banked
 16296  003D10  0E0F               	movlw	15	;volatile
 16297  003D12  6E17               	movwf	?__CANIDToRegs+1,c
 16298  003D14  010F               	movlb	15	; () banked
 16299  003D16  0E04               	movlw	4	;volatile
 16300  003D18  6E16               	movwf	?__CANIDToRegs,c
 16301  003D1A  C02A  F018         	movff	calculateSetFilterMask@filter,?__CANIDToRegs+2
 16302  003D1E  C02B  F019         	movff	calculateSetFilterMask@filter+1,?__CANIDToRegs+3
 16303  003D22  C02C  F01A         	movff	calculateSetFilterMask@filter+2,?__CANIDToRegs+4
 16304  003D26  C02D  F01B         	movff	calculateSetFilterMask@filter+3,?__CANIDToRegs+5
 16305  003D2A  0100               	movlb	0	; () banked
 16306  003D2C  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 16307  003D2E  0E01               	movlw	1
 16308  003D30  6E1C               	movwf	?__CANIDToRegs+6,c
 16309  003D32  0100               	movlb	0	; () banked
 16310  003D34  5160               	movf	??_calculateSetFilterMask& (0+255),w,b
 16311  003D36  EC9C  F030         	call	__CANIDToRegs	;wreg free
 16312                           
 16313                           ;main.c: 3314: ECANSetOperationMode( ECAN_OP_MODE_NORMAL );
 16314  003D3A  0100               	movlb	0	; () banked
 16315  003D3C  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 16316  003D3E  0E00               	movlw	0
 16317  003D40  6E16               	movwf	?_ECANSetOperationMode,c
 16318  003D42  0100               	movlb	0	; () banked
 16319  003D44  5160               	movf	??_calculateSetFilterMask& (0+255),w,b
 16320  003D46  EC98  F037         	call	_ECANSetOperationMode	;wreg free
 16321  003D4A  0012               	return	
 16322  003D4C                     __end_of_calculateSetFilterMask:
 16323                           	opt stack 0
 16324                           tblptru	equ	0xFF8
 16325                           prodh	equ	0xFF4
 16326                           prodl	equ	0xFF3
 16327                           intcon2	equ	0xFF1
 16328                           postinc0	equ	0xFEE
 16329                           wreg	equ	0xFE8
 16330                           indf2	equ	0xFDF
 16331                           postinc2	equ	0xFDE
 16332                           postdec2	equ	0xFDD
 16333                           fsr2h	equ	0xFDA
 16334                           fsr2l	equ	0xFD9
 16335                           status	equ	0xFD8
 16336                           
 16337 ;; *************** function _SendInformationEvent *****************
 16338 ;; Defined at:
 16339 ;;		line 2039 in file "../main.c"
 16340 ;; Parameters:    Size  Location     Type
 16341 ;;  idx             1   47[COMRAM] unsigned char 
 16342 ;;  eventClass      1   48[COMRAM] unsigned char 
 16343 ;;  eventTypeId     1   49[COMRAM] unsigned char 
 16344 ;; Auto vars:     Size  Location     Type
 16345 ;;  data            3   63[BANK0 ] unsigned char [3]
 16346 ;; Return value:  Size  Location     Type
 16347 ;;		None               void
 16348 ;; Registers used:
 16349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 16350 ;; Tracked objects:
 16351 ;;		On entry : 0/0
 16352 ;;		On exit  : 0/0
 16353 ;;		Unchanged: 0/0
 16354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16355 ;;      Params:         3       0       0       0       0       0       0
 16356 ;;      Locals:         0       3       0       0       0       0       0
 16357 ;;      Temps:          2       0       0       0       0       0       0
 16358 ;;      Totals:         5       3       0       0       0       0       0
 16359 ;;Total ram usage:        8 bytes
 16360 ;; Hardware stack levels used:    1
 16361 ;; Hardware stack levels required when called:    6
 16362 ;; This function calls:
 16363 ;;		_Read_b_eep
 16364 ;;		_sendVSCPFrame
 16365 ;; This function is called by:
 16366 ;;		_doApplicationOneSecondWork
 16367 ;;		_vscp_writeAppReg
 16368 ;;		_doActionOn
 16369 ;;		_doActionOff
 16370 ;;		_doActionStatus
 16371 ;;		_doActionToggle
 16372 ;; This function uses a non-reentrant model
 16373 ;;
 16374                           
 16375                           	psect	text26
 16376  0069F8                     __ptext26:
 16377                           	opt stack 0
 16378  0069F8                     _SendInformationEvent:
 16379                           	opt stack 21
 16380                           
 16381                           ;main.c: 2040: uint8_t data[3];
 16382                           ;main.c: 2042: data[ 0 ] = idx;
 16383                           
 16384                           ;incstack = 0
 16385                           ;incstack = 0
 16386  0069F8  C030  F09F         	movff	SendInformationEvent@idx,SendInformationEvent@data
 16387                           
 16388                           ;main.c: 2043: data[ 1 ] = Read_b_eep(0x43 + 0);
 16389  0069FC  0E00               	movlw	0
 16390  0069FE  6E17               	movwf	?_Read_b_eep+1,c
 16391  006A00  0E43               	movlw	67
 16392  006A02  6E16               	movwf	?_Read_b_eep,c
 16393  006A04  ECD8  F037         	call	_Read_b_eep	;wreg free
 16394  006A08  0100               	movlb	0	; () banked
 16395  006A0A  0100               	movlb	0	; () banked
 16396  006A0C  6FA0               	movwf	(SendInformationEvent@data+1)& (0+255),b
 16397                           
 16398                           ; BSR set to: 0
 16399                           ;main.c: 2044: data[ 2 ] = Read_b_eep(0x43 + 2 + idx);
 16400  006A0E  0E45               	movlw	69
 16401  006A10  2430               	addwf	SendInformationEvent@idx,w,c
 16402  006A12  6E16               	movwf	?_Read_b_eep,c
 16403  006A14  6A17               	clrf	?_Read_b_eep+1,c
 16404  006A16  0E00               	movlw	0
 16405  006A18  2217               	addwfc	?_Read_b_eep+1,f,c
 16406  006A1A  ECD8  F037         	call	_Read_b_eep	;wreg free
 16407  006A1E  0100               	movlb	0	; () banked
 16408  006A20  0100               	movlb	0	; () banked
 16409  006A22  6FA1               	movwf	(SendInformationEvent@data+2)& (0+255),b
 16410                           
 16411                           ; BSR set to: 0
 16412                           ;main.c: 2045: sendVSCPFrame( eventClass,
 16413                           ;main.c: 2046: eventTypeId,
 16414                           ;main.c: 2047: vscp_nickname,
 16415                           ;main.c: 2048: 0x03,
 16416                           ;main.c: 2049: 3,
 16417                           ;main.c: 2050: data );
 16418  006A24  0100               	movlb	0	; () banked
 16419  006A26  C031  F083         	movff	SendInformationEvent@eventClass,?_sendVSCPFrame
 16420  006A2A  0100               	movlb	0	; () banked
 16421  006A2C  0100               	movlb	0	; () banked
 16422  006A2E  6B84               	clrf	(?_sendVSCPFrame+1)& (0+255),b
 16423  006A30  C032  F085         	movff	SendInformationEvent@eventTypeId,?_sendVSCPFrame+2
 16424  006A34  C0EC  F086         	movff	_vscp_nickname,?_sendVSCPFrame+3
 16425  006A38  6E33               	movwf	??_SendInformationEvent& (0+255),c
 16426  006A3A  0E03               	movlw	3
 16427  006A3C  0100               	movlb	0	; () banked
 16428  006A3E  0100               	movlb	0	; () banked
 16429  006A40  6F87               	movwf	(?_sendVSCPFrame+4)& (0+255),b
 16430  006A42  5033               	movf	??_SendInformationEvent& (0+255),w,c
 16431  006A44  6E34               	movwf	(??_SendInformationEvent+1)& (0+255),c
 16432  006A46  0E03               	movlw	3
 16433  006A48  0100               	movlb	0	; () banked
 16434  006A4A  0100               	movlb	0	; () banked
 16435  006A4C  6F88               	movwf	(?_sendVSCPFrame+5)& (0+255),b
 16436  006A4E  5034               	movf	(??_SendInformationEvent+1)& (0+255),w,c
 16437  006A50  0100               	movlb	0	; () banked
 16438  006A52  0E00               	movlw	high SendInformationEvent@data
 16439  006A54  0100               	movlb	0	; () banked
 16440  006A56  0100               	movlb	0	; () banked
 16441  006A58  6F8A               	movwf	(?_sendVSCPFrame+7)& (0+255),b
 16442  006A5A  0100               	movlb	0	; () banked
 16443  006A5C  0E9F               	movlw	low SendInformationEvent@data
 16444  006A5E  0100               	movlb	0	; () banked
 16445  006A60  6F89               	movwf	(?_sendVSCPFrame+6)& (0+255),b
 16446  006A62  EC85  F032         	call	_sendVSCPFrame	;wreg free
 16447  006A66  0012               	return	
 16448  006A68                     __end_of_SendInformationEvent:
 16449                           	opt stack 0
 16450                           tblptru	equ	0xFF8
 16451                           prodh	equ	0xFF4
 16452                           prodl	equ	0xFF3
 16453                           intcon2	equ	0xFF1
 16454                           postinc0	equ	0xFEE
 16455                           wreg	equ	0xFE8
 16456                           indf2	equ	0xFDF
 16457                           postinc2	equ	0xFDE
 16458                           postdec2	equ	0xFDD
 16459                           fsr2h	equ	0xFDA
 16460                           fsr2l	equ	0xFD9
 16461                           status	equ	0xFD8
 16462                           
 16463 ;; *************** function _vscp_readRegister *****************
 16464 ;; Defined at:
 16465 ;;		line 561 in file "../../vscp_firmware/common/vscp_firmware.c"
 16466 ;; Parameters:    Size  Location     Type
 16467 ;;  reg             1   42[COMRAM] unsigned char 
 16468 ;; Auto vars:     Size  Location     Type
 16469 ;;		None
 16470 ;; Return value:  Size  Location     Type
 16471 ;;                  1    wreg      unsigned char 
 16472 ;; Registers used:
 16473 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16474 ;; Tracked objects:
 16475 ;;		On entry : 0/0
 16476 ;;		On exit  : 0/0
 16477 ;;		Unchanged: 0/0
 16478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16479 ;;      Params:         1       0       0       0       0       0       0
 16480 ;;      Locals:         0       0       0       0       0       0       0
 16481 ;;      Temps:          0       0       0       0       0       0       0
 16482 ;;      Totals:         1       0       0       0       0       0       0
 16483 ;;Total ram usage:        1 bytes
 16484 ;; Hardware stack levels used:    1
 16485 ;; Hardware stack levels required when called:    5
 16486 ;; This function calls:
 16487 ;;		_vscp_readAppReg
 16488 ;;		_vscp_readStdReg
 16489 ;; This function is called by:
 16490 ;;		_vscp_handleProtocolEvent
 16491 ;; This function uses a non-reentrant model
 16492 ;;
 16493                           
 16494                           	psect	text27
 16495  006EBE                     __ptext27:
 16496                           	opt stack 0
 16497  006EBE                     _vscp_readRegister:
 16498                           	opt stack 23
 16499                           
 16500                           ;vscp_firmware.c: 562: if (reg >= 0x80) {
 16501                           
 16502                           ;incstack = 0
 16503                           ;incstack = 0
 16504  006EBE  0E7F               	movlw	127
 16505  006EC0  642B               	cpfsgt	vscp_readRegister@reg,c
 16506  006EC2  D005               	goto	l11652
 16507                           
 16508                           ;vscp_firmware.c: 563: return vscp_readStdReg(reg);
 16509  006EC4  C02B  F01A         	movff	vscp_readRegister@reg,?_vscp_readStdReg
 16510  006EC8  EC3F  F029         	call	_vscp_readStdReg	;wreg free
 16511  006ECC  D004               	goto	l1223
 16512  006ECE                     l11652:
 16513                           
 16514                           ;vscp_firmware.c: 565: else {
 16515                           ;vscp_firmware.c: 566: return vscp_readAppReg(reg);
 16516  006ECE  C02B  F018         	movff	vscp_readRegister@reg,?_vscp_readAppReg
 16517  006ED2  EC4B  F031         	call	_vscp_readAppReg	;wreg free
 16518  006ED6                     l1223:
 16519  006ED6  0012               	return	
 16520  006ED8                     __end_of_vscp_readRegister:
 16521                           	opt stack 0
 16522                           tblptru	equ	0xFF8
 16523                           prodh	equ	0xFF4
 16524                           prodl	equ	0xFF3
 16525                           intcon2	equ	0xFF1
 16526                           postinc0	equ	0xFEE
 16527                           wreg	equ	0xFE8
 16528                           indf2	equ	0xFDF
 16529                           postinc2	equ	0xFDE
 16530                           postdec2	equ	0xFDD
 16531                           fsr2h	equ	0xFDA
 16532                           fsr2l	equ	0xFD9
 16533                           status	equ	0xFD8
 16534                           
 16535 ;; *************** function _vscp_readStdReg *****************
 16536 ;; Defined at:
 16537 ;;		line 575 in file "../../vscp_firmware/common/vscp_firmware.c"
 16538 ;; Parameters:    Size  Location     Type
 16539 ;;  reg             1   25[COMRAM] unsigned char 
 16540 ;; Auto vars:     Size  Location     Type
 16541 ;;  code            4   35[COMRAM] unsigned long 
 16542 ;;  idx             1   40[COMRAM] unsigned char 
 16543 ;;  code            4   31[COMRAM] unsigned long 
 16544 ;;  idx             1   39[COMRAM] unsigned char 
 16545 ;;  rv              1   41[COMRAM] unsigned char 
 16546 ;; Return value:  Size  Location     Type
 16547 ;;                  1    wreg      unsigned char 
 16548 ;; Registers used:
 16549 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16550 ;; Tracked objects:
 16551 ;;		On entry : 0/0
 16552 ;;		On exit  : 0/0
 16553 ;;		Unchanged: 0/0
 16554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16555 ;;      Params:         1       0       0       0       0       0       0
 16556 ;;      Locals:        11       0       0       0       0       0       0
 16557 ;;      Temps:          5       0       0       0       0       0       0
 16558 ;;      Totals:        17       0       0       0       0       0       0
 16559 ;;Total ram usage:       17 bytes
 16560 ;; Hardware stack levels used:    1
 16561 ;; Hardware stack levels required when called:    4
 16562 ;; This function calls:
 16563 ;;		_vscp_getMajorVersion
 16564 ;;		_vscp_getMinorVersion
 16565 ;;		_vscp_getSubMinorVersion
 16566 ;;		_vscp_getGUID
 16567 ;;		_vscp_getMDF_URL
 16568 ;;		_vscp_getUserID
 16569 ;;		_vscp_getManufacturerId
 16570 ;;		_vscp_getBootLoaderAlgorithm
 16571 ;;		_vscp_getBufferSize
 16572 ;;		_vscp_getFamilyCode
 16573 ;;		_vscp_getFamilyType
 16574 ;;		_vscp_getRegisterPagesUsed
 16575 ;; This function is called by:
 16576 ;;		_vscp_readRegister
 16577 ;;		_vscp_handleProtocolEvent
 16578 ;; This function uses a non-reentrant model
 16579 ;;
 16580                           
 16581                           	psect	text28
 16582  00527E                     __ptext28:
 16583                           	opt stack 0
 16584  00527E                     _vscp_readStdReg:
 16585                           	opt stack 24
 16586                           
 16587                           ;vscp_firmware.c: 576: uint8_t rv = 0;
 16588                           
 16589                           ;incstack = 0
 16590                           ;incstack = 0
 16591  00527E  6E1B               	movwf	??_vscp_readStdReg& (0+255),c
 16592  005280  0E00               	movlw	0
 16593  005282  6E2A               	movwf	vscp_readStdReg@rv,c
 16594  005284  501B               	movf	??_vscp_readStdReg& (0+255),w,c
 16595                           
 16596                           ;vscp_firmware.c: 578: if (0x80 == reg) {
 16597  005286  501A               	movf	vscp_readStdReg@reg,w,c
 16598  005288  0A80               	xorlw	128
 16599  00528A  A4D8               	btfss	status,2,c
 16600  00528C  D008               	goto	l11664
 16601                           
 16602                           ;vscp_firmware.c: 581: rv = vscp_alarmstatus;
 16603  00528E  C0E7  F02A         	movff	_vscp_alarmstatus,vscp_readStdReg@rv
 16604                           
 16605                           ;vscp_firmware.c: 582: vscp_alarmstatus = 0x00;
 16606  005292  6E1B               	movwf	??_vscp_readStdReg& (0+255),c
 16607  005294  0E00               	movlw	0
 16608  005296  0100               	movlb	0	; () banked
 16609  005298  0100               	movlb	0	; () banked
 16610  00529A  6FE7               	movwf	_vscp_alarmstatus& (0+255),b
 16611  00529C  D007               	goto	L115
 16612  00529E                     l11664:
 16613                           
 16614                           ;vscp_firmware.c: 585: else if (0x81 == reg) {
 16615  00529E  501A               	movf	vscp_readStdReg@reg,w,c
 16616  0052A0  0A81               	xorlw	129
 16617  0052A2  A4D8               	btfss	status,2,c
 16618  0052A4  D005               	goto	l11668
 16619                           
 16620                           ;vscp_firmware.c: 588: rv = 1;
 16621  0052A6  6E1B               	movwf	??_vscp_readStdReg& (0+255),c
 16622  0052A8  0E01               	movlw	1
 16623  0052AA  D00F               	goto	L127
 16624  0052AC                     L115:
 16625  0052AC  501B               	movf	??_vscp_readStdReg& (0+255),w,c
 16626                           
 16627                           ;vscp_firmware.c: 590: }
 16628  0052AE  D0D8               	goto	l11752
 16629  0052B0                     l11668:
 16630                           
 16631                           ;vscp_firmware.c: 591: else if (0x82 == reg) {
 16632  0052B0  501A               	movf	vscp_readStdReg@reg,w,c
 16633  0052B2  0A82               	xorlw	130
 16634  0052B4  A4D8               	btfss	status,2,c
 16635  0052B6  D003               	goto	l11672
 16636                           
 16637                           ;vscp_firmware.c: 594: rv = 5;
 16638  0052B8  6E1B               	movwf	??_vscp_readStdReg& (0+255),c
 16639  0052BA  0E05               	movlw	5
 16640  0052BC  D006               	goto	L127
 16641  0052BE                     l11672:
 16642                           
 16643                           ;vscp_firmware.c: 597: else if (0x83 == reg) {
 16644  0052BE  501A               	movf	vscp_readStdReg@reg,w,c
 16645  0052C0  0A83               	xorlw	131
 16646  0052C2  A4D8               	btfss	status,2,c
 16647  0052C4  D004               	goto	l11676
 16648                           
 16649                           ;vscp_firmware.c: 600: rv = 0;
 16650  0052C6  6E1B               	movwf	??_vscp_readStdReg& (0+255),c
 16651  0052C8  0E00               	movlw	0
 16652  0052CA                     L127:
 16653  0052CA  6E2A               	movwf	vscp_readStdReg@rv,c
 16654  0052CC  D7EF               	goto	L115
 16655  0052CE                     l11676:
 16656                           
 16657                           ;vscp_firmware.c: 603: else if (0x94 == reg) {
 16658  0052CE  501A               	movf	vscp_readStdReg@reg,w,c
 16659  0052D0  0A94               	xorlw	148
 16660  0052D2  A4D8               	btfss	status,2,c
 16661  0052D4  D003               	goto	l11680
 16662                           
 16663                           ;vscp_firmware.c: 606: rv = vscp_getMajorVersion();
 16664  0052D6  EC1D  F038         	call	_vscp_getMajorVersion	;wreg free
 16665  0052DA  D0C1               	goto	L128
 16666  0052DC                     l11680:
 16667                           
 16668                           ;vscp_firmware.c: 609: else if (0x95 == reg) {
 16669  0052DC  501A               	movf	vscp_readStdReg@reg,w,c
 16670  0052DE  0A95               	xorlw	149
 16671  0052E0  A4D8               	btfss	status,2,c
 16672  0052E2  D003               	goto	l11684
 16673                           
 16674                           ;vscp_firmware.c: 612: rv = vscp_getMinorVersion();
 16675  0052E4  EC1B  F038         	call	_vscp_getMinorVersion	;wreg free
 16676  0052E8  D0BA               	goto	L128
 16677  0052EA                     l11684:
 16678                           
 16679                           ;vscp_firmware.c: 615: else if (0x96 == reg) {
 16680  0052EA  501A               	movf	vscp_readStdReg@reg,w,c
 16681  0052EC  0A96               	xorlw	150
 16682  0052EE  A4D8               	btfss	status,2,c
 16683  0052F0  D003               	goto	l11688
 16684                           
 16685                           ;vscp_firmware.c: 618: rv = vscp_getSubMinorVersion();
 16686  0052F2  EC19  F038         	call	_vscp_getSubMinorVersion	;wreg free
 16687  0052F6  D0B3               	goto	L128
 16688  0052F8                     l11688:
 16689                           
 16690                           ;vscp_firmware.c: 621: else if (reg < 0x89) {
 16691  0052F8  0E89               	movlw	137
 16692  0052FA  601A               	cpfslt	vscp_readStdReg@reg,c
 16693  0052FC  D006               	goto	l11692
 16694                           
 16695                           ;vscp_firmware.c: 624: rv = vscp_getUserID(reg - 0x84);
 16696  0052FE  501A               	movf	vscp_readStdReg@reg,w,c
 16697  005300  0F7C               	addlw	124
 16698  005302  6E18               	movwf	?_vscp_getUserID,c
 16699  005304  ECBD  F037         	call	_vscp_getUserID	;wreg free
 16700  005308  D0AA               	goto	L128
 16701  00530A                     l11692:
 16702                           
 16703                           ;vscp_firmware.c: 627: else if ((reg > 0x88) &&
 16704                           ;vscp_firmware.c: 628: (reg < 0x91)) {
 16705  00530A  0E88               	movlw	136
 16706  00530C  641A               	cpfsgt	vscp_readStdReg@reg,c
 16707  00530E  D009               	goto	l11698
 16708  005310  0E91               	movlw	145
 16709  005312  601A               	cpfslt	vscp_readStdReg@reg,c
 16710  005314  D006               	goto	l11698
 16711                           
 16712                           ;vscp_firmware.c: 631: rv = vscp_getManufacturerId(reg - 0x89);
 16713  005316  501A               	movf	vscp_readStdReg@reg,w,c
 16714  005318  0F77               	addlw	119
 16715  00531A  6E18               	movwf	?_vscp_getManufacturerId,c
 16716  00531C  ECB4  F037         	call	_vscp_getManufacturerId	;wreg free
 16717  005320  D09E               	goto	L128
 16718  005322                     l11698:
 16719                           
 16720                           ;vscp_firmware.c: 634: else if (0x91 == reg) {
 16721  005322  501A               	movf	vscp_readStdReg@reg,w,c
 16722  005324  0A91               	xorlw	145
 16723  005326  A4D8               	btfss	status,2,c
 16724  005328  D003               	goto	l11702
 16725                           
 16726                           ;vscp_firmware.c: 637: rv = vscp_nickname;
 16727  00532A  C0EC  F02A         	movff	_vscp_nickname,vscp_readStdReg@rv
 16728                           
 16729                           ;vscp_firmware.c: 639: }
 16730  00532E  D098               	goto	l11752
 16731  005330                     l11702:
 16732                           
 16733                           ;vscp_firmware.c: 640: else if (0x93 == reg) {
 16734  005330  501A               	movf	vscp_readStdReg@reg,w,c
 16735  005332  0A93               	xorlw	147
 16736  005334  A4D8               	btfss	status,2,c
 16737  005336  D003               	goto	l11706
 16738                           
 16739                           ;vscp_firmware.c: 643: rv = (vscp_page_select & 0xff);
 16740  005338  C036  F02A         	movff	_vscp_page_select,vscp_readStdReg@rv
 16741                           
 16742                           ;vscp_firmware.c: 645: }
 16743  00533C  D091               	goto	l11752
 16744  00533E                     l11706:
 16745                           
 16746                           ;vscp_firmware.c: 647: else if (0x92 == reg) {
 16747  00533E  501A               	movf	vscp_readStdReg@reg,w,c
 16748  005340  0A92               	xorlw	146
 16749  005342  A4D8               	btfss	status,2,c
 16750  005344  D002               	goto	l11710
 16751                           
 16752                           ;vscp_firmware.c: 650: rv = (vscp_page_select >> 8) & 0xff;
 16753  005346  5037               	movf	_vscp_page_select+1,w,c
 16754  005348  D08A               	goto	L128
 16755  00534A                     l11710:
 16756                           
 16757                           ;vscp_firmware.c: 653: else if (0x97 == reg) {
 16758  00534A  501A               	movf	vscp_readStdReg@reg,w,c
 16759  00534C  0A97               	xorlw	151
 16760  00534E  A4D8               	btfss	status,2,c
 16761  005350  D003               	goto	l11714
 16762                           
 16763                           ;vscp_firmware.c: 655: rv = vscp_getBootLoaderAlgorithm();
 16764  005352  EC17  F038         	call	_vscp_getBootLoaderAlgorithm	;wreg free
 16765  005356  D083               	goto	L128
 16766  005358                     l11714:
 16767                           
 16768                           ;vscp_firmware.c: 657: else if (0x98 == reg) {
 16769  005358  501A               	movf	vscp_readStdReg@reg,w,c
 16770  00535A  0A98               	xorlw	152
 16771  00535C  A4D8               	btfss	status,2,c
 16772  00535E  D003               	goto	l11718
 16773                           
 16774                           ;vscp_firmware.c: 659: rv = vscp_getBufferSize();
 16775  005360  EC15  F038         	call	_vscp_getBufferSize	;wreg free
 16776  005364  D07C               	goto	L128
 16777  005366                     l11718:
 16778                           
 16779                           ;vscp_firmware.c: 661: else if (0x99 == reg) {
 16780  005366  501A               	movf	vscp_readStdReg@reg,w,c
 16781  005368  0A99               	xorlw	153
 16782  00536A  A4D8               	btfss	status,2,c
 16783  00536C  D003               	goto	l11722
 16784                           
 16785                           ;vscp_firmware.c: 663: rv = vscp_getRegisterPagesUsed();
 16786  00536E  EC13  F038         	call	_vscp_getRegisterPagesUsed	;wreg free
 16787  005372  D075               	goto	L128
 16788  005374                     l11722:
 16789                           
 16790                           ;vscp_firmware.c: 665: else if ( ( reg >= 0x9A ) &&
 16791                           ;vscp_firmware.c: 666: ( reg < ( 0x9A + 4 ) ) ) {
 16792  005374  0E99               	movlw	153
 16793  005376  641A               	cpfsgt	vscp_readStdReg@reg,c
 16794  005378  D02D               	goto	l11732
 16795  00537A  0E9E               	movlw	158
 16796  00537C  601A               	cpfslt	vscp_readStdReg@reg,c
 16797  00537E  D02A               	goto	l11732
 16798                           
 16799                           ;vscp_firmware.c: 668: uint32_t code = vscp_getFamilyCode();
 16800  005380  ECAB  F037         	call	_vscp_getFamilyCode	;wreg free
 16801  005384  C019  F023         	movff	?_vscp_getFamilyCode+3,vscp_readStdReg@code+3
 16802  005388  C018  F022         	movff	?_vscp_getFamilyCode+2,vscp_readStdReg@code+2
 16803  00538C  C017  F021         	movff	?_vscp_getFamilyCode+1,vscp_readStdReg@code+1
 16804  005390  C016  F020         	movff	?_vscp_getFamilyCode,vscp_readStdReg@code
 16805                           
 16806                           ;vscp_firmware.c: 669: uint8_t idx = reg - 0x9A;
 16807  005394  501A               	movf	vscp_readStdReg@reg,w,c
 16808  005396  0F66               	addlw	102
 16809  005398  6E28               	movwf	vscp_readStdReg@idx,c
 16810                           
 16811                           ;vscp_firmware.c: 670: rv = code >> ( ( ( 3 - idx ) * 8 ) & 0xff );
 16812  00539A  5028               	movf	vscp_readStdReg@idx,w,c
 16813  00539C  0800               	sublw	0
 16814  00539E  6E1B               	movwf	??_vscp_readStdReg& (0+255),c
 16815  0053A0  90D8               	bcf	status,0,c
 16816  0053A2  361B               	rlcf	??_vscp_readStdReg,f,c
 16817  0053A4  90D8               	bcf	status,0,c
 16818  0053A6  361B               	rlcf	??_vscp_readStdReg,f,c
 16819  0053A8  90D8               	bcf	status,0,c
 16820  0053AA  361B               	rlcf	??_vscp_readStdReg,f,c
 16821  0053AC  501B               	movf	??_vscp_readStdReg,w,c
 16822  0053AE  0F18               	addlw	24
 16823  0053B0  C020  F01C         	movff	vscp_readStdReg@code,??_vscp_readStdReg+1
 16824  0053B4  C021  F01D         	movff	vscp_readStdReg@code+1,??_vscp_readStdReg+2
 16825  0053B8  C022  F01E         	movff	vscp_readStdReg@code+2,??_vscp_readStdReg+3
 16826  0053BC  C023  F01F         	movff	vscp_readStdReg@code+3,??_vscp_readStdReg+4
 16827  0053C0  2AE8               	incf	wreg,f,c
 16828  0053C2  D005               	goto	u14360
 16829  0053C4                     u14365:
 16830  0053C4  90D8               	bcf	status,0,c
 16831  0053C6  321F               	rrcf	??_vscp_readStdReg+4,f,c
 16832  0053C8  321E               	rrcf	??_vscp_readStdReg+3,f,c
 16833  0053CA  321D               	rrcf	??_vscp_readStdReg+2,f,c
 16834  0053CC  321C               	rrcf	??_vscp_readStdReg+1,f,c
 16835  0053CE                     u14360:
 16836  0053CE  2EE8               	decfsz	wreg,f,c
 16837  0053D0  D7F9               	goto	u14365
 16838  0053D2  D02F               	goto	L126
 16839  0053D4                     l11732:
 16840                           
 16841                           ;vscp_firmware.c: 672: else if ( ( reg >= 0x9E ) &&
 16842                           ;vscp_firmware.c: 673: ( reg < ( 0x9E + 4 ) ) ) {
 16843  0053D4  0E9D               	movlw	157
 16844  0053D6  641A               	cpfsgt	vscp_readStdReg@reg,c
 16845  0053D8  D02E               	goto	l11742
 16846  0053DA  0EA2               	movlw	162
 16847  0053DC  601A               	cpfslt	vscp_readStdReg@reg,c
 16848  0053DE  D02B               	goto	l11742
 16849                           
 16850                           ;vscp_firmware.c: 675: uint32_t code = vscp_getFamilyType();
 16851  0053E0  ECA2  F037         	call	_vscp_getFamilyType	;wreg free
 16852  0053E4  C019  F027         	movff	?_vscp_getFamilyType+3,vscp_readStdReg@code_1377+3
 16853  0053E8  C018  F026         	movff	?_vscp_getFamilyType+2,vscp_readStdReg@code_1377+2
 16854  0053EC  C017  F025         	movff	?_vscp_getFamilyType+1,vscp_readStdReg@code_1377+1
 16855  0053F0  C016  F024         	movff	?_vscp_getFamilyType,vscp_readStdReg@code_1377
 16856                           
 16857                           ;vscp_firmware.c: 676: uint8_t idx = reg - 0x9E;
 16858  0053F4  501A               	movf	vscp_readStdReg@reg,w,c
 16859  0053F6  0F62               	addlw	98
 16860  0053F8  6E29               	movwf	vscp_readStdReg@idx_1378,c
 16861                           
 16862                           ;vscp_firmware.c: 677: rv = code >> ( ( ( 3 - idx ) * 8 ) & 0xff );
 16863  0053FA  5029               	movf	vscp_readStdReg@idx_1378,w,c
 16864  0053FC  0800               	sublw	0
 16865  0053FE  6E1B               	movwf	??_vscp_readStdReg& (0+255),c
 16866  005400  90D8               	bcf	status,0,c
 16867  005402  361B               	rlcf	??_vscp_readStdReg,f,c
 16868  005404  90D8               	bcf	status,0,c
 16869  005406  361B               	rlcf	??_vscp_readStdReg,f,c
 16870  005408  90D8               	bcf	status,0,c
 16871  00540A  361B               	rlcf	??_vscp_readStdReg,f,c
 16872  00540C  501B               	movf	??_vscp_readStdReg,w,c
 16873  00540E  0F18               	addlw	24
 16874  005410  C024  F01C         	movff	vscp_readStdReg@code_1377,??_vscp_readStdReg+1
 16875  005414  C025  F01D         	movff	vscp_readStdReg@code_1377+1,??_vscp_readStdReg+2
 16876  005418  C026  F01E         	movff	vscp_readStdReg@code_1377+2,??_vscp_readStdReg+3
 16877  00541C  C027  F01F         	movff	vscp_readStdReg@code_1377+3,??_vscp_readStdReg+4
 16878  005420  2AE8               	incf	wreg,f,c
 16879  005422  D005               	goto	u14390
 16880  005424                     u14395:
 16881  005424  90D8               	bcf	status,0,c
 16882  005426  321F               	rrcf	??_vscp_readStdReg+4,f,c
 16883  005428  321E               	rrcf	??_vscp_readStdReg+3,f,c
 16884  00542A  321D               	rrcf	??_vscp_readStdReg+2,f,c
 16885  00542C  321C               	rrcf	??_vscp_readStdReg+1,f,c
 16886  00542E                     u14390:
 16887  00542E  2EE8               	decfsz	wreg,f,c
 16888  005430  D7F9               	goto	u14395
 16889  005432                     L126:
 16890  005432  501C               	movf	??_vscp_readStdReg+1,w,c
 16891  005434  D014               	goto	L128
 16892  005436                     l11742:
 16893                           
 16894                           ;vscp_firmware.c: 679: else if ((reg > (0xD0 - 1)) &&
 16895                           ;vscp_firmware.c: 680: (reg < 0xE0)) {
 16896  005436  0ECF               	movlw	207
 16897  005438  641A               	cpfsgt	vscp_readStdReg@reg,c
 16898  00543A  D009               	goto	l11748
 16899  00543C  0EE0               	movlw	224
 16900  00543E  601A               	cpfslt	vscp_readStdReg@reg,c
 16901  005440  D006               	goto	l11748
 16902                           
 16903                           ;vscp_firmware.c: 683: rv = vscp_getGUID(reg - 0xD0);
 16904  005442  501A               	movf	vscp_readStdReg@reg,w,c
 16905  005444  0F30               	addlw	48
 16906  005446  6E18               	movwf	?_vscp_getGUID,c
 16907  005448  ECC6  F037         	call	_vscp_getGUID	;wreg free
 16908  00544C  D008               	goto	L128
 16909  00544E                     l11748:
 16910                           
 16911                           ;vscp_firmware.c: 686: else if ( reg >= 0xE0 ) {
 16912  00544E  0EDF               	movlw	223
 16913  005450  641A               	cpfsgt	vscp_readStdReg@reg,c
 16914  005452  D006               	goto	l11752
 16915                           
 16916                           ;vscp_firmware.c: 689: rv = vscp_getMDF_URL(reg - 0xE0);
 16917  005454  501A               	movf	vscp_readStdReg@reg,w,c
 16918  005456  0F20               	addlw	32
 16919  005458  6E16               	movwf	?_vscp_getMDF_URL,c
 16920  00545A  EC6C  F037         	call	_vscp_getMDF_URL	;wreg free
 16921  00545E                     L128:
 16922  00545E  6E2A               	movwf	vscp_readStdReg@rv,c
 16923  005460                     l11752:
 16924                           
 16925                           ;vscp_firmware.c: 691: }
 16926                           ;vscp_firmware.c: 693: return rv;
 16927  005460  502A               	movf	vscp_readStdReg@rv,w,c
 16928  005462  0012               	return	
 16929  005464                     __end_of_vscp_readStdReg:
 16930                           	opt stack 0
 16931                           tblptru	equ	0xFF8
 16932                           prodh	equ	0xFF4
 16933                           prodl	equ	0xFF3
 16934                           intcon2	equ	0xFF1
 16935                           postinc0	equ	0xFEE
 16936                           wreg	equ	0xFE8
 16937                           indf2	equ	0xFDF
 16938                           postinc2	equ	0xFDE
 16939                           postdec2	equ	0xFDD
 16940                           fsr2h	equ	0xFDA
 16941                           fsr2l	equ	0xFD9
 16942                           status	equ	0xFD8
 16943                           
 16944 ;; *************** function _vscp_getRegisterPagesUsed *****************
 16945 ;; Defined at:
 16946 ;;		line 3095 in file "../main.c"
 16947 ;; Parameters:    Size  Location     Type
 16948 ;;		None
 16949 ;; Auto vars:     Size  Location     Type
 16950 ;;		None
 16951 ;; Return value:  Size  Location     Type
 16952 ;;                  1    wreg      unsigned char 
 16953 ;; Registers used:
 16954 ;;		wreg
 16955 ;; Tracked objects:
 16956 ;;		On entry : 0/0
 16957 ;;		On exit  : 0/0
 16958 ;;		Unchanged: 0/0
 16959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16960 ;;      Params:         0       0       0       0       0       0       0
 16961 ;;      Locals:         0       0       0       0       0       0       0
 16962 ;;      Temps:          0       0       0       0       0       0       0
 16963 ;;      Totals:         0       0       0       0       0       0       0
 16964 ;;Total ram usage:        0 bytes
 16965 ;; Hardware stack levels used:    1
 16966 ;; Hardware stack levels required when called:    2
 16967 ;; This function calls:
 16968 ;;		Nothing
 16969 ;; This function is called by:
 16970 ;;		_vscp_readStdReg
 16971 ;; This function uses a non-reentrant model
 16972 ;;
 16973                           
 16974                           	psect	text29
 16975  007026                     __ptext29:
 16976                           	opt stack 0
 16977  007026                     _vscp_getRegisterPagesUsed:
 16978                           	opt stack 25
 16979                           
 16980                           ;main.c: 3096: return 3;
 16981                           
 16982                           ;incstack = 0
 16983                           ;incstack = 0
 16984  007026  0E03               	movlw	3
 16985  007028  0012               	return	
 16986  00702A                     __end_of_vscp_getRegisterPagesUsed:
 16987                           	opt stack 0
 16988                           tblptru	equ	0xFF8
 16989                           prodh	equ	0xFF4
 16990                           prodl	equ	0xFF3
 16991                           intcon2	equ	0xFF1
 16992                           postinc0	equ	0xFEE
 16993                           wreg	equ	0xFE8
 16994                           indf2	equ	0xFDF
 16995                           postinc2	equ	0xFDE
 16996                           postdec2	equ	0xFDD
 16997                           fsr2h	equ	0xFDA
 16998                           fsr2l	equ	0xFD9
 16999                           status	equ	0xFD8
 17000                           
 17001 ;; *************** function _vscp_getFamilyType *****************
 17002 ;; Defined at:
 17003 ;;		line 3076 in file "../main.c"
 17004 ;; Parameters:    Size  Location     Type
 17005 ;;		None
 17006 ;; Auto vars:     Size  Location     Type
 17007 ;;		None
 17008 ;; Return value:  Size  Location     Type
 17009 ;;                  4   21[COMRAM] unsigned long 
 17010 ;; Registers used:
 17011 ;;		wreg, status,2
 17012 ;; Tracked objects:
 17013 ;;		On entry : 0/0
 17014 ;;		On exit  : 0/0
 17015 ;;		Unchanged: 0/0
 17016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17017 ;;      Params:         4       0       0       0       0       0       0
 17018 ;;      Locals:         0       0       0       0       0       0       0
 17019 ;;      Temps:          0       0       0       0       0       0       0
 17020 ;;      Totals:         4       0       0       0       0       0       0
 17021 ;;Total ram usage:        4 bytes
 17022 ;; Hardware stack levels used:    1
 17023 ;; Hardware stack levels required when called:    2
 17024 ;; This function calls:
 17025 ;;		Nothing
 17026 ;; This function is called by:
 17027 ;;		_vscp_readStdReg
 17028 ;; This function uses a non-reentrant model
 17029 ;;
 17030                           
 17031                           	psect	text30
 17032  006F44                     __ptext30:
 17033                           	opt stack 0
 17034  006F44                     _vscp_getFamilyType:
 17035                           	opt stack 25
 17036                           
 17037                           ;main.c: 3077: return 0;
 17038                           
 17039                           ;incstack = 0
 17040                           ;incstack = 0
 17041  006F44  0E00               	movlw	0
 17042  006F46  6E16               	movwf	?_vscp_getFamilyType,c
 17043  006F48  0E00               	movlw	0
 17044  006F4A  6E17               	movwf	?_vscp_getFamilyType+1,c
 17045  006F4C  0E00               	movlw	0
 17046  006F4E  6E18               	movwf	?_vscp_getFamilyType+2,c
 17047  006F50  0E00               	movlw	0
 17048  006F52  6E19               	movwf	?_vscp_getFamilyType+3,c
 17049  006F54  0012               	return	
 17050  006F56                     __end_of_vscp_getFamilyType:
 17051                           	opt stack 0
 17052                           tblptru	equ	0xFF8
 17053                           prodh	equ	0xFF4
 17054                           prodl	equ	0xFF3
 17055                           intcon2	equ	0xFF1
 17056                           postinc0	equ	0xFEE
 17057                           wreg	equ	0xFE8
 17058                           indf2	equ	0xFDF
 17059                           postinc2	equ	0xFDE
 17060                           postdec2	equ	0xFDD
 17061                           fsr2h	equ	0xFDA
 17062                           fsr2l	equ	0xFD9
 17063                           status	equ	0xFD8
 17064                           
 17065 ;; *************** function _vscp_getFamilyCode *****************
 17066 ;; Defined at:
 17067 ;;		line 3067 in file "../main.c"
 17068 ;; Parameters:    Size  Location     Type
 17069 ;;		None
 17070 ;; Auto vars:     Size  Location     Type
 17071 ;;		None
 17072 ;; Return value:  Size  Location     Type
 17073 ;;                  4   21[COMRAM] unsigned long 
 17074 ;; Registers used:
 17075 ;;		wreg, status,2
 17076 ;; Tracked objects:
 17077 ;;		On entry : 0/0
 17078 ;;		On exit  : 0/0
 17079 ;;		Unchanged: 0/0
 17080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17081 ;;      Params:         4       0       0       0       0       0       0
 17082 ;;      Locals:         0       0       0       0       0       0       0
 17083 ;;      Temps:          0       0       0       0       0       0       0
 17084 ;;      Totals:         4       0       0       0       0       0       0
 17085 ;;Total ram usage:        4 bytes
 17086 ;; Hardware stack levels used:    1
 17087 ;; Hardware stack levels required when called:    2
 17088 ;; This function calls:
 17089 ;;		Nothing
 17090 ;; This function is called by:
 17091 ;;		_vscp_readStdReg
 17092 ;; This function uses a non-reentrant model
 17093 ;;
 17094                           
 17095                           	psect	text31
 17096  006F56                     __ptext31:
 17097                           	opt stack 0
 17098  006F56                     _vscp_getFamilyCode:
 17099                           	opt stack 25
 17100                           
 17101                           ;main.c: 3068: return 0L;
 17102                           
 17103                           ;incstack = 0
 17104                           ;incstack = 0
 17105  006F56  0E00               	movlw	0
 17106  006F58  6E16               	movwf	?_vscp_getFamilyCode,c
 17107  006F5A  0E00               	movlw	0
 17108  006F5C  6E17               	movwf	?_vscp_getFamilyCode+1,c
 17109  006F5E  0E00               	movlw	0
 17110  006F60  6E18               	movwf	?_vscp_getFamilyCode+2,c
 17111  006F62  0E00               	movlw	0
 17112  006F64  6E19               	movwf	?_vscp_getFamilyCode+3,c
 17113  006F66  0012               	return	
 17114  006F68                     __end_of_vscp_getFamilyCode:
 17115                           	opt stack 0
 17116                           tblptru	equ	0xFF8
 17117                           prodh	equ	0xFF4
 17118                           prodl	equ	0xFF3
 17119                           intcon2	equ	0xFF1
 17120                           postinc0	equ	0xFEE
 17121                           wreg	equ	0xFE8
 17122                           indf2	equ	0xFDF
 17123                           postinc2	equ	0xFDE
 17124                           postdec2	equ	0xFDD
 17125                           fsr2h	equ	0xFDA
 17126                           fsr2l	equ	0xFD9
 17127                           status	equ	0xFD8
 17128                           
 17129 ;; *************** function _vscp_getBufferSize *****************
 17130 ;; Defined at:
 17131 ;;		line 2928 in file "../main.c"
 17132 ;; Parameters:    Size  Location     Type
 17133 ;;		None
 17134 ;; Auto vars:     Size  Location     Type
 17135 ;;		None
 17136 ;; Return value:  Size  Location     Type
 17137 ;;                  1    wreg      unsigned char 
 17138 ;; Registers used:
 17139 ;;		wreg
 17140 ;; Tracked objects:
 17141 ;;		On entry : 0/0
 17142 ;;		On exit  : 0/0
 17143 ;;		Unchanged: 0/0
 17144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17145 ;;      Params:         0       0       0       0       0       0       0
 17146 ;;      Locals:         0       0       0       0       0       0       0
 17147 ;;      Temps:          0       0       0       0       0       0       0
 17148 ;;      Totals:         0       0       0       0       0       0       0
 17149 ;;Total ram usage:        0 bytes
 17150 ;; Hardware stack levels used:    1
 17151 ;; Hardware stack levels required when called:    2
 17152 ;; This function calls:
 17153 ;;		Nothing
 17154 ;; This function is called by:
 17155 ;;		_vscp_readStdReg
 17156 ;; This function uses a non-reentrant model
 17157 ;;
 17158                           
 17159                           	psect	text32
 17160  00702A                     __ptext32:
 17161                           	opt stack 0
 17162  00702A                     _vscp_getBufferSize:
 17163                           	opt stack 25
 17164                           
 17165                           ;main.c: 2929: return 8;
 17166                           
 17167                           ;incstack = 0
 17168                           ;incstack = 0
 17169  00702A  0E08               	movlw	8
 17170  00702C  0012               	return	
 17171  00702E                     __end_of_vscp_getBufferSize:
 17172                           	opt stack 0
 17173                           tblptru	equ	0xFF8
 17174                           prodh	equ	0xFF4
 17175                           prodl	equ	0xFF3
 17176                           intcon2	equ	0xFF1
 17177                           postinc0	equ	0xFEE
 17178                           wreg	equ	0xFE8
 17179                           indf2	equ	0xFDF
 17180                           postinc2	equ	0xFDE
 17181                           postdec2	equ	0xFDD
 17182                           fsr2h	equ	0xFDA
 17183                           fsr2l	equ	0xFD9
 17184                           status	equ	0xFD8
 17185                           
 17186 ;; *************** function _vscp_getBootLoaderAlgorithm *****************
 17187 ;; Defined at:
 17188 ;;		line 2919 in file "../main.c"
 17189 ;; Parameters:    Size  Location     Type
 17190 ;;		None
 17191 ;; Auto vars:     Size  Location     Type
 17192 ;;		None
 17193 ;; Return value:  Size  Location     Type
 17194 ;;                  1    wreg      unsigned char 
 17195 ;; Registers used:
 17196 ;;		wreg
 17197 ;; Tracked objects:
 17198 ;;		On entry : 0/0
 17199 ;;		On exit  : 0/0
 17200 ;;		Unchanged: 0/0
 17201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17202 ;;      Params:         0       0       0       0       0       0       0
 17203 ;;      Locals:         0       0       0       0       0       0       0
 17204 ;;      Temps:          0       0       0       0       0       0       0
 17205 ;;      Totals:         0       0       0       0       0       0       0
 17206 ;;Total ram usage:        0 bytes
 17207 ;; Hardware stack levels used:    1
 17208 ;; Hardware stack levels required when called:    2
 17209 ;; This function calls:
 17210 ;;		Nothing
 17211 ;; This function is called by:
 17212 ;;		_vscp_readStdReg
 17213 ;; This function uses a non-reentrant model
 17214 ;;
 17215                           
 17216                           	psect	text33
 17217  00702E                     __ptext33:
 17218                           	opt stack 0
 17219  00702E                     _vscp_getBootLoaderAlgorithm:
 17220                           	opt stack 25
 17221                           
 17222                           ;main.c: 2920: return 0x01;
 17223                           
 17224                           ;incstack = 0
 17225                           ;incstack = 0
 17226  00702E  0E01               	movlw	1
 17227  007030  0012               	return	
 17228  007032                     __end_of_vscp_getBootLoaderAlgorithm:
 17229                           	opt stack 0
 17230                           tblptru	equ	0xFF8
 17231                           prodh	equ	0xFF4
 17232                           prodl	equ	0xFF3
 17233                           intcon2	equ	0xFF1
 17234                           postinc0	equ	0xFEE
 17235                           wreg	equ	0xFE8
 17236                           indf2	equ	0xFDF
 17237                           postinc2	equ	0xFDE
 17238                           postdec2	equ	0xFDD
 17239                           fsr2h	equ	0xFDA
 17240                           fsr2l	equ	0xFD9
 17241                           status	equ	0xFD8
 17242                           
 17243 ;; *************** function _vscp_getManufacturerId *****************
 17244 ;; Defined at:
 17245 ;;		line 2910 in file "../main.c"
 17246 ;; Parameters:    Size  Location     Type
 17247 ;;  idx             1   23[COMRAM] unsigned char 
 17248 ;; Auto vars:     Size  Location     Type
 17249 ;;		None
 17250 ;; Return value:  Size  Location     Type
 17251 ;;                  1    wreg      unsigned char 
 17252 ;; Registers used:
 17253 ;;		wreg, status,2, status,0, cstack
 17254 ;; Tracked objects:
 17255 ;;		On entry : 0/0
 17256 ;;		On exit  : 0/0
 17257 ;;		Unchanged: 0/0
 17258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17259 ;;      Params:         1       0       0       0       0       0       0
 17260 ;;      Locals:         0       0       0       0       0       0       0
 17261 ;;      Temps:          0       0       0       0       0       0       0
 17262 ;;      Totals:         1       0       0       0       0       0       0
 17263 ;;Total ram usage:        1 bytes
 17264 ;; Hardware stack levels used:    1
 17265 ;; Hardware stack levels required when called:    3
 17266 ;; This function calls:
 17267 ;;		_Read_b_eep
 17268 ;; This function is called by:
 17269 ;;		_vscp_readStdReg
 17270 ;;		_vscp_writeStdReg
 17271 ;; This function uses a non-reentrant model
 17272 ;;
 17273                           
 17274                           	psect	text34
 17275  006F68                     __ptext34:
 17276                           	opt stack 0
 17277  006F68                     _vscp_getManufacturerId:
 17278                           	opt stack 24
 17279                           
 17280                           ;main.c: 2911: return Read_b_eep(0x0B + idx);
 17281                           
 17282                           ;incstack = 0
 17283                           ;incstack = 0
 17284  006F68  0E0B               	movlw	11
 17285  006F6A  2418               	addwf	vscp_getManufacturerId@idx,w,c
 17286  006F6C  6E16               	movwf	?_Read_b_eep,c
 17287  006F6E  6A17               	clrf	?_Read_b_eep+1,c
 17288  006F70  0E00               	movlw	0
 17289  006F72  2217               	addwfc	?_Read_b_eep+1,f,c
 17290  006F74  ECD8  F037         	call	_Read_b_eep	;wreg free
 17291  006F78  0012               	return	
 17292  006F7A                     __end_of_vscp_getManufacturerId:
 17293                           	opt stack 0
 17294                           tblptru	equ	0xFF8
 17295                           prodh	equ	0xFF4
 17296                           prodl	equ	0xFF3
 17297                           intcon2	equ	0xFF1
 17298                           postinc0	equ	0xFEE
 17299                           wreg	equ	0xFE8
 17300                           indf2	equ	0xFDF
 17301                           postinc2	equ	0xFDE
 17302                           postdec2	equ	0xFDD
 17303                           fsr2h	equ	0xFDA
 17304                           fsr2l	equ	0xFD9
 17305                           status	equ	0xFD8
 17306                           
 17307 ;; *************** function _vscp_getUserID *****************
 17308 ;; Defined at:
 17309 ;;		line 2890 in file "../main.c"
 17310 ;; Parameters:    Size  Location     Type
 17311 ;;  idx             1   23[COMRAM] unsigned char 
 17312 ;; Auto vars:     Size  Location     Type
 17313 ;;		None
 17314 ;; Return value:  Size  Location     Type
 17315 ;;                  1    wreg      unsigned char 
 17316 ;; Registers used:
 17317 ;;		wreg, status,2, status,0, cstack
 17318 ;; Tracked objects:
 17319 ;;		On entry : 0/0
 17320 ;;		On exit  : 0/0
 17321 ;;		Unchanged: 0/0
 17322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17323 ;;      Params:         1       0       0       0       0       0       0
 17324 ;;      Locals:         0       0       0       0       0       0       0
 17325 ;;      Temps:          0       0       0       0       0       0       0
 17326 ;;      Totals:         1       0       0       0       0       0       0
 17327 ;;Total ram usage:        1 bytes
 17328 ;; Hardware stack levels used:    1
 17329 ;; Hardware stack levels required when called:    3
 17330 ;; This function calls:
 17331 ;;		_Read_b_eep
 17332 ;; This function is called by:
 17333 ;;		_vscp_readStdReg
 17334 ;;		_vscp_writeStdReg
 17335 ;; This function uses a non-reentrant model
 17336 ;;
 17337                           
 17338                           	psect	text35
 17339  006F7A                     __ptext35:
 17340                           	opt stack 0
 17341  006F7A                     _vscp_getUserID:
 17342                           	opt stack 24
 17343                           
 17344                           ;main.c: 2891: return Read_b_eep(0x06 + idx);
 17345                           
 17346                           ;incstack = 0
 17347                           ;incstack = 0
 17348  006F7A  0E06               	movlw	6
 17349  006F7C  2418               	addwf	vscp_getUserID@idx,w,c
 17350  006F7E  6E16               	movwf	?_Read_b_eep,c
 17351  006F80  6A17               	clrf	?_Read_b_eep+1,c
 17352  006F82  0E00               	movlw	0
 17353  006F84  2217               	addwfc	?_Read_b_eep+1,f,c
 17354  006F86  ECD8  F037         	call	_Read_b_eep	;wreg free
 17355  006F8A  0012               	return	
 17356  006F8C                     __end_of_vscp_getUserID:
 17357                           	opt stack 0
 17358                           tblptru	equ	0xFF8
 17359                           prodh	equ	0xFF4
 17360                           prodl	equ	0xFF3
 17361                           intcon2	equ	0xFF1
 17362                           postinc0	equ	0xFEE
 17363                           wreg	equ	0xFE8
 17364                           indf2	equ	0xFDF
 17365                           postinc2	equ	0xFDE
 17366                           postdec2	equ	0xFDD
 17367                           fsr2h	equ	0xFDA
 17368                           fsr2l	equ	0xFD9
 17369                           status	equ	0xFD8
 17370                           
 17371 ;; *************** function _vscp_getMDF_URL *****************
 17372 ;; Defined at:
 17373 ;;		line 2881 in file "../main.c"
 17374 ;; Parameters:    Size  Location     Type
 17375 ;;  idx             1   21[COMRAM] unsigned char 
 17376 ;; Auto vars:     Size  Location     Type
 17377 ;;		None
 17378 ;; Return value:  Size  Location     Type
 17379 ;;                  1    wreg      unsigned char 
 17380 ;; Registers used:
 17381 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 17382 ;; Tracked objects:
 17383 ;;		On entry : 0/0
 17384 ;;		On exit  : 0/0
 17385 ;;		Unchanged: 0/0
 17386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17387 ;;      Params:         1       0       0       0       0       0       0
 17388 ;;      Locals:         0       0       0       0       0       0       0
 17389 ;;      Temps:          0       0       0       0       0       0       0
 17390 ;;      Totals:         1       0       0       0       0       0       0
 17391 ;;Total ram usage:        1 bytes
 17392 ;; Hardware stack levels used:    1
 17393 ;; Hardware stack levels required when called:    2
 17394 ;; This function calls:
 17395 ;;		Nothing
 17396 ;; This function is called by:
 17397 ;;		_vscp_readStdReg
 17398 ;;		_vscp_handleProtocolEvent
 17399 ;; This function uses a non-reentrant model
 17400 ;;
 17401                           
 17402                           	psect	text36
 17403  006ED8                     __ptext36:
 17404                           	opt stack 0
 17405  006ED8                     _vscp_getMDF_URL:
 17406                           	opt stack 25
 17407                           
 17408                           ;main.c: 2882: return vscp_deviceURL[ idx ];
 17409                           
 17410                           ;incstack = 0
 17411                           ;incstack = 0
 17412  006ED8  5016               	movf	vscp_getMDF_URL@idx,w,c
 17413  006EDA  0D01               	mullw	1
 17414  006EDC  0E00               	movlw	low _vscp_deviceURL
 17415  006EDE  24F3               	addwf	prodl,w,c
 17416  006EE0  6EF6               	movwf	tblptrl,c
 17417  006EE2  0E06               	movlw	high _vscp_deviceURL
 17418  006EE4  20F4               	addwfc	prodh,w,c
 17419  006EE6  6EF7               	movwf	tblptrh,c
 17420  006EE8  0008               	tblrd		*
 17421  006EEA  50F5               	movf	tablat,w,c
 17422  006EEC  0012               	return	
 17423  006EEE                     __end_of_vscp_getMDF_URL:
 17424                           	opt stack 0
 17425                           tblptru	equ	0xFF8
 17426                           tblptrh	equ	0xFF7
 17427                           tblptrl	equ	0xFF6
 17428                           tablat	equ	0xFF5
 17429                           prodh	equ	0xFF4
 17430                           prodl	equ	0xFF3
 17431                           intcon2	equ	0xFF1
 17432                           postinc0	equ	0xFEE
 17433                           wreg	equ	0xFE8
 17434                           indf2	equ	0xFDF
 17435                           postinc2	equ	0xFDE
 17436                           postdec2	equ	0xFDD
 17437                           fsr2h	equ	0xFDA
 17438                           fsr2l	equ	0xFD9
 17439                           status	equ	0xFD8
 17440                           
 17441 ;; *************** function _vscp_getGUID *****************
 17442 ;; Defined at:
 17443 ;;		line 2869 in file "../main.c"
 17444 ;; Parameters:    Size  Location     Type
 17445 ;;  idx             1   23[COMRAM] unsigned char 
 17446 ;; Auto vars:     Size  Location     Type
 17447 ;;		None
 17448 ;; Return value:  Size  Location     Type
 17449 ;;                  1    wreg      unsigned char 
 17450 ;; Registers used:
 17451 ;;		wreg, status,2, status,0, cstack
 17452 ;; Tracked objects:
 17453 ;;		On entry : 0/0
 17454 ;;		On exit  : 0/0
 17455 ;;		Unchanged: 0/0
 17456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17457 ;;      Params:         1       0       0       0       0       0       0
 17458 ;;      Locals:         0       0       0       0       0       0       0
 17459 ;;      Temps:          0       0       0       0       0       0       0
 17460 ;;      Totals:         1       0       0       0       0       0       0
 17461 ;;Total ram usage:        1 bytes
 17462 ;; Hardware stack levels used:    1
 17463 ;; Hardware stack levels required when called:    3
 17464 ;; This function calls:
 17465 ;;		_Read_b_eep
 17466 ;; This function is called by:
 17467 ;;		_vscp_readStdReg
 17468 ;;		_vscp_writeStdReg
 17469 ;;		_vscp_handleProtocolEvent
 17470 ;; This function uses a non-reentrant model
 17471 ;;
 17472                           
 17473                           	psect	text37
 17474  006F8C                     __ptext37:
 17475                           	opt stack 0
 17476  006F8C                     _vscp_getGUID:
 17477                           	opt stack 24
 17478                           
 17479                           ;main.c: 2870: return Read_b_eep(0x13 + idx);
 17480                           
 17481                           ;incstack = 0
 17482                           ;incstack = 0
 17483  006F8C  0E13               	movlw	19
 17484  006F8E  2418               	addwf	vscp_getGUID@idx,w,c
 17485  006F90  6E16               	movwf	?_Read_b_eep,c
 17486  006F92  6A17               	clrf	?_Read_b_eep+1,c
 17487  006F94  0E00               	movlw	0
 17488  006F96  2217               	addwfc	?_Read_b_eep+1,f,c
 17489  006F98  ECD8  F037         	call	_Read_b_eep	;wreg free
 17490  006F9C  0012               	return	
 17491  006F9E                     __end_of_vscp_getGUID:
 17492                           	opt stack 0
 17493                           tblptru	equ	0xFF8
 17494                           tblptrh	equ	0xFF7
 17495                           tblptrl	equ	0xFF6
 17496                           tablat	equ	0xFF5
 17497                           prodh	equ	0xFF4
 17498                           prodl	equ	0xFF3
 17499                           intcon2	equ	0xFF1
 17500                           postinc0	equ	0xFEE
 17501                           wreg	equ	0xFE8
 17502                           indf2	equ	0xFDF
 17503                           postinc2	equ	0xFDE
 17504                           postdec2	equ	0xFDD
 17505                           fsr2h	equ	0xFDA
 17506                           fsr2l	equ	0xFD9
 17507                           status	equ	0xFD8
 17508                           
 17509 ;; *************** function _vscp_getSubMinorVersion *****************
 17510 ;; Defined at:
 17511 ;;		line 2858 in file "../main.c"
 17512 ;; Parameters:    Size  Location     Type
 17513 ;;		None
 17514 ;; Auto vars:     Size  Location     Type
 17515 ;;		None
 17516 ;; Return value:  Size  Location     Type
 17517 ;;                  1    wreg      unsigned char 
 17518 ;; Registers used:
 17519 ;;		wreg
 17520 ;; Tracked objects:
 17521 ;;		On entry : 0/0
 17522 ;;		On exit  : 0/0
 17523 ;;		Unchanged: 0/0
 17524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17525 ;;      Params:         0       0       0       0       0       0       0
 17526 ;;      Locals:         0       0       0       0       0       0       0
 17527 ;;      Temps:          0       0       0       0       0       0       0
 17528 ;;      Totals:         0       0       0       0       0       0       0
 17529 ;;Total ram usage:        0 bytes
 17530 ;; Hardware stack levels used:    1
 17531 ;; Hardware stack levels required when called:    2
 17532 ;; This function calls:
 17533 ;;		Nothing
 17534 ;; This function is called by:
 17535 ;;		_vscp_readStdReg
 17536 ;; This function uses a non-reentrant model
 17537 ;;
 17538                           
 17539                           	psect	text38
 17540  007032                     __ptext38:
 17541                           	opt stack 0
 17542  007032                     _vscp_getSubMinorVersion:
 17543                           	opt stack 25
 17544                           
 17545                           ;main.c: 2859: return 0;
 17546                           
 17547                           ;incstack = 0
 17548                           ;incstack = 0
 17549  007032  0E00               	movlw	0
 17550  007034  0012               	return	
 17551  007036                     __end_of_vscp_getSubMinorVersion:
 17552                           	opt stack 0
 17553                           tblptru	equ	0xFF8
 17554                           tblptrh	equ	0xFF7
 17555                           tblptrl	equ	0xFF6
 17556                           tablat	equ	0xFF5
 17557                           prodh	equ	0xFF4
 17558                           prodl	equ	0xFF3
 17559                           intcon2	equ	0xFF1
 17560                           postinc0	equ	0xFEE
 17561                           wreg	equ	0xFE8
 17562                           indf2	equ	0xFDF
 17563                           postinc2	equ	0xFDE
 17564                           postdec2	equ	0xFDD
 17565                           fsr2h	equ	0xFDA
 17566                           fsr2l	equ	0xFD9
 17567                           status	equ	0xFD8
 17568                           
 17569 ;; *************** function _vscp_getMinorVersion *****************
 17570 ;; Defined at:
 17571 ;;		line 2849 in file "../main.c"
 17572 ;; Parameters:    Size  Location     Type
 17573 ;;		None
 17574 ;; Auto vars:     Size  Location     Type
 17575 ;;		None
 17576 ;; Return value:  Size  Location     Type
 17577 ;;                  1    wreg      unsigned char 
 17578 ;; Registers used:
 17579 ;;		wreg
 17580 ;; Tracked objects:
 17581 ;;		On entry : 0/0
 17582 ;;		On exit  : 0/0
 17583 ;;		Unchanged: 0/0
 17584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17585 ;;      Params:         0       0       0       0       0       0       0
 17586 ;;      Locals:         0       0       0       0       0       0       0
 17587 ;;      Temps:          0       0       0       0       0       0       0
 17588 ;;      Totals:         0       0       0       0       0       0       0
 17589 ;;Total ram usage:        0 bytes
 17590 ;; Hardware stack levels used:    1
 17591 ;; Hardware stack levels required when called:    2
 17592 ;; This function calls:
 17593 ;;		Nothing
 17594 ;; This function is called by:
 17595 ;;		_vscp_readStdReg
 17596 ;; This function uses a non-reentrant model
 17597 ;;
 17598                           
 17599                           	psect	text39
 17600  007036                     __ptext39:
 17601                           	opt stack 0
 17602  007036                     _vscp_getMinorVersion:
 17603                           	opt stack 25
 17604                           
 17605                           ;main.c: 2850: return 0;
 17606                           
 17607                           ;incstack = 0
 17608                           ;incstack = 0
 17609  007036  0E00               	movlw	0
 17610  007038  0012               	return	
 17611  00703A                     __end_of_vscp_getMinorVersion:
 17612                           	opt stack 0
 17613                           tblptru	equ	0xFF8
 17614                           tblptrh	equ	0xFF7
 17615                           tblptrl	equ	0xFF6
 17616                           tablat	equ	0xFF5
 17617                           prodh	equ	0xFF4
 17618                           prodl	equ	0xFF3
 17619                           intcon2	equ	0xFF1
 17620                           postinc0	equ	0xFEE
 17621                           wreg	equ	0xFE8
 17622                           indf2	equ	0xFDF
 17623                           postinc2	equ	0xFDE
 17624                           postdec2	equ	0xFDD
 17625                           fsr2h	equ	0xFDA
 17626                           fsr2l	equ	0xFD9
 17627                           status	equ	0xFD8
 17628                           
 17629 ;; *************** function _vscp_getMajorVersion *****************
 17630 ;; Defined at:
 17631 ;;		line 2840 in file "../main.c"
 17632 ;; Parameters:    Size  Location     Type
 17633 ;;		None
 17634 ;; Auto vars:     Size  Location     Type
 17635 ;;		None
 17636 ;; Return value:  Size  Location     Type
 17637 ;;                  1    wreg      unsigned char 
 17638 ;; Registers used:
 17639 ;;		wreg
 17640 ;; Tracked objects:
 17641 ;;		On entry : 0/0
 17642 ;;		On exit  : 0/0
 17643 ;;		Unchanged: 0/0
 17644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17645 ;;      Params:         0       0       0       0       0       0       0
 17646 ;;      Locals:         0       0       0       0       0       0       0
 17647 ;;      Temps:          0       0       0       0       0       0       0
 17648 ;;      Totals:         0       0       0       0       0       0       0
 17649 ;;Total ram usage:        0 bytes
 17650 ;; Hardware stack levels used:    1
 17651 ;; Hardware stack levels required when called:    2
 17652 ;; This function calls:
 17653 ;;		Nothing
 17654 ;; This function is called by:
 17655 ;;		_vscp_readStdReg
 17656 ;; This function uses a non-reentrant model
 17657 ;;
 17658                           
 17659                           	psect	text40
 17660  00703A                     __ptext40:
 17661                           	opt stack 0
 17662  00703A                     _vscp_getMajorVersion:
 17663                           	opt stack 25
 17664                           
 17665                           ;main.c: 2841: return 1;
 17666                           
 17667                           ;incstack = 0
 17668                           ;incstack = 0
 17669  00703A  0E01               	movlw	1
 17670  00703C  0012               	return	
 17671  00703E                     __end_of_vscp_getMajorVersion:
 17672                           	opt stack 0
 17673                           tblptru	equ	0xFF8
 17674                           tblptrh	equ	0xFF7
 17675                           tblptrl	equ	0xFF6
 17676                           tablat	equ	0xFF5
 17677                           prodh	equ	0xFF4
 17678                           prodl	equ	0xFF3
 17679                           intcon2	equ	0xFF1
 17680                           postinc0	equ	0xFEE
 17681                           wreg	equ	0xFE8
 17682                           indf2	equ	0xFDF
 17683                           postinc2	equ	0xFDE
 17684                           postdec2	equ	0xFDD
 17685                           fsr2h	equ	0xFDA
 17686                           fsr2l	equ	0xFD9
 17687                           status	equ	0xFD8
 17688                           
 17689 ;; *************** function _vscp_newNodeOnline *****************
 17690 ;; Defined at:
 17691 ;;		line 502 in file "../../vscp_firmware/common/vscp_firmware.c"
 17692 ;; Parameters:    Size  Location     Type
 17693 ;;		None
 17694 ;; Auto vars:     Size  Location     Type
 17695 ;;		None
 17696 ;; Return value:  Size  Location     Type
 17697 ;;		None               void
 17698 ;; Registers used:
 17699 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 17700 ;; Tracked objects:
 17701 ;;		On entry : 0/0
 17702 ;;		On exit  : 0/0
 17703 ;;		Unchanged: 0/0
 17704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17705 ;;      Params:         0       0       0       0       0       0       0
 17706 ;;      Locals:         0       0       0       0       0       0       0
 17707 ;;      Temps:          1       0       0       0       0       0       0
 17708 ;;      Totals:         1       0       0       0       0       0       0
 17709 ;;Total ram usage:        1 bytes
 17710 ;; Hardware stack levels used:    1
 17711 ;; Hardware stack levels required when called:    7
 17712 ;; This function calls:
 17713 ;;		_vscp_sendEvent
 17714 ;; This function is called by:
 17715 ;;		_vscp_handleProtocolEvent
 17716 ;; This function uses a non-reentrant model
 17717 ;;
 17718                           
 17719                           	psect	text41
 17720  006BBE                     __ptext41:
 17721                           	opt stack 0
 17722  006BBE                     _vscp_newNodeOnline:
 17723                           	opt stack 21
 17724                           
 17725                           ;vscp_firmware.c: 503: if ( ( 1 == ( vscp_imsg.flags & 0x0f ) ) &&
 17726                           ;vscp_firmware.c: 504: (vscp_nickname == vscp_imsg.data[ 0 ])) {
 17727                           
 17728                           ;incstack = 0
 17729                           ;incstack = 0
 17730  006BBE  C0F1  F031         	movff	_vscp_imsg,??_vscp_newNodeOnline
 17731  006BC2  0E0F               	movlw	15
 17732  006BC4  1631               	andwf	??_vscp_newNodeOnline,f,c
 17733  006BC6  0431               	decf	??_vscp_newNodeOnline,w,c
 17734  006BC8  A4D8               	btfss	status,2,c
 17735  006BCA  D01A               	goto	l1210
 17736  006BCC  0100               	movlb	0	; () banked
 17737  006BCE  0100               	movlb	0	; () banked
 17738  006BD0  51EC               	movf	_vscp_nickname& (0+255),w,b
 17739  006BD2  0100               	movlb	0	; () banked
 17740  006BD4  EE20  F0F7         	lfsr	2,_vscp_imsg+6
 17741  006BD8  62DF               	cpfseq	indf2,c
 17742  006BDA  D012               	goto	l1210
 17743                           
 17744                           ; BSR set to: 0
 17745                           ;vscp_firmware.c: 510: vscp_omsg.flags = 0x80;
 17746  006BDC  6E31               	movwf	??_vscp_newNodeOnline& (0+255),c
 17747  006BDE  0E80               	movlw	128
 17748  006BE0  6E3E               	movwf	_vscp_omsg,c
 17749  006BE2  5031               	movf	??_vscp_newNodeOnline& (0+255),w,c
 17750                           
 17751                           ;vscp_firmware.c: 511: vscp_omsg.priority = 0x00;
 17752  006BE4  6E31               	movwf	??_vscp_newNodeOnline& (0+255),c
 17753  006BE6  0E00               	movlw	0
 17754  006BE8  6E3F               	movwf	_vscp_omsg+1,c
 17755  006BEA  5031               	movf	??_vscp_newNodeOnline& (0+255),w,c
 17756                           
 17757                           ; BSR set to: 0
 17758                           ;vscp_firmware.c: 512: vscp_omsg.vscp_class = 0;
 17759  006BEC  0E00               	movlw	0
 17760  006BEE  6E41               	movwf	_vscp_omsg+3,c
 17761  006BF0  0E00               	movlw	0
 17762  006BF2  6E40               	movwf	_vscp_omsg+2,c
 17763                           
 17764                           ; BSR set to: 0
 17765                           ;vscp_firmware.c: 513: vscp_omsg.vscp_type = 3;
 17766  006BF4  6E31               	movwf	??_vscp_newNodeOnline& (0+255),c
 17767  006BF6  0E03               	movlw	3
 17768  006BF8  6E42               	movwf	_vscp_omsg+4,c
 17769  006BFA  5031               	movf	??_vscp_newNodeOnline& (0+255),w,c
 17770                           
 17771                           ; BSR set to: 0
 17772                           ;vscp_firmware.c: 514: vscp_sendEvent();
 17773  006BFC  EC21  F036         	call	_vscp_sendEvent	;wreg free
 17774  006C00                     l1210:
 17775  006C00  0012               	return	
 17776  006C02                     __end_of_vscp_newNodeOnline:
 17777                           	opt stack 0
 17778                           tblptru	equ	0xFF8
 17779                           tblptrh	equ	0xFF7
 17780                           tblptrl	equ	0xFF6
 17781                           tablat	equ	0xFF5
 17782                           prodh	equ	0xFF4
 17783                           prodl	equ	0xFF3
 17784                           intcon2	equ	0xFF1
 17785                           postinc0	equ	0xFEE
 17786                           wreg	equ	0xFE8
 17787                           indf2	equ	0xFDF
 17788                           postinc2	equ	0xFDE
 17789                           postdec2	equ	0xFDD
 17790                           fsr2h	equ	0xFDA
 17791                           fsr2l	equ	0xFD9
 17792                           status	equ	0xFD8
 17793                           
 17794 ;; *************** function _vscp_handleDropNickname *****************
 17795 ;; Defined at:
 17796 ;;		line 438 in file "../../vscp_firmware/common/vscp_firmware.c"
 17797 ;; Parameters:    Size  Location     Type
 17798 ;;		None
 17799 ;; Auto vars:     Size  Location     Type
 17800 ;;  bytes           1   28[COMRAM] unsigned char 
 17801 ;; Return value:  Size  Location     Type
 17802 ;;		None               void
 17803 ;; Registers used:
 17804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17805 ;; Tracked objects:
 17806 ;;		On entry : 0/0
 17807 ;;		On exit  : 0/0
 17808 ;;		Unchanged: 0/0
 17809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17810 ;;      Params:         0       0       0       0       0       0       0
 17811 ;;      Locals:         1       0       0       0       0       0       0
 17812 ;;      Temps:          1       0       0       0       0       0       0
 17813 ;;      Totals:         2       0       0       0       0       0       0
 17814 ;;Total ram usage:        2 bytes
 17815 ;; Hardware stack levels used:    1
 17816 ;; Hardware stack levels required when called:    5
 17817 ;; This function calls:
 17818 ;;		_vscp_init
 17819 ;;		_vscp_writeNicknamePermanent
 17820 ;; This function is called by:
 17821 ;;		_vscp_handleProtocolEvent
 17822 ;; This function uses a non-reentrant model
 17823 ;;
 17824                           
 17825                           	psect	text42
 17826  006B72                     __ptext42:
 17827                           	opt stack 0
 17828  006B72                     _vscp_handleDropNickname:
 17829                           	opt stack 23
 17830                           
 17831                           ;vscp_firmware.c: 439: uint8_t bytes = vscp_imsg.flags & 0x0f;
 17832                           
 17833                           ;incstack = 0
 17834                           ;incstack = 0
 17835  006B72  0100               	movlb	0	; () banked
 17836  006B74  0100               	movlb	0	; () banked
 17837  006B76  51F1               	movf	_vscp_imsg& (0+255),w,b
 17838  006B78  0B0F               	andlw	15
 17839  006B7A  6E1D               	movwf	vscp_handleDropNickname@bytes,c
 17840                           
 17841                           ; BSR set to: 0
 17842                           ;vscp_firmware.c: 445: if ((bytes >= 1) && (vscp_nickname == vscp_imsg.data[ 0 ])) {
 17843  006B7C  501D               	movf	vscp_handleDropNickname@bytes,w,c
 17844  006B7E  B4D8               	btfsc	status,2,c
 17845  006B80  D01D               	goto	l1206
 17846                           
 17847                           ; BSR set to: 0
 17848  006B82  0100               	movlb	0	; () banked
 17849  006B84  0100               	movlb	0	; () banked
 17850  006B86  51EC               	movf	_vscp_nickname& (0+255),w,b
 17851  006B88  0100               	movlb	0	; () banked
 17852  006B8A  EE20  F0F7         	lfsr	2,_vscp_imsg+6
 17853  006B8E  62DF               	cpfseq	indf2,c
 17854  006B90  D015               	goto	l1206
 17855                           
 17856                           ; BSR set to: 0
 17857                           ;vscp_firmware.c: 477: if ((bytes == 1) || ((bytes > 1) && (vscp_imsg.data[1] == 0))) {
 17858  006B92  041D               	decf	vscp_handleDropNickname@bytes,w,c
 17859  006B94  B4D8               	btfsc	status,2,c
 17860  006B96  D007               	goto	l1205
 17861                           
 17862                           ; BSR set to: 0
 17863  006B98  0E01               	movlw	1
 17864  006B9A  641D               	cpfsgt	vscp_handleDropNickname@bytes,c
 17865  006B9C  D00F               	goto	l1206
 17866                           
 17867                           ; BSR set to: 0
 17868  006B9E  0100               	movlb	0	; () banked
 17869  006BA0  0100               	movlb	0	; () banked
 17870  006BA2  67F8               	tstfsz	(_vscp_imsg+7)& (0+255),b
 17871  006BA4  D00B               	goto	l1206
 17872  006BA6                     l1205:
 17873                           
 17874                           ; BSR set to: 0
 17875                           ;vscp_firmware.c: 479: vscp_nickname = 0xff;
 17876  006BA6  0100               	movlb	0	; () banked
 17877  006BA8  0100               	movlb	0	; () banked
 17878  006BAA  69EC               	setf	_vscp_nickname& (0+255),b
 17879                           
 17880                           ; BSR set to: 0
 17881                           ;vscp_firmware.c: 480: vscp_writeNicknamePermanent(0xff);
 17882  006BAC  6E1C               	movwf	??_vscp_handleDropNickname& (0+255),c
 17883  006BAE  0EFF               	movlw	255
 17884  006BB0  6E1B               	movwf	?_vscp_writeNicknamePermanent,c
 17885  006BB2  501C               	movf	??_vscp_handleDropNickname& (0+255),w,c
 17886  006BB4  EC8D  F037         	call	_vscp_writeNicknamePermanent	;wreg free
 17887                           
 17888                           ;vscp_firmware.c: 481: vscp_init();
 17889  006BB8  EC0F  F033         	call	_vscp_init	;wreg free
 17890  006BBC                     l1206:
 17891  006BBC  0012               	return	
 17892  006BBE                     __end_of_vscp_handleDropNickname:
 17893                           	opt stack 0
 17894                           tblptru	equ	0xFF8
 17895                           tblptrh	equ	0xFF7
 17896                           tblptrl	equ	0xFF6
 17897                           tablat	equ	0xFF5
 17898                           prodh	equ	0xFF4
 17899                           prodl	equ	0xFF3
 17900                           intcon2	equ	0xFF1
 17901                           postinc0	equ	0xFEE
 17902                           wreg	equ	0xFE8
 17903                           indf2	equ	0xFDF
 17904                           postinc2	equ	0xFDE
 17905                           postdec2	equ	0xFDD
 17906                           fsr2h	equ	0xFDA
 17907                           fsr2l	equ	0xFD9
 17908                           status	equ	0xFD8
 17909                           
 17910 ;; *************** function _vscp_init *****************
 17911 ;; Defined at:
 17912 ;;		line 119 in file "../../vscp_firmware/common/vscp_firmware.c"
 17913 ;; Parameters:    Size  Location     Type
 17914 ;;		None
 17915 ;; Auto vars:     Size  Location     Type
 17916 ;;		None
 17917 ;; Return value:  Size  Location     Type
 17918 ;;		None               void
 17919 ;; Registers used:
 17920 ;;		wreg, status,2, cstack
 17921 ;; Tracked objects:
 17922 ;;		On entry : 0/0
 17923 ;;		On exit  : 0/0
 17924 ;;		Unchanged: 0/0
 17925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17926 ;;      Params:         0       0       0       0       0       0       0
 17927 ;;      Locals:         0       0       0       0       0       0       0
 17928 ;;      Temps:          1       0       0       0       0       0       0
 17929 ;;      Totals:         1       0       0       0       0       0       0
 17930 ;;Total ram usage:        1 bytes
 17931 ;; Hardware stack levels used:    1
 17932 ;; Hardware stack levels required when called:    4
 17933 ;; This function calls:
 17934 ;;		_vscp_readNicknamePermanent
 17935 ;; This function is called by:
 17936 ;;		_main
 17937 ;;		_vscp_handleDropNickname
 17938 ;;		_vscp_handleProtocolEvent
 17939 ;;		_vscp_handlePreActiveState
 17940 ;; This function uses a non-reentrant model
 17941 ;;
 17942                           
 17943                           	psect	text43
 17944  00661E                     __ptext43:
 17945                           	opt stack 0
 17946  00661E                     _vscp_init:
 17947                           	opt stack 23
 17948                           
 17949                           ;vscp_firmware.c: 120: vscp_initledfunc = 0x02;
 17950                           
 17951                           ;incstack = 0
 17952                           ;incstack = 0
 17953  00661E  6E18               	movwf	??_vscp_init& (0+255),c
 17954  006620  0E02               	movlw	2
 17955  006622  6E3B               	movwf	_vscp_initledfunc,c
 17956  006624  5018               	movf	??_vscp_init& (0+255),w,c
 17957                           
 17958                           ;vscp_firmware.c: 123: vscp_nickname = vscp_readNicknamePermanent();
 17959  006626  ECF8  F037         	call	_vscp_readNicknamePermanent	;wreg free
 17960  00662A  0100               	movlb	0	; () banked
 17961  00662C  0100               	movlb	0	; () banked
 17962  00662E  6FEC               	movwf	_vscp_nickname& (0+255),b
 17963                           
 17964                           ; BSR set to: 0
 17965                           ;vscp_firmware.c: 126: if (!vscp_nickname) vscp_nickname = 0xff;
 17966  006630  0100               	movlb	0	; () banked
 17967  006632  0100               	movlb	0	; () banked
 17968  006634  67EC               	tstfsz	_vscp_nickname& (0+255),b
 17969  006636  D003               	goto	l9368
 17970                           
 17971                           ; BSR set to: 0
 17972  006638  0100               	movlb	0	; () banked
 17973  00663A  0100               	movlb	0	; () banked
 17974  00663C  69EC               	setf	_vscp_nickname& (0+255),b
 17975  00663E                     l9368:
 17976                           
 17977                           ; BSR set to: 0
 17978                           ;vscp_firmware.c: 129: vscp_imsg.flags = 0;
 17979  00663E  6E18               	movwf	??_vscp_init& (0+255),c
 17980  006640  0E00               	movlw	0
 17981  006642  0100               	movlb	0	; () banked
 17982  006644  0100               	movlb	0	; () banked
 17983  006646  6FF1               	movwf	_vscp_imsg& (0+255),b
 17984  006648  5018               	movf	??_vscp_init& (0+255),w,c
 17985                           
 17986                           ;vscp_firmware.c: 130: vscp_imsg.priority = 0;
 17987  00664A  6E18               	movwf	??_vscp_init& (0+255),c
 17988  00664C  0E00               	movlw	0
 17989  00664E  0100               	movlb	0	; () banked
 17990  006650  0100               	movlb	0	; () banked
 17991  006652  6FF2               	movwf	(_vscp_imsg+1)& (0+255),b
 17992  006654  5018               	movf	??_vscp_init& (0+255),w,c
 17993                           
 17994                           ; BSR set to: 0
 17995                           ;vscp_firmware.c: 131: vscp_imsg.vscp_class = 0;
 17996  006656  0E00               	movlw	0
 17997  006658  0100               	movlb	0	; () banked
 17998  00665A  0100               	movlb	0	; () banked
 17999  00665C  6FF4               	movwf	(_vscp_imsg+3)& (0+255),b
 18000  00665E  0E00               	movlw	0
 18001  006660  0100               	movlb	0	; () banked
 18002  006662  6FF3               	movwf	(_vscp_imsg+2)& (0+255),b
 18003                           
 18004                           ; BSR set to: 0
 18005                           ;vscp_firmware.c: 132: vscp_imsg.vscp_type = 0;
 18006  006664  6E18               	movwf	??_vscp_init& (0+255),c
 18007  006666  0E00               	movlw	0
 18008  006668  0100               	movlb	0	; () banked
 18009  00666A  0100               	movlb	0	; () banked
 18010  00666C  6FF5               	movwf	(_vscp_imsg+4)& (0+255),b
 18011  00666E  5018               	movf	??_vscp_init& (0+255),w,c
 18012                           
 18013                           ; BSR set to: 0
 18014                           ;vscp_firmware.c: 135: vscp_omsg.flags = 0;
 18015  006670  6E18               	movwf	??_vscp_init& (0+255),c
 18016  006672  0E00               	movlw	0
 18017  006674  6E3E               	movwf	_vscp_omsg,c
 18018  006676  5018               	movf	??_vscp_init& (0+255),w,c
 18019                           
 18020                           ; BSR set to: 0
 18021                           ;vscp_firmware.c: 136: vscp_omsg.priority = 0;
 18022  006678  6E18               	movwf	??_vscp_init& (0+255),c
 18023  00667A  0E00               	movlw	0
 18024  00667C  6E3F               	movwf	_vscp_omsg+1,c
 18025  00667E  5018               	movf	??_vscp_init& (0+255),w,c
 18026                           
 18027                           ;vscp_firmware.c: 137: vscp_omsg.vscp_class = 0;
 18028  006680  0E00               	movlw	0
 18029  006682  6E41               	movwf	_vscp_omsg+3,c
 18030  006684  0E00               	movlw	0
 18031  006686  6E40               	movwf	_vscp_omsg+2,c
 18032                           
 18033                           ; BSR set to: 0
 18034                           ;vscp_firmware.c: 138: vscp_omsg.vscp_type = 0;
 18035  006688  6E18               	movwf	??_vscp_init& (0+255),c
 18036  00668A  0E00               	movlw	0
 18037  00668C  6E42               	movwf	_vscp_omsg+4,c
 18038  00668E  5018               	movf	??_vscp_init& (0+255),w,c
 18039                           
 18040                           ; BSR set to: 0
 18041                           ;vscp_firmware.c: 140: vscp_errorcnt = 0;
 18042  006690  6E18               	movwf	??_vscp_init& (0+255),c
 18043  006692  0E00               	movlw	0
 18044  006694  0100               	movlb	0	; () banked
 18045  006696  0100               	movlb	0	; () banked
 18046  006698  6FE8               	movwf	_vscp_errorcnt& (0+255),b
 18047  00669A  5018               	movf	??_vscp_init& (0+255),w,c
 18048                           
 18049                           ; BSR set to: 0
 18050                           ;vscp_firmware.c: 141: vscp_alarmstatus = 0;
 18051  00669C  6E18               	movwf	??_vscp_init& (0+255),c
 18052  00669E  0E00               	movlw	0
 18053  0066A0  0100               	movlb	0	; () banked
 18054  0066A2  0100               	movlb	0	; () banked
 18055  0066A4  6FE7               	movwf	_vscp_alarmstatus& (0+255),b
 18056  0066A6  5018               	movf	??_vscp_init& (0+255),w,c
 18057                           
 18058                           ; BSR set to: 0
 18059                           ;vscp_firmware.c: 143: vscp_probe_address = 0;
 18060  0066A8  6E18               	movwf	??_vscp_init& (0+255),c
 18061  0066AA  0E00               	movlw	0
 18062  0066AC  6E3C               	movwf	_vscp_probe_address,c
 18063  0066AE  5018               	movf	??_vscp_init& (0+255),w,c
 18064                           
 18065                           ; BSR set to: 0
 18066                           ;vscp_firmware.c: 146: vscp_node_state = 0x00;
 18067  0066B0  6E18               	movwf	??_vscp_init& (0+255),c
 18068  0066B2  0E00               	movlw	0
 18069  0066B4  0100               	movlb	0	; () banked
 18070  0066B6  0100               	movlb	0	; () banked
 18071  0066B8  6FED               	movwf	_vscp_node_state& (0+255),b
 18072  0066BA  5018               	movf	??_vscp_init& (0+255),w,c
 18073                           
 18074                           ; BSR set to: 0
 18075                           ;vscp_firmware.c: 147: vscp_node_substate = 0x00;
 18076  0066BC  6E18               	movwf	??_vscp_init& (0+255),c
 18077  0066BE  0E00               	movlw	0
 18078  0066C0  0100               	movlb	0	; () banked
 18079  0066C2  0100               	movlb	0	; () banked
 18080  0066C4  6FEE               	movwf	_vscp_node_substate& (0+255),b
 18081  0066C6  5018               	movf	??_vscp_init& (0+255),w,c
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;vscp_firmware.c: 149: vscp_probe_cnt = 0;
 18085  0066C8  6E18               	movwf	??_vscp_init& (0+255),c
 18086  0066CA  0E00               	movlw	0
 18087  0066CC  0100               	movlb	0	; () banked
 18088  0066CE  0100               	movlb	0	; () banked
 18089  0066D0  6FEF               	movwf	_vscp_probe_cnt& (0+255),b
 18090  0066D2  5018               	movf	??_vscp_init& (0+255),w,c
 18091                           
 18092                           ; BSR set to: 0
 18093                           ;vscp_firmware.c: 150: vscp_page_select = 0;
 18094  0066D4  0E00               	movlw	0
 18095  0066D6  6E37               	movwf	_vscp_page_select+1,c
 18096  0066D8  0E00               	movlw	0
 18097  0066DA  6E36               	movwf	_vscp_page_select,c
 18098                           
 18099                           ; BSR set to: 0
 18100                           ;vscp_firmware.c: 153: vscp_timer = 0;
 18101  0066DC  0E00               	movlw	0
 18102  0066DE  6E39               	movwf	_vscp_timer+1,c	;volatile
 18103  0066E0  0E00               	movlw	0
 18104  0066E2  6E38               	movwf	_vscp_timer,c	;volatile
 18105                           
 18106                           ; BSR set to: 0
 18107                           ;vscp_firmware.c: 154: vscp_configtimer = 0;
 18108  0066E4  0E00               	movlw	0
 18109  0066E6  0100               	movlb	0	; () banked
 18110  0066E8  0100               	movlb	0	; () banked
 18111  0066EA  6FDA               	movwf	(_vscp_configtimer+1)& (0+255),b	;volatile
 18112  0066EC  0E00               	movlw	0
 18113  0066EE  0100               	movlb	0	; () banked
 18114  0066F0  6FD9               	movwf	_vscp_configtimer& (0+255),b	;volatile
 18115                           
 18116                           ;vscp_firmware.c: 155: vscp_second = 0;
 18117  0066F2  6E18               	movwf	??_vscp_init& (0+255),c
 18118  0066F4  0E00               	movlw	0
 18119  0066F6  0100               	movlb	0	; () banked
 18120  0066F8  0100               	movlb	0	; () banked
 18121  0066FA  6FF0               	movwf	_vscp_second& (0+255),b
 18122  0066FC  5018               	movf	??_vscp_init& (0+255),w,c
 18123                           
 18124                           ;vscp_firmware.c: 156: vscp_minute = 0;
 18125  0066FE  6E18               	movwf	??_vscp_init& (0+255),c
 18126  006700  0E00               	movlw	0
 18127  006702  0100               	movlb	0	; () banked
 18128  006704  0100               	movlb	0	; () banked
 18129  006706  6FEB               	movwf	_vscp_minute& (0+255),b
 18130  006708  5018               	movf	??_vscp_init& (0+255),w,c
 18131                           
 18132                           ;vscp_firmware.c: 157: vscp_hour = 0;
 18133  00670A  6E18               	movwf	??_vscp_init& (0+255),c
 18134  00670C  0E00               	movlw	0
 18135  00670E  0100               	movlb	0	; () banked
 18136  006710  0100               	movlb	0	; () banked
 18137  006712  6FE9               	movwf	_vscp_hour& (0+255),b
 18138  006714  5018               	movf	??_vscp_init& (0+255),w,c
 18139                           
 18140                           ; BSR set to: 0
 18141  006716  0012               	return	
 18142  006718                     __end_of_vscp_init:
 18143                           	opt stack 0
 18144                           tblptru	equ	0xFF8
 18145                           tblptrh	equ	0xFF7
 18146                           tblptrl	equ	0xFF6
 18147                           tablat	equ	0xFF5
 18148                           prodh	equ	0xFF4
 18149                           prodl	equ	0xFF3
 18150                           intcon2	equ	0xFF1
 18151                           postinc0	equ	0xFEE
 18152                           wreg	equ	0xFE8
 18153                           indf2	equ	0xFDF
 18154                           postinc2	equ	0xFDE
 18155                           postdec2	equ	0xFDD
 18156                           fsr2h	equ	0xFDA
 18157                           fsr2l	equ	0xFD9
 18158                           status	equ	0xFD8
 18159                           
 18160 ;; *************** function _vscp_readNicknamePermanent *****************
 18161 ;; Defined at:
 18162 ;;		line 957 in file "../main.c"
 18163 ;; Parameters:    Size  Location     Type
 18164 ;;		None
 18165 ;; Auto vars:     Size  Location     Type
 18166 ;;		None
 18167 ;; Return value:  Size  Location     Type
 18168 ;;                  1    wreg      unsigned char 
 18169 ;; Registers used:
 18170 ;;		wreg, status,2, cstack
 18171 ;; Tracked objects:
 18172 ;;		On entry : 0/0
 18173 ;;		On exit  : 0/0
 18174 ;;		Unchanged: 0/0
 18175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18176 ;;      Params:         0       0       0       0       0       0       0
 18177 ;;      Locals:         0       0       0       0       0       0       0
 18178 ;;      Temps:          0       0       0       0       0       0       0
 18179 ;;      Totals:         0       0       0       0       0       0       0
 18180 ;;Total ram usage:        0 bytes
 18181 ;; Hardware stack levels used:    1
 18182 ;; Hardware stack levels required when called:    3
 18183 ;; This function calls:
 18184 ;;		_Read_b_eep
 18185 ;; This function is called by:
 18186 ;;		_vscp_init
 18187 ;; This function uses a non-reentrant model
 18188 ;;
 18189                           
 18190                           	psect	text44
 18191  006FF0                     __ptext44:
 18192                           	opt stack 0
 18193  006FF0                     _vscp_readNicknamePermanent:
 18194                           	opt stack 23
 18195                           
 18196                           ;main.c: 958: return Read_b_eep(0x01);
 18197                           
 18198                           ; BSR set to: 0
 18199                           ;incstack = 0
 18200                           ;incstack = 0
 18201  006FF0  0E00               	movlw	0
 18202  006FF2  6E17               	movwf	?_Read_b_eep+1,c
 18203  006FF4  0E01               	movlw	1
 18204  006FF6  6E16               	movwf	?_Read_b_eep,c
 18205  006FF8  ECD8  F037         	call	_Read_b_eep	;wreg free
 18206  006FFC  0012               	return	
 18207  006FFE                     __end_of_vscp_readNicknamePermanent:
 18208                           	opt stack 0
 18209                           tblptru	equ	0xFF8
 18210                           tblptrh	equ	0xFF7
 18211                           tblptrl	equ	0xFF6
 18212                           tablat	equ	0xFF5
 18213                           prodh	equ	0xFF4
 18214                           prodl	equ	0xFF3
 18215                           intcon2	equ	0xFF1
 18216                           postinc0	equ	0xFEE
 18217                           wreg	equ	0xFE8
 18218                           indf2	equ	0xFDF
 18219                           postinc2	equ	0xFDE
 18220                           postdec2	equ	0xFDD
 18221                           fsr2h	equ	0xFDA
 18222                           fsr2l	equ	0xFD9
 18223                           status	equ	0xFD8
 18224                           
 18225 ;; *************** function _vscp_handleSetNickname *****************
 18226 ;; Defined at:
 18227 ;;		line 422 in file "../../vscp_firmware/common/vscp_firmware.c"
 18228 ;; Parameters:    Size  Location     Type
 18229 ;;		None
 18230 ;; Auto vars:     Size  Location     Type
 18231 ;;		None
 18232 ;; Return value:  Size  Location     Type
 18233 ;;		None               void
 18234 ;; Registers used:
 18235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18236 ;; Tracked objects:
 18237 ;;		On entry : 0/0
 18238 ;;		On exit  : 0/0
 18239 ;;		Unchanged: 0/0
 18240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18241 ;;      Params:         0       0       0       0       0       0       0
 18242 ;;      Locals:         0       0       0       0       0       0       0
 18243 ;;      Temps:          1       0       0       0       0       0       0
 18244 ;;      Totals:         1       0       0       0       0       0       0
 18245 ;;Total ram usage:        1 bytes
 18246 ;; Hardware stack levels used:    1
 18247 ;; Hardware stack levels required when called:    4
 18248 ;; This function calls:
 18249 ;;		_vscp_writeNicknamePermanent
 18250 ;;		_vscp_setSegmentCRC
 18251 ;; This function is called by:
 18252 ;;		_vscp_handleProtocolEvent
 18253 ;; This function uses a non-reentrant model
 18254 ;;
 18255                           
 18256                           	psect	text45
 18257  006CBC                     __ptext45:
 18258                           	opt stack 0
 18259  006CBC                     _vscp_handleSetNickname:
 18260                           	opt stack 24
 18261                           
 18262                           ;vscp_firmware.c: 423: if ( ( 2 == (vscp_imsg.flags & 0x0f ) ) &&
 18263                           ;vscp_firmware.c: 424: (vscp_nickname == vscp_imsg.data[ 0 ])) {
 18264                           
 18265                           ;incstack = 0
 18266                           ;incstack = 0
 18267  006CBC  0100               	movlb	0	; () banked
 18268  006CBE  0100               	movlb	0	; () banked
 18269  006CC0  51F1               	movf	_vscp_imsg& (0+255),w,b
 18270  006CC2  0B0F               	andlw	15
 18271  006CC4  0A02               	xorlw	2
 18272  006CC6  A4D8               	btfss	status,2,c
 18273  006CC8  D014               	goto	l1199
 18274                           
 18275                           ; BSR set to: 0
 18276  006CCA  0100               	movlb	0	; () banked
 18277  006CCC  0100               	movlb	0	; () banked
 18278  006CCE  51EC               	movf	_vscp_nickname& (0+255),w,b
 18279  006CD0  0100               	movlb	0	; () banked
 18280  006CD2  EE20  F0F7         	lfsr	2,_vscp_imsg+6
 18281  006CD6  62DF               	cpfseq	indf2,c
 18282  006CD8  D00C               	goto	l1199
 18283                           
 18284                           ; BSR set to: 0
 18285                           ;vscp_firmware.c: 427: vscp_nickname = vscp_imsg.data[ 1 ];
 18286  006CDA  C0F8  F0EC         	movff	_vscp_imsg+7,_vscp_nickname
 18287                           
 18288                           ; BSR set to: 0
 18289                           ;vscp_firmware.c: 428: vscp_writeNicknamePermanent(vscp_nickname);
 18290  006CDE  C0EC  F01B         	movff	_vscp_nickname,?_vscp_writeNicknamePermanent
 18291  006CE2  EC8D  F037         	call	_vscp_writeNicknamePermanent	;wreg free
 18292                           
 18293                           ;vscp_firmware.c: 429: vscp_setSegmentCRC(0x40);
 18294  006CE6  6E1C               	movwf	??_vscp_handleSetNickname& (0+255),c
 18295  006CE8  0E40               	movlw	64
 18296  006CEA  6E1B               	movwf	?_vscp_setSegmentCRC,c
 18297  006CEC  501C               	movf	??_vscp_handleSetNickname& (0+255),w,c
 18298  006CEE  EC82  F037         	call	_vscp_setSegmentCRC	;wreg free
 18299  006CF2                     l1199:
 18300  006CF2  0012               	return	
 18301  006CF4                     __end_of_vscp_handleSetNickname:
 18302                           	opt stack 0
 18303                           tblptru	equ	0xFF8
 18304                           tblptrh	equ	0xFF7
 18305                           tblptrl	equ	0xFF6
 18306                           tablat	equ	0xFF5
 18307                           prodh	equ	0xFF4
 18308                           prodl	equ	0xFF3
 18309                           intcon2	equ	0xFF1
 18310                           postinc0	equ	0xFEE
 18311                           wreg	equ	0xFE8
 18312                           indf2	equ	0xFDF
 18313                           postinc2	equ	0xFDE
 18314                           postdec2	equ	0xFDD
 18315                           fsr2h	equ	0xFDA
 18316                           fsr2l	equ	0xFD9
 18317                           status	equ	0xFD8
 18318                           
 18319 ;; *************** function _vscp_handleHeartbeat *****************
 18320 ;; Defined at:
 18321 ;;		line 396 in file "../../vscp_firmware/common/vscp_firmware.c"
 18322 ;; Parameters:    Size  Location     Type
 18323 ;;		None
 18324 ;; Auto vars:     Size  Location     Type
 18325 ;;		None
 18326 ;; Return value:  Size  Location     Type
 18327 ;;		None               void
 18328 ;; Registers used:
 18329 ;;		wreg, status,2, status,0, cstack
 18330 ;; Tracked objects:
 18331 ;;		On entry : 0/0
 18332 ;;		On exit  : 0/0
 18333 ;;		Unchanged: 0/0
 18334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18335 ;;      Params:         0       0       0       0       0       0       0
 18336 ;;      Locals:         0       0       0       0       0       0       0
 18337 ;;      Temps:          1       0       0       0       0       0       0
 18338 ;;      Totals:         1       0       0       0       0       0       0
 18339 ;;Total ram usage:        1 bytes
 18340 ;; Hardware stack levels used:    1
 18341 ;; Hardware stack levels required when called:    4
 18342 ;; This function calls:
 18343 ;;		_vscp_writeNicknamePermanent
 18344 ;;		_vscp_getSegmentCRC
 18345 ;;		_vscp_setSegmentCRC
 18346 ;; This function is called by:
 18347 ;;		_vscp_handleProtocolEvent
 18348 ;; This function uses a non-reentrant model
 18349 ;;
 18350                           
 18351                           	psect	text46
 18352  006ACC                     __ptext46:
 18353                           	opt stack 0
 18354  006ACC                     _vscp_handleHeartbeat:
 18355                           	opt stack 24
 18356                           
 18357                           ;vscp_firmware.c: 397: if ( !vscp_getSegmentCRC() ) {
 18358                           
 18359                           ;incstack = 0
 18360                           ;incstack = 0
 18361  006ACC  ECFF  F037         	call	_vscp_getSegmentCRC	;wreg free
 18362  006AD0  0900               	iorlw	0
 18363  006AD2  A4D8               	btfss	status,2,c
 18364  006AD4  D022               	goto	l11608
 18365                           
 18366                           ;vscp_firmware.c: 398: if ( ( 5 == (vscp_imsg.flags & 0x0f ) ) &&
 18367                           ;vscp_firmware.c: 399: (vscp_getSegmentCRC() != vscp_imsg.data[ 0 ])) {
 18368  006AD6  0100               	movlb	0	; () banked
 18369  006AD8  0100               	movlb	0	; () banked
 18370  006ADA  51F1               	movf	_vscp_imsg& (0+255),w,b
 18371  006ADC  0B0F               	andlw	15
 18372  006ADE  0A05               	xorlw	5
 18373  006AE0  A4D8               	btfss	status,2,c
 18374  006AE2  D01F               	goto	l1195
 18375                           
 18376                           ; BSR set to: 0
 18377  006AE4  ECFF  F037         	call	_vscp_getSegmentCRC	;wreg free
 18378  006AE8  0100               	movlb	0	; () banked
 18379  006AEA  0100               	movlb	0	; () banked
 18380  006AEC  19F7               	xorwf	(_vscp_imsg+6)& (0+255),w,b
 18381  006AEE  B4D8               	btfsc	status,2,c
 18382  006AF0  D018               	goto	l1195
 18383                           
 18384                           ; BSR set to: 0
 18385                           ;vscp_firmware.c: 403: vscp_setSegmentCRC(vscp_imsg.data[ 0 ]);
 18386  006AF2  C0F7  F01B         	movff	_vscp_imsg+6,?_vscp_setSegmentCRC
 18387  006AF6  EC82  F037         	call	_vscp_setSegmentCRC	;wreg free
 18388                           
 18389                           ;vscp_firmware.c: 406: vscp_nickname = 0xff;
 18390  006AFA  0100               	movlb	0	; () banked
 18391  006AFC  0100               	movlb	0	; () banked
 18392  006AFE  69EC               	setf	_vscp_nickname& (0+255),b
 18393                           
 18394                           ;vscp_firmware.c: 407: vscp_writeNicknamePermanent(0xff);
 18395  006B00  6E1C               	movwf	??_vscp_handleHeartbeat& (0+255),c
 18396  006B02  0EFF               	movlw	255
 18397  006B04  6E1B               	movwf	?_vscp_writeNicknamePermanent,c
 18398  006B06  501C               	movf	??_vscp_handleHeartbeat& (0+255),w,c
 18399  006B08  EC8D  F037         	call	_vscp_writeNicknamePermanent	;wreg free
 18400                           
 18401                           ;vscp_firmware.c: 408: vscp_node_state = 0x01;
 18402  006B0C  6E1C               	movwf	??_vscp_handleHeartbeat& (0+255),c
 18403  006B0E  0E01               	movlw	1
 18404  006B10  0100               	movlb	0	; () banked
 18405  006B12  0100               	movlb	0	; () banked
 18406  006B14  6FED               	movwf	_vscp_node_state& (0+255),b
 18407  006B16  501C               	movf	??_vscp_handleHeartbeat& (0+255),w,c
 18408  006B18  D004               	goto	l1195
 18409  006B1A                     l11608:
 18410                           
 18411                           ;vscp_firmware.c: 411: else {
 18412                           ;vscp_firmware.c: 413: vscp_setSegmentCRC(vscp_imsg.data[ 0 ]);
 18413  006B1A  C0F7  F01B         	movff	_vscp_imsg+6,?_vscp_setSegmentCRC
 18414  006B1E  EC82  F037         	call	_vscp_setSegmentCRC	;wreg free
 18415  006B22                     l1195:
 18416  006B22  0012               	return	
 18417  006B24                     __end_of_vscp_handleHeartbeat:
 18418                           	opt stack 0
 18419                           tblptru	equ	0xFF8
 18420                           tblptrh	equ	0xFF7
 18421                           tblptrl	equ	0xFF6
 18422                           tablat	equ	0xFF5
 18423                           prodh	equ	0xFF4
 18424                           prodl	equ	0xFF3
 18425                           intcon2	equ	0xFF1
 18426                           postinc0	equ	0xFEE
 18427                           wreg	equ	0xFE8
 18428                           indf2	equ	0xFDF
 18429                           postinc2	equ	0xFDE
 18430                           postdec2	equ	0xFDD
 18431                           fsr2h	equ	0xFDA
 18432                           fsr2l	equ	0xFD9
 18433                           status	equ	0xFD8
 18434                           
 18435 ;; *************** function _vscp_getMatrixInfo *****************
 18436 ;; Defined at:
 18437 ;;		line 3050 in file "../main.c"
 18438 ;; Parameters:    Size  Location     Type
 18439 ;;  pData           2   21[COMRAM] PTR unsigned char 
 18440 ;;		 -> vscp_omsg(13), 
 18441 ;; Auto vars:     Size  Location     Type
 18442 ;;  i               1   24[COMRAM] unsigned char 
 18443 ;; Return value:  Size  Location     Type
 18444 ;;		None               void
 18445 ;; Registers used:
 18446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18447 ;; Tracked objects:
 18448 ;;		On entry : 0/0
 18449 ;;		On exit  : 0/0
 18450 ;;		Unchanged: 0/0
 18451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18452 ;;      Params:         2       0       0       0       0       0       0
 18453 ;;      Locals:         1       0       0       0       0       0       0
 18454 ;;      Temps:          1       0       0       0       0       0       0
 18455 ;;      Totals:         4       0       0       0       0       0       0
 18456 ;;Total ram usage:        4 bytes
 18457 ;; Hardware stack levels used:    1
 18458 ;; Hardware stack levels required when called:    2
 18459 ;; This function calls:
 18460 ;;		Nothing
 18461 ;; This function is called by:
 18462 ;;		_vscp_handleProtocolEvent
 18463 ;; This function uses a non-reentrant model
 18464 ;;
 18465                           
 18466                           	psect	text47
 18467  006CF4                     __ptext47:
 18468                           	opt stack 0
 18469  006CF4                     _vscp_getMatrixInfo:
 18470                           	opt stack 26
 18471                           
 18472                           ;main.c: 3051: uint8_t i;
 18473                           ;main.c: 3053: vscp_omsg.data[ 0 ] = 7;
 18474                           
 18475                           ;incstack = 0
 18476                           ;incstack = 0
 18477  006CF4  6E18               	movwf	??_vscp_getMatrixInfo& (0+255),c
 18478  006CF6  0E07               	movlw	7
 18479  006CF8  6E43               	movwf	_vscp_omsg+5,c
 18480  006CFA  5018               	movf	??_vscp_getMatrixInfo& (0+255),w,c
 18481                           
 18482                           ;main.c: 3054: vscp_omsg.data[ 1 ] = 72;
 18483  006CFC  6E18               	movwf	??_vscp_getMatrixInfo& (0+255),c
 18484  006CFE  0E48               	movlw	72
 18485  006D00  6E44               	movwf	_vscp_omsg+6,c
 18486  006D02  5018               	movf	??_vscp_getMatrixInfo& (0+255),w,c
 18487                           
 18488                           ;main.c: 3057: for ( i = 2; i < 8; i++ ) {
 18489  006D04  6E18               	movwf	??_vscp_getMatrixInfo& (0+255),c
 18490  006D06  0E02               	movlw	2
 18491  006D08  6E19               	movwf	vscp_getMatrixInfo@i,c
 18492  006D0A  5018               	movf	??_vscp_getMatrixInfo& (0+255),w,c
 18493  006D0C  D00B               	goto	L129
 18494  006D0E                     l11484:
 18495                           
 18496                           ;main.c: 3058: vscp_omsg.data[ i ] = 0;
 18497  006D0E  5019               	movf	vscp_getMatrixInfo@i,w,c
 18498  006D10  0D01               	mullw	1
 18499  006D12  0E43               	movlw	low (_vscp_omsg+5)
 18500  006D14  24F3               	addwf	prodl,w,c
 18501  006D16  6ED9               	movwf	fsr2l,c
 18502  006D18  0E00               	movlw	high (_vscp_omsg+5)
 18503  006D1A  20F4               	addwfc	prodh,w,c
 18504  006D1C  6EDA               	movwf	fsr2h,c
 18505  006D1E  0E00               	movlw	0
 18506  006D20  6EDF               	movwf	indf2,c
 18507  006D22  2A19               	incf	vscp_getMatrixInfo@i,f,c
 18508  006D24                     L129:
 18509  006D24  0E07               	movlw	7
 18510  006D26  6419               	cpfsgt	vscp_getMatrixInfo@i,c
 18511  006D28  D7F2               	goto	l11484
 18512  006D2A  0012               	return	
 18513  006D2C                     __end_of_vscp_getMatrixInfo:
 18514                           	opt stack 0
 18515                           tblptru	equ	0xFF8
 18516                           tblptrh	equ	0xFF7
 18517                           tblptrl	equ	0xFF6
 18518                           tablat	equ	0xFF5
 18519                           prodh	equ	0xFF4
 18520                           prodl	equ	0xFF3
 18521                           intcon2	equ	0xFF1
 18522                           postinc0	equ	0xFEE
 18523                           wreg	equ	0xFE8
 18524                           indf2	equ	0xFDF
 18525                           postinc2	equ	0xFDE
 18526                           postdec2	equ	0xFDD
 18527                           fsr2h	equ	0xFDA
 18528                           fsr2l	equ	0xFD9
 18529                           status	equ	0xFD8
 18530                           
 18531 ;; *************** function _vscp_goBootloaderMode *****************
 18532 ;; Defined at:
 18533 ;;		line 3034 in file "../main.c"
 18534 ;; Parameters:    Size  Location     Type
 18535 ;;  algorithm       1   26[COMRAM] unsigned char 
 18536 ;; Auto vars:     Size  Location     Type
 18537 ;;		None
 18538 ;; Return value:  Size  Location     Type
 18539 ;;		None               void
 18540 ;; Registers used:
 18541 ;;		wreg, status,2, status,0, cstack
 18542 ;; Tracked objects:
 18543 ;;		On entry : 0/0
 18544 ;;		On exit  : 0/0
 18545 ;;		Unchanged: 0/0
 18546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18547 ;;      Params:         1       0       0       0       0       0       0
 18548 ;;      Locals:         0       0       0       0       0       0       0
 18549 ;;      Temps:          1       0       0       0       0       0       0
 18550 ;;      Totals:         2       0       0       0       0       0       0
 18551 ;;Total ram usage:        2 bytes
 18552 ;; Hardware stack levels used:    1
 18553 ;; Hardware stack levels required when called:    3
 18554 ;; This function calls:
 18555 ;;		_Busy_eep
 18556 ;;		_Write_b_eep
 18557 ;; This function is called by:
 18558 ;;		_vscp_handleProtocolEvent
 18559 ;; This function uses a non-reentrant model
 18560 ;;
 18561                           
 18562                           	psect	text48
 18563  006E64                     __ptext48:
 18564                           	opt stack 0
 18565  006E64                     _vscp_goBootloaderMode:
 18566                           	opt stack 25
 18567                           
 18568                           ;main.c: 3035: if ( 0x01 != algorithm ) return;
 18569                           
 18570                           ;incstack = 0
 18571                           ;incstack = 0
 18572  006E64  041B               	decf	vscp_goBootloaderMode@algorithm,w,c
 18573  006E66  A4D8               	btfss	status,2,c
 18574  006E68  D00D               	goto	l985
 18575                           
 18576                           ;main.c: 3039: (Busy_eep(), Write_b_eep(0x00,0xff));
 18577  006E6A  EC10  F038         	call	_Busy_eep	;wreg free
 18578  006E6E  0E00               	movlw	0
 18579  006E70  6E17               	movwf	?_Write_b_eep+1,c
 18580  006E72  0E00               	movlw	0
 18581  006E74  6E16               	movwf	?_Write_b_eep,c
 18582  006E76  6E1C               	movwf	??_vscp_goBootloaderMode& (0+255),c
 18583  006E78  0EFF               	movlw	255
 18584  006E7A  6E18               	movwf	?_Write_b_eep+2,c
 18585  006E7C  501C               	movf	??_vscp_goBootloaderMode& (0+255),w,c
 18586  006E7E  EC40  F036         	call	_Write_b_eep	;wreg free
 18587  006E82  00FF               	reset		;# 
 18588  006E84                     l985:
 18589  006E84  0012               	return	
 18590  006E86                     __end_of_vscp_goBootloaderMode:
 18591                           	opt stack 0
 18592                           tblptru	equ	0xFF8
 18593                           tblptrh	equ	0xFF7
 18594                           tblptrl	equ	0xFF6
 18595                           tablat	equ	0xFF5
 18596                           prodh	equ	0xFF4
 18597                           prodl	equ	0xFF3
 18598                           intcon2	equ	0xFF1
 18599                           postinc0	equ	0xFEE
 18600                           wreg	equ	0xFE8
 18601                           indf2	equ	0xFDF
 18602                           postinc2	equ	0xFDE
 18603                           postdec2	equ	0xFDD
 18604                           fsr2h	equ	0xFDA
 18605                           fsr2l	equ	0xFD9
 18606                           status	equ	0xFD8
 18607                           
 18608 ;; *************** function _vscp_handleProbeState *****************
 18609 ;; Defined at:
 18610 ;;		line 202 in file "../../vscp_firmware/common/vscp_firmware.c"
 18611 ;; Parameters:    Size  Location     Type
 18612 ;;		None
 18613 ;; Auto vars:     Size  Location     Type
 18614 ;;		None
 18615 ;; Return value:  Size  Location     Type
 18616 ;;		None               void
 18617 ;; Registers used:
 18618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 18619 ;; Tracked objects:
 18620 ;;		On entry : 0/0
 18621 ;;		On exit  : 0/0
 18622 ;;		Unchanged: 0/0
 18623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18624 ;;      Params:         0       0       0       0       0       0       0
 18625 ;;      Locals:         0       0       0       0       0       0       0
 18626 ;;      Temps:          1       0       0       0       0       0       0
 18627 ;;      Totals:         1       0       0       0       0       0       0
 18628 ;;Total ram usage:        1 bytes
 18629 ;; Hardware stack levels used:    1
 18630 ;; Hardware stack levels required when called:    8
 18631 ;; This function calls:
 18632 ;;		_vscp_goActiveState
 18633 ;;		_vscp_writeNicknamePermanent
 18634 ;;		_vscp_sendEvent
 18635 ;;		_vscp_setSegmentCRC
 18636 ;; This function is called by:
 18637 ;;		_main
 18638 ;; This function uses a non-reentrant model
 18639 ;;
 18640                           
 18641                           	psect	text49
 18642  005E5A                     __ptext49:
 18643                           	opt stack 0
 18644  005E5A                     _vscp_handleProbeState:
 18645                           	opt stack 21
 18646                           
 18647                           ;vscp_firmware.c: 203: switch (vscp_node_substate) {
 18648                           
 18649                           ;incstack = 0
 18650                           ;incstack = 0
 18651  005E5A  D0A5               	goto	l9514
 18652  005E5C                     l9442:
 18653                           
 18654                           ;vscp_firmware.c: 207: if (0xff != vscp_probe_address) {
 18655  005E5C  283C               	incf	_vscp_probe_address,w,c
 18656  005E5E  B4D8               	btfsc	status,2,c
 18657  005E60  D01A               	goto	l9458
 18658                           
 18659                           ;vscp_firmware.c: 209: vscp_omsg.flags = 0x80 + 1;
 18660  005E62  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18661  005E64  0E81               	movlw	129
 18662  005E66  6E3E               	movwf	_vscp_omsg,c
 18663  005E68  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 18664                           
 18665                           ;vscp_firmware.c: 210: vscp_omsg.priority = 0x00;
 18666  005E6A  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18667  005E6C  0E00               	movlw	0
 18668  005E6E  6E3F               	movwf	_vscp_omsg+1,c
 18669  005E70  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 18670                           
 18671                           ;vscp_firmware.c: 211: vscp_omsg.vscp_class = 0;
 18672  005E72  0E00               	movlw	0
 18673  005E74  6E41               	movwf	_vscp_omsg+3,c
 18674  005E76  0E00               	movlw	0
 18675  005E78  6E40               	movwf	_vscp_omsg+2,c
 18676                           
 18677                           ;vscp_firmware.c: 212: vscp_omsg.vscp_type = 2;
 18678  005E7A  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18679  005E7C  0E02               	movlw	2
 18680  005E7E  6E42               	movwf	_vscp_omsg+4,c
 18681  005E80  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 18682                           
 18683                           ;vscp_firmware.c: 213: vscp_omsg.data[ 0 ] = vscp_probe_address;
 18684  005E82  C03C  F043         	movff	_vscp_probe_address,_vscp_omsg+5
 18685                           
 18686                           ;vscp_firmware.c: 216: vscp_sendEvent();
 18687  005E86  EC21  F036         	call	_vscp_sendEvent	;wreg free
 18688                           
 18689                           ;vscp_firmware.c: 218: vscp_node_substate = 0x01;
 18690  005E8A  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18691  005E8C  0E01               	movlw	1
 18692  005E8E  0100               	movlb	0	; () banked
 18693  005E90  0100               	movlb	0	; () banked
 18694  005E92  6FEE               	movwf	_vscp_node_substate& (0+255),b
 18695  005E94  D031               	goto	L130
 18696  005E96                     l9458:
 18697                           
 18698                           ;vscp_firmware.c: 222: else {
 18699                           ;vscp_firmware.c: 225: vscp_node_state = 0x04;
 18700  005E96  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18701  005E98  0E04               	movlw	4
 18702  005E9A  0100               	movlb	0	; () banked
 18703  005E9C  0100               	movlb	0	; () banked
 18704  005E9E  6FED               	movwf	_vscp_node_state& (0+255),b
 18705  005EA0  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 18706                           
 18707                           ;vscp_firmware.c: 228: vscp_omsg.flags = 0x80 + 1;
 18708  005EA2  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18709  005EA4  0E81               	movlw	129
 18710  005EA6  6E3E               	movwf	_vscp_omsg,c
 18711  005EA8  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 18712                           
 18713                           ; BSR set to: 0
 18714                           ;vscp_firmware.c: 229: vscp_omsg.data[ 0 ] = 0xff;
 18715  005EAA  6843               	setf	_vscp_omsg+5,c
 18716                           
 18717                           ;vscp_firmware.c: 230: vscp_omsg.priority = 0x07;
 18718  005EAC  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18719  005EAE  0E07               	movlw	7
 18720  005EB0  6E3F               	movwf	_vscp_omsg+1,c
 18721  005EB2  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 18722                           
 18723                           ; BSR set to: 0
 18724                           ;vscp_firmware.c: 231: vscp_omsg.vscp_class = 0;
 18725  005EB4  0E00               	movlw	0
 18726  005EB6  6E41               	movwf	_vscp_omsg+3,c
 18727  005EB8  0E00               	movlw	0
 18728  005EBA  6E40               	movwf	_vscp_omsg+2,c
 18729                           
 18730                           ; BSR set to: 0
 18731                           ;vscp_firmware.c: 232: vscp_omsg.vscp_type = 3;
 18732  005EBC  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18733  005EBE  0E03               	movlw	3
 18734  005EC0  6E42               	movwf	_vscp_omsg+4,c
 18735  005EC2  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 18736                           
 18737                           ; BSR set to: 0
 18738                           ;vscp_firmware.c: 235: vscp_sendEvent();
 18739  005EC4  EC21  F036         	call	_vscp_sendEvent	;wreg free
 18740  005EC8  D07A               	goto	l9516
 18741  005ECA                     l1163:
 18742                           
 18743                           ; BSR set to: 0
 18744                           ;vscp_firmware.c: 242: if (vscp_imsg.flags & 0x80) {
 18745  005ECA  0100               	movlb	0	; () banked
 18746  005ECC  0100               	movlb	0	; () banked
 18747  005ECE  AFF1               	btfss	_vscp_imsg& (0+255),7,b
 18748  005ED0  D021               	goto	l9484
 18749                           
 18750                           ; BSR set to: 0
 18751                           ;vscp_firmware.c: 245: if ((0 == vscp_imsg.vscp_class) &&
 18752                           ;vscp_firmware.c: 246: (3 == vscp_imsg.vscp_type)) {
 18753  005ED2  0100               	movlb	0	; () banked
 18754  005ED4  0100               	movlb	0	; () banked
 18755  005ED6  51F4               	movf	(_vscp_imsg+3)& (0+255),w,b
 18756  005ED8  11F3               	iorwf	(_vscp_imsg+2)& (0+255),w,b
 18757  005EDA  A4D8               	btfss	status,2,c
 18758  005EDC  D070               	goto	l9516
 18759                           
 18760                           ; BSR set to: 0
 18761  005EDE  0100               	movlb	0	; () banked
 18762  005EE0  0100               	movlb	0	; () banked
 18763  005EE2  51F5               	movf	(_vscp_imsg+4)& (0+255),w,b
 18764  005EE4  0A03               	xorlw	3
 18765  005EE6  A4D8               	btfss	status,2,c
 18766  005EE8  D06A               	goto	l9516
 18767                           
 18768                           ; BSR set to: 0
 18769                           ;vscp_firmware.c: 249: if (0 == vscp_probe_address) {
 18770  005EEA  663C               	tstfsz	_vscp_probe_address,c
 18771  005EEC  D00B               	goto	l9478
 18772                           
 18773                           ; BSR set to: 0
 18774                           ;vscp_firmware.c: 253: vscp_node_state = 0x02;
 18775  005EEE  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18776  005EF0  0E02               	movlw	2
 18777  005EF2  0100               	movlb	0	; () banked
 18778  005EF4  0100               	movlb	0	; () banked
 18779  005EF6  6FED               	movwf	_vscp_node_state& (0+255),b
 18780  005EF8                     L130:
 18781  005EF8  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 18782                           
 18783                           ; BSR set to: 0
 18784                           ;vscp_firmware.c: 254: vscp_timer = 0;
 18785  005EFA  0E00               	movlw	0
 18786  005EFC  6E39               	movwf	_vscp_timer+1,c	;volatile
 18787  005EFE  0E00               	movlw	0
 18788  005F00  6E38               	movwf	_vscp_timer,c	;volatile
 18789                           
 18790                           ;vscp_firmware.c: 256: }
 18791  005F02  D05D               	goto	l9516
 18792  005F04                     l9478:
 18793                           
 18794                           ; BSR set to: 0
 18795                           ;vscp_firmware.c: 257: else {
 18796                           ;vscp_firmware.c: 260: vscp_probe_address++;
 18797  005F04  2A3C               	incf	_vscp_probe_address,f,c
 18798                           
 18799                           ; BSR set to: 0
 18800                           ;vscp_firmware.c: 261: vscp_node_substate = 0x00;
 18801  005F06  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18802  005F08  0E00               	movlw	0
 18803  005F0A  0100               	movlb	0	; () banked
 18804  005F0C  0100               	movlb	0	; () banked
 18805  005F0E  6FEE               	movwf	_vscp_node_substate& (0+255),b
 18806  005F10  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 18807  005F12  D01B               	goto	L131
 18808  005F14                     l9484:
 18809                           
 18810                           ; BSR set to: 0
 18811                           ;vscp_firmware.c: 267: else {
 18812                           ;vscp_firmware.c: 269: if (vscp_timer > 1000) {
 18813  005F14  0EE9               	movlw	233
 18814  005F16  5C38               	subwf	_vscp_timer,w,c	;volatile
 18815  005F18  0E03               	movlw	3
 18816  005F1A  5839               	subwfb	_vscp_timer+1,w,c	;volatile
 18817  005F1C  A0D8               	btfss	status,0,c
 18818  005F1E  D04F               	goto	l9516
 18819                           
 18820                           ; BSR set to: 0
 18821                           ;vscp_firmware.c: 271: vscp_probe_cnt++;
 18822  005F20  0100               	movlb	0	; () banked
 18823  005F22  0100               	movlb	0	; () banked
 18824  005F24  2BEF               	incf	_vscp_probe_cnt& (0+255),f,b
 18825                           
 18826                           ; BSR set to: 0
 18827                           ;vscp_firmware.c: 273: if (vscp_probe_cnt >= 3) {
 18828  005F26  0E02               	movlw	2
 18829  005F28  0100               	movlb	0	; () banked
 18830  005F2A  0100               	movlb	0	; () banked
 18831  005F2C  65EF               	cpfsgt	_vscp_probe_cnt& (0+255),b
 18832  005F2E  D034               	goto	l9510
 18833                           
 18834                           ; BSR set to: 0
 18835                           ;vscp_firmware.c: 276: if (0 == vscp_probe_address) {
 18836  005F30  663C               	tstfsz	_vscp_probe_address,c
 18837  005F32  D011               	goto	l1171
 18838                           
 18839                           ; BSR set to: 0
 18840                           ;vscp_firmware.c: 279: vscp_probe_address++;
 18841  005F34  2A3C               	incf	_vscp_probe_address,f,c
 18842                           
 18843                           ; BSR set to: 0
 18844                           ;vscp_firmware.c: 280: vscp_node_substate = 0x00;
 18845  005F36  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18846  005F38  0E00               	movlw	0
 18847  005F3A  0100               	movlb	0	; () banked
 18848  005F3C  0100               	movlb	0	; () banked
 18849  005F3E  6FEE               	movwf	_vscp_node_substate& (0+255),b
 18850  005F40  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 18851                           
 18852                           ; BSR set to: 0
 18853                           ;vscp_firmware.c: 281: vscp_timer = 0;
 18854  005F42  0E00               	movlw	0
 18855  005F44  6E39               	movwf	_vscp_timer+1,c	;volatile
 18856  005F46  0E00               	movlw	0
 18857  005F48  6E38               	movwf	_vscp_timer,c	;volatile
 18858  005F4A                     L131:
 18859                           
 18860                           ; BSR set to: 0
 18861                           ;vscp_firmware.c: 282: vscp_probe_cnt = 0;
 18862  005F4A  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18863  005F4C  0E00               	movlw	0
 18864  005F4E  0100               	movlb	0	; () banked
 18865  005F50  0100               	movlb	0	; () banked
 18866  005F52  6FEF               	movwf	_vscp_probe_cnt& (0+255),b
 18867  005F54  D026               	goto	L133
 18868  005F56                     l1171:
 18869                           
 18870                           ; BSR set to: 0
 18871                           ;vscp_firmware.c: 285: else {
 18872                           ;vscp_firmware.c: 288: vscp_nickname = vscp_probe_address;
 18873  005F56  C03C  F0EC         	movff	_vscp_probe_address,_vscp_nickname
 18874                           
 18875                           ; BSR set to: 0
 18876                           ;vscp_firmware.c: 289: vscp_node_state = 0x03;
 18877  005F5A  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18878  005F5C  0E03               	movlw	3
 18879  005F5E  0100               	movlb	0	; () banked
 18880  005F60  0100               	movlb	0	; () banked
 18881  005F62  6FED               	movwf	_vscp_node_state& (0+255),b
 18882  005F64  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 18883                           
 18884                           ;vscp_firmware.c: 290: vscp_node_substate = 0x00;
 18885  005F66  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18886  005F68  0E00               	movlw	0
 18887  005F6A  0100               	movlb	0	; () banked
 18888  005F6C  0100               	movlb	0	; () banked
 18889  005F6E  6FEE               	movwf	_vscp_node_substate& (0+255),b
 18890  005F70  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 18891                           
 18892                           ; BSR set to: 0
 18893                           ;vscp_firmware.c: 291: vscp_writeNicknamePermanent(vscp_nickname);
 18894  005F72  C0EC  F01B         	movff	_vscp_nickname,?_vscp_writeNicknamePermanent
 18895  005F76  EC8D  F037         	call	_vscp_writeNicknamePermanent	;wreg free
 18896                           
 18897                           ;vscp_firmware.c: 292: vscp_setSegmentCRC(0x40);
 18898  005F7A  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18899  005F7C  0E40               	movlw	64
 18900  005F7E  6E1B               	movwf	?_vscp_setSegmentCRC,c
 18901  005F80  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 18902  005F82  EC82  F037         	call	_vscp_setSegmentCRC	;wreg free
 18903                           
 18904                           ;vscp_firmware.c: 295: vscp_probe_cnt = 0;
 18905  005F86  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18906  005F88  0E00               	movlw	0
 18907  005F8A  0100               	movlb	0	; () banked
 18908  005F8C  0100               	movlb	0	; () banked
 18909  005F8E  6FEF               	movwf	_vscp_probe_cnt& (0+255),b
 18910  005F90  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 18911                           
 18912                           ; BSR set to: 0
 18913                           ;vscp_firmware.c: 296: vscp_goActiveState();
 18914  005F92  ECCD  F036         	call	_vscp_goActiveState	;wreg free
 18915  005F96  D013               	goto	l9516
 18916  005F98                     l9510:
 18917                           
 18918                           ; BSR set to: 0
 18919                           ;vscp_firmware.c: 312: vscp_node_substate = 0x00;
 18920  005F98  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18921  005F9A  0E00               	movlw	0
 18922  005F9C  0100               	movlb	0	; () banked
 18923  005F9E  0100               	movlb	0	; () banked
 18924  005FA0  6FEE               	movwf	_vscp_node_substate& (0+255),b
 18925  005FA2                     L133:
 18926  005FA2  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 18927                           
 18928                           ;vscp_firmware.c: 313: break;
 18929  005FA4  D00C               	goto	l9516
 18930  005FA6                     l9514:
 18931  005FA6  0100               	movlb	0	; () banked
 18932  005FA8  0100               	movlb	0	; () banked
 18933  005FAA  51EE               	movf	_vscp_node_substate& (0+255),w,b
 18934                           
 18935                           ; Switch size 1, requested type "space"
 18936                           ; Number of cases is 3, Range of values is 0 to 2
 18937                           ; switch strategies available:
 18938                           ; Name         Instructions Cycles
 18939                           ; simple_byte           10     6 (average)
 18940                           ;	Chosen strategy is simple_byte
 18941  005FAC  0A00               	xorlw	0	; case 0
 18942  005FAE  B4D8               	btfsc	status,2,c
 18943  005FB0  D755               	goto	l9442
 18944  005FB2  0A01               	xorlw	1	; case 1
 18945  005FB4  B4D8               	btfsc	status,2,c
 18946  005FB6  D789               	goto	l1163
 18947  005FB8  0A03               	xorlw	3	; case 2
 18948  005FBA  A4D8               	btfss	status,2,c
 18949  005FBC  D7ED               	goto	l9510
 18950  005FBE                     l9516:
 18951                           
 18952                           ;vscp_firmware.c: 316: vscp_imsg.flags = 0;
 18953  005FBE  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 18954  005FC0  0E00               	movlw	0
 18955  005FC2  0100               	movlb	0	; () banked
 18956  005FC4  0100               	movlb	0	; () banked
 18957  005FC6  6FF1               	movwf	_vscp_imsg& (0+255),b
 18958  005FC8  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 18959                           
 18960                           ; BSR set to: 0
 18961  005FCA  0012               	return	
 18962  005FCC                     __end_of_vscp_handleProbeState:
 18963                           	opt stack 0
 18964                           tblptru	equ	0xFF8
 18965                           tblptrh	equ	0xFF7
 18966                           tblptrl	equ	0xFF6
 18967                           tablat	equ	0xFF5
 18968                           prodh	equ	0xFF4
 18969                           prodl	equ	0xFF3
 18970                           intcon2	equ	0xFF1
 18971                           postinc0	equ	0xFEE
 18972                           wreg	equ	0xFE8
 18973                           indf2	equ	0xFDF
 18974                           postinc2	equ	0xFDE
 18975                           postdec2	equ	0xFDD
 18976                           fsr2h	equ	0xFDA
 18977                           fsr2l	equ	0xFD9
 18978                           status	equ	0xFD8
 18979                           
 18980 ;; *************** function _vscp_goActiveState *****************
 18981 ;; Defined at:
 18982 ;;		line 358 in file "../../vscp_firmware/common/vscp_firmware.c"
 18983 ;; Parameters:    Size  Location     Type
 18984 ;;		None
 18985 ;; Auto vars:     Size  Location     Type
 18986 ;;		None
 18987 ;; Return value:  Size  Location     Type
 18988 ;;		None               void
 18989 ;; Registers used:
 18990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 18991 ;; Tracked objects:
 18992 ;;		On entry : 0/0
 18993 ;;		On exit  : 0/0
 18994 ;;		Unchanged: 0/0
 18995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18996 ;;      Params:         0       0       0       0       0       0       0
 18997 ;;      Locals:         0       0       0       0       0       0       0
 18998 ;;      Temps:          1       0       0       0       0       0       0
 18999 ;;      Totals:         1       0       0       0       0       0       0
 19000 ;;Total ram usage:        1 bytes
 19001 ;; Hardware stack levels used:    1
 19002 ;; Hardware stack levels required when called:    7
 19003 ;; This function calls:
 19004 ;;		_vscp_sendEvent
 19005 ;; This function is called by:
 19006 ;;		_main
 19007 ;;		_vscp_handleProbeState
 19008 ;; This function uses a non-reentrant model
 19009 ;;
 19010                           
 19011                           	psect	text50
 19012  006D9A                     __ptext50:
 19013                           	opt stack 0
 19014  006D9A                     _vscp_goActiveState:
 19015                           	opt stack 21
 19016                           
 19017                           ;vscp_firmware.c: 359: vscp_omsg.flags = 0x80 + 1;
 19018                           
 19019                           ; BSR set to: 0
 19020                           ;incstack = 0
 19021                           ;incstack = 0
 19022  006D9A  6E31               	movwf	??_vscp_goActiveState& (0+255),c
 19023  006D9C  0E81               	movlw	129
 19024  006D9E  6E3E               	movwf	_vscp_omsg,c
 19025  006DA0  5031               	movf	??_vscp_goActiveState& (0+255),w,c
 19026                           
 19027                           ;vscp_firmware.c: 360: vscp_omsg.priority = 0x00;
 19028  006DA2  6E31               	movwf	??_vscp_goActiveState& (0+255),c
 19029  006DA4  0E00               	movlw	0
 19030  006DA6  6E3F               	movwf	_vscp_omsg+1,c
 19031  006DA8  5031               	movf	??_vscp_goActiveState& (0+255),w,c
 19032                           
 19033                           ;vscp_firmware.c: 361: vscp_omsg.vscp_class = 0;
 19034  006DAA  0E00               	movlw	0
 19035  006DAC  6E41               	movwf	_vscp_omsg+3,c
 19036  006DAE  0E00               	movlw	0
 19037  006DB0  6E40               	movwf	_vscp_omsg+2,c
 19038                           
 19039                           ;vscp_firmware.c: 362: vscp_omsg.vscp_type = 2;
 19040  006DB2  6E31               	movwf	??_vscp_goActiveState& (0+255),c
 19041  006DB4  0E02               	movlw	2
 19042  006DB6  6E42               	movwf	_vscp_omsg+4,c
 19043  006DB8  5031               	movf	??_vscp_goActiveState& (0+255),w,c
 19044                           
 19045                           ;vscp_firmware.c: 363: vscp_omsg.data[ 0 ] = vscp_nickname;
 19046  006DBA  C0EC  F043         	movff	_vscp_nickname,_vscp_omsg+5
 19047                           
 19048                           ;vscp_firmware.c: 366: vscp_sendEvent();
 19049  006DBE  EC21  F036         	call	_vscp_sendEvent	;wreg free
 19050                           
 19051                           ;vscp_firmware.c: 368: vscp_initledfunc = 0x01;
 19052  006DC2  6E31               	movwf	??_vscp_goActiveState& (0+255),c
 19053  006DC4  0E01               	movlw	1
 19054  006DC6  6E3B               	movwf	_vscp_initledfunc,c
 19055  006DC8  5031               	movf	??_vscp_goActiveState& (0+255),w,c
 19056  006DCA  0012               	return	
 19057  006DCC                     __end_of_vscp_goActiveState:
 19058                           	opt stack 0
 19059                           tblptru	equ	0xFF8
 19060                           tblptrh	equ	0xFF7
 19061                           tblptrl	equ	0xFF6
 19062                           tablat	equ	0xFF5
 19063                           prodh	equ	0xFF4
 19064                           prodl	equ	0xFF3
 19065                           intcon2	equ	0xFF1
 19066                           postinc0	equ	0xFEE
 19067                           wreg	equ	0xFE8
 19068                           indf2	equ	0xFDF
 19069                           postinc2	equ	0xFDE
 19070                           postdec2	equ	0xFDD
 19071                           fsr2h	equ	0xFDA
 19072                           fsr2l	equ	0xFD9
 19073                           status	equ	0xFD8
 19074                           
 19075 ;; *************** function _vscp_sendEvent *****************
 19076 ;; Defined at:
 19077 ;;		line 1288 in file "../../vscp_firmware/common/vscp_firmware.c"
 19078 ;; Parameters:    Size  Location     Type
 19079 ;;		None
 19080 ;; Auto vars:     Size  Location     Type
 19081 ;;  rv              1   47[COMRAM] unsigned char 
 19082 ;; Return value:  Size  Location     Type
 19083 ;;                  1    wreg      unsigned char 
 19084 ;; Registers used:
 19085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 19086 ;; Tracked objects:
 19087 ;;		On entry : 0/0
 19088 ;;		On exit  : 0/0
 19089 ;;		Unchanged: 0/0
 19090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19091 ;;      Params:         0       0       0       0       0       0       0
 19092 ;;      Locals:         1       0       0       0       0       0       0
 19093 ;;      Temps:          0       0       0       0       0       0       0
 19094 ;;      Totals:         1       0       0       0       0       0       0
 19095 ;;Total ram usage:        1 bytes
 19096 ;; Hardware stack levels used:    1
 19097 ;; Hardware stack levels required when called:    6
 19098 ;; This function calls:
 19099 ;;		_sendVSCPFrame
 19100 ;; This function is called by:
 19101 ;;		_vscp_handleProbeState
 19102 ;;		_vscp_goActiveState
 19103 ;;		_vscp_sendHeartBeat
 19104 ;;		_vscp_newNodeOnline
 19105 ;;		_vscp_handleProtocolEvent
 19106 ;;		_sendDMatrixInfo
 19107 ;;		_vscp_getEmbeddedMdfInfo
 19108 ;; This function uses a non-reentrant model
 19109 ;;
 19110                           
 19111                           	psect	text51
 19112  006C42                     __ptext51:
 19113                           	opt stack 0
 19114  006C42                     _vscp_sendEvent:
 19115                           	opt stack 21
 19116                           
 19117                           ;vscp_firmware.c: 1289: int8_t rv;
 19118                           ;vscp_firmware.c: 1291: if ( !(rv = sendVSCPFrame( vscp_omsg.vscp_class,
 19119                           ;vscp_firmware.c: 1292: vscp_omsg.vscp_type,
 19120                           ;vscp_firmware.c: 1293: vscp_nickname,
 19121                           ;vscp_firmware.c: 1294: vscp_omsg.priority,
 19122                           ;vscp_firmware.c: 1295: (vscp_omsg.flags & 0x0f),
 19123                           ;vscp_firmware.c: 1296: vscp_omsg.data ) ) ) {
 19124                           
 19125                           ;incstack = 0
 19126                           ;incstack = 0
 19127  006C42  C040  F083         	movff	_vscp_omsg+2,?_sendVSCPFrame
 19128  006C46  C041  F084         	movff	_vscp_omsg+3,?_sendVSCPFrame+1
 19129  006C4A  C042  F085         	movff	_vscp_omsg+4,?_sendVSCPFrame+2
 19130  006C4E  C0EC  F086         	movff	_vscp_nickname,?_sendVSCPFrame+3
 19131  006C52  C03F  F087         	movff	_vscp_omsg+1,?_sendVSCPFrame+4
 19132  006C56  503E               	movf	_vscp_omsg,w,c
 19133  006C58  0B0F               	andlw	15
 19134  006C5A  0100               	movlb	0	; () banked
 19135  006C5C  0100               	movlb	0	; () banked
 19136  006C5E  6F88               	movwf	(?_sendVSCPFrame+5)& (0+255),b
 19137  006C60  0E00               	movlw	high (_vscp_omsg+5)
 19138  006C62  0100               	movlb	0	; () banked
 19139  006C64  0100               	movlb	0	; () banked
 19140  006C66  6F8A               	movwf	(?_sendVSCPFrame+7)& (0+255),b
 19141  006C68  0E43               	movlw	low (_vscp_omsg+5)
 19142  006C6A  0100               	movlb	0	; () banked
 19143  006C6C  6F89               	movwf	(?_sendVSCPFrame+6)& (0+255),b
 19144  006C6E  EC85  F032         	call	_sendVSCPFrame	;wreg free
 19145  006C72  6E30               	movwf	vscp_sendEvent@rv,c
 19146  006C74  6630               	tstfsz	vscp_sendEvent@rv& (0+255),c
 19147  006C76  D003               	goto	l1392
 19148                           
 19149                           ;vscp_firmware.c: 1297: vscp_errorcnt++;
 19150  006C78  0100               	movlb	0	; () banked
 19151  006C7A  0100               	movlb	0	; () banked
 19152  006C7C  2BE8               	incf	_vscp_errorcnt& (0+255),f,b
 19153  006C7E                     l1392:
 19154  006C7E  0012               	return	
 19155  006C80                     __end_of_vscp_sendEvent:
 19156                           	opt stack 0
 19157                           tblptru	equ	0xFF8
 19158                           tblptrh	equ	0xFF7
 19159                           tblptrl	equ	0xFF6
 19160                           tablat	equ	0xFF5
 19161                           prodh	equ	0xFF4
 19162                           prodl	equ	0xFF3
 19163                           intcon2	equ	0xFF1
 19164                           postinc0	equ	0xFEE
 19165                           wreg	equ	0xFE8
 19166                           indf2	equ	0xFDF
 19167                           postinc2	equ	0xFDE
 19168                           postdec2	equ	0xFDD
 19169                           fsr2h	equ	0xFDA
 19170                           fsr2l	equ	0xFD9
 19171                           status	equ	0xFD8
 19172                           
 19173 ;; *************** function _sendVSCPFrame *****************
 19174 ;; Defined at:
 19175 ;;		line 3109 in file "../main.c"
 19176 ;; Parameters:    Size  Location     Type
 19177 ;;  vscpclass       2   35[BANK0 ] unsigned short 
 19178 ;;  vscptype        1   37[BANK0 ] unsigned char 
 19179 ;;  nodeid          1   38[BANK0 ] unsigned char 
 19180 ;;  priority        1   39[BANK0 ] unsigned char 
 19181 ;;  size            1   40[BANK0 ] unsigned char 
 19182 ;;  pData           2   41[BANK0 ] PTR unsigned char 
 19183 ;;		 -> SendInformationEvent@data(3), vscp_omsg(13), 
 19184 ;; Auto vars:     Size  Location     Type
 19185 ;;  id              4   43[COMRAM] unsigned long 
 19186 ;; Return value:  Size  Location     Type
 19187 ;;                  1    wreg      unsigned char 
 19188 ;; Registers used:
 19189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19190 ;; Tracked objects:
 19191 ;;		On entry : 0/0
 19192 ;;		On exit  : 0/0
 19193 ;;		Unchanged: 0/0
 19194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19195 ;;      Params:         0       8       0       0       0       0       0
 19196 ;;      Locals:         4       0       0       0       0       0       0
 19197 ;;      Temps:          0      20       0       0       0       0       0
 19198 ;;      Totals:         4      28       0       0       0       0       0
 19199 ;;Total ram usage:       32 bytes
 19200 ;; Hardware stack levels used:    1
 19201 ;; Hardware stack levels required when called:    5
 19202 ;; This function calls:
 19203 ;;		_sendCANFrame
 19204 ;; This function is called by:
 19205 ;;		_SendInformationEvent
 19206 ;;		_vscp_sendEvent
 19207 ;; This function uses a non-reentrant model
 19208 ;;
 19209                           
 19210                           	psect	text52
 19211  00650A                     __ptext52:
 19212                           	opt stack 0
 19213  00650A                     _sendVSCPFrame:
 19214                           	opt stack 21
 19215                           
 19216                           ;main.c: 3110: uint32_t id = ( (uint32_t)priority << 26 ) |
 19217                           ;main.c: 3111: ( (uint32_t)vscpclass << 16 ) |
 19218                           ;main.c: 3112: ( (uint32_t)vscptype << 8 ) |
 19219                           ;main.c: 3113: nodeid;
 19220                           
 19221                           ;incstack = 0
 19222                           ;incstack = 0
 19223  00650A  0100               	movlb	0	; () banked
 19224  00650C  C085  F08B         	movff	sendVSCPFrame@vscptype,??_sendVSCPFrame
 19225  006510  0100               	movlb	0	; () banked
 19226  006512  6B8C               	clrf	(??_sendVSCPFrame+1)& (0+255),b
 19227  006514  6B8D               	clrf	(??_sendVSCPFrame+2)& (0+255),b
 19228  006516  6B8E               	clrf	(??_sendVSCPFrame+3)& (0+255),b
 19229  006518  C08D  F08E         	movff	??_sendVSCPFrame+2,??_sendVSCPFrame+3
 19230  00651C  C08C  F08D         	movff	??_sendVSCPFrame+1,??_sendVSCPFrame+2
 19231  006520  C08B  F08C         	movff	??_sendVSCPFrame,??_sendVSCPFrame+1
 19232  006524  0100               	movlb	0	; () banked
 19233  006526  6B8B               	clrf	??_sendVSCPFrame& (0+255),b
 19234  006528  0100               	movlb	0	; () banked
 19235  00652A  0100               	movlb	0	; () banked
 19236  00652C  5183               	movf	sendVSCPFrame@vscpclass& (0+255),w,b
 19237  00652E  0100               	movlb	0	; () banked
 19238  006530  6F8F               	movwf	(??_sendVSCPFrame+4)& (0+255),b
 19239  006532  0100               	movlb	0	; () banked
 19240  006534  0100               	movlb	0	; () banked
 19241  006536  5184               	movf	(sendVSCPFrame@vscpclass+1)& (0+255),w,b
 19242  006538  0100               	movlb	0	; () banked
 19243  00653A  6F90               	movwf	(??_sendVSCPFrame+5)& (0+255),b
 19244  00653C  0100               	movlb	0	; () banked
 19245  00653E  6B91               	clrf	(??_sendVSCPFrame+6)& (0+255),b
 19246  006540  0100               	movlb	0	; () banked
 19247  006542  6B92               	clrf	(??_sendVSCPFrame+7)& (0+255),b
 19248  006544  C090  F092         	movff	??_sendVSCPFrame+5,??_sendVSCPFrame+7
 19249  006548  C08F  F091         	movff	??_sendVSCPFrame+4,??_sendVSCPFrame+6
 19250  00654C  0100               	movlb	0	; () banked
 19251  00654E  6B90               	clrf	(??_sendVSCPFrame+5)& (0+255),b
 19252  006550  6B8F               	clrf	(??_sendVSCPFrame+4)& (0+255),b
 19253  006552  0100               	movlb	0	; () banked
 19254  006554  C087  F093         	movff	sendVSCPFrame@priority,??_sendVSCPFrame+8
 19255  006558  0100               	movlb	0	; () banked
 19256  00655A  6B94               	clrf	(??_sendVSCPFrame+9)& (0+255),b
 19257  00655C  6B95               	clrf	(??_sendVSCPFrame+10)& (0+255),b
 19258  00655E  6B96               	clrf	(??_sendVSCPFrame+11)& (0+255),b
 19259  006560  0E1A               	movlw	26
 19260  006562                     u13285:
 19261  006562  90D8               	bcf	status,0,c
 19262  006564  0100               	movlb	0	; () banked
 19263  006566  3793               	rlcf	(??_sendVSCPFrame+8)& (0+255),f,b
 19264  006568  3794               	rlcf	(??_sendVSCPFrame+9)& (0+255),f,b
 19265  00656A  3795               	rlcf	(??_sendVSCPFrame+10)& (0+255),f,b
 19266  00656C  3796               	rlcf	(??_sendVSCPFrame+11)& (0+255),f,b
 19267  00656E  2EE8               	decfsz	wreg,f,c
 19268  006570  D7F8               	goto	u13285
 19269  006572  0100               	movlb	0	; () banked
 19270  006574  518F               	movf	(??_sendVSCPFrame+4)& (0+255),w,b
 19271  006576  0100               	movlb	0	; () banked
 19272  006578  1193               	iorwf	(??_sendVSCPFrame+8)& (0+255),w,b
 19273  00657A  0100               	movlb	0	; () banked
 19274  00657C  6F97               	movwf	(??_sendVSCPFrame+12)& (0+255),b
 19275  00657E  0100               	movlb	0	; () banked
 19276  006580  5190               	movf	(??_sendVSCPFrame+5)& (0+255),w,b
 19277  006582  0100               	movlb	0	; () banked
 19278  006584  1194               	iorwf	(??_sendVSCPFrame+9)& (0+255),w,b
 19279  006586  0100               	movlb	0	; () banked
 19280  006588  6F98               	movwf	(??_sendVSCPFrame+13)& (0+255),b
 19281  00658A  0100               	movlb	0	; () banked
 19282  00658C  5191               	movf	(??_sendVSCPFrame+6)& (0+255),w,b
 19283  00658E  0100               	movlb	0	; () banked
 19284  006590  1195               	iorwf	(??_sendVSCPFrame+10)& (0+255),w,b
 19285  006592  0100               	movlb	0	; () banked
 19286  006594  6F99               	movwf	(??_sendVSCPFrame+14)& (0+255),b
 19287  006596  0100               	movlb	0	; () banked
 19288  006598  5192               	movf	(??_sendVSCPFrame+7)& (0+255),w,b
 19289  00659A  0100               	movlb	0	; () banked
 19290  00659C  1196               	iorwf	(??_sendVSCPFrame+11)& (0+255),w,b
 19291  00659E  0100               	movlb	0	; () banked
 19292  0065A0  6F9A               	movwf	(??_sendVSCPFrame+15)& (0+255),b
 19293  0065A2  0100               	movlb	0	; () banked
 19294  0065A4  518B               	movf	??_sendVSCPFrame& (0+255),w,b
 19295  0065A6  0100               	movlb	0	; () banked
 19296  0065A8  1197               	iorwf	(??_sendVSCPFrame+12)& (0+255),w,b
 19297  0065AA  0100               	movlb	0	; () banked
 19298  0065AC  6F9B               	movwf	(??_sendVSCPFrame+16)& (0+255),b
 19299  0065AE  0100               	movlb	0	; () banked
 19300  0065B0  518C               	movf	(??_sendVSCPFrame+1)& (0+255),w,b
 19301  0065B2  0100               	movlb	0	; () banked
 19302  0065B4  1198               	iorwf	(??_sendVSCPFrame+13)& (0+255),w,b
 19303  0065B6  0100               	movlb	0	; () banked
 19304  0065B8  6F9C               	movwf	(??_sendVSCPFrame+17)& (0+255),b
 19305  0065BA  0100               	movlb	0	; () banked
 19306  0065BC  518D               	movf	(??_sendVSCPFrame+2)& (0+255),w,b
 19307  0065BE  0100               	movlb	0	; () banked
 19308  0065C0  1199               	iorwf	(??_sendVSCPFrame+14)& (0+255),w,b
 19309  0065C2  0100               	movlb	0	; () banked
 19310  0065C4  6F9D               	movwf	(??_sendVSCPFrame+18)& (0+255),b
 19311  0065C6  0100               	movlb	0	; () banked
 19312  0065C8  518E               	movf	(??_sendVSCPFrame+3)& (0+255),w,b
 19313  0065CA  0100               	movlb	0	; () banked
 19314  0065CC  119A               	iorwf	(??_sendVSCPFrame+15)& (0+255),w,b
 19315  0065CE  0100               	movlb	0	; () banked
 19316  0065D0  6F9E               	movwf	(??_sendVSCPFrame+19)& (0+255),b
 19317  0065D2  0100               	movlb	0	; () banked
 19318  0065D4  0100               	movlb	0	; () banked
 19319  0065D6  5186               	movf	sendVSCPFrame@nodeid& (0+255),w,b
 19320  0065D8  0100               	movlb	0	; () banked
 19321  0065DA  119B               	iorwf	(??_sendVSCPFrame+16)& (0+255),w,b
 19322  0065DC  6E2C               	movwf	sendVSCPFrame@id,c
 19323  0065DE  0100               	movlb	0	; () banked
 19324  0065E0  519C               	movf	(??_sendVSCPFrame+17)& (0+255),w,b
 19325  0065E2  6E2D               	movwf	sendVSCPFrame@id+1,c
 19326  0065E4  0100               	movlb	0	; () banked
 19327  0065E6  519D               	movf	(??_sendVSCPFrame+18)& (0+255),w,b
 19328  0065E8  6E2E               	movwf	sendVSCPFrame@id+2,c
 19329  0065EA  0100               	movlb	0	; () banked
 19330  0065EC  519E               	movf	(??_sendVSCPFrame+19)& (0+255),w,b
 19331  0065EE  6E2F               	movwf	sendVSCPFrame@id+3,c
 19332                           
 19333                           ; BSR set to: 0
 19334                           ;main.c: 3115: if ( !sendCANFrame( id, size, pData ) ) {
 19335  0065F0  C02C  F07C         	movff	sendVSCPFrame@id,?_sendCANFrame
 19336  0065F4  C02D  F07D         	movff	sendVSCPFrame@id+1,?_sendCANFrame+1
 19337  0065F8  C02E  F07E         	movff	sendVSCPFrame@id+2,?_sendCANFrame+2
 19338  0065FC  C02F  F07F         	movff	sendVSCPFrame@id+3,?_sendCANFrame+3
 19339  006600  C088  F080         	movff	sendVSCPFrame@size,?_sendCANFrame+4
 19340  006604  C089  F081         	movff	sendVSCPFrame@pData,?_sendCANFrame+5
 19341  006608  C08A  F082         	movff	sendVSCPFrame@pData+1,?_sendCANFrame+6
 19342  00660C  EC34  F035         	call	_sendCANFrame	;wreg free
 19343  006610  0900               	iorlw	0
 19344  006612  A4D8               	btfss	status,2,c
 19345  006614  D002               	goto	l11082
 19346                           
 19347                           ;main.c: 3116: return 0;
 19348  006616  0E00               	movlw	0
 19349  006618  D001               	goto	l1006
 19350  00661A                     l11082:
 19351                           
 19352                           ;main.c: 3117: }
 19353                           ;main.c: 3119: return 1;
 19354  00661A  0E01               	movlw	1
 19355  00661C                     l1006:
 19356  00661C  0012               	return	
 19357  00661E                     __end_of_sendVSCPFrame:
 19358                           	opt stack 0
 19359                           tblptru	equ	0xFF8
 19360                           tblptrh	equ	0xFF7
 19361                           tblptrl	equ	0xFF6
 19362                           tablat	equ	0xFF5
 19363                           prodh	equ	0xFF4
 19364                           prodl	equ	0xFF3
 19365                           intcon2	equ	0xFF1
 19366                           postinc0	equ	0xFEE
 19367                           wreg	equ	0xFE8
 19368                           indf2	equ	0xFDF
 19369                           postinc2	equ	0xFDE
 19370                           postdec2	equ	0xFDD
 19371                           fsr2h	equ	0xFDA
 19372                           fsr2l	equ	0xFD9
 19373                           status	equ	0xFD8
 19374                           
 19375 ;; *************** function _sendCANFrame *****************
 19376 ;; Defined at:
 19377 ;;		line 3154 in file "../main.c"
 19378 ;; Parameters:    Size  Location     Type
 19379 ;;  id              4   28[BANK0 ] unsigned long 
 19380 ;;  dlc             1   32[BANK0 ] unsigned char 
 19381 ;;  pdata           2   33[BANK0 ] PTR unsigned char 
 19382 ;;		 -> SendInformationEvent@data(3), vscp_omsg(13), 
 19383 ;; Auto vars:     Size  Location     Type
 19384 ;;  rv              1   42[COMRAM] unsigned char 
 19385 ;; Return value:  Size  Location     Type
 19386 ;;                  1    wreg      unsigned char 
 19387 ;; Registers used:
 19388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19389 ;; Tracked objects:
 19390 ;;		On entry : 0/0
 19391 ;;		On exit  : 0/0
 19392 ;;		Unchanged: 0/0
 19393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19394 ;;      Params:         0       7       0       0       0       0       0
 19395 ;;      Locals:         1       0       0       0       0       0       0
 19396 ;;      Temps:          1       0       0       0       0       0       0
 19397 ;;      Totals:         2       7       0       0       0       0       0
 19398 ;;Total ram usage:        9 bytes
 19399 ;; Hardware stack levels used:    1
 19400 ;; Hardware stack levels required when called:    4
 19401 ;; This function calls:
 19402 ;;		_ECANSendMessage
 19403 ;; This function is called by:
 19404 ;;		_sendVSCPFrame
 19405 ;; This function uses a non-reentrant model
 19406 ;;
 19407                           
 19408                           	psect	text53
 19409  006A68                     __ptext53:
 19410                           	opt stack 0
 19411  006A68                     _sendCANFrame:
 19412                           	opt stack 21
 19413                           
 19414                           ;main.c: 3155: uint8_t rv = 0;
 19415                           
 19416                           ;incstack = 0
 19417                           ;incstack = 0
 19418  006A68  6E2A               	movwf	??_sendCANFrame& (0+255),c
 19419  006A6A  0E00               	movlw	0
 19420  006A6C  6E2B               	movwf	sendCANFrame@rv,c
 19421  006A6E  502A               	movf	??_sendCANFrame& (0+255),w,c
 19422                           
 19423                           ;main.c: 3156: sendTimer = 0;
 19424  006A70  6E2A               	movwf	??_sendCANFrame& (0+255),c
 19425  006A72  0E00               	movlw	0
 19426  006A74  0100               	movlb	0	; () banked
 19427  006A76  0100               	movlb	0	; () banked
 19428  006A78  6FE6               	movwf	_sendTimer& (0+255),b
 19429  006A7A  502A               	movf	??_sendCANFrame& (0+255),w,c
 19430                           
 19431                           ;main.c: 3158: while ( sendTimer < 1 ) {
 19432  006A7C  D01C               	goto	l11512
 19433  006A7E                     l11508:
 19434                           
 19435                           ; BSR set to: 0
 19436                           ;main.c: 3159: if ( ECANSendMessage( id, pdata, dlc, ECAN_TX_XTD_FRAME ) ) {
 19437  006A7E  C07C  F021         	movff	sendCANFrame@id,?_ECANSendMessage
 19438  006A82  C07D  F022         	movff	sendCANFrame@id+1,?_ECANSendMessage+1
 19439  006A86  C07E  F023         	movff	sendCANFrame@id+2,?_ECANSendMessage+2
 19440  006A8A  C07F  F024         	movff	sendCANFrame@id+3,?_ECANSendMessage+3
 19441  006A8E  C081  F025         	movff	sendCANFrame@pdata,?_ECANSendMessage+4
 19442  006A92  C082  F026         	movff	sendCANFrame@pdata+1,?_ECANSendMessage+5
 19443  006A96  C080  F027         	movff	sendCANFrame@dlc,?_ECANSendMessage+6
 19444  006A9A  6E2A               	movwf	??_sendCANFrame& (0+255),c
 19445  006A9C  0E20               	movlw	32
 19446  006A9E  6E28               	movwf	?_ECANSendMessage+7,c
 19447  006AA0  502A               	movf	??_sendCANFrame& (0+255),w,c
 19448  006AA2  EC19  F028         	call	_ECANSendMessage	;wreg free
 19449  006AA6  0900               	iorlw	0
 19450  006AA8  B4D8               	btfsc	status,2,c
 19451  006AAA  D005               	goto	l11512
 19452                           
 19453                           ;main.c: 3160: rv = 1;
 19454  006AAC  6E2A               	movwf	??_sendCANFrame& (0+255),c
 19455  006AAE  0E01               	movlw	1
 19456  006AB0  6E2B               	movwf	sendCANFrame@rv,c
 19457  006AB2  502A               	movf	??_sendCANFrame& (0+255),w,c
 19458                           
 19459                           ;main.c: 3161: break;
 19460  006AB4  D005               	goto	l11514
 19461  006AB6                     l11512:
 19462  006AB6  0100               	movlb	0	; () banked
 19463  006AB8  0100               	movlb	0	; () banked
 19464  006ABA  51E6               	movf	_sendTimer& (0+255),w,b
 19465  006ABC  B4D8               	btfsc	status,2,c
 19466  006ABE  D7DF               	goto	l11508
 19467  006AC0                     l11514:
 19468                           
 19469                           ;main.c: 3162: }
 19470                           ;main.c: 3163: }
 19471                           ;main.c: 3165: vscp_omsg.flags = 0;
 19472  006AC0  6E2A               	movwf	??_sendCANFrame& (0+255),c
 19473  006AC2  0E00               	movlw	0
 19474  006AC4  6E3E               	movwf	_vscp_omsg,c
 19475  006AC6  502A               	movf	??_sendCANFrame& (0+255),w,c
 19476                           
 19477                           ;main.c: 3167: return rv;
 19478  006AC8  502B               	movf	sendCANFrame@rv,w,c
 19479  006ACA  0012               	return	
 19480  006ACC                     __end_of_sendCANFrame:
 19481                           	opt stack 0
 19482                           tblptru	equ	0xFF8
 19483                           tblptrh	equ	0xFF7
 19484                           tblptrl	equ	0xFF6
 19485                           tablat	equ	0xFF5
 19486                           prodh	equ	0xFF4
 19487                           prodl	equ	0xFF3
 19488                           intcon2	equ	0xFF1
 19489                           postinc0	equ	0xFEE
 19490                           wreg	equ	0xFE8
 19491                           indf2	equ	0xFDF
 19492                           postinc2	equ	0xFDE
 19493                           postdec2	equ	0xFDD
 19494                           fsr2h	equ	0xFDA
 19495                           fsr2l	equ	0xFD9
 19496                           status	equ	0xFD8
 19497                           
 19498 ;; *************** function _ECANSendMessage *****************
 19499 ;; Defined at:
 19500 ;;		line 617 in file "../ECAN.c"
 19501 ;; Parameters:    Size  Location     Type
 19502 ;;  id              4   32[COMRAM] unsigned long 
 19503 ;;  data            2   36[COMRAM] PTR unsigned char 
 19504 ;;		 -> SendInformationEvent@data(3), vscp_omsg(13), 
 19505 ;;  dataLen         1   38[COMRAM] unsigned char 
 19506 ;;  msgFlags        1   39[COMRAM] enum E16315
 19507 ;; Auto vars:     Size  Location     Type
 19508 ;;  pb             18    0[BANK0 ] PTR unsigned char [9]
 19509 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 19510 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 19511 ;;		 -> B0CON(1), 
 19512 ;;  ptr             2   26[BANK0 ] PTR unsigned char 
 19513 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 19514 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 19515 ;;		 -> B0CON(1), 
 19516 ;;  tempPtr         2   22[BANK0 ] PTR unsigned char 
 19517 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 19518 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 19519 ;;		 -> B0CON(1), 
 19520 ;;  i               1   25[BANK0 ] unsigned char 
 19521 ;;  temp            1   24[BANK0 ] unsigned char 
 19522 ;;  tempBSEL0       1   21[BANK0 ] struct .
 19523 ;;  j               1   20[BANK0 ] unsigned char 
 19524 ;;  buffers         1   19[BANK0 ] unsigned char 
 19525 ;;  mode            1   18[BANK0 ] unsigned char 
 19526 ;; Return value:  Size  Location     Type
 19527 ;;                  1    wreg      enum E15660
 19528 ;; Registers used:
 19529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19530 ;; Tracked objects:
 19531 ;;		On entry : 0/0
 19532 ;;		On exit  : 0/0
 19533 ;;		Unchanged: 0/0
 19534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19535 ;;      Params:         8       0       0       0       0       0       0
 19536 ;;      Locals:         0      28       0       0       0       0       0
 19537 ;;      Temps:          1       0       0       0       0       0       0
 19538 ;;      Totals:         9      28       0       0       0       0       0
 19539 ;;Total ram usage:       37 bytes
 19540 ;; Hardware stack levels used:    1
 19541 ;; Hardware stack levels required when called:    3
 19542 ;; This function calls:
 19543 ;;		__CANIDToRegs
 19544 ;; This function is called by:
 19545 ;;		_sendCANFrame
 19546 ;; This function uses a non-reentrant model
 19547 ;;
 19548                           
 19549                           	psect	text54
 19550  005032                     __ptext54:
 19551                           	opt stack 0
 19552  005032                     _ECANSendMessage:
 19553                           	opt stack 21
 19554                           
 19555                           ;ECAN.c: 619: BYTE mode;
 19556                           ;ECAN.c: 620: BYTE buffers;
 19557                           ;ECAN.c: 628: BYTE i,j;
 19558                           ;ECAN.c: 629: BYTE *ptr, *tempPtr;
 19559                           ;ECAN.c: 630: BYTE* pb[9];
 19560                           ;ECAN.c: 631: BYTE temp;
 19561                           ;ECAN.c: 634: BYTE_VAL tempBSEL0;
 19562                           ;ECAN.c: 641: pb[0]=(BYTE*)&TXB0CON;
 19563                           
 19564                           ;incstack = 0
 19565                           ;incstack = 0
 19566  005032  010F               	movlb	15	; () banked
 19567  005034  0E0F               	movlw	15	;volatile
 19568  005036  0100               	movlb	0	; () banked
 19569  005038  0100               	movlb	0	; () banked
 19570  00503A  6F61               	movwf	(ECANSendMessage@pb+1)& (0+255),b
 19571  00503C  010F               	movlb	15	; () banked
 19572  00503E  0E40               	movlw	64	;volatile
 19573  005040  0100               	movlb	0	; () banked
 19574  005042  6F60               	movwf	ECANSendMessage@pb& (0+255),b
 19575                           
 19576                           ;ECAN.c: 642: pb[1]=(BYTE*)&TXB1CON;
 19577  005044  010F               	movlb	15	; () banked
 19578  005046  0E0F               	movlw	15	;volatile
 19579  005048  0100               	movlb	0	; () banked
 19580  00504A  0100               	movlb	0	; () banked
 19581  00504C  6F63               	movwf	(ECANSendMessage@pb+3)& (0+255),b
 19582  00504E  010F               	movlb	15	; () banked
 19583  005050  0E30               	movlw	48	;volatile
 19584  005052  0100               	movlb	0	; () banked
 19585  005054  6F62               	movwf	(ECANSendMessage@pb+2)& (0+255),b
 19586                           
 19587                           ;ECAN.c: 643: pb[2]=(BYTE*)&TXB2CON;
 19588  005056  010F               	movlb	15	; () banked
 19589  005058  0E0F               	movlw	15	;volatile
 19590  00505A  0100               	movlb	0	; () banked
 19591  00505C  0100               	movlb	0	; () banked
 19592  00505E  6F65               	movwf	(ECANSendMessage@pb+5)& (0+255),b
 19593  005060  010F               	movlb	15	; () banked
 19594  005062  0E20               	movlw	32	;volatile
 19595  005064  0100               	movlb	0	; () banked
 19596  005066  6F64               	movwf	(ECANSendMessage@pb+4)& (0+255),b
 19597                           
 19598                           ;ECAN.c: 650: pb[3]=(BYTE*)&B0CON;
 19599  005068  010E               	movlb	14	; () banked
 19600  00506A  0E0E               	movlw	14	;volatile
 19601  00506C  0100               	movlb	0	; () banked
 19602  00506E  0100               	movlb	0	; () banked
 19603  005070  6F67               	movwf	(ECANSendMessage@pb+7)& (0+255),b
 19604  005072  010E               	movlb	14	; () banked
 19605  005074  0E20               	movlw	32	;volatile
 19606  005076  0100               	movlb	0	; () banked
 19607  005078  6F66               	movwf	(ECANSendMessage@pb+6)& (0+255),b
 19608                           
 19609                           ;ECAN.c: 651: pb[4]=(BYTE*)&B1CON;
 19610  00507A  010E               	movlb	14	; () banked
 19611  00507C  0E0E               	movlw	14	;volatile
 19612  00507E  0100               	movlb	0	; () banked
 19613  005080  0100               	movlb	0	; () banked
 19614  005082  6F69               	movwf	(ECANSendMessage@pb+9)& (0+255),b
 19615  005084  010E               	movlb	14	; () banked
 19616  005086  0E30               	movlw	48	;volatile
 19617  005088  0100               	movlb	0	; () banked
 19618  00508A  6F68               	movwf	(ECANSendMessage@pb+8)& (0+255),b
 19619                           
 19620                           ;ECAN.c: 652: pb[5]=(BYTE*)&B2CON;
 19621  00508C  010E               	movlb	14	; () banked
 19622  00508E  0E0E               	movlw	14	;volatile
 19623  005090  0100               	movlb	0	; () banked
 19624  005092  0100               	movlb	0	; () banked
 19625  005094  6F6B               	movwf	(ECANSendMessage@pb+11)& (0+255),b
 19626  005096  010E               	movlb	14	; () banked
 19627  005098  0E40               	movlw	64	;volatile
 19628  00509A  0100               	movlb	0	; () banked
 19629  00509C  6F6A               	movwf	(ECANSendMessage@pb+10)& (0+255),b
 19630                           
 19631                           ;ECAN.c: 653: pb[6]=(BYTE*)&B3CON;
 19632  00509E  010E               	movlb	14	; () banked
 19633  0050A0  0E0E               	movlw	14	;volatile
 19634  0050A2  0100               	movlb	0	; () banked
 19635  0050A4  0100               	movlb	0	; () banked
 19636  0050A6  6F6D               	movwf	(ECANSendMessage@pb+13)& (0+255),b
 19637  0050A8  010E               	movlb	14	; () banked
 19638  0050AA  0E50               	movlw	80	;volatile
 19639  0050AC  0100               	movlb	0	; () banked
 19640  0050AE  6F6C               	movwf	(ECANSendMessage@pb+12)& (0+255),b
 19641                           
 19642                           ;ECAN.c: 654: pb[7]=(BYTE*)&B4CON;
 19643  0050B0  010E               	movlb	14	; () banked
 19644  0050B2  0E0E               	movlw	14	;volatile
 19645  0050B4  0100               	movlb	0	; () banked
 19646  0050B6  0100               	movlb	0	; () banked
 19647  0050B8  6F6F               	movwf	(ECANSendMessage@pb+15)& (0+255),b
 19648  0050BA  010E               	movlb	14	; () banked
 19649  0050BC  0E60               	movlw	96	;volatile
 19650  0050BE  0100               	movlb	0	; () banked
 19651  0050C0  6F6E               	movwf	(ECANSendMessage@pb+14)& (0+255),b
 19652                           
 19653                           ;ECAN.c: 655: pb[8]=(BYTE*)&B5CON;
 19654  0050C2  010E               	movlb	14	; () banked
 19655  0050C4  0E0E               	movlw	14	;volatile
 19656  0050C6  0100               	movlb	0	; () banked
 19657  0050C8  0100               	movlb	0	; () banked
 19658  0050CA  6F71               	movwf	(ECANSendMessage@pb+17)& (0+255),b
 19659  0050CC  010E               	movlb	14	; () banked
 19660  0050CE  0E70               	movlw	112	;volatile
 19661  0050D0  0100               	movlb	0	; () banked
 19662  0050D2  6F70               	movwf	(ECANSendMessage@pb+16)& (0+255),b
 19663                           
 19664                           ; BSR set to: 0
 19665                           ;ECAN.c: 659: mode = ECANCON&0xC0;
 19666  0050D4  5077               	movf	3959,w,c	;volatile
 19667  0050D6  0BC0               	andlw	192
 19668  0050D8  0100               	movlb	0	; () banked
 19669  0050DA  0100               	movlb	0	; () banked
 19670  0050DC  6F72               	movwf	ECANSendMessage@mode& (0+255),b
 19671                           
 19672                           ; BSR set to: 0
 19673                           ;ECAN.c: 660: if ( mode == 0x00 )
 19674  0050DE  0100               	movlb	0	; () banked
 19675  0050E0  0100               	movlb	0	; () banked
 19676  0050E2  6772               	tstfsz	ECANSendMessage@mode& (0+255),b
 19677  0050E4  D003               	goto	l8790
 19678                           
 19679                           ; BSR set to: 0
 19680                           ;ECAN.c: 661: buffers = 2;
 19681  0050E6  6E29               	movwf	??_ECANSendMessage& (0+255),c
 19682  0050E8  0E02               	movlw	2
 19683  0050EA  D002               	goto	L134
 19684  0050EC                     l8790:
 19685                           
 19686                           ; BSR set to: 0
 19687                           ;ECAN.c: 662: else
 19688                           ;ECAN.c: 663: buffers = 8;
 19689  0050EC  6E29               	movwf	??_ECANSendMessage& (0+255),c
 19690  0050EE  0E08               	movlw	8
 19691  0050F0                     L134:
 19692  0050F0  0100               	movlb	0	; () banked
 19693  0050F2  0100               	movlb	0	; () banked
 19694  0050F4  6F73               	movwf	ECANSendMessage@buffers& (0+255),b
 19695  0050F6  5029               	movf	??_ECANSendMessage& (0+255),w,c
 19696                           
 19697                           ; BSR set to: 0
 19698                           ;ECAN.c: 684: tempBSEL0.Val = BSEL0 >> 1;
 19699                           
 19700                           ; BSR set to: 0
 19701  0050F8  010D               	movlb	13	; () banked
 19702  0050FA  010D               	movlb	13	; () banked
 19703  0050FC  90D8               	bcf	status,0,c
 19704  0050FE  31F8               	rrcf	248,w,b	;volatile
 19705  005100  0100               	movlb	0	; () banked
 19706  005102  0100               	movlb	0	; () banked
 19707  005104  6F75               	movwf	ECANSendMessage@tempBSEL0& (0+255),b
 19708                           
 19709                           ; BSR set to: 0
 19710                           ;ECAN.c: 686: for ( i = 0; i < buffers; i++ )
 19711  005106  6E29               	movwf	??_ECANSendMessage& (0+255),c
 19712  005108  0E00               	movlw	0
 19713  00510A  0100               	movlb	0	; () banked
 19714  00510C  0100               	movlb	0	; () banked
 19715  00510E  6F79               	movwf	ECANSendMessage@i& (0+255),b
 19716  005110  5029               	movf	??_ECANSendMessage& (0+255),w,c
 19717  005112  D0AB               	goto	l8852
 19718  005114                     l8796:
 19719                           
 19720                           ; BSR set to: 0
 19721                           ;ECAN.c: 688: {
 19722                           ;ECAN.c: 693: ptr = pb[i];
 19723  005114  0100               	movlb	0	; () banked
 19724  005116  0100               	movlb	0	; () banked
 19725  005118  5179               	movf	ECANSendMessage@i& (0+255),w,b
 19726  00511A  0D02               	mullw	2
 19727  00511C  0100               	movlb	0	; () banked
 19728  00511E  0E60               	movlw	low ECANSendMessage@pb
 19729  005120  24F3               	addwf	prodl,w,c
 19730  005122  6ED9               	movwf	fsr2l,c
 19731  005124  0100               	movlb	0	; () banked
 19732  005126  0E00               	movlw	high ECANSendMessage@pb
 19733  005128  20F4               	addwfc	prodh,w,c
 19734  00512A  6EDA               	movwf	fsr2h,c
 19735  00512C  0100               	movlb	0	; () banked
 19736  00512E  CFDE F07A          	movff	postinc2,ECANSendMessage@ptr
 19737  005132  0100               	movlb	0	; () banked
 19738  005134  CFDD F07B          	movff	postdec2,ECANSendMessage@ptr+1
 19739                           
 19740                           ; BSR set to: 0
 19741                           ;ECAN.c: 694: tempPtr = ptr;
 19742  005138  C07A  F076         	movff	ECANSendMessage@ptr,ECANSendMessage@tempPtr
 19743  00513C  C07B  F077         	movff	ECANSendMessage@ptr+1,ECANSendMessage@tempPtr+1
 19744                           
 19745                           ; BSR set to: 0
 19746                           ;ECAN.c: 702: if ( i > 2 )
 19747  005140  0E02               	movlw	2
 19748  005142  0100               	movlb	0	; () banked
 19749  005144  0100               	movlb	0	; () banked
 19750  005146  6579               	cpfsgt	ECANSendMessage@i& (0+255),b
 19751  005148  D007               	goto	l8808
 19752                           
 19753                           ; BSR set to: 0
 19754                           ;ECAN.c: 703: {
 19755                           ;ECAN.c: 707: tempBSEL0.Val >>= 1;
 19756  00514A  0100               	movlb	0	; () banked
 19757  00514C  90D8               	bcf	status,0,c
 19758  00514E  3375               	rrcf	ECANSendMessage@tempBSEL0& (0+255),f,b
 19759                           
 19760                           ; BSR set to: 0
 19761                           ;ECAN.c: 712: if ( !tempBSEL0.bits.b0 )
 19762  005150  0100               	movlb	0	; () banked
 19763  005152  0100               	movlb	0	; () banked
 19764  005154  A175               	btfss	ECANSendMessage@tempBSEL0& (0+255),0,b
 19765  005156  D086               	goto	l8850
 19766  005158                     l8808:
 19767                           
 19768                           ; BSR set to: 0
 19769                           ;ECAN.c: 714: }
 19770                           ;ECAN.c: 720: if ( !(*ptr & 0x08) )
 19771  005158  C07A  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 19772  00515C  C07B  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 19773  005160  50DF               	movf	indf2,w,c
 19774  005162  6E29               	movwf	??_ECANSendMessage& (0+255),c
 19775  005164  B629               	btfsc	??_ECANSendMessage,3,c
 19776  005166  D07E               	goto	l8850
 19777                           
 19778                           ; BSR set to: 0
 19779                           ;ECAN.c: 721: {
 19780                           ;ECAN.c: 723: *ptr &= ~ECAN_TX_PRIORITY_BITS;
 19781  005168  C07A  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 19782  00516C  C07B  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 19783  005170  0EFC               	movlw	252
 19784  005172  16DF               	andwf	indf2,f,c
 19785                           
 19786                           ; BSR set to: 0
 19787                           ;ECAN.c: 724: *ptr |= msgFlags & ECAN_TX_PRIORITY_BITS;
 19788  005174  C028  F029         	movff	ECANSendMessage@msgFlags,??_ECANSendMessage
 19789  005178  0E03               	movlw	3
 19790  00517A  1629               	andwf	??_ECANSendMessage,f,c
 19791  00517C  C07A  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 19792  005180  C07B  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 19793  005184  5029               	movf	??_ECANSendMessage,w,c
 19794  005186  12DF               	iorwf	indf2,f,c
 19795                           
 19796                           ; BSR set to: 0
 19797                           ;ECAN.c: 727: if ( msgFlags & ECAN_TX_RTR_BIT )
 19798  005188  AC28               	btfss	ECANSendMessage@msgFlags,6,c
 19799  00518A  D006               	goto	l168
 19800                           
 19801                           ; BSR set to: 0
 19802                           ;ECAN.c: 728: temp = 0x40 | dataLen;
 19803  00518C  5027               	movf	ECANSendMessage@dataLen,w,c
 19804  00518E  0940               	iorlw	64
 19805  005190  0100               	movlb	0	; () banked
 19806  005192  0100               	movlb	0	; () banked
 19807  005194  6F78               	movwf	ECANSendMessage@temp& (0+255),b
 19808  005196  D002               	goto	l8818
 19809  005198                     l168:
 19810                           
 19811                           ; BSR set to: 0
 19812                           ;ECAN.c: 729: else
 19813                           ;ECAN.c: 730: temp = dataLen;
 19814  005198  C027  F078         	movff	ECANSendMessage@dataLen,ECANSendMessage@temp
 19815  00519C                     l8818:
 19816                           
 19817                           ; BSR set to: 0
 19818                           ;ECAN.c: 732: *(ptr+5) = temp;
 19819  00519C  0100               	movlb	0	; () banked
 19820  00519E  EE20 F005          	lfsr	2,5
 19821  0051A2  0100               	movlb	0	; () banked
 19822  0051A4  517A               	movf	ECANSendMessage@ptr& (0+255),w,b
 19823  0051A6  26D9               	addwf	fsr2l,f,c
 19824  0051A8  0100               	movlb	0	; () banked
 19825  0051AA  517B               	movf	(ECANSendMessage@ptr+1)& (0+255),w,b
 19826  0051AC  22DA               	addwfc	fsr2h,f,c
 19827  0051AE  0100               	movlb	0	; () banked
 19828  0051B0  C078  FFDF         	movff	ECANSendMessage@temp,indf2
 19829                           
 19830                           ; BSR set to: 0
 19831                           ;ECAN.c: 735: if ( msgFlags & ECAN_TX_FRAME_BIT )
 19832  0051B4  AA28               	btfss	ECANSendMessage@msgFlags,5,c
 19833  0051B6  D003               	goto	l8824
 19834                           
 19835                           ; BSR set to: 0
 19836                           ;ECAN.c: 736: temp = 1;
 19837  0051B8  6E29               	movwf	??_ECANSendMessage& (0+255),c
 19838  0051BA  0E01               	movlw	1
 19839  0051BC  D002               	goto	L135
 19840  0051BE                     l8824:
 19841                           
 19842                           ; BSR set to: 0
 19843                           ;ECAN.c: 738: else
 19844                           ;ECAN.c: 739: temp = 0;
 19845  0051BE  6E29               	movwf	??_ECANSendMessage& (0+255),c
 19846  0051C0  0E00               	movlw	0
 19847  0051C2                     L135:
 19848  0051C2  0100               	movlb	0	; () banked
 19849  0051C4  0100               	movlb	0	; () banked
 19850  0051C6  6F78               	movwf	ECANSendMessage@temp& (0+255),b
 19851  0051C8  5029               	movf	??_ECANSendMessage& (0+255),w,c
 19852                           
 19853                           ; BSR set to: 0
 19854                           ;ECAN.c: 742: _CANIDToRegs((BYTE*)(ptr+1), id, temp);
 19855                           
 19856                           ; BSR set to: 0
 19857  0051CA  0E01               	movlw	1
 19858  0051CC  0100               	movlb	0	; () banked
 19859  0051CE  0100               	movlb	0	; () banked
 19860  0051D0  257A               	addwf	ECANSendMessage@ptr& (0+255),w,b
 19861  0051D2  6E16               	movwf	?__CANIDToRegs,c
 19862  0051D4  0E00               	movlw	0
 19863  0051D6  0100               	movlb	0	; () banked
 19864  0051D8  0100               	movlb	0	; () banked
 19865  0051DA  217B               	addwfc	(ECANSendMessage@ptr+1)& (0+255),w,b
 19866  0051DC  6E17               	movwf	?__CANIDToRegs+1,c
 19867  0051DE  C021  F018         	movff	ECANSendMessage@id,?__CANIDToRegs+2
 19868  0051E2  C022  F019         	movff	ECANSendMessage@id+1,?__CANIDToRegs+3
 19869  0051E6  C023  F01A         	movff	ECANSendMessage@id+2,?__CANIDToRegs+4
 19870  0051EA  C024  F01B         	movff	ECANSendMessage@id+3,?__CANIDToRegs+5
 19871  0051EE  C078  F01C         	movff	ECANSendMessage@temp,?__CANIDToRegs+6
 19872  0051F2  EC9C  F030         	call	__CANIDToRegs	;wreg free
 19873                           
 19874                           ;ECAN.c: 745: ptr += 6;
 19875  0051F6  0E06               	movlw	6
 19876  0051F8  0100               	movlb	0	; () banked
 19877  0051FA  0100               	movlb	0	; () banked
 19878  0051FC  277A               	addwf	ECANSendMessage@ptr& (0+255),f,b
 19879  0051FE  0E00               	movlw	0
 19880  005200  0100               	movlb	0	; () banked
 19881  005202  237B               	addwfc	(ECANSendMessage@ptr+1)& (0+255),f,b
 19882                           
 19883                           ; BSR set to: 0
 19884                           ;ECAN.c: 747: for ( j = 0 ; j < dataLen; j++ )
 19885  005204  6E29               	movwf	??_ECANSendMessage& (0+255),c
 19886  005206  0E00               	movlw	0
 19887  005208  0100               	movlb	0	; () banked
 19888  00520A  0100               	movlb	0	; () banked
 19889  00520C  6F74               	movwf	ECANSendMessage@j& (0+255),b
 19890  00520E  5029               	movf	??_ECANSendMessage& (0+255),w,c
 19891  005210  D013               	goto	l8840
 19892  005212                     l8832:
 19893                           
 19894                           ; BSR set to: 0
 19895                           ;ECAN.c: 748: *ptr++ = *data++;
 19896  005212  C025  FFD9         	movff	ECANSendMessage@data,fsr2l
 19897  005216  C026  FFDA         	movff	ECANSendMessage@data+1,fsr2h
 19898  00521A  C07A  FFE1         	movff	ECANSendMessage@ptr,fsr1l
 19899  00521E  C07B  FFE2         	movff	ECANSendMessage@ptr+1,fsr1h
 19900  005222  CFDF FFE7          	movff	indf2,indf1
 19901                           
 19902                           ; BSR set to: 0
 19903  005226  4A25               	infsnz	ECANSendMessage@data,f,c
 19904  005228  2A26               	incf	ECANSendMessage@data+1,f,c
 19905                           
 19906                           ; BSR set to: 0
 19907  00522A  0100               	movlb	0	; () banked
 19908  00522C  0100               	movlb	0	; () banked
 19909  00522E  4B7A               	infsnz	ECANSendMessage@ptr& (0+255),f,b
 19910  005230  2B7B               	incf	(ECANSendMessage@ptr+1)& (0+255),f,b
 19911                           
 19912                           ; BSR set to: 0
 19913  005232  0100               	movlb	0	; () banked
 19914  005234  0100               	movlb	0	; () banked
 19915  005236  2B74               	incf	ECANSendMessage@j& (0+255),f,b
 19916  005238                     l8840:
 19917                           
 19918                           ; BSR set to: 0
 19919  005238  5027               	movf	ECANSendMessage@dataLen,w,c
 19920  00523A  0100               	movlb	0	; () banked
 19921  00523C  0100               	movlb	0	; () banked
 19922  00523E  5D74               	subwf	ECANSendMessage@j& (0+255),w,b
 19923  005240  A0D8               	btfss	status,0,c
 19924  005242  D7E7               	goto	l8832
 19925                           
 19926                           ; BSR set to: 0
 19927                           ;ECAN.c: 752: if ( !(*tempPtr & 0x04) )
 19928                           
 19929                           ; BSR set to: 0
 19930  005244  C076  FFD9         	movff	ECANSendMessage@tempPtr,fsr2l
 19931  005248  C077  FFDA         	movff	ECANSendMessage@tempPtr+1,fsr2h
 19932  00524C  50DF               	movf	indf2,w,c
 19933  00524E  6E29               	movwf	??_ECANSendMessage& (0+255),c
 19934  005250  B429               	btfsc	??_ECANSendMessage,2,c
 19935  005252  D006               	goto	l8846
 19936                           
 19937                           ; BSR set to: 0
 19938                           ;ECAN.c: 753: *tempPtr |= 0x08;
 19939  005254  C076  FFD9         	movff	ECANSendMessage@tempPtr,fsr2l
 19940  005258  C077  FFDA         	movff	ECANSendMessage@tempPtr+1,fsr2h
 19941  00525C  0E00               	movlw	0
 19942  00525E  86DB               	bsf	plusw2,3,c
 19943  005260                     l8846:
 19944                           
 19945                           ; BSR set to: 0
 19946                           ;ECAN.c: 755: return TRUE;
 19947  005260  0E01               	movlw	1
 19948  005262  D00C               	goto	l176
 19949  005264                     l8850:
 19950                           
 19951                           ; BSR set to: 0
 19952  005264  0100               	movlb	0	; () banked
 19953  005266  0100               	movlb	0	; () banked
 19954  005268  2B79               	incf	ECANSendMessage@i& (0+255),f,b
 19955  00526A                     l8852:
 19956                           
 19957                           ; BSR set to: 0
 19958  00526A  0100               	movlb	0	; () banked
 19959  00526C  0100               	movlb	0	; () banked
 19960  00526E  5173               	movf	ECANSendMessage@buffers& (0+255),w,b
 19961  005270  0100               	movlb	0	; () banked
 19962  005272  0100               	movlb	0	; () banked
 19963  005274  5D79               	subwf	ECANSendMessage@i& (0+255),w,b
 19964  005276  A0D8               	btfss	status,0,c
 19965  005278  D74D               	goto	l8796
 19966                           
 19967                           ; BSR set to: 0
 19968                           ;ECAN.c: 756: }
 19969                           ;ECAN.c: 757: }
 19970                           ;ECAN.c: 760: return FALSE;
 19971                           
 19972                           ; BSR set to: 0
 19973  00527A  0E00               	movlw	0
 19974  00527C                     l176:
 19975                           
 19976                           ; BSR set to: 0
 19977  00527C  0012               	return	
 19978  00527E                     __end_of_ECANSendMessage:
 19979                           	opt stack 0
 19980                           tblptru	equ	0xFF8
 19981                           tblptrh	equ	0xFF7
 19982                           tblptrl	equ	0xFF6
 19983                           tablat	equ	0xFF5
 19984                           prodh	equ	0xFF4
 19985                           prodl	equ	0xFF3
 19986                           intcon2	equ	0xFF1
 19987                           postinc0	equ	0xFEE
 19988                           wreg	equ	0xFE8
 19989                           indf1	equ	0xFE7
 19990                           fsr1h	equ	0xFE2
 19991                           fsr1l	equ	0xFE1
 19992                           indf2	equ	0xFDF
 19993                           postinc2	equ	0xFDE
 19994                           postdec2	equ	0xFDD
 19995                           plusw2	equ	0xFDB
 19996                           fsr2h	equ	0xFDA
 19997                           fsr2l	equ	0xFD9
 19998                           status	equ	0xFD8
 19999                           
 20000 ;; *************** function __CANIDToRegs *****************
 20001 ;; Defined at:
 20002 ;;		line 1099 in file "../ECAN.c"
 20003 ;; Parameters:    Size  Location     Type
 20004 ;;  ptr             2   21[COMRAM] PTR unsigned char 
 20005 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), RXM1SIDH(1), 
 20006 ;;		 -> RXF1SIDH(1), B5CON(1), B4CON(1), B3CON(1), 
 20007 ;;		 -> B2CON(1), B1CON(1), B0CON(1), 
 20008 ;;  val             4   23[COMRAM] unsigned long 
 20009 ;;  type            1   27[COMRAM] unsigned char 
 20010 ;; Auto vars:     Size  Location     Type
 20011 ;;  Value           2   30[COMRAM] PTR struct _CAN_MESSAGE_
 20012 ;;		 -> _CANIDToRegs@val(4), 
 20013 ;; Return value:  Size  Location     Type
 20014 ;;		None               void
 20015 ;; Registers used:
 20016 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20017 ;; Tracked objects:
 20018 ;;		On entry : 0/0
 20019 ;;		On exit  : 0/0
 20020 ;;		Unchanged: 0/0
 20021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20022 ;;      Params:         7       0       0       0       0       0       0
 20023 ;;      Locals:         2       0       0       0       0       0       0
 20024 ;;      Temps:          2       0       0       0       0       0       0
 20025 ;;      Totals:        11       0       0       0       0       0       0
 20026 ;;Total ram usage:       11 bytes
 20027 ;; Hardware stack levels used:    1
 20028 ;; Hardware stack levels required when called:    2
 20029 ;; This function calls:
 20030 ;;		Nothing
 20031 ;; This function is called by:
 20032 ;;		_ECANSendMessage
 20033 ;;		_calculateSetFilterMask
 20034 ;; This function uses a non-reentrant model
 20035 ;;
 20036                           
 20037                           	psect	text55
 20038  006138                     __ptext55:
 20039                           	opt stack 0
 20040  006138                     __CANIDToRegs:
 20041                           	opt stack 21
 20042                           
 20043                           ;ECAN.c: 1100: CAN_MESSAGE_ID *Value;
 20044                           ;ECAN.c: 1102: Value = (CAN_MESSAGE_ID*)&val;
 20045                           
 20046                           ; BSR set to: 0
 20047                           ;incstack = 0
 20048                           ;incstack = 0
 20049  006138  0E00               	movlw	high __CANIDToRegs@val
 20050  00613A  6E20               	movwf	__CANIDToRegs@Value+1,c
 20051  00613C  0E18               	movlw	low __CANIDToRegs@val
 20052  00613E  6E1F               	movwf	__CANIDToRegs@Value,c
 20053                           
 20054                           ;ECAN.c: 1104: if ( type == 0 )
 20055  006140  661C               	tstfsz	__CANIDToRegs@type,c
 20056  006142  D03A               	goto	l8868
 20057                           
 20058                           ;ECAN.c: 1105: {
 20059                           ;ECAN.c: 1107: *ptr = Value->BYTES.BYTE_1 >> 3;
 20060  006144  C01F  FFD9         	movff	__CANIDToRegs@Value,fsr2l
 20061  006148  C020  FFDA         	movff	__CANIDToRegs@Value+1,fsr2h
 20062  00614C  50DF               	movf	indf2,w,c
 20063  00614E  6E1D               	movwf	??__CANIDToRegs& (0+255),c
 20064  006150  90D8               	bcf	status,0,c
 20065  006152  321D               	rrcf	??__CANIDToRegs,f,c
 20066  006154  90D8               	bcf	status,0,c
 20067  006156  321D               	rrcf	??__CANIDToRegs,f,c
 20068  006158  90D8               	bcf	status,0,c
 20069  00615A  301D               	rrcf	??__CANIDToRegs,w,c
 20070  00615C  C016  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 20071  006160  C017  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 20072  006164  6EDF               	movwf	indf2,c
 20073                           
 20074                           ;ECAN.c: 1108: *ptr |= (Value->BYTES.BYTE_2 << 5);
 20075  006166  EE20 F001          	lfsr	2,1
 20076  00616A  501F               	movf	__CANIDToRegs@Value,w,c
 20077  00616C  26D9               	addwf	fsr2l,f,c
 20078  00616E  5020               	movf	__CANIDToRegs@Value+1,w,c
 20079  006170  22DA               	addwfc	fsr2h,f,c
 20080  006172  50DF               	movf	indf2,w,c
 20081  006174  6E1D               	movwf	??__CANIDToRegs& (0+255),c
 20082  006176  0E05               	movlw	5
 20083  006178  6E1E               	movwf	(??__CANIDToRegs+1)& (0+255),c
 20084  00617A                     u9945:
 20085  00617A  90D8               	bcf	status,0,c
 20086  00617C  361D               	rlcf	??__CANIDToRegs,f,c
 20087  00617E  2E1E               	decfsz	(??__CANIDToRegs+1)& (0+255),f,c
 20088  006180  D7FC               	goto	u9945
 20089  006182  C016  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 20090  006186  C017  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 20091  00618A  501D               	movf	??__CANIDToRegs,w,c
 20092  00618C  12DF               	iorwf	indf2,f,c
 20093                           
 20094                           ;ECAN.c: 1109: ptr++;
 20095  00618E  4A16               	infsnz	__CANIDToRegs@ptr,f,c
 20096  006190  2A17               	incf	__CANIDToRegs@ptr+1,f,c
 20097                           
 20098                           ;ECAN.c: 1110: *ptr = Value->BYTES.BYTE_1 << 5;
 20099  006192  C01F  FFD9         	movff	__CANIDToRegs@Value,fsr2l
 20100  006196  C020  FFDA         	movff	__CANIDToRegs@Value+1,fsr2h
 20101  00619A  50DF               	movf	indf2,w,c
 20102  00619C  6E1D               	movwf	??__CANIDToRegs& (0+255),c
 20103  00619E  0E05               	movlw	5
 20104  0061A0  6E1E               	movwf	(??__CANIDToRegs+1)& (0+255),c
 20105  0061A2                     u9955:
 20106  0061A2  90D8               	bcf	status,0,c
 20107  0061A4  361D               	rlcf	??__CANIDToRegs,f,c
 20108  0061A6  2E1E               	decfsz	(??__CANIDToRegs+1)& (0+255),f,c
 20109  0061A8  D7FC               	goto	u9955
 20110  0061AA  501D               	movf	??__CANIDToRegs,w,c
 20111  0061AC  C016  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 20112  0061B0  C017  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 20113  0061B4  6EDF               	movwf	indf2,c
 20114                           
 20115                           ;ECAN.c: 1111: }
 20116  0061B6  D06E               	goto	l230
 20117  0061B8                     l8868:
 20118                           
 20119                           ;ECAN.c: 1112: else
 20120                           ;ECAN.c: 1113: {
 20121                           ;ECAN.c: 1115: *ptr = Value->BYTES.BYTE_3 >> 5;
 20122  0061B8  EE20 F002          	lfsr	2,2
 20123  0061BC  501F               	movf	__CANIDToRegs@Value,w,c
 20124  0061BE  26D9               	addwf	fsr2l,f,c
 20125  0061C0  5020               	movf	__CANIDToRegs@Value+1,w,c
 20126  0061C2  22DA               	addwfc	fsr2h,f,c
 20127  0061C4  50DF               	movf	indf2,w,c
 20128  0061C6  6E1D               	movwf	??__CANIDToRegs& (0+255),c
 20129  0061C8  0E05               	movlw	5
 20130  0061CA  6E1E               	movwf	(??__CANIDToRegs+1)& (0+255),c
 20131  0061CC                     u9965:
 20132  0061CC  90D8               	bcf	status,0,c
 20133  0061CE  321D               	rrcf	??__CANIDToRegs,f,c
 20134  0061D0  2E1E               	decfsz	(??__CANIDToRegs+1)& (0+255),f,c
 20135  0061D2  D7FC               	goto	u9965
 20136  0061D4  501D               	movf	??__CANIDToRegs,w,c
 20137  0061D6  C016  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 20138  0061DA  C017  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 20139  0061DE  6EDF               	movwf	indf2,c
 20140                           
 20141                           ;ECAN.c: 1116: *ptr |= Value->BYTES.BYTE_4 << 3;
 20142  0061E0  EE20 F003          	lfsr	2,3
 20143  0061E4  501F               	movf	__CANIDToRegs@Value,w,c
 20144  0061E6  26D9               	addwf	fsr2l,f,c
 20145  0061E8  5020               	movf	__CANIDToRegs@Value+1,w,c
 20146  0061EA  22DA               	addwfc	fsr2h,f,c
 20147  0061EC  50DF               	movf	indf2,w,c
 20148  0061EE  6E1D               	movwf	??__CANIDToRegs& (0+255),c
 20149  0061F0  90D8               	bcf	status,0,c
 20150  0061F2  361D               	rlcf	??__CANIDToRegs,f,c
 20151  0061F4  90D8               	bcf	status,0,c
 20152  0061F6  361D               	rlcf	??__CANIDToRegs,f,c
 20153  0061F8  90D8               	bcf	status,0,c
 20154  0061FA  361D               	rlcf	??__CANIDToRegs,f,c
 20155  0061FC  C016  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 20156  006200  C017  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 20157  006204  501D               	movf	??__CANIDToRegs,w,c
 20158  006206  12DF               	iorwf	indf2,f,c
 20159                           
 20160                           ;ECAN.c: 1117: ptr++;
 20161  006208  4A16               	infsnz	__CANIDToRegs@ptr,f,c
 20162  00620A  2A17               	incf	__CANIDToRegs@ptr+1,f,c
 20163                           
 20164                           ;ECAN.c: 1118: *ptr = (Value->BYTES.BYTE_3 << 3) & 0xE0;
 20165  00620C  EE20 F002          	lfsr	2,2
 20166  006210  501F               	movf	__CANIDToRegs@Value,w,c
 20167  006212  26D9               	addwf	fsr2l,f,c
 20168  006214  5020               	movf	__CANIDToRegs@Value+1,w,c
 20169  006216  22DA               	addwfc	fsr2h,f,c
 20170  006218  50DF               	movf	indf2,w,c
 20171  00621A  6E1D               	movwf	??__CANIDToRegs& (0+255),c
 20172  00621C  90D8               	bcf	status,0,c
 20173  00621E  361D               	rlcf	??__CANIDToRegs,f,c
 20174  006220  90D8               	bcf	status,0,c
 20175  006222  361D               	rlcf	??__CANIDToRegs,f,c
 20176  006224  90D8               	bcf	status,0,c
 20177  006226  341D               	rlcf	??__CANIDToRegs,w,c
 20178  006228  0BE0               	andlw	224
 20179  00622A  C016  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 20180  00622E  C017  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 20181  006232  6EDF               	movwf	indf2,c
 20182                           
 20183                           ;ECAN.c: 1120: *ptr |= 0b00001000;
 20184  006234  C016  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 20185  006238  C017  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 20186  00623C  0E00               	movlw	0
 20187  00623E  86DB               	bsf	plusw2,3,c
 20188                           
 20189                           ;ECAN.c: 1121: *ptr |= Value->BYTES.BYTE_3 & 0x03;
 20190  006240  EE20 F002          	lfsr	2,2
 20191  006244  501F               	movf	__CANIDToRegs@Value,w,c
 20192  006246  26D9               	addwf	fsr2l,f,c
 20193  006248  5020               	movf	__CANIDToRegs@Value+1,w,c
 20194  00624A  22DA               	addwfc	fsr2h,f,c
 20195  00624C  50DF               	movf	indf2,w,c
 20196  00624E  6E1D               	movwf	??__CANIDToRegs& (0+255),c
 20197  006250  0E03               	movlw	3
 20198  006252  161D               	andwf	??__CANIDToRegs,f,c
 20199  006254  C016  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 20200  006258  C017  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 20201  00625C  501D               	movf	??__CANIDToRegs,w,c
 20202  00625E  12DF               	iorwf	indf2,f,c
 20203                           
 20204                           ;ECAN.c: 1122: ptr++;
 20205  006260  4A16               	infsnz	__CANIDToRegs@ptr,f,c
 20206  006262  2A17               	incf	__CANIDToRegs@ptr+1,f,c
 20207                           
 20208                           ;ECAN.c: 1123: *ptr = Value->BYTES.BYTE_2;
 20209  006264  EE20 F001          	lfsr	2,1
 20210  006268  501F               	movf	__CANIDToRegs@Value,w,c
 20211  00626A  26D9               	addwf	fsr2l,f,c
 20212  00626C  5020               	movf	__CANIDToRegs@Value+1,w,c
 20213  00626E  22DA               	addwfc	fsr2h,f,c
 20214  006270  C016  FFE1         	movff	__CANIDToRegs@ptr,fsr1l
 20215  006274  C017  FFE2         	movff	__CANIDToRegs@ptr+1,fsr1h
 20216  006278  CFDF FFE7          	movff	indf2,indf1
 20217                           
 20218                           ;ECAN.c: 1124: ptr++;
 20219  00627C  4A16               	infsnz	__CANIDToRegs@ptr,f,c
 20220  00627E  2A17               	incf	__CANIDToRegs@ptr+1,f,c
 20221                           
 20222                           ;ECAN.c: 1125: *ptr = Value->BYTES.BYTE_1;
 20223  006280  C01F  FFD9         	movff	__CANIDToRegs@Value,fsr2l
 20224  006284  C020  FFDA         	movff	__CANIDToRegs@Value+1,fsr2h
 20225  006288  C016  FFE1         	movff	__CANIDToRegs@ptr,fsr1l
 20226  00628C  C017  FFE2         	movff	__CANIDToRegs@ptr+1,fsr1h
 20227  006290  CFDF FFE7          	movff	indf2,indf1
 20228  006294                     l230:
 20229  006294  0012               	return	
 20230  006296                     __end_of__CANIDToRegs:
 20231                           	opt stack 0
 20232                           tblptru	equ	0xFF8
 20233                           tblptrh	equ	0xFF7
 20234                           tblptrl	equ	0xFF6
 20235                           tablat	equ	0xFF5
 20236                           prodh	equ	0xFF4
 20237                           prodl	equ	0xFF3
 20238                           intcon2	equ	0xFF1
 20239                           postinc0	equ	0xFEE
 20240                           wreg	equ	0xFE8
 20241                           indf1	equ	0xFE7
 20242                           fsr1h	equ	0xFE2
 20243                           fsr1l	equ	0xFE1
 20244                           indf2	equ	0xFDF
 20245                           postinc2	equ	0xFDE
 20246                           postdec2	equ	0xFDD
 20247                           plusw2	equ	0xFDB
 20248                           fsr2h	equ	0xFDA
 20249                           fsr2l	equ	0xFD9
 20250                           status	equ	0xFD8
 20251                           
 20252 ;; *************** function _vscp_getEvent *****************
 20253 ;; Defined at:
 20254 ;;		line 1308 in file "../../vscp_firmware/common/vscp_firmware.c"
 20255 ;; Parameters:    Size  Location     Type
 20256 ;;		None
 20257 ;; Auto vars:     Size  Location     Type
 20258 ;;  rv              1   20[BANK0 ] unsigned char 
 20259 ;; Return value:  Size  Location     Type
 20260 ;;                  1    wreg      unsigned char 
 20261 ;; Registers used:
 20262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 20263 ;; Tracked objects:
 20264 ;;		On entry : 0/0
 20265 ;;		On exit  : 0/0
 20266 ;;		Unchanged: 0/0
 20267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20268 ;;      Params:         0       0       0       0       0       0       0
 20269 ;;      Locals:         0       1       0       0       0       0       0
 20270 ;;      Temps:          0       0       0       0       0       0       0
 20271 ;;      Totals:         0       1       0       0       0       0       0
 20272 ;;Total ram usage:        1 bytes
 20273 ;; Hardware stack levels used:    1
 20274 ;; Hardware stack levels required when called:    6
 20275 ;; This function calls:
 20276 ;;		_getVSCPFrame
 20277 ;; This function is called by:
 20278 ;;		_main
 20279 ;; This function uses a non-reentrant model
 20280 ;;
 20281                           
 20282                           	psect	text56
 20283  0068EE                     __ptext56:
 20284                           	opt stack 0
 20285  0068EE                     _vscp_getEvent:
 20286                           	opt stack 23
 20287                           
 20288                           ;vscp_firmware.c: 1309: int8_t rv;
 20289                           ;vscp_firmware.c: 1315: if (vscp_imsg.flags & 0x80) return !0;
 20290                           
 20291                           ;incstack = 0
 20292                           ;incstack = 0
 20293  0068EE  0100               	movlb	0	; () banked
 20294  0068F0  0100               	movlb	0	; () banked
 20295  0068F2  BFF1               	btfsc	_vscp_imsg& (0+255),7,b
 20296  0068F4  D042               	goto	l1396
 20297                           
 20298                           ; BSR set to: 0
 20299                           ;vscp_firmware.c: 1318: if ((rv = getVSCPFrame( &vscp_imsg.vscp_class,
 20300                           ;vscp_firmware.c: 1319: &vscp_imsg.vscp_type,
 20301                           ;vscp_firmware.c: 1320: &vscp_imsg.oaddr,
 20302                           ;vscp_firmware.c: 1321: &vscp_imsg.priority,
 20303                           ;vscp_firmware.c: 1322: &vscp_imsg.flags,
 20304                           ;vscp_firmware.c: 1323: vscp_imsg.data ) ) ) {
 20305                           
 20306                           ; BSR set to: 0
 20307                           
 20308                           ; BSR set to: 0
 20309                           ;	Return value of _vscp_getEvent is never used
 20310  0068F6  0100               	movlb	0	; () banked
 20311  0068F8  0E00               	movlw	high (_vscp_imsg+2)
 20312  0068FA  0100               	movlb	0	; () banked
 20313  0068FC  0100               	movlb	0	; () banked
 20314  0068FE  6F61               	movwf	(?_getVSCPFrame+1)& (0+255),b
 20315  006900  0100               	movlb	0	; () banked
 20316  006902  0EF3               	movlw	low (_vscp_imsg+2)
 20317  006904  0100               	movlb	0	; () banked
 20318  006906  6F60               	movwf	?_getVSCPFrame& (0+255),b
 20319  006908  0100               	movlb	0	; () banked
 20320  00690A  0E00               	movlw	high (_vscp_imsg+4)
 20321  00690C  0100               	movlb	0	; () banked
 20322  00690E  0100               	movlb	0	; () banked
 20323  006910  6F63               	movwf	(?_getVSCPFrame+3)& (0+255),b
 20324  006912  0100               	movlb	0	; () banked
 20325  006914  0EF5               	movlw	low (_vscp_imsg+4)
 20326  006916  0100               	movlb	0	; () banked
 20327  006918  6F62               	movwf	(?_getVSCPFrame+2)& (0+255),b
 20328  00691A  0100               	movlb	0	; () banked
 20329  00691C  0E00               	movlw	high (_vscp_imsg+5)
 20330  00691E  0100               	movlb	0	; () banked
 20331  006920  0100               	movlb	0	; () banked
 20332  006922  6F65               	movwf	(?_getVSCPFrame+5)& (0+255),b
 20333  006924  0100               	movlb	0	; () banked
 20334  006926  0EF6               	movlw	low (_vscp_imsg+5)
 20335  006928  0100               	movlb	0	; () banked
 20336  00692A  6F64               	movwf	(?_getVSCPFrame+4)& (0+255),b
 20337  00692C  0100               	movlb	0	; () banked
 20338  00692E  0E00               	movlw	high (_vscp_imsg+1)
 20339  006930  0100               	movlb	0	; () banked
 20340  006932  0100               	movlb	0	; () banked
 20341  006934  6F67               	movwf	(?_getVSCPFrame+7)& (0+255),b
 20342  006936  0100               	movlb	0	; () banked
 20343  006938  0EF2               	movlw	low (_vscp_imsg+1)
 20344  00693A  0100               	movlb	0	; () banked
 20345  00693C  6F66               	movwf	(?_getVSCPFrame+6)& (0+255),b
 20346  00693E  0100               	movlb	0	; () banked
 20347  006940  0E00               	movlw	high _vscp_imsg
 20348  006942  0100               	movlb	0	; () banked
 20349  006944  0100               	movlb	0	; () banked
 20350  006946  6F69               	movwf	(?_getVSCPFrame+9)& (0+255),b
 20351  006948  0100               	movlb	0	; () banked
 20352  00694A  0EF1               	movlw	low _vscp_imsg
 20353  00694C  0100               	movlb	0	; () banked
 20354  00694E  6F68               	movwf	(?_getVSCPFrame+8)& (0+255),b
 20355  006950  0100               	movlb	0	; () banked
 20356  006952  0E00               	movlw	high (_vscp_imsg+6)
 20357  006954  0100               	movlb	0	; () banked
 20358  006956  0100               	movlb	0	; () banked
 20359  006958  6F6B               	movwf	(?_getVSCPFrame+11)& (0+255),b
 20360  00695A  0100               	movlb	0	; () banked
 20361  00695C  0EF7               	movlw	low (_vscp_imsg+6)
 20362  00695E  0100               	movlb	0	; () banked
 20363  006960  6F6A               	movwf	(?_getVSCPFrame+10)& (0+255),b
 20364  006962  EC8C  F033         	call	_getVSCPFrame	;wreg free
 20365  006966  0100               	movlb	0	; () banked
 20366  006968  0100               	movlb	0	; () banked
 20367  00696A  6F74               	movwf	vscp_getEvent@rv& (0+255),b
 20368  00696C  0100               	movlb	0	; () banked
 20369  00696E  5174               	movf	vscp_getEvent@rv& (0+255),w,b
 20370  006970  B4D8               	btfsc	status,2,c
 20371  006972  D003               	goto	l1396
 20372                           
 20373                           ; BSR set to: 0
 20374                           ;vscp_firmware.c: 1325: vscp_imsg.flags |= 0x80;
 20375  006974  0100               	movlb	0	; () banked
 20376  006976  0100               	movlb	0	; () banked
 20377  006978  8FF1               	bsf	_vscp_imsg& (0+255),7,b
 20378  00697A                     l1396:
 20379                           
 20380                           ; BSR set to: 0
 20381  00697A  0012               	return	
 20382  00697C                     __end_of_vscp_getEvent:
 20383                           	opt stack 0
 20384                           tblptru	equ	0xFF8
 20385                           tblptrh	equ	0xFF7
 20386                           tblptrl	equ	0xFF6
 20387                           tablat	equ	0xFF5
 20388                           prodh	equ	0xFF4
 20389                           prodl	equ	0xFF3
 20390                           intcon2	equ	0xFF1
 20391                           postinc0	equ	0xFEE
 20392                           wreg	equ	0xFE8
 20393                           indf1	equ	0xFE7
 20394                           fsr1h	equ	0xFE2
 20395                           fsr1l	equ	0xFE1
 20396                           indf2	equ	0xFDF
 20397                           postinc2	equ	0xFDE
 20398                           postdec2	equ	0xFDD
 20399                           plusw2	equ	0xFDB
 20400                           fsr2h	equ	0xFDA
 20401                           fsr2l	equ	0xFD9
 20402                           status	equ	0xFD8
 20403                           
 20404 ;; *************** function _getVSCPFrame *****************
 20405 ;; Defined at:
 20406 ;;		line 3133 in file "../main.c"
 20407 ;; Parameters:    Size  Location     Type
 20408 ;;  pvscpclass      2    0[BANK0 ] PTR unsigned short 
 20409 ;;		 -> vscp_imsg(14), 
 20410 ;;  pvscptype       2    2[BANK0 ] PTR unsigned char 
 20411 ;;		 -> vscp_imsg(14), 
 20412 ;;  pNodeId         2    4[BANK0 ] PTR unsigned char 
 20413 ;;		 -> vscp_imsg(14), 
 20414 ;;  pPriority       2    6[BANK0 ] PTR unsigned char 
 20415 ;;		 -> vscp_imsg(14), 
 20416 ;;  pSize           2    8[BANK0 ] PTR unsigned char 
 20417 ;;		 -> vscp_imsg(14), 
 20418 ;;  pData           2   10[BANK0 ] PTR unsigned char 
 20419 ;;		 -> vscp_imsg(14), 
 20420 ;; Auto vars:     Size  Location     Type
 20421 ;;  id              4   16[BANK0 ] unsigned long 
 20422 ;; Return value:  Size  Location     Type
 20423 ;;                  1    wreg      unsigned char 
 20424 ;; Registers used:
 20425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20426 ;; Tracked objects:
 20427 ;;		On entry : 0/0
 20428 ;;		On exit  : 0/0
 20429 ;;		Unchanged: 0/0
 20430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20431 ;;      Params:         0      12       0       0       0       0       0
 20432 ;;      Locals:         0       4       0       0       0       0       0
 20433 ;;      Temps:          0       4       0       0       0       0       0
 20434 ;;      Totals:         0      20       0       0       0       0       0
 20435 ;;Total ram usage:       20 bytes
 20436 ;; Hardware stack levels used:    1
 20437 ;; Hardware stack levels required when called:    5
 20438 ;; This function calls:
 20439 ;;		_getCANFrame
 20440 ;; This function is called by:
 20441 ;;		_vscp_getEvent
 20442 ;; This function uses a non-reentrant model
 20443 ;;
 20444                           
 20445                           	psect	text57
 20446  006718                     __ptext57:
 20447                           	opt stack 0
 20448  006718                     _getVSCPFrame:
 20449                           	opt stack 23
 20450                           
 20451                           ;main.c: 3134: uint32_t id;
 20452                           ;main.c: 3136: if ( !getCANFrame(&id, pSize, pData) ) {
 20453                           
 20454                           ; BSR set to: 0
 20455                           ;incstack = 0
 20456                           ;incstack = 0
 20457  006718  0100               	movlb	0	; () banked
 20458  00671A  0E00               	movlw	high getVSCPFrame@id
 20459  00671C  6E30               	movwf	?_getCANFrame+1,c
 20460  00671E  0100               	movlb	0	; () banked
 20461  006720  0E70               	movlw	low getVSCPFrame@id
 20462  006722  6E2F               	movwf	?_getCANFrame,c
 20463  006724  C068  F031         	movff	getVSCPFrame@pSize,?_getCANFrame+2
 20464  006728  C069  F032         	movff	getVSCPFrame@pSize+1,?_getCANFrame+3
 20465  00672C  C06A  F033         	movff	getVSCPFrame@pData,?_getCANFrame+4
 20466  006730  C06B  F034         	movff	getVSCPFrame@pData+1,?_getCANFrame+5
 20467  006734  EC01  F036         	call	_getCANFrame	;wreg free
 20468  006738  0900               	iorlw	0
 20469  00673A  A4D8               	btfss	status,2,c
 20470  00673C  D002               	goto	l11526
 20471                           
 20472                           ;main.c: 3137: return 0;
 20473  00673E  0E00               	movlw	0
 20474  006740  D03F               	goto	l1010
 20475  006742                     l11526:
 20476                           
 20477                           ;main.c: 3138: }
 20478                           ;main.c: 3140: *pNodeId = id & 0x0ff;
 20479  006742  C064  FFD9         	movff	getVSCPFrame@pNodeId,fsr2l
 20480  006746  C065  FFDA         	movff	getVSCPFrame@pNodeId+1,fsr2h
 20481  00674A  0100               	movlb	0	; () banked
 20482  00674C  C070  FFDF         	movff	getVSCPFrame@id,indf2
 20483                           
 20484                           ;main.c: 3141: *pvscptype = (id >> 8) & 0xff;
 20485  006750  C062  FFD9         	movff	getVSCPFrame@pvscptype,fsr2l
 20486  006754  C063  FFDA         	movff	getVSCPFrame@pvscptype+1,fsr2h
 20487  006758  0100               	movlb	0	; () banked
 20488  00675A  C071  FFDF         	movff	getVSCPFrame@id+1,indf2
 20489                           
 20490                           ; BSR set to: 0
 20491                           ;main.c: 3142: *pvscpclass = (id >> 16) & 0x1ff;
 20492  00675E  0EFF               	movlw	255
 20493  006760  0100               	movlb	0	; () banked
 20494  006762  1572               	andwf	(getVSCPFrame@id+2)& (0+255),w,b
 20495  006764  0100               	movlb	0	; () banked
 20496  006766  6F6C               	movwf	??_getVSCPFrame& (0+255),b
 20497  006768  0E01               	movlw	1
 20498  00676A  0100               	movlb	0	; () banked
 20499  00676C  1573               	andwf	(getVSCPFrame@id+3)& (0+255),w,b
 20500  00676E  0100               	movlb	0	; () banked
 20501  006770  6F6D               	movwf	(??_getVSCPFrame+1)& (0+255),b
 20502  006772  C060  FFD9         	movff	getVSCPFrame@pvscpclass,fsr2l
 20503  006776  C061  FFDA         	movff	getVSCPFrame@pvscpclass+1,fsr2h
 20504  00677A  C06C  FFDE         	movff	??_getVSCPFrame,postinc2
 20505  00677E  C06D  FFDD         	movff	??_getVSCPFrame+1,postdec2
 20506                           
 20507                           ; BSR set to: 0
 20508                           ;main.c: 3143: *pPriority = (uint16_t) (0x07 & (id >> 26));
 20509  006782  0100               	movlb	0	; () banked
 20510  006784  C070  F06C         	movff	getVSCPFrame@id,??_getVSCPFrame
 20511  006788  0100               	movlb	0	; () banked
 20512  00678A  C071  F06D         	movff	getVSCPFrame@id+1,??_getVSCPFrame+1
 20513  00678E  0100               	movlb	0	; () banked
 20514  006790  C072  F06E         	movff	getVSCPFrame@id+2,??_getVSCPFrame+2
 20515  006794  0100               	movlb	0	; () banked
 20516  006796  C073  F06F         	movff	getVSCPFrame@id+3,??_getVSCPFrame+3
 20517  00679A  0E1B               	movlw	27
 20518  00679C  D006               	goto	u13950
 20519  00679E                     u13955:
 20520  00679E  0100               	movlb	0	; () banked
 20521  0067A0  90D8               	bcf	status,0,c
 20522  0067A2  336F               	rrcf	(??_getVSCPFrame+3)& (0+255),f,b
 20523  0067A4  336E               	rrcf	(??_getVSCPFrame+2)& (0+255),f,b
 20524  0067A6  336D               	rrcf	(??_getVSCPFrame+1)& (0+255),f,b
 20525  0067A8  336C               	rrcf	??_getVSCPFrame& (0+255),f,b
 20526  0067AA                     u13950:
 20527  0067AA  2EE8               	decfsz	wreg,f,c
 20528  0067AC  D7F8               	goto	u13955
 20529  0067AE  0100               	movlb	0	; () banked
 20530  0067B0  516C               	movf	??_getVSCPFrame& (0+255),w,b
 20531  0067B2  0B07               	andlw	7
 20532  0067B4  C066  FFD9         	movff	getVSCPFrame@pPriority,fsr2l
 20533  0067B8  C067  FFDA         	movff	getVSCPFrame@pPriority+1,fsr2h
 20534  0067BC  6EDF               	movwf	indf2,c
 20535                           
 20536                           ; BSR set to: 0
 20537                           ;main.c: 3145: return 1;
 20538  0067BE  0E01               	movlw	1
 20539  0067C0                     l1010:
 20540  0067C0  0012               	return	
 20541  0067C2                     __end_of_getVSCPFrame:
 20542                           	opt stack 0
 20543                           tblptru	equ	0xFF8
 20544                           tblptrh	equ	0xFF7
 20545                           tblptrl	equ	0xFF6
 20546                           tablat	equ	0xFF5
 20547                           prodh	equ	0xFF4
 20548                           prodl	equ	0xFF3
 20549                           intcon2	equ	0xFF1
 20550                           postinc0	equ	0xFEE
 20551                           wreg	equ	0xFE8
 20552                           indf1	equ	0xFE7
 20553                           fsr1h	equ	0xFE2
 20554                           fsr1l	equ	0xFE1
 20555                           indf2	equ	0xFDF
 20556                           postinc2	equ	0xFDE
 20557                           postdec2	equ	0xFDD
 20558                           plusw2	equ	0xFDB
 20559                           fsr2h	equ	0xFDA
 20560                           fsr2l	equ	0xFD9
 20561                           status	equ	0xFD8
 20562                           
 20563 ;; *************** function _getCANFrame *****************
 20564 ;; Defined at:
 20565 ;;		line 3175 in file "../main.c"
 20566 ;; Parameters:    Size  Location     Type
 20567 ;;  pid             2   46[COMRAM] PTR unsigned long 
 20568 ;;		 -> getVSCPFrame@id(4), 
 20569 ;;  pdlc            2   48[COMRAM] PTR unsigned char 
 20570 ;;		 -> vscp_imsg(14), 
 20571 ;;  pdata           2   50[COMRAM] PTR unsigned char 
 20572 ;;		 -> vscp_imsg(14), 
 20573 ;; Auto vars:     Size  Location     Type
 20574 ;;  flags           1   52[COMRAM] enum E16341
 20575 ;; Return value:  Size  Location     Type
 20576 ;;                  1    wreg      unsigned char 
 20577 ;; Registers used:
 20578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20579 ;; Tracked objects:
 20580 ;;		On entry : 0/0
 20581 ;;		On exit  : 0/0
 20582 ;;		Unchanged: 0/0
 20583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20584 ;;      Params:         6       0       0       0       0       0       0
 20585 ;;      Locals:         1       0       0       0       0       0       0
 20586 ;;      Temps:          0       0       0       0       0       0       0
 20587 ;;      Totals:         7       0       0       0       0       0       0
 20588 ;;Total ram usage:        7 bytes
 20589 ;; Hardware stack levels used:    1
 20590 ;; Hardware stack levels required when called:    4
 20591 ;; This function calls:
 20592 ;;		_ECANReceiveMessage
 20593 ;; This function is called by:
 20594 ;;		_getVSCPFrame
 20595 ;; This function uses a non-reentrant model
 20596 ;;
 20597                           
 20598                           	psect	text58
 20599  006C02                     __ptext58:
 20600                           	opt stack 0
 20601  006C02                     _getCANFrame:
 20602                           	opt stack 23
 20603                           
 20604                           ;main.c: 3176: ECAN_RX_MSG_FLAGS flags;
 20605                           ;main.c: 3180: if (vscp_imsg.flags & 0x80) return 0;
 20606                           
 20607                           ;incstack = 0
 20608                           ;incstack = 0
 20609  006C02  0100               	movlb	0	; () banked
 20610  006C04  0100               	movlb	0	; () banked
 20611  006C06  BFF1               	btfsc	_vscp_imsg& (0+255),7,b
 20612  006C08  D01A               	goto	l11558
 20613                           
 20614                           ; BSR set to: 0
 20615                           ;main.c: 3182: if ( ECANReceiveMessage( pid, pdata, pdlc, &flags) ) {
 20616                           
 20617                           ; BSR set to: 0
 20618                           
 20619                           ; BSR set to: 0
 20620                           
 20621                           ; BSR set to: 0
 20622  006C0A  C02F  F01F         	movff	getCANFrame@pid,?_ECANReceiveMessage
 20623  006C0E  C030  F020         	movff	getCANFrame@pid+1,?_ECANReceiveMessage+1
 20624  006C12  C033  F021         	movff	getCANFrame@pdata,?_ECANReceiveMessage+2
 20625  006C16  C034  F022         	movff	getCANFrame@pdata+1,?_ECANReceiveMessage+3
 20626  006C1A  C031  F023         	movff	getCANFrame@pdlc,?_ECANReceiveMessage+4
 20627  006C1E  C032  F024         	movff	getCANFrame@pdlc+1,?_ECANReceiveMessage+5
 20628  006C22  0E00               	movlw	high getCANFrame@flags
 20629  006C24  6E26               	movwf	?_ECANReceiveMessage+7,c
 20630  006C26  0E35               	movlw	low getCANFrame@flags
 20631  006C28  6E25               	movwf	?_ECANReceiveMessage+6,c
 20632  006C2A  ECD5  F026         	call	_ECANReceiveMessage	;wreg free
 20633  006C2E  0900               	iorlw	0
 20634  006C30  A4D8               	btfss	status,2,c
 20635                           
 20636                           ;main.c: 3185: if (flags & ECAN_RX_RTR_FRAME) return 0;
 20637  006C32  BC35               	btfsc	getCANFrame@flags,6,c
 20638  006C34  D004               	goto	l11558
 20639                           
 20640                           ;main.c: 3188: if (!(flags & ECAN_RX_XTD_FRAME)) return 0;
 20641  006C36  AA35               	btfss	getCANFrame@flags,5,c
 20642  006C38  D002               	goto	l11558
 20643                           
 20644                           ;main.c: 3190: return 1;
 20645  006C3A  0E01               	movlw	1
 20646  006C3C  D001               	goto	l1021
 20647  006C3E                     l11558:
 20648                           
 20649                           ;main.c: 3192: }
 20650                           ;main.c: 3194: return 0;
 20651  006C3E  0E00               	movlw	0
 20652  006C40                     l1021:
 20653  006C40  0012               	return	
 20654  006C42                     __end_of_getCANFrame:
 20655                           	opt stack 0
 20656                           tblptru	equ	0xFF8
 20657                           tblptrh	equ	0xFF7
 20658                           tblptrl	equ	0xFF6
 20659                           tablat	equ	0xFF5
 20660                           prodh	equ	0xFF4
 20661                           prodl	equ	0xFF3
 20662                           intcon2	equ	0xFF1
 20663                           postinc0	equ	0xFEE
 20664                           wreg	equ	0xFE8
 20665                           indf1	equ	0xFE7
 20666                           fsr1h	equ	0xFE2
 20667                           fsr1l	equ	0xFE1
 20668                           indf2	equ	0xFDF
 20669                           postinc2	equ	0xFDE
 20670                           postdec2	equ	0xFDD
 20671                           plusw2	equ	0xFDB
 20672                           fsr2h	equ	0xFDA
 20673                           fsr2l	equ	0xFD9
 20674                           status	equ	0xFD8
 20675                           
 20676 ;; *************** function _ECANReceiveMessage *****************
 20677 ;; Defined at:
 20678 ;;		line 803 in file "../ECAN.c"
 20679 ;; Parameters:    Size  Location     Type
 20680 ;;  id              2   30[COMRAM] PTR unsigned long 
 20681 ;;		 -> getVSCPFrame@id(4), 
 20682 ;;  data            2   32[COMRAM] PTR unsigned char 
 20683 ;;		 -> vscp_imsg(14), 
 20684 ;;  dataLen         2   34[COMRAM] PTR unsigned char 
 20685 ;;		 -> vscp_imsg(14), 
 20686 ;;  msgFlags        2   36[COMRAM] PTR enum E16333
 20687 ;;		 -> getCANFrame@flags(1), 
 20688 ;; Auto vars:     Size  Location     Type
 20689 ;;  ptr             2   44[COMRAM] PTR unsigned char 
 20690 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 20691 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 20692 ;;  savedPtr        2   39[COMRAM] PTR unsigned char 
 20693 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 20694 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 20695 ;;  temp            1   43[COMRAM] struct .
 20696 ;;  mode            1   42[COMRAM] unsigned char 
 20697 ;;  i               1   41[COMRAM] unsigned char 
 20698 ;; Return value:  Size  Location     Type
 20699 ;;                  1    wreg      enum E15660
 20700 ;; Registers used:
 20701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20702 ;; Tracked objects:
 20703 ;;		On entry : 0/0
 20704 ;;		On exit  : 0/0
 20705 ;;		Unchanged: 0/0
 20706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20707 ;;      Params:         8       0       0       0       0       0       0
 20708 ;;      Locals:         7       0       0       0       0       0       0
 20709 ;;      Temps:          1       0       0       0       0       0       0
 20710 ;;      Totals:        16       0       0       0       0       0       0
 20711 ;;Total ram usage:       16 bytes
 20712 ;; Hardware stack levels used:    1
 20713 ;; Hardware stack levels required when called:    3
 20714 ;; This function calls:
 20715 ;;		__ECANPointBuffer
 20716 ;;		__RegsToCANID
 20717 ;; This function is called by:
 20718 ;;		_getCANFrame
 20719 ;; This function uses a non-reentrant model
 20720 ;;
 20721                           
 20722                           	psect	text59
 20723  004DAA                     __ptext59:
 20724                           	opt stack 0
 20725  004DAA                     _ECANReceiveMessage:
 20726                           	opt stack 23
 20727                           
 20728                           ;ECAN.c: 805: BYTE mode;
 20729                           ;ECAN.c: 808: BYTE *ptr, *savedPtr;
 20730                           ;ECAN.c: 809: char i;
 20731                           ;ECAN.c: 810: BYTE_VAL temp;
 20732                           ;ECAN.c: 812: _ECANRxFilterHitInfo.Val = 0;
 20733                           
 20734                           ;incstack = 0
 20735                           ;incstack = 0
 20736  004DAA  6E27               	movwf	??_ECANReceiveMessage& (0+255),c
 20737  004DAC  0E00               	movlw	0
 20738  004DAE  0100               	movlb	0	; () banked
 20739  004DB0  0100               	movlb	0	; () banked
 20740  004DB2  6FDB               	movwf	__ECANRxFilterHitInfo& (0+255),b
 20741  004DB4  5027               	movf	??_ECANReceiveMessage& (0+255),w,c
 20742                           
 20743                           ; BSR set to: 0
 20744                           ;ECAN.c: 815: mode = ECANCON&0xC0;
 20745  004DB6  5077               	movf	3959,w,c	;volatile
 20746  004DB8  0BC0               	andlw	192
 20747  004DBA  6E2B               	movwf	ECANReceiveMessage@mode,c
 20748                           
 20749                           ; BSR set to: 0
 20750                           ;ECAN.c: 816: if ( mode == 0x00 )
 20751  004DBC  662B               	tstfsz	ECANReceiveMessage@mode,c
 20752  004DBE  D040               	goto	l8922
 20753                           
 20754                           ; BSR set to: 0
 20755                           ;ECAN.c: 822: {
 20756                           ;ECAN.c: 824: if ( RXB0FUL )
 20757  004DC0  AE60               	btfss	3936,7,c	;volatile
 20758  004DC2  D017               	goto	l181
 20759                           
 20760                           ; BSR set to: 0
 20761                           ;ECAN.c: 825: {
 20762                           ;ECAN.c: 827: RXB0IF = 0;
 20763  004DC4  90A4               	bcf	4004,0,c	;volatile
 20764                           
 20765                           ;ECAN.c: 830: if ( RXB0OVFL )
 20766  004DC6  AE74               	btfss	3956,7,c	;volatile
 20767  004DC8  D007               	goto	l8898
 20768                           
 20769                           ; BSR set to: 0
 20770                           ;ECAN.c: 831: {
 20771                           ;ECAN.c: 832: *msgFlags |= ECAN_RX_OVERFLOW;
 20772  004DCA  C025  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 20773  004DCE  C026  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 20774  004DD2  0E00               	movlw	0
 20775  004DD4  86DB               	bsf	plusw2,3,c
 20776                           
 20777                           ; BSR set to: 0
 20778                           ;ECAN.c: 833: RXB0OVFL = 0;
 20779  004DD6  9E74               	bcf	3956,7,c	;volatile
 20780  004DD8                     l8898:
 20781                           
 20782                           ; BSR set to: 0
 20783                           ;ECAN.c: 834: }
 20784                           ;ECAN.c: 836: _ECANRxFilterHitInfo.bits.b0 = RXB0FILHIT0;
 20785  004DD8  A060               	btfss	3936,0,c	;volatile
 20786  004DDA  D004               	bra	u10005
 20787  004DDC  0100               	movlb	0	; () banked
 20788  004DDE  0100               	movlb	0	; () banked
 20789  004DE0  81DB               	bsf	__ECANRxFilterHitInfo& (0+255),0,b
 20790  004DE2  D003               	bra	u10007
 20791  004DE4                     u10005:
 20792  004DE4  0100               	movlb	0	; () banked
 20793  004DE6  0100               	movlb	0	; () banked
 20794  004DE8  91DB               	bcf	__ECANRxFilterHitInfo& (0+255),0,b
 20795  004DEA                     u10007:
 20796                           
 20797                           ; BSR set to: 0
 20798                           ;ECAN.c: 838: ptr = (BYTE*)&RXB0CON;
 20799  004DEA  0E0F               	movlw	15	;volatile
 20800  004DEC  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 20801  004DEE  0E60               	movlw	96	;volatile
 20802  004DF0  D025               	goto	L136
 20803  004DF2                     l181:
 20804                           
 20805                           ; BSR set to: 0
 20806                           ;ECAN.c: 841: else if ( RXB1CONbits.RXFUL )
 20807  004DF2  010F               	movlb	15	; () banked
 20808  004DF4  010F               	movlb	15	; () banked
 20809  004DF6  AF50               	btfss	80,7,b	;volatile
 20810  004DF8  D08A               	goto	l8962
 20811                           
 20812                           ; BSR set to: 15
 20813                           ;ECAN.c: 842: {
 20814                           ;ECAN.c: 844: RXB1IF = 0;
 20815  004DFA  92A4               	bcf	4004,1,c	;volatile
 20816                           
 20817                           ;ECAN.c: 847: if ( RXB1OVFL )
 20818  004DFC  AC74               	btfss	3956,6,c	;volatile
 20819  004DFE  D007               	goto	l8908
 20820                           
 20821                           ; BSR set to: 15
 20822                           ;ECAN.c: 848: {
 20823                           ;ECAN.c: 849: *msgFlags |= ECAN_RX_OVERFLOW;
 20824  004E00  C025  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 20825  004E04  C026  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 20826  004E08  0E00               	movlw	0
 20827  004E0A  86DB               	bsf	plusw2,3,c
 20828                           
 20829                           ; BSR set to: 15
 20830                           ;ECAN.c: 850: RXB1OVFL = 0;
 20831  004E0C  9C74               	bcf	3956,6,c	;volatile
 20832  004E0E                     l8908:
 20833                           
 20834                           ; BSR set to: 15
 20835                           ;ECAN.c: 851: }
 20836                           ;ECAN.c: 853: _ECANRxFilterHitInfo.Val = RXB1CON & 0x07;
 20837  004E0E  010F               	movlb	15	; () banked
 20838  004E10  010F               	movlb	15	; () banked
 20839  004E12  5150               	movf	80,w,b	;volatile
 20840  004E14  0B07               	andlw	7
 20841  004E16  0100               	movlb	0	; () banked
 20842  004E18  0100               	movlb	0	; () banked
 20843  004E1A  6FDB               	movwf	__ECANRxFilterHitInfo& (0+255),b
 20844                           
 20845                           ; BSR set to: 0
 20846                           ;ECAN.c: 855: if ( _ECANRxFilterHitInfo.Val < 0x02 )
 20847  004E1C  0E02               	movlw	2
 20848  004E1E  0100               	movlb	0	; () banked
 20849  004E20  0100               	movlb	0	; () banked
 20850  004E22  61DB               	cpfslt	__ECANRxFilterHitInfo& (0+255),b
 20851  004E24  D006               	goto	l8914
 20852                           
 20853                           ; BSR set to: 0
 20854                           ;ECAN.c: 856: *msgFlags |= ECAN_RX_DBL_BUFFERED;
 20855  004E26  C025  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 20856  004E2A  C026  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 20857  004E2E  0E00               	movlw	0
 20858  004E30  8EDB               	bsf	plusw2,7,c
 20859  004E32                     l8914:
 20860                           
 20861                           ; BSR set to: 0
 20862                           ;ECAN.c: 859: ptr = (BYTE*)&RXB1CON;
 20863  004E32  010F               	movlb	15	; () banked
 20864  004E34  0E0F               	movlw	15	;volatile
 20865  004E36  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 20866  004E38  010F               	movlb	15	; () banked
 20867  004E3A  0E50               	movlw	80	;volatile
 20868  004E3C                     L136:
 20869  004E3C  6E2D               	movwf	ECANReceiveMessage@ptr,c
 20870                           
 20871                           ;ECAN.c: 860: }
 20872  004E3E  D07C               	goto	l8976
 20873  004E40                     l8922:
 20874                           
 20875                           ;ECAN.c: 869: else if ( mode == 0x40 )
 20876  004E40  502B               	movf	ECANReceiveMessage@mode,w,c
 20877  004E42  0A40               	xorlw	64
 20878  004E44  A4D8               	btfss	status,2,c
 20879  004E46  D057               	goto	l191
 20880                           
 20881                           ;ECAN.c: 875: {
 20882                           ;ECAN.c: 876: if ( RXB0FUL )
 20883  004E48  AE60               	btfss	3936,7,c	;volatile
 20884  004E4A  D004               	goto	l192
 20885                           
 20886                           ;ECAN.c: 877: ptr = (BYTE*)&RXB0CON;
 20887  004E4C  0E0F               	movlw	15	;volatile
 20888  004E4E  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 20889  004E50  0E60               	movlw	96	;volatile
 20890  004E52  D04F               	goto	L143
 20891  004E54                     l192:
 20892                           
 20893                           ;ECAN.c: 879: else if (RXB1CONbits.RXFUL)
 20894  004E54  010F               	movlb	15	; () banked
 20895  004E56  010F               	movlb	15	; () banked
 20896  004E58  AF50               	btfss	80,7,b	;volatile
 20897  004E5A  D006               	goto	l194
 20898                           
 20899                           ; BSR set to: 15
 20900                           ;ECAN.c: 880: ptr = (BYTE*)&RXB1CON;
 20901  004E5C  010F               	movlb	15	; () banked
 20902  004E5E  0E0F               	movlw	15	;volatile
 20903  004E60  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 20904  004E62  010F               	movlb	15	; () banked
 20905  004E64  0E50               	movlw	80	;volatile
 20906  004E66  D045               	goto	L143
 20907  004E68                     l194:
 20908                           
 20909                           ; BSR set to: 15
 20910                           ;ECAN.c: 882: else if ( (B0TXEN==0) && B0RXFUL )
 20911  004E68  010D               	movlb	13
 20912  004E6A  B5F8               	btfsc	248,2,b	;volatile
 20913  004E6C  D009               	goto	l196
 20914  004E6E  010E               	movlb	14
 20915  004E70  AF20               	btfss	32,7,b	;volatile
 20916  004E72  D006               	goto	l196
 20917                           
 20918                           ;ECAN.c: 883: ptr = (BYTE*)&B0CON;
 20919  004E74  010E               	movlb	14	; () banked
 20920  004E76  0E0E               	movlw	14	;volatile
 20921  004E78  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 20922  004E7A  010E               	movlb	14	; () banked
 20923  004E7C  0E20               	movlw	32	;volatile
 20924  004E7E  D039               	goto	L143
 20925  004E80                     l196:
 20926                           
 20927                           ;ECAN.c: 885: else if ( (B1TXEN==0) && B1RXFUL )
 20928  004E80  010D               	movlb	13
 20929  004E82  B7F8               	btfsc	248,3,b	;volatile
 20930  004E84  D009               	goto	l198
 20931  004E86  010E               	movlb	14
 20932  004E88  AF30               	btfss	48,7,b	;volatile
 20933  004E8A  D006               	goto	l198
 20934                           
 20935                           ;ECAN.c: 886: ptr = (BYTE*)&B1CON;
 20936  004E8C  010E               	movlb	14	; () banked
 20937  004E8E  0E0E               	movlw	14	;volatile
 20938  004E90  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 20939  004E92  010E               	movlb	14	; () banked
 20940  004E94  0E30               	movlw	48	;volatile
 20941  004E96  D02D               	goto	L143
 20942  004E98                     l198:
 20943                           
 20944                           ;ECAN.c: 888: else if ( (B2TXEN==0) && B2RXFUL )
 20945  004E98  010D               	movlb	13
 20946  004E9A  B9F8               	btfsc	248,4,b	;volatile
 20947  004E9C  D009               	goto	l200
 20948  004E9E  010E               	movlb	14
 20949  004EA0  AF40               	btfss	64,7,b	;volatile
 20950  004EA2  D006               	goto	l200
 20951                           
 20952                           ;ECAN.c: 889: ptr = (BYTE*)&B2CON;
 20953  004EA4  010E               	movlb	14	; () banked
 20954  004EA6  0E0E               	movlw	14	;volatile
 20955  004EA8  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 20956  004EAA  010E               	movlb	14	; () banked
 20957  004EAC  0E40               	movlw	64	;volatile
 20958  004EAE  D021               	goto	L143
 20959  004EB0                     l200:
 20960                           
 20961                           ;ECAN.c: 891: else if ( (B3TXEN==0) && B3RXFUL )
 20962  004EB0  010D               	movlb	13
 20963  004EB2  BBF8               	btfsc	248,5,b	;volatile
 20964  004EB4  D008               	goto	l202
 20965  004EB6  010E               	movlb	14
 20966  004EB8  AF50               	btfss	80,7,b	;volatile
 20967  004EBA  D005               	goto	l202
 20968                           
 20969                           ;ECAN.c: 892: ptr = (BYTE*)&B3CON;
 20970  004EBC  010E               	movlb	14	; () banked
 20971  004EBE  0E0E               	movlw	14	;volatile
 20972  004EC0  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 20973  004EC2  010E               	movlb	14	; () banked
 20974  004EC4  D7CF               	goto	L145
 20975  004EC6                     l202:
 20976                           
 20977                           ;ECAN.c: 894: else if ( (B4TXEN==0) && B4RXFUL )
 20978  004EC6  010D               	movlb	13
 20979  004EC8  BDF8               	btfsc	248,6,b	;volatile
 20980  004ECA  D008               	goto	l204
 20981  004ECC  010E               	movlb	14
 20982  004ECE  AF60               	btfss	96,7,b	;volatile
 20983  004ED0  D005               	goto	l204
 20984                           
 20985                           ;ECAN.c: 895: ptr = (BYTE*)&B4CON;
 20986  004ED2  010E               	movlb	14	; () banked
 20987  004ED4  0E0E               	movlw	14	;volatile
 20988  004ED6  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 20989  004ED8  010E               	movlb	14	; () banked
 20990  004EDA  D7BA               	goto	L146
 20991  004EDC                     l204:
 20992                           
 20993                           ;ECAN.c: 897: else if ( (B5TXEN==0) && B5RXFUL )
 20994  004EDC  010D               	movlb	13
 20995  004EDE  BFF8               	btfsc	248,7,b	;volatile
 20996  004EE0  D016               	goto	l8962
 20997  004EE2  010E               	movlb	14
 20998  004EE4  AF70               	btfss	112,7,b	;volatile
 20999  004EE6  D013               	goto	l8962
 21000                           
 21001                           ;ECAN.c: 898: ptr = (BYTE*)&B5CON;
 21002  004EE8  010E               	movlb	14	; () banked
 21003  004EEA  0E0E               	movlw	14	;volatile
 21004  004EEC  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 21005  004EEE  010E               	movlb	14	; () banked
 21006  004EF0  0E70               	movlw	112	;volatile
 21007  004EF2                     L143:
 21008  004EF2  6E2D               	movwf	ECANReceiveMessage@ptr,c
 21009  004EF4  D00E               	goto	l8966
 21010  004EF6                     l191:
 21011                           
 21012                           ;ECAN.c: 910: else
 21013                           ;ECAN.c: 915: {
 21014                           ;ECAN.c: 916: if ( FIFOEMPTY == 1 )
 21015  004EF6  AE74               	btfss	3956,7,c	;volatile
 21016  004EF8  D00A               	goto	l8962
 21017                           
 21018                           ;ECAN.c: 917: {
 21019                           ;ECAN.c: 918: ptr = (BYTE*)_ECANPointBuffer(CANCON&0x07);
 21020  004EFA  506F               	movf	3951,w,c	;volatile
 21021  004EFC  0B07               	andlw	7
 21022  004EFE  6E16               	movwf	?__ECANPointBuffer,c
 21023  004F00  EC2D  F034         	call	__ECANPointBuffer	;wreg free
 21024  004F04  C016  F02D         	movff	?__ECANPointBuffer,ECANReceiveMessage@ptr
 21025  004F08  C017  F02E         	movff	?__ECANPointBuffer+1,ECANReceiveMessage@ptr+1
 21026                           
 21027                           ;ECAN.c: 920: goto _SaveMode12Message;
 21028  004F0C  D002               	goto	l8966
 21029  004F0E                     l8962:
 21030                           
 21031                           ;ECAN.c: 921: }
 21032                           ;ECAN.c: 923: return FALSE;
 21033  004F0E  0E00               	movlw	0
 21034  004F10  D08F               	goto	l188
 21035  004F12                     l8966:
 21036                           
 21037                           ;ECAN.c: 930: _ECANRxFilterHitInfo.Val = *ptr & 0x1f;
 21038  004F12  C02D  FFD9         	movff	ECANReceiveMessage@ptr,fsr2l
 21039  004F16  C02E  FFDA         	movff	ECANReceiveMessage@ptr+1,fsr2h
 21040  004F1A  50DF               	movf	indf2,w,c
 21041  004F1C  0B1F               	andlw	31
 21042  004F1E  0100               	movlb	0	; () banked
 21043  004F20  0100               	movlb	0	; () banked
 21044  004F22  6FDB               	movwf	__ECANRxFilterHitInfo& (0+255),b
 21045                           
 21046                           ; BSR set to: 0
 21047                           ;ECAN.c: 932: RXB1IF = 0;
 21048  004F24  92A4               	bcf	4004,1,c	;volatile
 21049                           
 21050                           ; BSR set to: 0
 21051                           ;ECAN.c: 934: if ( RXB1OVFL )
 21052  004F26  AC74               	btfss	3956,6,c	;volatile
 21053  004F28  D007               	goto	l8976
 21054                           
 21055                           ; BSR set to: 0
 21056                           ;ECAN.c: 935: {
 21057                           ;ECAN.c: 936: *msgFlags |= ECAN_RX_OVERFLOW;
 21058  004F2A  C025  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 21059  004F2E  C026  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 21060  004F32  0E00               	movlw	0
 21061  004F34  86DB               	bsf	plusw2,3,c
 21062                           
 21063                           ; BSR set to: 0
 21064                           ;ECAN.c: 937: RXB1OVFL = 0;
 21065  004F36  9C74               	bcf	3956,6,c	;volatile
 21066  004F38                     l8976:
 21067                           
 21068                           ;ECAN.c: 942: savedPtr = ptr;
 21069  004F38  C02D  F028         	movff	ECANReceiveMessage@ptr,ECANReceiveMessage@savedPtr
 21070  004F3C  C02E  F029         	movff	ECANReceiveMessage@ptr+1,ECANReceiveMessage@savedPtr+1
 21071                           
 21072                           ;ECAN.c: 943: *msgFlags = 0;
 21073  004F40  C025  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 21074  004F44  C026  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 21075  004F48  0E00               	movlw	0
 21076  004F4A  6EDF               	movwf	indf2,c
 21077                           
 21078                           ;ECAN.c: 946: temp.Val = *(ptr+5);
 21079  004F4C  EE20 F005          	lfsr	2,5
 21080  004F50  502D               	movf	ECANReceiveMessage@ptr,w,c
 21081  004F52  26D9               	addwf	fsr2l,f,c
 21082  004F54  502E               	movf	ECANReceiveMessage@ptr+1,w,c
 21083  004F56  22DA               	addwfc	fsr2h,f,c
 21084  004F58  50DF               	movf	indf2,w,c
 21085  004F5A  6E2C               	movwf	ECANReceiveMessage@temp,c
 21086                           
 21087                           ;ECAN.c: 947: *dataLen = temp.Val & 0b00001111;
 21088  004F5C  502C               	movf	ECANReceiveMessage@temp,w,c
 21089  004F5E  0B0F               	andlw	15
 21090  004F60  C023  FFD9         	movff	ECANReceiveMessage@dataLen,fsr2l
 21091  004F64  C024  FFDA         	movff	ECANReceiveMessage@dataLen+1,fsr2h
 21092  004F68  6EDF               	movwf	indf2,c
 21093                           
 21094                           ;ECAN.c: 950: if ( temp.bits.b6 )
 21095  004F6A  AC2C               	btfss	ECANReceiveMessage@temp,6,c
 21096  004F6C  D006               	goto	l212
 21097                           
 21098                           ;ECAN.c: 951: *msgFlags |= ECAN_RX_RTR_FRAME;
 21099  004F6E  C025  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 21100  004F72  C026  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 21101  004F76  0E00               	movlw	0
 21102  004F78  8CDB               	bsf	plusw2,6,c
 21103  004F7A                     l212:
 21104                           
 21105                           ;ECAN.c: 954: temp.Val = *(ptr+2);
 21106  004F7A  EE20 F002          	lfsr	2,2
 21107  004F7E  502D               	movf	ECANReceiveMessage@ptr,w,c
 21108  004F80  26D9               	addwf	fsr2l,f,c
 21109  004F82  502E               	movf	ECANReceiveMessage@ptr+1,w,c
 21110  004F84  22DA               	addwfc	fsr2h,f,c
 21111  004F86  50DF               	movf	indf2,w,c
 21112  004F88  6E2C               	movwf	ECANReceiveMessage@temp,c
 21113                           
 21114                           ;ECAN.c: 955: if ( temp.bits.b3 )
 21115  004F8A  A62C               	btfss	ECANReceiveMessage@temp,3,c
 21116  004F8C  D009               	goto	l8994
 21117                           
 21118                           ;ECAN.c: 956: {
 21119                           ;ECAN.c: 957: *msgFlags |= ECAN_RX_XTD_FRAME;
 21120  004F8E  C025  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 21121  004F92  C026  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 21122  004F96  0E00               	movlw	0
 21123  004F98  8ADB               	bsf	plusw2,5,c
 21124                           
 21125                           ;ECAN.c: 958: temp.Val = 1;
 21126  004F9A  6E27               	movwf	??_ECANReceiveMessage& (0+255),c
 21127  004F9C  0E01               	movlw	1
 21128  004F9E  D002               	goto	L144
 21129  004FA0                     l8994:
 21130                           
 21131                           ;ECAN.c: 960: else
 21132                           ;ECAN.c: 961: temp.Val = 0;
 21133  004FA0  6E27               	movwf	??_ECANReceiveMessage& (0+255),c
 21134  004FA2  0E00               	movlw	0
 21135  004FA4                     L144:
 21136  004FA4  6E2C               	movwf	ECANReceiveMessage@temp,c
 21137  004FA6  5027               	movf	??_ECANReceiveMessage& (0+255),w,c
 21138                           
 21139                           ;ECAN.c: 963: _RegsToCANID(ptr+1, id, temp.Val);
 21140  004FA8  0E01               	movlw	1
 21141  004FAA  242D               	addwf	ECANReceiveMessage@ptr,w,c
 21142  004FAC  6E16               	movwf	?__RegsToCANID,c
 21143  004FAE  0E00               	movlw	0
 21144  004FB0  202E               	addwfc	ECANReceiveMessage@ptr+1,w,c
 21145  004FB2  6E17               	movwf	?__RegsToCANID+1,c
 21146  004FB4  C01F  F018         	movff	ECANReceiveMessage@id,?__RegsToCANID+2
 21147  004FB8  C020  F019         	movff	ECANReceiveMessage@id+1,?__RegsToCANID+3
 21148  004FBC  C02C  F01A         	movff	ECANReceiveMessage@temp,?__RegsToCANID+4
 21149  004FC0  EC73  F02E         	call	__RegsToCANID	;wreg free
 21150                           
 21151                           ;ECAN.c: 966: ptr += 6;
 21152  004FC4  0E06               	movlw	6
 21153  004FC6  262D               	addwf	ECANReceiveMessage@ptr,f,c
 21154  004FC8  0E00               	movlw	0
 21155  004FCA  222E               	addwfc	ECANReceiveMessage@ptr+1,f,c
 21156                           
 21157                           ;ECAN.c: 967: temp.Val = *dataLen;
 21158  004FCC  C023  FFD9         	movff	ECANReceiveMessage@dataLen,fsr2l
 21159  004FD0  C024  FFDA         	movff	ECANReceiveMessage@dataLen+1,fsr2h
 21160  004FD4  50DF               	movf	indf2,w,c
 21161  004FD6  6E2C               	movwf	ECANReceiveMessage@temp,c
 21162                           
 21163                           ;ECAN.c: 968: for ( i = 0; i < temp.Val; i++ )
 21164  004FD8  6E27               	movwf	??_ECANReceiveMessage& (0+255),c
 21165  004FDA  0E00               	movlw	0
 21166  004FDC  6E2A               	movwf	ECANReceiveMessage@i,c
 21167  004FDE  5027               	movf	??_ECANReceiveMessage& (0+255),w,c
 21168  004FE0  D00F               	goto	l9012
 21169  004FE2                     l9004:
 21170                           
 21171                           ;ECAN.c: 969: *data++ = *ptr++;
 21172  004FE2  C02D  FFD9         	movff	ECANReceiveMessage@ptr,fsr2l
 21173  004FE6  C02E  FFDA         	movff	ECANReceiveMessage@ptr+1,fsr2h
 21174  004FEA  C021  FFE1         	movff	ECANReceiveMessage@data,fsr1l
 21175  004FEE  C022  FFE2         	movff	ECANReceiveMessage@data+1,fsr1h
 21176  004FF2  CFDF FFE7          	movff	indf2,indf1
 21177  004FF6  4A2D               	infsnz	ECANReceiveMessage@ptr,f,c
 21178  004FF8  2A2E               	incf	ECANReceiveMessage@ptr+1,f,c
 21179  004FFA  4A21               	infsnz	ECANReceiveMessage@data,f,c
 21180  004FFC  2A22               	incf	ECANReceiveMessage@data+1,f,c
 21181  004FFE  2A2A               	incf	ECANReceiveMessage@i,f,c
 21182  005000                     l9012:
 21183  005000  502C               	movf	ECANReceiveMessage@temp,w,c
 21184  005002  5C2A               	subwf	ECANReceiveMessage@i,w,c
 21185  005004  A0D8               	btfss	status,0,c
 21186  005006  D7ED               	goto	l9004
 21187                           
 21188                           ;ECAN.c: 972: if ( IRXIF )
 21189  005008  AEA4               	btfss	4004,7,c	;volatile
 21190  00500A  D007               	goto	l9018
 21191                           
 21192                           ;ECAN.c: 973: {
 21193                           ;ECAN.c: 974: *msgFlags |= ECAN_RX_INVALID_MSG;
 21194  00500C  C025  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 21195  005010  C026  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 21196  005014  0E00               	movlw	0
 21197  005016  88DB               	bsf	plusw2,4,c
 21198                           
 21199                           ;ECAN.c: 975: IRXIF = 0;
 21200  005018  9EA4               	bcf	4004,7,c	;volatile
 21201  00501A                     l9018:
 21202                           
 21203                           ;ECAN.c: 976: }
 21204                           ;ECAN.c: 979: *savedPtr &= 0x7f;
 21205  00501A  C028  FFD9         	movff	ECANReceiveMessage@savedPtr,fsr2l
 21206  00501E  C029  FFDA         	movff	ECANReceiveMessage@savedPtr+1,fsr2h
 21207  005022  0E7F               	movlw	127
 21208  005024  16DF               	andwf	indf2,f,c
 21209                           
 21210                           ;ECAN.c: 983: if ( mode == 0x80 )
 21211  005026  502B               	movf	ECANReceiveMessage@mode,w,c
 21212  005028  0A80               	xorlw	128
 21213  00502A  B4D8               	btfsc	status,2,c
 21214                           
 21215                           ;ECAN.c: 984: FIFOEMPTY = 0;
 21216  00502C  9E74               	bcf	3956,7,c	;volatile
 21217                           
 21218                           ;ECAN.c: 990: return TRUE;
 21219  00502E  0E01               	movlw	1
 21220  005030                     l188:
 21221  005030  0012               	return	
 21222  005032                     __end_of_ECANReceiveMessage:
 21223                           	opt stack 0
 21224                           tblptru	equ	0xFF8
 21225                           tblptrh	equ	0xFF7
 21226                           tblptrl	equ	0xFF6
 21227                           tablat	equ	0xFF5
 21228                           prodh	equ	0xFF4
 21229                           prodl	equ	0xFF3
 21230                           intcon2	equ	0xFF1
 21231                           postinc0	equ	0xFEE
 21232                           wreg	equ	0xFE8
 21233                           indf1	equ	0xFE7
 21234                           fsr1h	equ	0xFE2
 21235                           fsr1l	equ	0xFE1
 21236                           indf2	equ	0xFDF
 21237                           postinc2	equ	0xFDE
 21238                           postdec2	equ	0xFDD
 21239                           plusw2	equ	0xFDB
 21240                           fsr2h	equ	0xFDA
 21241                           fsr2l	equ	0xFD9
 21242                           status	equ	0xFD8
 21243                           
 21244 ;; *************** function __RegsToCANID *****************
 21245 ;; Defined at:
 21246 ;;		line 1156 in file "../ECAN.c"
 21247 ;; Parameters:    Size  Location     Type
 21248 ;;  ptr             2   21[COMRAM] PTR unsigned char 
 21249 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 21250 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 21251 ;;  val             2   23[COMRAM] PTR unsigned long 
 21252 ;;		 -> getVSCPFrame@id(4), 
 21253 ;;  type            1   25[COMRAM] unsigned char 
 21254 ;; Auto vars:     Size  Location     Type
 21255 ;;  Value           2   28[COMRAM] PTR struct _CAN_MESSAGE_
 21256 ;;		 -> getVSCPFrame@id(4), 
 21257 ;; Return value:  Size  Location     Type
 21258 ;;		None               void
 21259 ;; Registers used:
 21260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 21261 ;; Tracked objects:
 21262 ;;		On entry : 0/0
 21263 ;;		On exit  : 0/0
 21264 ;;		Unchanged: 0/0
 21265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21266 ;;      Params:         5       0       0       0       0       0       0
 21267 ;;      Locals:         2       0       0       0       0       0       0
 21268 ;;      Temps:          2       0       0       0       0       0       0
 21269 ;;      Totals:         9       0       0       0       0       0       0
 21270 ;;Total ram usage:        9 bytes
 21271 ;; Hardware stack levels used:    1
 21272 ;; Hardware stack levels required when called:    2
 21273 ;; This function calls:
 21274 ;;		Nothing
 21275 ;; This function is called by:
 21276 ;;		_ECANReceiveMessage
 21277 ;; This function uses a non-reentrant model
 21278 ;;
 21279                           
 21280                           	psect	text60
 21281  005CE6                     __ptext60:
 21282                           	opt stack 0
 21283  005CE6                     __RegsToCANID:
 21284                           	opt stack 23
 21285                           
 21286                           ;ECAN.c: 1157: CAN_MESSAGE_ID *Value;
 21287                           ;ECAN.c: 1159: Value = (CAN_MESSAGE_ID*)val;
 21288                           
 21289                           ;incstack = 0
 21290                           ;incstack = 0
 21291  005CE6  C018  F01D         	movff	__RegsToCANID@val,__RegsToCANID@Value
 21292  005CEA  C019  F01E         	movff	__RegsToCANID@val+1,__RegsToCANID@Value+1
 21293                           
 21294                           ;ECAN.c: 1161: if ( type == 0 )
 21295  005CEE  661A               	tstfsz	__RegsToCANID@type,c
 21296  005CF0  D04A               	goto	l9064
 21297                           
 21298                           ;ECAN.c: 1162: {
 21299                           ;ECAN.c: 1164: Value->BYTES.BYTE_1 = (*ptr << 3);
 21300  005CF2  C016  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 21301  005CF6  C017  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 21302  005CFA  50DF               	movf	indf2,w,c
 21303  005CFC  6E1B               	movwf	??__RegsToCANID& (0+255),c
 21304  005CFE  90D8               	bcf	status,0,c
 21305  005D00  361B               	rlcf	??__RegsToCANID,f,c
 21306  005D02  90D8               	bcf	status,0,c
 21307  005D04  361B               	rlcf	??__RegsToCANID,f,c
 21308  005D06  90D8               	bcf	status,0,c
 21309  005D08  341B               	rlcf	??__RegsToCANID,w,c
 21310  005D0A  C01D  FFD9         	movff	__RegsToCANID@Value,fsr2l
 21311  005D0E  C01E  FFDA         	movff	__RegsToCANID@Value+1,fsr2h
 21312  005D12  6EDF               	movwf	indf2,c
 21313                           
 21314                           ;ECAN.c: 1165: Value->BYTES.BYTE_2 = *ptr >> 5;
 21315  005D14  EE20 F001          	lfsr	2,1
 21316  005D18  501D               	movf	__RegsToCANID@Value,w,c
 21317  005D1A  26D9               	addwf	fsr2l,f,c
 21318  005D1C  501E               	movf	__RegsToCANID@Value+1,w,c
 21319  005D1E  22DA               	addwfc	fsr2h,f,c
 21320  005D20  C016  FFE1         	movff	__RegsToCANID@ptr,fsr1l
 21321  005D24  C017  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
 21322  005D28  50E7               	movf	indf1,w,c
 21323  005D2A  6E1B               	movwf	??__RegsToCANID& (0+255),c
 21324  005D2C  0E05               	movlw	5
 21325  005D2E  6E1C               	movwf	(??__RegsToCANID+1)& (0+255),c
 21326  005D30                     u10275:
 21327  005D30  90D8               	bcf	status,0,c
 21328  005D32  321B               	rrcf	??__RegsToCANID,f,c
 21329  005D34  2E1C               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 21330  005D36  D7FC               	goto	u10275
 21331  005D38  501B               	movf	??__RegsToCANID,w,c
 21332  005D3A  6EDF               	movwf	indf2,c
 21333                           
 21334                           ;ECAN.c: 1166: ptr++;
 21335  005D3C  4A16               	infsnz	__RegsToCANID@ptr,f,c
 21336  005D3E  2A17               	incf	__RegsToCANID@ptr+1,f,c
 21337                           
 21338                           ;ECAN.c: 1167: Value->BYTES.BYTE_1 |= (*ptr >> 5);
 21339  005D40  C016  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 21340  005D44  C017  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 21341  005D48  50DF               	movf	indf2,w,c
 21342  005D4A  6E1B               	movwf	??__RegsToCANID& (0+255),c
 21343  005D4C  0E05               	movlw	5
 21344  005D4E  6E1C               	movwf	(??__RegsToCANID+1)& (0+255),c
 21345  005D50                     u10285:
 21346  005D50  90D8               	bcf	status,0,c
 21347  005D52  321B               	rrcf	??__RegsToCANID,f,c
 21348  005D54  2E1C               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 21349  005D56  D7FC               	goto	u10285
 21350  005D58  C01D  FFD9         	movff	__RegsToCANID@Value,fsr2l
 21351  005D5C  C01E  FFDA         	movff	__RegsToCANID@Value+1,fsr2h
 21352  005D60  501B               	movf	??__RegsToCANID,w,c
 21353  005D62  12DF               	iorwf	indf2,f,c
 21354                           
 21355                           ;ECAN.c: 1168: Value->BYTES.BYTE_3 = 0x00;
 21356  005D64  EE20 F002          	lfsr	2,2
 21357  005D68  501D               	movf	__RegsToCANID@Value,w,c
 21358  005D6A  26D9               	addwf	fsr2l,f,c
 21359  005D6C  501E               	movf	__RegsToCANID@Value+1,w,c
 21360  005D6E  22DA               	addwfc	fsr2h,f,c
 21361  005D70  0E00               	movlw	0
 21362  005D72  6EDF               	movwf	indf2,c
 21363                           
 21364                           ;ECAN.c: 1169: Value->BYTES.BYTE_4 = 0x00;
 21365  005D74  EE20 F003          	lfsr	2,3
 21366  005D78  501D               	movf	__RegsToCANID@Value,w,c
 21367  005D7A  26D9               	addwf	fsr2l,f,c
 21368  005D7C  501E               	movf	__RegsToCANID@Value+1,w,c
 21369  005D7E  22DA               	addwfc	fsr2h,f,c
 21370  005D80  0E00               	movlw	0
 21371  005D82  6EDF               	movwf	indf2,c
 21372                           
 21373                           ;ECAN.c: 1170: }
 21374  005D84  D069               	goto	l235
 21375  005D86                     l9064:
 21376                           
 21377                           ;ECAN.c: 1171: else
 21378                           ;ECAN.c: 1172: {
 21379                           ;ECAN.c: 1174: Value->BYTES.BYTE_3 = (*ptr << 5);
 21380  005D86  EE20 F002          	lfsr	2,2
 21381  005D8A  501D               	movf	__RegsToCANID@Value,w,c
 21382  005D8C  26D9               	addwf	fsr2l,f,c
 21383  005D8E  501E               	movf	__RegsToCANID@Value+1,w,c
 21384  005D90  22DA               	addwfc	fsr2h,f,c
 21385  005D92  C016  FFE1         	movff	__RegsToCANID@ptr,fsr1l
 21386  005D96  C017  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
 21387  005D9A  50E7               	movf	indf1,w,c
 21388  005D9C  6E1B               	movwf	??__RegsToCANID& (0+255),c
 21389  005D9E  0E05               	movlw	5
 21390  005DA0  6E1C               	movwf	(??__RegsToCANID+1)& (0+255),c
 21391  005DA2                     u10295:
 21392  005DA2  90D8               	bcf	status,0,c
 21393  005DA4  361B               	rlcf	??__RegsToCANID,f,c
 21394  005DA6  2E1C               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 21395  005DA8  D7FC               	goto	u10295
 21396  005DAA  501B               	movf	??__RegsToCANID,w,c
 21397  005DAC  6EDF               	movwf	indf2,c
 21398                           
 21399                           ;ECAN.c: 1175: Value->BYTES.BYTE_4 = (*ptr >> 3);
 21400  005DAE  EE20 F003          	lfsr	2,3
 21401  005DB2  501D               	movf	__RegsToCANID@Value,w,c
 21402  005DB4  26D9               	addwf	fsr2l,f,c
 21403  005DB6  501E               	movf	__RegsToCANID@Value+1,w,c
 21404  005DB8  22DA               	addwfc	fsr2h,f,c
 21405  005DBA  C016  FFE1         	movff	__RegsToCANID@ptr,fsr1l
 21406  005DBE  C017  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
 21407  005DC2  50E7               	movf	indf1,w,c
 21408  005DC4  6E1B               	movwf	??__RegsToCANID& (0+255),c
 21409  005DC6  90D8               	bcf	status,0,c
 21410  005DC8  321B               	rrcf	??__RegsToCANID,f,c
 21411  005DCA  90D8               	bcf	status,0,c
 21412  005DCC  321B               	rrcf	??__RegsToCANID,f,c
 21413  005DCE  90D8               	bcf	status,0,c
 21414  005DD0  301B               	rrcf	??__RegsToCANID,w,c
 21415  005DD2  6EDF               	movwf	indf2,c
 21416                           
 21417                           ;ECAN.c: 1176: ptr++;
 21418  005DD4  4A16               	infsnz	__RegsToCANID@ptr,f,c
 21419  005DD6  2A17               	incf	__RegsToCANID@ptr+1,f,c
 21420                           
 21421                           ;ECAN.c: 1177: Value->BYTES.BYTE_3 |= (*ptr & 0x03);
 21422  005DD8  C016  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 21423  005DDC  C017  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 21424  005DE0  50DF               	movf	indf2,w,c
 21425  005DE2  6E1B               	movwf	??__RegsToCANID& (0+255),c
 21426  005DE4  0E03               	movlw	3
 21427  005DE6  161B               	andwf	??__RegsToCANID,f,c
 21428  005DE8  EE20 F002          	lfsr	2,2
 21429  005DEC  501D               	movf	__RegsToCANID@Value,w,c
 21430  005DEE  26D9               	addwf	fsr2l,f,c
 21431  005DF0  501E               	movf	__RegsToCANID@Value+1,w,c
 21432  005DF2  22DA               	addwfc	fsr2h,f,c
 21433  005DF4  501B               	movf	??__RegsToCANID,w,c
 21434  005DF6  12DF               	iorwf	indf2,f,c
 21435                           
 21436                           ;ECAN.c: 1179: Value->BYTES.BYTE_3 |= ((*ptr & 0xe0) >> 3);
 21437  005DF8  C016  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 21438  005DFC  C017  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 21439  005E00  50DF               	movf	indf2,w,c
 21440  005E02  6E1B               	movwf	??__RegsToCANID& (0+255),c
 21441  005E04  90D8               	bcf	status,0,c
 21442  005E06  321B               	rrcf	??__RegsToCANID,f,c
 21443  005E08  90D8               	bcf	status,0,c
 21444  005E0A  321B               	rrcf	??__RegsToCANID,f,c
 21445  005E0C  90D8               	bcf	status,0,c
 21446  005E0E  321B               	rrcf	??__RegsToCANID,f,c
 21447  005E10  0E1C               	movlw	28
 21448  005E12  161B               	andwf	??__RegsToCANID,f,c
 21449  005E14  EE20 F002          	lfsr	2,2
 21450  005E18  501D               	movf	__RegsToCANID@Value,w,c
 21451  005E1A  26D9               	addwf	fsr2l,f,c
 21452  005E1C  501E               	movf	__RegsToCANID@Value+1,w,c
 21453  005E1E  22DA               	addwfc	fsr2h,f,c
 21454  005E20  501B               	movf	??__RegsToCANID,w,c
 21455  005E22  12DF               	iorwf	indf2,f,c
 21456                           
 21457                           ;ECAN.c: 1180: ptr++;
 21458  005E24  4A16               	infsnz	__RegsToCANID@ptr,f,c
 21459  005E26  2A17               	incf	__RegsToCANID@ptr+1,f,c
 21460                           
 21461                           ;ECAN.c: 1181: Value->BYTES.BYTE_2 = *ptr;
 21462  005E28  C016  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 21463  005E2C  C017  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 21464  005E30  EE10 F001          	lfsr	1,1
 21465  005E34  501D               	movf	__RegsToCANID@Value,w,c
 21466  005E36  26E1               	addwf	fsr1l,f,c
 21467  005E38  501E               	movf	__RegsToCANID@Value+1,w,c
 21468  005E3A  22E2               	addwfc	fsr1h,f,c
 21469  005E3C  CFDF FFE7          	movff	indf2,indf1
 21470                           
 21471                           ;ECAN.c: 1182: ptr++;
 21472  005E40  4A16               	infsnz	__RegsToCANID@ptr,f,c
 21473  005E42  2A17               	incf	__RegsToCANID@ptr+1,f,c
 21474                           
 21475                           ;ECAN.c: 1183: Value->BYTES.BYTE_1 = *ptr;
 21476  005E44  C016  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 21477  005E48  C017  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 21478  005E4C  C01D  FFE1         	movff	__RegsToCANID@Value,fsr1l
 21479  005E50  C01E  FFE2         	movff	__RegsToCANID@Value+1,fsr1h
 21480  005E54  CFDF FFE7          	movff	indf2,indf1
 21481  005E58                     l235:
 21482  005E58  0012               	return	
 21483  005E5A                     __end_of__RegsToCANID:
 21484                           	opt stack 0
 21485                           tblptru	equ	0xFF8
 21486                           tblptrh	equ	0xFF7
 21487                           tblptrl	equ	0xFF6
 21488                           tablat	equ	0xFF5
 21489                           prodh	equ	0xFF4
 21490                           prodl	equ	0xFF3
 21491                           intcon2	equ	0xFF1
 21492                           postinc0	equ	0xFEE
 21493                           wreg	equ	0xFE8
 21494                           indf1	equ	0xFE7
 21495                           fsr1h	equ	0xFE2
 21496                           fsr1l	equ	0xFE1
 21497                           indf2	equ	0xFDF
 21498                           postinc2	equ	0xFDE
 21499                           postdec2	equ	0xFDD
 21500                           plusw2	equ	0xFDB
 21501                           fsr2h	equ	0xFDA
 21502                           fsr2l	equ	0xFD9
 21503                           status	equ	0xFD8
 21504                           
 21505 ;; *************** function __ECANPointBuffer *****************
 21506 ;; Defined at:
 21507 ;;		line 1207 in file "../ECAN.c"
 21508 ;; Parameters:    Size  Location     Type
 21509 ;;  b               1   21[COMRAM] unsigned char 
 21510 ;; Auto vars:     Size  Location     Type
 21511 ;;  pt              2   23[COMRAM] PTR unsigned char 
 21512 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 21513 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 21514 ;; Return value:  Size  Location     Type
 21515 ;;                  2   21[COMRAM] PTR unsigned char 
 21516 ;; Registers used:
 21517 ;;		wreg, status,2, status,0
 21518 ;; Tracked objects:
 21519 ;;		On entry : 0/0
 21520 ;;		On exit  : 0/0
 21521 ;;		Unchanged: 0/0
 21522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21523 ;;      Params:         2       0       0       0       0       0       0
 21524 ;;      Locals:         2       0       0       0       0       0       0
 21525 ;;      Temps:          0       0       0       0       0       0       0
 21526 ;;      Totals:         4       0       0       0       0       0       0
 21527 ;;Total ram usage:        4 bytes
 21528 ;; Hardware stack levels used:    1
 21529 ;; Hardware stack levels required when called:    2
 21530 ;; This function calls:
 21531 ;;		Nothing
 21532 ;; This function is called by:
 21533 ;;		_ECANReceiveMessage
 21534 ;; This function uses a non-reentrant model
 21535 ;;
 21536                           
 21537                           	psect	text61
 21538  00685A                     __ptext61:
 21539                           	opt stack 0
 21540  00685A                     __ECANPointBuffer:
 21541                           	opt stack 23
 21542                           
 21543                           ;ECAN.c: 1208: BYTE* pt;
 21544                           ;ECAN.c: 1210: switch(b)
 21545                           
 21546                           ;incstack = 0
 21547                           ;incstack = 0
 21548  00685A  D02D               	goto	l9048
 21549  00685C                     l9030:
 21550                           
 21551                           ;ECAN.c: 1213: pt=(BYTE*)&RXB0CON;
 21552  00685C  0E0F               	movlw	15	;volatile
 21553  00685E  6E19               	movwf	__ECANPointBuffer@pt+1,c
 21554  006860  0E60               	movlw	96	;volatile
 21555  006862  D027               	goto	L153
 21556  006864                     l9032:
 21557                           
 21558                           ;ECAN.c: 1216: pt=(BYTE*)&RXB1CON;
 21559  006864  010F               	movlb	15	; () banked
 21560  006866  0E0F               	movlw	15	;volatile
 21561  006868  6E19               	movwf	__ECANPointBuffer@pt+1,c
 21562  00686A  010F               	movlb	15	; () banked
 21563  00686C  0E50               	movlw	80	;volatile
 21564  00686E  D021               	goto	L153
 21565  006870                     l9034:
 21566                           
 21567                           ;ECAN.c: 1219: pt=(BYTE*)&B0CON;
 21568  006870  010E               	movlb	14	; () banked
 21569  006872  0E0E               	movlw	14	;volatile
 21570  006874  6E19               	movwf	__ECANPointBuffer@pt+1,c
 21571  006876  010E               	movlb	14	; () banked
 21572  006878  0E20               	movlw	32	;volatile
 21573  00687A  D01B               	goto	L153
 21574  00687C                     l9036:
 21575                           
 21576                           ;ECAN.c: 1222: pt=(BYTE*)&B1CON;
 21577  00687C  010E               	movlb	14	; () banked
 21578  00687E  0E0E               	movlw	14	;volatile
 21579  006880  6E19               	movwf	__ECANPointBuffer@pt+1,c
 21580  006882  010E               	movlb	14	; () banked
 21581  006884  0E30               	movlw	48	;volatile
 21582  006886  D015               	goto	L153
 21583  006888                     l9038:
 21584                           
 21585                           ;ECAN.c: 1225: pt=(BYTE*)&B2CON;
 21586  006888  010E               	movlb	14	; () banked
 21587  00688A  0E0E               	movlw	14	;volatile
 21588  00688C  6E19               	movwf	__ECANPointBuffer@pt+1,c
 21589  00688E  010E               	movlb	14	; () banked
 21590  006890  0E40               	movlw	64	;volatile
 21591  006892  D00F               	goto	L153
 21592  006894                     l9040:
 21593                           
 21594                           ;ECAN.c: 1228: pt=(BYTE*)&B3CON;
 21595  006894  010E               	movlb	14	; () banked
 21596  006896  0E0E               	movlw	14	;volatile
 21597  006898  6E19               	movwf	__ECANPointBuffer@pt+1,c
 21598  00689A  010E               	movlb	14	; () banked
 21599  00689C  D7E7               	goto	L154
 21600  00689E                     l9042:
 21601                           
 21602                           ;ECAN.c: 1231: pt=(BYTE*)&B4CON;
 21603  00689E  010E               	movlb	14	; () banked
 21604  0068A0  0E0E               	movlw	14	;volatile
 21605  0068A2  6E19               	movwf	__ECANPointBuffer@pt+1,c
 21606  0068A4  010E               	movlb	14	; () banked
 21607  0068A6  D7DC               	goto	L155
 21608  0068A8                     l9044:
 21609                           
 21610                           ;ECAN.c: 1234: pt=(BYTE*)&B5CON;
 21611  0068A8  010E               	movlb	14	; () banked
 21612  0068AA  0E0E               	movlw	14	;volatile
 21613  0068AC  6E19               	movwf	__ECANPointBuffer@pt+1,c
 21614  0068AE  010E               	movlb	14	; () banked
 21615  0068B0  0E70               	movlw	112	;volatile
 21616  0068B2                     L153:
 21617  0068B2  6E18               	movwf	__ECANPointBuffer@pt,c
 21618                           
 21619                           ;ECAN.c: 1235: break;
 21620  0068B4  D017               	goto	l240
 21621  0068B6                     l9048:
 21622  0068B6  5016               	movf	__ECANPointBuffer@b,w,c
 21623                           
 21624                           ; Switch size 1, requested type "space"
 21625                           ; Number of cases is 7, Range of values is 0 to 6
 21626                           ; switch strategies available:
 21627                           ; Name         Instructions Cycles
 21628                           ; simple_byte           22    12 (average)
 21629                           ;	Chosen strategy is simple_byte
 21630  0068B8  0A00               	xorlw	0	; case 0
 21631  0068BA  B4D8               	btfsc	status,2,c
 21632  0068BC  D7CF               	goto	l9030
 21633  0068BE  0A01               	xorlw	1	; case 1
 21634  0068C0  B4D8               	btfsc	status,2,c
 21635  0068C2  D7D0               	goto	l9032
 21636  0068C4  0A03               	xorlw	3	; case 2
 21637  0068C6  B4D8               	btfsc	status,2,c
 21638  0068C8  D7D3               	goto	l9034
 21639  0068CA  0A01               	xorlw	1	; case 3
 21640  0068CC  B4D8               	btfsc	status,2,c
 21641  0068CE  D7D6               	goto	l9036
 21642  0068D0  0A07               	xorlw	7	; case 4
 21643  0068D2  B4D8               	btfsc	status,2,c
 21644  0068D4  D7D9               	goto	l9038
 21645  0068D6  0A01               	xorlw	1	; case 5
 21646  0068D8  B4D8               	btfsc	status,2,c
 21647  0068DA  D7DC               	goto	l9040
 21648  0068DC  0A03               	xorlw	3	; case 6
 21649  0068DE  B4D8               	btfsc	status,2,c
 21650  0068E0  D7DE               	goto	l9042
 21651  0068E2  D7E2               	goto	l9044
 21652  0068E4                     l240:
 21653                           
 21654                           ;ECAN.c: 1237: return (pt);
 21655  0068E4  C018  F016         	movff	__ECANPointBuffer@pt,?__ECANPointBuffer
 21656  0068E8  C019  F017         	movff	__ECANPointBuffer@pt+1,?__ECANPointBuffer+1
 21657  0068EC  0012               	return	
 21658  0068EE                     __end_of__ECANPointBuffer:
 21659                           	opt stack 0
 21660                           tblptru	equ	0xFF8
 21661                           tblptrh	equ	0xFF7
 21662                           tblptrl	equ	0xFF6
 21663                           tablat	equ	0xFF5
 21664                           prodh	equ	0xFF4
 21665                           prodl	equ	0xFF3
 21666                           intcon2	equ	0xFF1
 21667                           postinc0	equ	0xFEE
 21668                           wreg	equ	0xFE8
 21669                           indf1	equ	0xFE7
 21670                           fsr1h	equ	0xFE2
 21671                           fsr1l	equ	0xFE1
 21672                           indf2	equ	0xFDF
 21673                           postinc2	equ	0xFDE
 21674                           postdec2	equ	0xFDD
 21675                           plusw2	equ	0xFDB
 21676                           fsr2h	equ	0xFDA
 21677                           fsr2l	equ	0xFD9
 21678                           status	equ	0xFD8
 21679                           
 21680 ;; *************** function _vscp_check_pstorage *****************
 21681 ;; Defined at:
 21682 ;;		line 168 in file "../../vscp_firmware/common/vscp_firmware.c"
 21683 ;; Parameters:    Size  Location     Type
 21684 ;;		None
 21685 ;; Auto vars:     Size  Location     Type
 21686 ;;		None
 21687 ;; Return value:  Size  Location     Type
 21688 ;;                  1    wreg      unsigned char 
 21689 ;; Registers used:
 21690 ;;		wreg, status,2, status,0, cstack
 21691 ;; Tracked objects:
 21692 ;;		On entry : 0/0
 21693 ;;		On exit  : 0/0
 21694 ;;		Unchanged: 0/0
 21695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21696 ;;      Params:         0       0       0       0       0       0       0
 21697 ;;      Locals:         0       0       0       0       0       0       0
 21698 ;;      Temps:          1       0       0       0       0       0       0
 21699 ;;      Totals:         1       0       0       0       0       0       0
 21700 ;;Total ram usage:        1 bytes
 21701 ;; Hardware stack levels used:    1
 21702 ;; Hardware stack levels required when called:    4
 21703 ;; This function calls:
 21704 ;;		_vscp_writeNicknamePermanent
 21705 ;;		_vscp_getSegmentCRC
 21706 ;;		_vscp_setSegmentCRC
 21707 ;;		_vscp_setControlByte
 21708 ;; This function is called by:
 21709 ;;		_main
 21710 ;; This function uses a non-reentrant model
 21711 ;;
 21712                           
 21713                           	psect	text62
 21714  006D2C                     __ptext62:
 21715                           	opt stack 0
 21716  006D2C                     _vscp_check_pstorage:
 21717                           	opt stack 25
 21718                           
 21719                           ;vscp_firmware.c: 171: if ((vscp_getSegmentCRC() & 0xc0) == 0x40) {
 21720                           
 21721                           ;incstack = 0
 21722                           ;incstack = 0
 21723  006D2C  ECFF  F037         	call	_vscp_getSegmentCRC	;wreg free
 21724  006D30  0BC0               	andlw	192
 21725  006D32  0A40               	xorlw	64
 21726  006D34  A4D8               	btfss	status,2,c
 21727  006D36  D002               	goto	l9196
 21728                           
 21729                           ;vscp_firmware.c: 172: return !0;
 21730  006D38  0E01               	movlw	1
 21731  006D3A  D013               	goto	l1152
 21732  006D3C                     l9196:
 21733                           
 21734                           ;vscp_firmware.c: 173: }
 21735                           ;vscp_firmware.c: 176: vscp_writeNicknamePermanent(0xff);
 21736  006D3C  6E1C               	movwf	??_vscp_check_pstorage& (0+255),c
 21737  006D3E  0EFF               	movlw	255
 21738  006D40  6E1B               	movwf	?_vscp_writeNicknamePermanent,c
 21739  006D42  501C               	movf	??_vscp_check_pstorage& (0+255),w,c
 21740  006D44  EC8D  F037         	call	_vscp_writeNicknamePermanent	;wreg free
 21741                           
 21742                           ;vscp_firmware.c: 179: vscp_setSegmentCRC(0x00);
 21743  006D48  6E1C               	movwf	??_vscp_check_pstorage& (0+255),c
 21744  006D4A  0E00               	movlw	0
 21745  006D4C  6E1B               	movwf	?_vscp_setSegmentCRC,c
 21746  006D4E  501C               	movf	??_vscp_check_pstorage& (0+255),w,c
 21747  006D50  EC82  F037         	call	_vscp_setSegmentCRC	;wreg free
 21748                           
 21749                           ;vscp_firmware.c: 183: vscp_setControlByte(0xA0);
 21750  006D54  6E1C               	movwf	??_vscp_check_pstorage& (0+255),c
 21751  006D56  0EA0               	movlw	160
 21752  006D58  6E1B               	movwf	?_vscp_setControlByte,c
 21753  006D5A  501C               	movf	??_vscp_check_pstorage& (0+255),w,c
 21754  006D5C  EC77  F037         	call	_vscp_setControlByte	;wreg free
 21755                           
 21756                           ;vscp_firmware.c: 185: return 0;
 21757  006D60  0E00               	movlw	0
 21758  006D62                     l1152:
 21759  006D62  0012               	return	
 21760  006D64                     __end_of_vscp_check_pstorage:
 21761                           	opt stack 0
 21762                           tblptru	equ	0xFF8
 21763                           tblptrh	equ	0xFF7
 21764                           tblptrl	equ	0xFF6
 21765                           tablat	equ	0xFF5
 21766                           prodh	equ	0xFF4
 21767                           prodl	equ	0xFF3
 21768                           intcon2	equ	0xFF1
 21769                           postinc0	equ	0xFEE
 21770                           wreg	equ	0xFE8
 21771                           indf1	equ	0xFE7
 21772                           fsr1h	equ	0xFE2
 21773                           fsr1l	equ	0xFE1
 21774                           indf2	equ	0xFDF
 21775                           postinc2	equ	0xFDE
 21776                           postdec2	equ	0xFDD
 21777                           plusw2	equ	0xFDB
 21778                           fsr2h	equ	0xFDA
 21779                           fsr2l	equ	0xFD9
 21780                           status	equ	0xFD8
 21781                           
 21782 ;; *************** function _vscp_setControlByte *****************
 21783 ;; Defined at:
 21784 ;;		line 2974 in file "../main.c"
 21785 ;; Parameters:    Size  Location     Type
 21786 ;;  ctrl            1   26[COMRAM] unsigned char 
 21787 ;; Auto vars:     Size  Location     Type
 21788 ;;		None
 21789 ;; Return value:  Size  Location     Type
 21790 ;;		None               void
 21791 ;; Registers used:
 21792 ;;		wreg, status,2, cstack
 21793 ;; Tracked objects:
 21794 ;;		On entry : 0/0
 21795 ;;		On exit  : 0/0
 21796 ;;		Unchanged: 0/0
 21797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21798 ;;      Params:         1       0       0       0       0       0       0
 21799 ;;      Locals:         0       0       0       0       0       0       0
 21800 ;;      Temps:          0       0       0       0       0       0       0
 21801 ;;      Totals:         1       0       0       0       0       0       0
 21802 ;;Total ram usage:        1 bytes
 21803 ;; Hardware stack levels used:    1
 21804 ;; Hardware stack levels required when called:    3
 21805 ;; This function calls:
 21806 ;;		_Busy_eep
 21807 ;;		_Write_b_eep
 21808 ;; This function is called by:
 21809 ;;		_vscp_check_pstorage
 21810 ;; This function uses a non-reentrant model
 21811 ;;
 21812                           
 21813                           	psect	text63
 21814  006EEE                     __ptext63:
 21815                           	opt stack 0
 21816  006EEE                     _vscp_setControlByte:
 21817                           	opt stack 25
 21818                           
 21819                           ;main.c: 2975: (Busy_eep(), Write_b_eep(0x03,ctrl));
 21820                           
 21821                           ;incstack = 0
 21822                           ;incstack = 0
 21823  006EEE  EC10  F038         	call	_Busy_eep	;wreg free
 21824  006EF2  0E00               	movlw	0
 21825  006EF4  6E17               	movwf	?_Write_b_eep+1,c
 21826  006EF6  0E03               	movlw	3
 21827  006EF8  6E16               	movwf	?_Write_b_eep,c
 21828  006EFA  C01B  F018         	movff	vscp_setControlByte@ctrl,?_Write_b_eep+2
 21829  006EFE  EC40  F036         	call	_Write_b_eep	;wreg free
 21830  006F02  0012               	return	
 21831  006F04                     __end_of_vscp_setControlByte:
 21832                           	opt stack 0
 21833                           tblptru	equ	0xFF8
 21834                           tblptrh	equ	0xFF7
 21835                           tblptrl	equ	0xFF6
 21836                           tablat	equ	0xFF5
 21837                           prodh	equ	0xFF4
 21838                           prodl	equ	0xFF3
 21839                           intcon2	equ	0xFF1
 21840                           postinc0	equ	0xFEE
 21841                           wreg	equ	0xFE8
 21842                           indf1	equ	0xFE7
 21843                           fsr1h	equ	0xFE2
 21844                           fsr1l	equ	0xFE1
 21845                           indf2	equ	0xFDF
 21846                           postinc2	equ	0xFDE
 21847                           postdec2	equ	0xFDD
 21848                           plusw2	equ	0xFDB
 21849                           fsr2h	equ	0xFDA
 21850                           fsr2l	equ	0xFD9
 21851                           status	equ	0xFD8
 21852                           
 21853 ;; *************** function _vscp_setSegmentCRC *****************
 21854 ;; Defined at:
 21855 ;;		line 2965 in file "../main.c"
 21856 ;; Parameters:    Size  Location     Type
 21857 ;;  crc             1   26[COMRAM] unsigned char 
 21858 ;; Auto vars:     Size  Location     Type
 21859 ;;		None
 21860 ;; Return value:  Size  Location     Type
 21861 ;;		None               void
 21862 ;; Registers used:
 21863 ;;		wreg, status,2, cstack
 21864 ;; Tracked objects:
 21865 ;;		On entry : 0/0
 21866 ;;		On exit  : 0/0
 21867 ;;		Unchanged: 0/0
 21868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21869 ;;      Params:         1       0       0       0       0       0       0
 21870 ;;      Locals:         0       0       0       0       0       0       0
 21871 ;;      Temps:          0       0       0       0       0       0       0
 21872 ;;      Totals:         1       0       0       0       0       0       0
 21873 ;;Total ram usage:        1 bytes
 21874 ;; Hardware stack levels used:    1
 21875 ;; Hardware stack levels required when called:    3
 21876 ;; This function calls:
 21877 ;;		_Busy_eep
 21878 ;;		_Write_b_eep
 21879 ;; This function is called by:
 21880 ;;		_vscp_check_pstorage
 21881 ;;		_vscp_handleProbeState
 21882 ;;		_vscp_handleHeartbeat
 21883 ;;		_vscp_handleSetNickname
 21884 ;;		_vscp_handlePreActiveState
 21885 ;; This function uses a non-reentrant model
 21886 ;;
 21887                           
 21888                           	psect	text64
 21889  006F04                     __ptext64:
 21890                           	opt stack 0
 21891  006F04                     _vscp_setSegmentCRC:
 21892                           	opt stack 24
 21893                           
 21894                           ;main.c: 2966: (Busy_eep(), Write_b_eep(0x02,crc));
 21895                           
 21896                           ;incstack = 0
 21897                           ;incstack = 0
 21898  006F04  EC10  F038         	call	_Busy_eep	;wreg free
 21899  006F08  0E00               	movlw	0
 21900  006F0A  6E17               	movwf	?_Write_b_eep+1,c
 21901  006F0C  0E02               	movlw	2
 21902  006F0E  6E16               	movwf	?_Write_b_eep,c
 21903  006F10  C01B  F018         	movff	vscp_setSegmentCRC@crc,?_Write_b_eep+2
 21904  006F14  EC40  F036         	call	_Write_b_eep	;wreg free
 21905  006F18  0012               	return	
 21906  006F1A                     __end_of_vscp_setSegmentCRC:
 21907                           	opt stack 0
 21908                           tblptru	equ	0xFF8
 21909                           tblptrh	equ	0xFF7
 21910                           tblptrl	equ	0xFF6
 21911                           tablat	equ	0xFF5
 21912                           prodh	equ	0xFF4
 21913                           prodl	equ	0xFF3
 21914                           intcon2	equ	0xFF1
 21915                           postinc0	equ	0xFEE
 21916                           wreg	equ	0xFE8
 21917                           indf1	equ	0xFE7
 21918                           fsr1h	equ	0xFE2
 21919                           fsr1l	equ	0xFE1
 21920                           indf2	equ	0xFDF
 21921                           postinc2	equ	0xFDE
 21922                           postdec2	equ	0xFDD
 21923                           plusw2	equ	0xFDB
 21924                           fsr2h	equ	0xFDA
 21925                           fsr2l	equ	0xFD9
 21926                           status	equ	0xFD8
 21927                           
 21928 ;; *************** function _vscp_getSegmentCRC *****************
 21929 ;; Defined at:
 21930 ;;		line 2956 in file "../main.c"
 21931 ;; Parameters:    Size  Location     Type
 21932 ;;		None
 21933 ;; Auto vars:     Size  Location     Type
 21934 ;;		None
 21935 ;; Return value:  Size  Location     Type
 21936 ;;                  1    wreg      unsigned char 
 21937 ;; Registers used:
 21938 ;;		wreg, status,2, cstack
 21939 ;; Tracked objects:
 21940 ;;		On entry : 0/0
 21941 ;;		On exit  : 0/0
 21942 ;;		Unchanged: 0/0
 21943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21944 ;;      Params:         0       0       0       0       0       0       0
 21945 ;;      Locals:         0       0       0       0       0       0       0
 21946 ;;      Temps:          0       0       0       0       0       0       0
 21947 ;;      Totals:         0       0       0       0       0       0       0
 21948 ;;Total ram usage:        0 bytes
 21949 ;; Hardware stack levels used:    1
 21950 ;; Hardware stack levels required when called:    3
 21951 ;; This function calls:
 21952 ;;		_Read_b_eep
 21953 ;; This function is called by:
 21954 ;;		_vscp_check_pstorage
 21955 ;;		_vscp_handleHeartbeat
 21956 ;; This function uses a non-reentrant model
 21957 ;;
 21958                           
 21959                           	psect	text65
 21960  006FFE                     __ptext65:
 21961                           	opt stack 0
 21962  006FFE                     _vscp_getSegmentCRC:
 21963                           	opt stack 24
 21964                           
 21965                           ;main.c: 2957: return Read_b_eep(0x02);
 21966                           
 21967                           ;incstack = 0
 21968                           ;incstack = 0
 21969  006FFE  0E00               	movlw	0
 21970  007000  6E17               	movwf	?_Read_b_eep+1,c
 21971  007002  0E02               	movlw	2
 21972  007004  6E16               	movwf	?_Read_b_eep,c
 21973  007006  ECD8  F037         	call	_Read_b_eep	;wreg free
 21974  00700A  0012               	return	
 21975  00700C                     __end_of_vscp_getSegmentCRC:
 21976                           	opt stack 0
 21977                           tblptru	equ	0xFF8
 21978                           tblptrh	equ	0xFF7
 21979                           tblptrl	equ	0xFF6
 21980                           tablat	equ	0xFF5
 21981                           prodh	equ	0xFF4
 21982                           prodl	equ	0xFF3
 21983                           intcon2	equ	0xFF1
 21984                           postinc0	equ	0xFEE
 21985                           wreg	equ	0xFE8
 21986                           indf1	equ	0xFE7
 21987                           fsr1h	equ	0xFE2
 21988                           fsr1l	equ	0xFE1
 21989                           indf2	equ	0xFDF
 21990                           postinc2	equ	0xFDE
 21991                           postdec2	equ	0xFDD
 21992                           plusw2	equ	0xFDB
 21993                           fsr2h	equ	0xFDA
 21994                           fsr2l	equ	0xFD9
 21995                           status	equ	0xFD8
 21996                           
 21997 ;; *************** function _vscp_writeNicknamePermanent *****************
 21998 ;; Defined at:
 21999 ;;		line 966 in file "../main.c"
 22000 ;; Parameters:    Size  Location     Type
 22001 ;;  nickname        1   26[COMRAM] unsigned char 
 22002 ;; Auto vars:     Size  Location     Type
 22003 ;;		None
 22004 ;; Return value:  Size  Location     Type
 22005 ;;		None               void
 22006 ;; Registers used:
 22007 ;;		wreg, status,2, cstack
 22008 ;; Tracked objects:
 22009 ;;		On entry : 0/0
 22010 ;;		On exit  : 0/0
 22011 ;;		Unchanged: 0/0
 22012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22013 ;;      Params:         1       0       0       0       0       0       0
 22014 ;;      Locals:         0       0       0       0       0       0       0
 22015 ;;      Temps:          0       0       0       0       0       0       0
 22016 ;;      Totals:         1       0       0       0       0       0       0
 22017 ;;Total ram usage:        1 bytes
 22018 ;; Hardware stack levels used:    1
 22019 ;; Hardware stack levels required when called:    3
 22020 ;; This function calls:
 22021 ;;		_Busy_eep
 22022 ;;		_Write_b_eep
 22023 ;; This function is called by:
 22024 ;;		_vscp_check_pstorage
 22025 ;;		_vscp_handleProbeState
 22026 ;;		_vscp_handleHeartbeat
 22027 ;;		_vscp_handleSetNickname
 22028 ;;		_vscp_handleDropNickname
 22029 ;;		_vscp_handlePreActiveState
 22030 ;; This function uses a non-reentrant model
 22031 ;;
 22032                           
 22033                           	psect	text66
 22034  006F1A                     __ptext66:
 22035                           	opt stack 0
 22036  006F1A                     _vscp_writeNicknamePermanent:
 22037                           	opt stack 24
 22038                           
 22039                           ;main.c: 967: (Busy_eep(), Write_b_eep(0x01,nickname));
 22040                           
 22041                           ;incstack = 0
 22042                           ;incstack = 0
 22043  006F1A  EC10  F038         	call	_Busy_eep	;wreg free
 22044  006F1E  0E00               	movlw	0
 22045  006F20  6E17               	movwf	?_Write_b_eep+1,c
 22046  006F22  0E01               	movlw	1
 22047  006F24  6E16               	movwf	?_Write_b_eep,c
 22048  006F26  C01B  F018         	movff	vscp_writeNicknamePermanent@nickname,?_Write_b_eep+2
 22049  006F2A  EC40  F036         	call	_Write_b_eep	;wreg free
 22050  006F2E  0012               	return	
 22051  006F30                     __end_of_vscp_writeNicknamePermanent:
 22052                           	opt stack 0
 22053                           tblptru	equ	0xFF8
 22054                           tblptrh	equ	0xFF7
 22055                           tblptrl	equ	0xFF6
 22056                           tablat	equ	0xFF5
 22057                           prodh	equ	0xFF4
 22058                           prodl	equ	0xFF3
 22059                           intcon2	equ	0xFF1
 22060                           postinc0	equ	0xFEE
 22061                           wreg	equ	0xFE8
 22062                           indf1	equ	0xFE7
 22063                           fsr1h	equ	0xFE2
 22064                           fsr1l	equ	0xFE1
 22065                           indf2	equ	0xFDF
 22066                           postinc2	equ	0xFDE
 22067                           postdec2	equ	0xFDD
 22068                           plusw2	equ	0xFDB
 22069                           fsr2h	equ	0xFDA
 22070                           fsr2l	equ	0xFD9
 22071                           status	equ	0xFD8
 22072                           
 22073 ;; *************** function _Write_b_eep *****************
 22074 ;; Defined at:
 22075 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\EEP\write_B.c"
 22076 ;; Parameters:    Size  Location     Type
 22077 ;;  badd            2   21[COMRAM] unsigned int 
 22078 ;;  bdat            1   23[COMRAM] unsigned char 
 22079 ;; Auto vars:     Size  Location     Type
 22080 ;;  GIE_BIT_VAL     1   25[COMRAM] unsigned char 
 22081 ;; Return value:  Size  Location     Type
 22082 ;;		None               void
 22083 ;; Registers used:
 22084 ;;		wreg, status,2
 22085 ;; Tracked objects:
 22086 ;;		On entry : 0/0
 22087 ;;		On exit  : 0/0
 22088 ;;		Unchanged: 0/0
 22089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22090 ;;      Params:         3       0       0       0       0       0       0
 22091 ;;      Locals:         1       0       0       0       0       0       0
 22092 ;;      Temps:          1       0       0       0       0       0       0
 22093 ;;      Totals:         5       0       0       0       0       0       0
 22094 ;;Total ram usage:        5 bytes
 22095 ;; Hardware stack levels used:    1
 22096 ;; Hardware stack levels required when called:    2
 22097 ;; This function calls:
 22098 ;;		Nothing
 22099 ;; This function is called by:
 22100 ;;		_main
 22101 ;;		_init_app_eeprom
 22102 ;;		_vscp_setGUID
 22103 ;;		_vscp_setManufacturerId
 22104 ;;		_vscp_writeNicknamePermanent
 22105 ;;		_vscp_writeAppReg
 22106 ;;		_vscp_setUserID
 22107 ;;		_vscp_setSegmentCRC
 22108 ;;		_vscp_setControlByte
 22109 ;;		_vscp_goBootloaderMode
 22110 ;;		_doActionDisable
 22111 ;;		_vscp_setNickname
 22112 ;; This function uses a non-reentrant model
 22113 ;;
 22114                           
 22115                           	psect	text67
 22116  006C80                     __ptext67:
 22117                           	opt stack 0
 22118  006C80                     _Write_b_eep:
 22119                           	opt stack 23
 22120                           
 22121                           ;incstack = 0
 22122                           ;incstack = 0
 22123  006C80  6E19               	movwf	??_Write_b_eep& (0+255),c
 22124  006C82  0E00               	movlw	0
 22125  006C84  6E1A               	movwf	Write_b_eep@GIE_BIT_VAL,c
 22126  006C86  5019               	movf	??_Write_b_eep& (0+255),w,c
 22127  006C88  C016  FFA9         	movff	Write_b_eep@badd,4009	;volatile
 22128  006C8C  C018  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
 22129  006C90  9EA6               	bcf	4006,7,c	;volatile
 22130  006C92  9CA6               	bcf	4006,6,c	;volatile
 22131  006C94  84A6               	bsf	4006,2,c	;volatile
 22132  006C96  0E00               	movlw	0
 22133  006C98  BEF2               	btfsc	intcon,7,c	;volatile
 22134  006C9A  0E01               	movlw	1
 22135  006C9C  6E1A               	movwf	Write_b_eep@GIE_BIT_VAL,c
 22136  006C9E  9EF2               	bcf	intcon,7,c	;volatile
 22137  006CA0  0E55               	movlw	85
 22138  006CA2  6EA7               	movwf	4007,c	;volatile
 22139  006CA4  0EAA               	movlw	170
 22140  006CA6  6EA7               	movwf	4007,c	;volatile
 22141  006CA8  82A6               	bsf	4006,1,c	;volatile
 22142  006CAA                     l1427:
 22143  006CAA  B2A6               	btfsc	4006,1,c	;volatile
 22144  006CAC  D7FE               	goto	l1427
 22145  006CAE  B01A               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
 22146  006CB0  D002               	bra	u10715
 22147  006CB2  9EF2               	bcf	intcon,7,c	;volatile
 22148  006CB4  D001               	bra	u10716
 22149  006CB6                     u10715:
 22150  006CB6  8EF2               	bsf	intcon,7,c	;volatile
 22151  006CB8                     u10716:
 22152  006CB8  94A6               	bcf	4006,2,c	;volatile
 22153  006CBA  0012               	return	
 22154  006CBC                     __end_of_Write_b_eep:
 22155                           	opt stack 0
 22156                           tblptru	equ	0xFF8
 22157                           tblptrh	equ	0xFF7
 22158                           tblptrl	equ	0xFF6
 22159                           tablat	equ	0xFF5
 22160                           prodh	equ	0xFF4
 22161                           prodl	equ	0xFF3
 22162                           intcon	equ	0xFF2
 22163                           intcon2	equ	0xFF1
 22164                           postinc0	equ	0xFEE
 22165                           wreg	equ	0xFE8
 22166                           indf1	equ	0xFE7
 22167                           fsr1h	equ	0xFE2
 22168                           fsr1l	equ	0xFE1
 22169                           indf2	equ	0xFDF
 22170                           postinc2	equ	0xFDE
 22171                           postdec2	equ	0xFDD
 22172                           plusw2	equ	0xFDB
 22173                           fsr2h	equ	0xFDA
 22174                           fsr2l	equ	0xFD9
 22175                           status	equ	0xFD8
 22176                           
 22177 ;; *************** function _Busy_eep *****************
 22178 ;; Defined at:
 22179 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\EEP\busy_eep.c"
 22180 ;; Parameters:    Size  Location     Type
 22181 ;;		None
 22182 ;; Auto vars:     Size  Location     Type
 22183 ;;		None
 22184 ;; Return value:  Size  Location     Type
 22185 ;;		None               void
 22186 ;; Registers used:
 22187 ;;		None
 22188 ;; Tracked objects:
 22189 ;;		On entry : 0/0
 22190 ;;		On exit  : 0/0
 22191 ;;		Unchanged: 0/0
 22192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22193 ;;      Params:         0       0       0       0       0       0       0
 22194 ;;      Locals:         0       0       0       0       0       0       0
 22195 ;;      Temps:          0       0       0       0       0       0       0
 22196 ;;      Totals:         0       0       0       0       0       0       0
 22197 ;;Total ram usage:        0 bytes
 22198 ;; Hardware stack levels used:    1
 22199 ;; Hardware stack levels required when called:    2
 22200 ;; This function calls:
 22201 ;;		Nothing
 22202 ;; This function is called by:
 22203 ;;		_main
 22204 ;;		_init_app_eeprom
 22205 ;;		_vscp_setGUID
 22206 ;;		_vscp_setManufacturerId
 22207 ;;		_vscp_writeNicknamePermanent
 22208 ;;		_vscp_writeAppReg
 22209 ;;		_vscp_setUserID
 22210 ;;		_vscp_setSegmentCRC
 22211 ;;		_vscp_setControlByte
 22212 ;;		_vscp_goBootloaderMode
 22213 ;;		_doActionDisable
 22214 ;;		_vscp_setNickname
 22215 ;; This function uses a non-reentrant model
 22216 ;;
 22217                           
 22218                           	psect	text68
 22219  007020                     __ptext68:
 22220                           	opt stack 0
 22221  007020                     _Busy_eep:
 22222                           	opt stack 23
 22223  007020                     l1402:
 22224  007020  A2A6               	btfss	4006,1,c	;volatile
 22225  007022  0012               	return	
 22226  007024  D7FD               	goto	l1402
 22227  007026                     __end_of_Busy_eep:
 22228                           	opt stack 0
 22229                           tblptru	equ	0xFF8
 22230                           tblptrh	equ	0xFF7
 22231                           tblptrl	equ	0xFF6
 22232                           tablat	equ	0xFF5
 22233                           prodh	equ	0xFF4
 22234                           prodl	equ	0xFF3
 22235                           intcon	equ	0xFF2
 22236                           intcon2	equ	0xFF1
 22237                           postinc0	equ	0xFEE
 22238                           wreg	equ	0xFE8
 22239                           indf1	equ	0xFE7
 22240                           fsr1h	equ	0xFE2
 22241                           fsr1l	equ	0xFE1
 22242                           indf2	equ	0xFDF
 22243                           postinc2	equ	0xFDE
 22244                           postdec2	equ	0xFDD
 22245                           plusw2	equ	0xFDB
 22246                           fsr2h	equ	0xFDA
 22247                           fsr2l	equ	0xFD9
 22248                           status	equ	0xFD8
 22249                           
 22250 ;; *************** function _init *****************
 22251 ;; Defined at:
 22252 ;;		line 323 in file "../main.c"
 22253 ;; Parameters:    Size  Location     Type
 22254 ;;		None
 22255 ;; Auto vars:     Size  Location     Type
 22256 ;;  dir             1    0        unsigned char 
 22257 ;; Return value:  Size  Location     Type
 22258 ;;		None               void
 22259 ;; Registers used:
 22260 ;;		wreg, status,2, status,0, cstack
 22261 ;; Tracked objects:
 22262 ;;		On entry : 0/0
 22263 ;;		On exit  : 0/0
 22264 ;;		Unchanged: 0/0
 22265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22266 ;;      Params:         0       0       0       0       0       0       0
 22267 ;;      Locals:         0       0       0       0       0       0       0
 22268 ;;      Temps:          1       0       0       0       0       0       0
 22269 ;;      Totals:         1       0       0       0       0       0       0
 22270 ;;Total ram usage:        1 bytes
 22271 ;; Hardware stack levels used:    1
 22272 ;; Hardware stack levels required when called:    4
 22273 ;; This function calls:
 22274 ;;		_ECANInitialize
 22275 ;;		_WriteTimer0
 22276 ;;		_OpenTimer0
 22277 ;; This function is called by:
 22278 ;;		_main
 22279 ;; This function uses a non-reentrant model
 22280 ;;
 22281                           
 22282                           	psect	text69
 22283  006B24                     __ptext69:
 22284                           	opt stack 0
 22285  006B24                     _init:
 22286                           	opt stack 25
 22287                           
 22288                           ;main.c: 324: unsigned char dir;
 22289                           ;main.c: 337: TRISA = 0b00000000;
 22290                           
 22291                           ;incstack = 0
 22292                           ;incstack = 0
 22293  006B24  0E00               	movlw	0
 22294  006B26  6E92               	movwf	3986,c	;volatile
 22295                           
 22296                           ;main.c: 338: PORTA = 0x00;
 22297  006B28  0E00               	movlw	0
 22298  006B2A  6E80               	movwf	3968,c	;volatile
 22299                           
 22300                           ;main.c: 350: TRISB = 0b00001000;
 22301  006B2C  0E08               	movlw	8
 22302  006B2E  6E93               	movwf	3987,c	;volatile
 22303                           
 22304                           ;main.c: 351: PORTB = 0x00;
 22305  006B30  0E00               	movlw	0
 22306  006B32  6E81               	movwf	3969,c	;volatile
 22307                           
 22308                           ;main.c: 361: TRISC = 0b00000001;
 22309  006B34  0E01               	movlw	1
 22310  006B36  6E94               	movwf	3988,c	;volatile
 22311                           
 22312                           ;main.c: 362: PORTC = 0x00;
 22313  006B38  0E00               	movlw	0
 22314  006B3A  6E82               	movwf	3970,c	;volatile
 22315                           
 22316                           ;main.c: 388: OpenTimer0( 0b11111111 & 0b10111111 & 0b11011111 & 0b11110010 );
 22317  006B3C  6E1A               	movwf	??_init& (0+255),c
 22318  006B3E  0E92               	movlw	146
 22319  006B40  6E16               	movwf	?_OpenTimer0,c
 22320  006B42  501A               	movf	??_init& (0+255),w,c
 22321  006B44  EC43  F037         	call	_OpenTimer0	;wreg free
 22322                           
 22323                           ;main.c: 389: WriteTimer0( 0xfb1d );
 22324  006B48  0EFB               	movlw	251
 22325  006B4A  6E17               	movwf	?_WriteTimer0+1,c
 22326  006B4C  0E1D               	movlw	29
 22327  006B4E  6E16               	movwf	?_WriteTimer0,c
 22328  006B50  ECCF  F037         	call	_WriteTimer0	;wreg free
 22329                           
 22330                           ;main.c: 392: LATBbits.LATB0 = 0;
 22331  006B54  908A               	bcf	3978,0,c	;volatile
 22332                           
 22333                           ;main.c: 393: LATBbits.LATB1 = 0;
 22334  006B56  928A               	bcf	3978,1,c	;volatile
 22335                           
 22336                           ;main.c: 394: LATCbits.LATC3 = 0;
 22337  006B58  968B               	bcf	3979,3,c	;volatile
 22338                           
 22339                           ;main.c: 395: LATCbits.LATC4 = 0;
 22340  006B5A  988B               	bcf	3979,4,c	;volatile
 22341                           
 22342                           ;main.c: 396: LATCbits.LATC5 = 0;
 22343  006B5C  9A8B               	bcf	3979,5,c	;volatile
 22344                           
 22345                           ;main.c: 397: LATCbits.LATC6 = 0;
 22346  006B5E  9C8B               	bcf	3979,6,c	;volatile
 22347                           
 22348                           ;main.c: 398: LATCbits.LATC7 = 0;
 22349  006B60  9E8B               	bcf	3979,7,c	;volatile
 22350                           
 22351                           ;main.c: 399: LATAbits.LATA2 = 0;
 22352  006B62  9489               	bcf	3977,2,c	;volatile
 22353                           
 22354                           ;main.c: 400: LATAbits.LATA1 = 0;
 22355  006B64  9289               	bcf	3977,1,c	;volatile
 22356                           
 22357                           ;main.c: 401: LATAbits.LATA0 = 0;
 22358  006B66  9089               	bcf	3977,0,c	;volatile
 22359                           
 22360                           ;main.c: 404: ECANInitialize();
 22361  006B68  ECE6  F02F         	call	_ECANInitialize	;wreg free
 22362                           
 22363                           ;main.c: 425: INTCONbits.PEIE = 1;
 22364  006B6C  8CF2               	bsf	intcon,6,c	;volatile
 22365                           
 22366                           ;main.c: 428: INTCONbits.GIE = 1;
 22367  006B6E  8EF2               	bsf	intcon,7,c	;volatile
 22368                           
 22369                           ;main.c: 430: return;
 22370  006B70  0012               	return	
 22371  006B72                     __end_of_init:
 22372                           	opt stack 0
 22373                           tblptru	equ	0xFF8
 22374                           tblptrh	equ	0xFF7
 22375                           tblptrl	equ	0xFF6
 22376                           tablat	equ	0xFF5
 22377                           prodh	equ	0xFF4
 22378                           prodl	equ	0xFF3
 22379                           intcon	equ	0xFF2
 22380                           intcon2	equ	0xFF1
 22381                           postinc0	equ	0xFEE
 22382                           wreg	equ	0xFE8
 22383                           indf1	equ	0xFE7
 22384                           fsr1h	equ	0xFE2
 22385                           fsr1l	equ	0xFE1
 22386                           indf2	equ	0xFDF
 22387                           postinc2	equ	0xFDE
 22388                           postdec2	equ	0xFDD
 22389                           plusw2	equ	0xFDB
 22390                           fsr2h	equ	0xFDA
 22391                           fsr2l	equ	0xFD9
 22392                           status	equ	0xFD8
 22393                           
 22394 ;; *************** function _OpenTimer0 *****************
 22395 ;; Defined at:
 22396 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0open.c"
 22397 ;; Parameters:    Size  Location     Type
 22398 ;;  config          1   21[COMRAM] unsigned char 
 22399 ;; Auto vars:     Size  Location     Type
 22400 ;;		None
 22401 ;; Return value:  Size  Location     Type
 22402 ;;		None               void
 22403 ;; Registers used:
 22404 ;;		wreg, status,2, status,0
 22405 ;; Tracked objects:
 22406 ;;		On entry : 0/0
 22407 ;;		On exit  : 0/0
 22408 ;;		Unchanged: 0/0
 22409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22410 ;;      Params:         1       0       0       0       0       0       0
 22411 ;;      Locals:         0       0       0       0       0       0       0
 22412 ;;      Temps:          0       0       0       0       0       0       0
 22413 ;;      Totals:         1       0       0       0       0       0       0
 22414 ;;Total ram usage:        1 bytes
 22415 ;; Hardware stack levels used:    1
 22416 ;; Hardware stack levels required when called:    2
 22417 ;; This function calls:
 22418 ;;		Nothing
 22419 ;; This function is called by:
 22420 ;;		_init
 22421 ;; This function uses a non-reentrant model
 22422 ;;
 22423                           
 22424                           	psect	text70
 22425  006E86                     __ptext70:
 22426                           	opt stack 0
 22427  006E86                     _OpenTimer0:
 22428                           	opt stack 26
 22429                           
 22430                           ;incstack = 0
 22431                           ;incstack = 0
 22432  006E86  5016               	movf	OpenTimer0@config,w,c
 22433  006E88  0B7F               	andlw	127
 22434  006E8A  6ED5               	movwf	4053,c	;volatile
 22435  006E8C  0E00               	movlw	0
 22436  006E8E  6ED7               	movwf	4055,c	;volatile
 22437  006E90  0E00               	movlw	0
 22438  006E92  6ED6               	movwf	4054,c	;volatile
 22439  006E94  94F2               	bcf	intcon,2,c	;volatile
 22440  006E96  AE16               	btfss	OpenTimer0@config,7,c
 22441  006E98  D002               	goto	l1443
 22442  006E9A  8AF2               	bsf	intcon,5,c	;volatile
 22443  006E9C  D001               	goto	l1444
 22444  006E9E                     l1443:
 22445  006E9E  9AF2               	bcf	intcon,5,c	;volatile
 22446  006EA0                     l1444:
 22447  006EA0  8ED5               	bsf	4053,7,c	;volatile
 22448  006EA2  0012               	return	
 22449  006EA4                     __end_of_OpenTimer0:
 22450                           	opt stack 0
 22451                           tblptru	equ	0xFF8
 22452                           tblptrh	equ	0xFF7
 22453                           tblptrl	equ	0xFF6
 22454                           tablat	equ	0xFF5
 22455                           prodh	equ	0xFF4
 22456                           prodl	equ	0xFF3
 22457                           intcon	equ	0xFF2
 22458                           intcon2	equ	0xFF1
 22459                           postinc0	equ	0xFEE
 22460                           wreg	equ	0xFE8
 22461                           indf1	equ	0xFE7
 22462                           fsr1h	equ	0xFE2
 22463                           fsr1l	equ	0xFE1
 22464                           indf2	equ	0xFDF
 22465                           postinc2	equ	0xFDE
 22466                           postdec2	equ	0xFDD
 22467                           plusw2	equ	0xFDB
 22468                           fsr2h	equ	0xFDA
 22469                           fsr2l	equ	0xFD9
 22470                           status	equ	0xFD8
 22471                           
 22472 ;; *************** function _WriteTimer0 *****************
 22473 ;; Defined at:
 22474 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c"
 22475 ;; Parameters:    Size  Location     Type
 22476 ;;  timer0          2   21[COMRAM] unsigned int 
 22477 ;; Auto vars:     Size  Location     Type
 22478 ;;  timer           2   23[COMRAM] struct Timers
 22479 ;; Return value:  Size  Location     Type
 22480 ;;		None               void
 22481 ;; Registers used:
 22482 ;;		None
 22483 ;; Tracked objects:
 22484 ;;		On entry : 0/0
 22485 ;;		On exit  : 0/0
 22486 ;;		Unchanged: 0/0
 22487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22488 ;;      Params:         2       0       0       0       0       0       0
 22489 ;;      Locals:         2       0       0       0       0       0       0
 22490 ;;      Temps:          0       0       0       0       0       0       0
 22491 ;;      Totals:         4       0       0       0       0       0       0
 22492 ;;Total ram usage:        4 bytes
 22493 ;; Hardware stack levels used:    1
 22494 ;; Hardware stack levels required when called:    2
 22495 ;; This function calls:
 22496 ;;		Nothing
 22497 ;; This function is called by:
 22498 ;;		_init
 22499 ;; This function uses a non-reentrant model
 22500 ;;
 22501                           
 22502                           	psect	text71
 22503  006F9E                     __ptext71:
 22504                           	opt stack 0
 22505  006F9E                     _WriteTimer0:
 22506                           	opt stack 26
 22507                           
 22508                           ;incstack = 0
 22509                           ;incstack = 0
 22510  006F9E  C016  F018         	movff	WriteTimer0@timer0,WriteTimer0@timer
 22511  006FA2  C017  F019         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 22512  006FA6  C019  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 22513  006FAA  C018  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 22514  006FAE  0012               	return	
 22515  006FB0                     __end_of_WriteTimer0:
 22516                           	opt stack 0
 22517                           tblptru	equ	0xFF8
 22518                           tblptrh	equ	0xFF7
 22519                           tblptrl	equ	0xFF6
 22520                           tablat	equ	0xFF5
 22521                           prodh	equ	0xFF4
 22522                           prodl	equ	0xFF3
 22523                           intcon	equ	0xFF2
 22524                           intcon2	equ	0xFF1
 22525                           postinc0	equ	0xFEE
 22526                           wreg	equ	0xFE8
 22527                           indf1	equ	0xFE7
 22528                           fsr1h	equ	0xFE2
 22529                           fsr1l	equ	0xFE1
 22530                           indf2	equ	0xFDF
 22531                           postinc2	equ	0xFDE
 22532                           postdec2	equ	0xFDD
 22533                           plusw2	equ	0xFDB
 22534                           fsr2h	equ	0xFDA
 22535                           fsr2l	equ	0xFD9
 22536                           status	equ	0xFD8
 22537                           
 22538 ;; *************** function _ECANInitialize *****************
 22539 ;; Defined at:
 22540 ;;		line 168 in file "../ECAN.c"
 22541 ;; Parameters:    Size  Location     Type
 22542 ;;		None
 22543 ;; Auto vars:     Size  Location     Type
 22544 ;;		None
 22545 ;; Return value:  Size  Location     Type
 22546 ;;		None               void
 22547 ;; Registers used:
 22548 ;;		wreg, status,2, status,0, cstack
 22549 ;; Tracked objects:
 22550 ;;		On entry : 0/0
 22551 ;;		On exit  : 0/0
 22552 ;;		Unchanged: 0/0
 22553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22554 ;;      Params:         0       0       0       0       0       0       0
 22555 ;;      Locals:         0       0       0       0       0       0       0
 22556 ;;      Temps:          1       0       0       0       0       0       0
 22557 ;;      Totals:         1       0       0       0       0       0       0
 22558 ;;Total ram usage:        1 bytes
 22559 ;; Hardware stack levels used:    1
 22560 ;; Hardware stack levels required when called:    3
 22561 ;; This function calls:
 22562 ;;		_ECANSetOperationMode
 22563 ;; This function is called by:
 22564 ;;		_init
 22565 ;; This function uses a non-reentrant model
 22566 ;;
 22567                           
 22568                           	psect	text72
 22569  005FCC                     __ptext72:
 22570                           	opt stack 0
 22571  005FCC                     _ECANInitialize:
 22572                           	opt stack 25
 22573                           
 22574                           ;ECAN.c: 171: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
 22575                           
 22576                           ;incstack = 0
 22577                           ;incstack = 0
 22578  005FCC  6E17               	movwf	??_ECANInitialize& (0+255),c
 22579  005FCE  0E80               	movlw	128
 22580  005FD0  6E16               	movwf	?_ECANSetOperationMode,c
 22581  005FD2  5017               	movf	??_ECANInitialize& (0+255),w,c
 22582  005FD4  EC98  F037         	call	_ECANSetOperationMode	;wreg free
 22583                           
 22584                           ;ECAN.c: 175: BRGCON1 = ((1-1) << 6) | (10-1);
 22585  005FD8  0E09               	movlw	9
 22586  005FDA  6E70               	movwf	3952,c	;volatile
 22587                           
 22588                           ;ECAN.c: 176: BRGCON2 = (1 << 7) | (1 << 6) | ((8-1) << 3) | (5-1);
 22589  005FDC  0EFC               	movlw	252
 22590  005FDE  6E71               	movwf	3953,c	;volatile
 22591                           
 22592                           ;ECAN.c: 180: BRGCON3 = (0 << 7) |
 22593                           ;ECAN.c: 181: (0 << 6) |
 22594                           ;ECAN.c: 182: (2-1);
 22595  005FE0  0E01               	movlw	1
 22596  005FE2  6E72               	movwf	3954,c	;volatile
 22597                           
 22598                           ;ECAN.c: 185: CIOCON = 0 << 7 | 0 << 6 | 1 << 5 | 0;
 22599  005FE4  0E20               	movlw	32
 22600  005FE6  6E73               	movwf	3955,c	;volatile
 22601                           
 22602                           ;ECAN.c: 192: MDSEL1 = 0x80 >> 7;
 22603  005FE8  8E77               	bsf	3959,7,c	;volatile
 22604                           
 22605                           ;ECAN.c: 193: MDSEL0 = 0x80 >> 6;
 22606  005FEA  9C77               	bcf	3959,6,c	;volatile
 22607                           
 22608                           ;ECAN.c: 205: RXB0CON = 0;
 22609  005FEC  0E00               	movlw	0
 22610  005FEE  6E60               	movwf	3936,c	;volatile
 22611                           
 22612                           ;ECAN.c: 211: RXB1CON = 0;
 22613  005FF0  0E00               	movlw	0
 22614  005FF2  010F               	movlb	15	; () banked
 22615  005FF4  010F               	movlb	15	; () banked
 22616  005FF6  6F50               	movwf	80,b	;volatile
 22617                           
 22618                           ; BSR set to: 15
 22619                           ;ECAN.c: 221: B0CON = 0;
 22620  005FF8  0E00               	movlw	0
 22621  005FFA  010E               	movlb	14	; () banked
 22622  005FFC  010E               	movlb	14	; () banked
 22623  005FFE  6F20               	movwf	32,b	;volatile
 22624                           
 22625                           ; BSR set to: 14
 22626                           ;ECAN.c: 231: B1CON = 0;
 22627  006000  0E00               	movlw	0
 22628  006002  010E               	movlb	14	; () banked
 22629  006004  010E               	movlb	14	; () banked
 22630  006006  6F30               	movwf	48,b	;volatile
 22631                           
 22632                           ; BSR set to: 14
 22633                           ;ECAN.c: 241: B2CON = 0;
 22634  006008  0E00               	movlw	0
 22635  00600A  010E               	movlb	14	; () banked
 22636  00600C  010E               	movlb	14	; () banked
 22637  00600E  6F40               	movwf	64,b	;volatile
 22638                           
 22639                           ; BSR set to: 14
 22640                           ;ECAN.c: 254: B3CON = 0 << 2;
 22641  006010  0E00               	movlw	0
 22642  006012  010E               	movlb	14	; () banked
 22643  006014  010E               	movlb	14	; () banked
 22644  006016  6F50               	movwf	80,b	;volatile
 22645                           
 22646                           ; BSR set to: 14
 22647                           ;ECAN.c: 264: B4CON = 0 << 2;
 22648  006018  0E00               	movlw	0
 22649  00601A  010E               	movlb	14	; () banked
 22650  00601C  010E               	movlb	14	; () banked
 22651  00601E  6F60               	movwf	96,b	;volatile
 22652                           
 22653                           ; BSR set to: 14
 22654                           ;ECAN.c: 274: B5CON = 0 << 2;
 22655  006020  0E00               	movlw	0
 22656  006022  010E               	movlb	14	; () banked
 22657  006024  010E               	movlb	14	; () banked
 22658  006026  6F70               	movwf	112,b	;volatile
 22659                           
 22660                           ; BSR set to: 14
 22661                           ;ECAN.c: 278: BSEL0 = 1 << 7 | 1 << 6 | 1 << 5 | 0 << 4 | 0 << 3 | 0 << 2;
 22662  006028  0EE0               	movlw	224
 22663  00602A  010D               	movlb	13	; () banked
 22664  00602C  010D               	movlb	13	; () banked
 22665  00602E  6FF8               	movwf	248,b	;volatile
 22666                           
 22667                           ; BSR set to: 13
 22668                           ;ECAN.c: 295: RXF0SIDH = (long)0x00000000L >> 21L;RXF0SIDL = (((long)0x00000000L >> 13L)
      +                           & 0xe0) | ((long)(0x00000000L) & 0x03L) | 0x08;RXF0EIDH = (long)0x00000000L >> 8L;RXF0E
      +                          IDL = 0x00000000L;;
 22669  006030  0E00               	movlw	0
 22670  006032  010F               	movlb	15	; () banked
 22671  006034  010F               	movlb	15	; () banked
 22672  006036  6F00               	movwf	0,b	;volatile
 22673                           
 22674                           ; BSR set to: 15
 22675  006038  0E08               	movlw	8
 22676  00603A  010F               	movlb	15	; () banked
 22677  00603C  010F               	movlb	15	; () banked
 22678  00603E  6F01               	movwf	1,b	;volatile
 22679                           
 22680                           ; BSR set to: 15
 22681  006040  0E00               	movlw	0
 22682  006042  010F               	movlb	15	; () banked
 22683  006044  010F               	movlb	15	; () banked
 22684  006046  6F02               	movwf	2,b	;volatile
 22685                           
 22686                           ; BSR set to: 15
 22687  006048  0E00               	movlw	0
 22688  00604A  010F               	movlb	15	; () banked
 22689  00604C  010F               	movlb	15	; () banked
 22690  00604E  6F03               	movwf	3,b	;volatile
 22691                           
 22692                           ; BSR set to: 15
 22693                           ;ECAN.c: 303: RXF1SIDH = (long)0x001E1A00L >> 21L;RXF1SIDL = (((long)0x001E1A00L >> 13L)
      +                           & 0xe0) | ((long)(0x001E1A00L) & 0x03L) | 0x08;RXF1EIDH = (long)0x001E1A00L >> 8L;RXF1E
      +                          IDL = 0x001E1A00L;;
 22694  006050  0E00               	movlw	0
 22695  006052  010F               	movlb	15	; () banked
 22696  006054  010F               	movlb	15	; () banked
 22697  006056  6F04               	movwf	4,b	;volatile
 22698                           
 22699                           ; BSR set to: 15
 22700  006058  0EE8               	movlw	232
 22701  00605A  010F               	movlb	15	; () banked
 22702  00605C  010F               	movlb	15	; () banked
 22703  00605E  6F05               	movwf	5,b	;volatile
 22704                           
 22705                           ; BSR set to: 15
 22706  006060  0E1A               	movlw	26
 22707  006062  010F               	movlb	15	; () banked
 22708  006064  010F               	movlb	15	; () banked
 22709  006066  6F06               	movwf	6,b	;volatile
 22710                           
 22711                           ; BSR set to: 15
 22712  006068  0E00               	movlw	0
 22713  00606A  010F               	movlb	15	; () banked
 22714  00606C  010F               	movlb	15	; () banked
 22715  00606E  6F07               	movwf	7,b	;volatile
 22716                           
 22717                           ; BSR set to: 15
 22718                           ;ECAN.c: 428: RXFCON0 = (0 << 7) | (0 << 6) | (0 << 5) | (0 << 4) | (0 << 3) | (0 << 2) 
      +                          | (1 << 1) | (1);
 22719  006070  0E03               	movlw	3
 22720  006072  010D               	movlb	13	; () banked
 22721  006074  010D               	movlb	13	; () banked
 22722  006076  6FD4               	movwf	212,b	;volatile
 22723                           
 22724                           ; BSR set to: 13
 22725                           ;ECAN.c: 436: RXFCON1 = (0 << 7) | (0 << 6) | (0 << 5) | (0 << 4) | (0 << 3) | (0 << 2) 
      +                          | (0 << 1) | (0);
 22726  006078  0E00               	movlw	0
 22727  00607A  010D               	movlb	13	; () banked
 22728  00607C  010D               	movlb	13	; () banked
 22729  00607E  6FD5               	movwf	213,b	;volatile
 22730                           
 22731                           ; BSR set to: 13
 22732                           ;ECAN.c: 449: RXFBCON0 = (0 << 4) | 0;
 22733  006080  0E00               	movlw	0
 22734  006082  010D               	movlb	13	; () banked
 22735  006084  010D               	movlb	13	; () banked
 22736  006086  6FE0               	movwf	224,b	;volatile
 22737                           
 22738                           ; BSR set to: 13
 22739                           ;ECAN.c: 450: RXFBCON1 = (1 << 4) | 1;
 22740  006088  0E11               	movlw	17
 22741  00608A  010D               	movlb	13	; () banked
 22742  00608C  010D               	movlb	13	; () banked
 22743  00608E  6FE1               	movwf	225,b	;volatile
 22744                           
 22745                           ; BSR set to: 13
 22746                           ;ECAN.c: 451: RXFBCON2 = (1 << 4) | 1;
 22747  006090  0E11               	movlw	17
 22748  006092  010D               	movlb	13	; () banked
 22749  006094  010D               	movlb	13	; () banked
 22750  006096  6FE2               	movwf	226,b	;volatile
 22751                           
 22752                           ; BSR set to: 13
 22753                           ;ECAN.c: 452: RXFBCON3 = (0 << 4) | 0;
 22754  006098  0E00               	movlw	0
 22755  00609A  010D               	movlb	13	; () banked
 22756  00609C  010D               	movlb	13	; () banked
 22757  00609E  6FE3               	movwf	227,b	;volatile
 22758                           
 22759                           ; BSR set to: 13
 22760                           ;ECAN.c: 453: RXFBCON4 = (0 << 4) | 0;
 22761  0060A0  0E00               	movlw	0
 22762  0060A2  010D               	movlb	13	; () banked
 22763  0060A4  010D               	movlb	13	; () banked
 22764  0060A6  6FE4               	movwf	228,b	;volatile
 22765                           
 22766                           ; BSR set to: 13
 22767                           ;ECAN.c: 454: RXFBCON5 = (0 << 4) | 0;
 22768  0060A8  0E00               	movlw	0
 22769  0060AA  010D               	movlb	13	; () banked
 22770  0060AC  010D               	movlb	13	; () banked
 22771  0060AE  6FE5               	movwf	229,b	;volatile
 22772                           
 22773                           ; BSR set to: 13
 22774                           ;ECAN.c: 455: RXFBCON6 = (0 << 4) | 0;
 22775  0060B0  0E00               	movlw	0
 22776  0060B2  010D               	movlb	13	; () banked
 22777  0060B4  010D               	movlb	13	; () banked
 22778  0060B6  6FE6               	movwf	230,b	;volatile
 22779                           
 22780                           ; BSR set to: 13
 22781                           ;ECAN.c: 456: RXFBCON7 = (0 << 4) | 0;
 22782  0060B8  0E00               	movlw	0
 22783  0060BA  010D               	movlb	13	; () banked
 22784  0060BC  010D               	movlb	13	; () banked
 22785  0060BE  6FE7               	movwf	231,b	;volatile
 22786                           
 22787                           ; BSR set to: 13
 22788                           ;ECAN.c: 458: MSEL0 = 1 << 6 | 1 << 4 | 1 << 2 | 0;;
 22789  0060C0  0E54               	movlw	84
 22790  0060C2  010D               	movlb	13	; () banked
 22791  0060C4  010D               	movlb	13	; () banked
 22792  0060C6  6FF0               	movwf	240,b	;volatile
 22793                           
 22794                           ; BSR set to: 13
 22795                           ;ECAN.c: 462: MSEL1 = 0 << 6 | 0 << 4 | 1 << 2 | 1;;
 22796  0060C8  0E05               	movlw	5
 22797  0060CA  010D               	movlb	13	; () banked
 22798  0060CC  010D               	movlb	13	; () banked
 22799  0060CE  6FF1               	movwf	241,b	;volatile
 22800                           
 22801                           ; BSR set to: 13
 22802                           ;ECAN.c: 466: MSEL2 = 0 << 6 | 0 << 4 | 0 << 2 | 0;;
 22803  0060D0  0E00               	movlw	0
 22804  0060D2  010D               	movlb	13	; () banked
 22805  0060D4  010D               	movlb	13	; () banked
 22806  0060D6  6FF2               	movwf	242,b	;volatile
 22807                           
 22808                           ; BSR set to: 13
 22809                           ;ECAN.c: 470: MSEL2 = 0 << 6 | 0 << 4 | 0 << 2 | 0;;
 22810  0060D8  0E00               	movlw	0
 22811  0060DA  010D               	movlb	13	; () banked
 22812  0060DC  010D               	movlb	13	; () banked
 22813  0060DE  6FF2               	movwf	242,b	;volatile
 22814                           
 22815                           ; BSR set to: 13
 22816                           ;ECAN.c: 481: RXM0SIDH = (long)0x01FF0000L >> 21L; RXM0SIDL = (((long)0x01FF0000L >> 13L
      +                          ) & 0xe0) | ((long)(0x01FF0000L) & 0x03L); RXM0EIDH = (long)0x01FF0000L >> 8L; RXM0EIDL 
      +                          = 0x01FF0000L;;
 22817  0060E0  0E0F               	movlw	15
 22818  0060E2  010F               	movlb	15	; () banked
 22819  0060E4  010F               	movlb	15	; () banked
 22820  0060E6  6F18               	movwf	24,b	;volatile
 22821                           
 22822                           ; BSR set to: 15
 22823  0060E8  0EE0               	movlw	224
 22824  0060EA  010F               	movlb	15	; () banked
 22825  0060EC  010F               	movlb	15	; () banked
 22826  0060EE  6F19               	movwf	25,b	;volatile
 22827                           
 22828                           ; BSR set to: 15
 22829  0060F0  0E00               	movlw	0
 22830  0060F2  010F               	movlb	15	; () banked
 22831  0060F4  010F               	movlb	15	; () banked
 22832  0060F6  6F1A               	movwf	26,b	;volatile
 22833                           
 22834                           ; BSR set to: 15
 22835  0060F8  0E00               	movlw	0
 22836  0060FA  010F               	movlb	15	; () banked
 22837  0060FC  010F               	movlb	15	; () banked
 22838  0060FE  6F1B               	movwf	27,b	;volatile
 22839                           
 22840                           ; BSR set to: 15
 22841                           ;ECAN.c: 482: RXM0EXIDM = 1;
 22842  006100  010F               	movlb	15
 22843  006102  010F               	movlb	15	; () banked
 22844  006104  8719               	bsf	25,3,b	;volatile
 22845                           
 22846                           ; BSR set to: 15
 22847                           ;ECAN.c: 489: RXM1SIDH = (long)0x01FFFF00L >> 21L; RXM1SIDL = (((long)0x01FFFF00L >> 13L
      +                          ) & 0xe0) | ((long)(0x01FFFF00L) & 0x03L); RXM1EIDH = (long)0x01FFFF00L >> 8L; RXM1EIDL 
      +                          = 0x01FFFF00L;;
 22848  006106  0E0F               	movlw	15
 22849  006108  010F               	movlb	15	; () banked
 22850  00610A  010F               	movlb	15	; () banked
 22851  00610C  6F1C               	movwf	28,b	;volatile
 22852                           
 22853                           ; BSR set to: 15
 22854  00610E  0EE0               	movlw	224
 22855  006110  010F               	movlb	15	; () banked
 22856  006112  010F               	movlb	15	; () banked
 22857  006114  6F1D               	movwf	29,b	;volatile
 22858                           
 22859                           ; BSR set to: 15
 22860  006116  010F               	movlb	15	; () banked
 22861  006118  010F               	movlb	15	; () banked
 22862  00611A  691E               	setf	30,b	;volatile
 22863                           
 22864                           ; BSR set to: 15
 22865  00611C  0E00               	movlw	0
 22866  00611E  010F               	movlb	15	; () banked
 22867  006120  010F               	movlb	15	; () banked
 22868  006122  6F1F               	movwf	31,b	;volatile
 22869                           
 22870                           ; BSR set to: 15
 22871                           ;ECAN.c: 490: RXM1EXIDEN = 1;
 22872  006124  010F               	movlb	15
 22873  006126  010F               	movlb	15	; () banked
 22874  006128  871D               	bsf	29,3,b	;volatile
 22875                           
 22876                           ;ECAN.c: 498: ECANSetOperationMode(0x00);
 22877  00612A  6E17               	movwf	??_ECANInitialize& (0+255),c
 22878  00612C  0E00               	movlw	0
 22879  00612E  6E16               	movwf	?_ECANSetOperationMode,c
 22880  006130  5017               	movf	??_ECANInitialize& (0+255),w,c
 22881  006132  EC98  F037         	call	_ECANSetOperationMode	;wreg free
 22882  006136  0012               	return	
 22883  006138                     __end_of_ECANInitialize:
 22884                           	opt stack 0
 22885                           tblptru	equ	0xFF8
 22886                           tblptrh	equ	0xFF7
 22887                           tblptrl	equ	0xFF6
 22888                           tablat	equ	0xFF5
 22889                           prodh	equ	0xFF4
 22890                           prodl	equ	0xFF3
 22891                           intcon	equ	0xFF2
 22892                           intcon2	equ	0xFF1
 22893                           postinc0	equ	0xFEE
 22894                           wreg	equ	0xFE8
 22895                           indf1	equ	0xFE7
 22896                           fsr1h	equ	0xFE2
 22897                           fsr1l	equ	0xFE1
 22898                           indf2	equ	0xFDF
 22899                           postinc2	equ	0xFDE
 22900                           postdec2	equ	0xFDD
 22901                           plusw2	equ	0xFDB
 22902                           fsr2h	equ	0xFDA
 22903                           fsr2l	equ	0xFD9
 22904                           status	equ	0xFD8
 22905                           
 22906 ;; *************** function _ECANSetOperationMode *****************
 22907 ;; Defined at:
 22908 ;;		line 1012 in file "../ECAN.c"
 22909 ;; Parameters:    Size  Location     Type
 22910 ;;  mode            1   21[COMRAM] enum E16346
 22911 ;; Auto vars:     Size  Location     Type
 22912 ;;		None
 22913 ;; Return value:  Size  Location     Type
 22914 ;;		None               void
 22915 ;; Registers used:
 22916 ;;		wreg, status,2, status,0
 22917 ;; Tracked objects:
 22918 ;;		On entry : 0/0
 22919 ;;		On exit  : 0/0
 22920 ;;		Unchanged: 0/0
 22921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22922 ;;      Params:         1       0       0       0       0       0       0
 22923 ;;      Locals:         0       0       0       0       0       0       0
 22924 ;;      Temps:          0       0       0       0       0       0       0
 22925 ;;      Totals:         1       0       0       0       0       0       0
 22926 ;;Total ram usage:        1 bytes
 22927 ;; Hardware stack levels used:    1
 22928 ;; Hardware stack levels required when called:    2
 22929 ;; This function calls:
 22930 ;;		Nothing
 22931 ;; This function is called by:
 22932 ;;		_ECANInitialize
 22933 ;;		_calculateSetFilterMask
 22934 ;; This function uses a non-reentrant model
 22935 ;;
 22936                           
 22937                           	psect	text73
 22938  006F30                     __ptext73:
 22939                           	opt stack 0
 22940  006F30                     _ECANSetOperationMode:
 22941                           	opt stack 23
 22942                           
 22943                           ;ECAN.c: 1013: CANCON &= 0x1F;
 22944                           
 22945                           ;incstack = 0
 22946                           ;incstack = 0
 22947  006F30  0E1F               	movlw	31
 22948  006F32  166F               	andwf	3951,f,c	;volatile
 22949                           
 22950                           ;ECAN.c: 1014: CANCON |= mode;
 22951  006F34  5016               	movf	ECANSetOperationMode@mode,w,c
 22952  006F36  126F               	iorwf	3951,f,c	;volatile
 22953  006F38                     l8780:
 22954  006F38  506F               	movf	3951,w,c	;volatile
 22955  006F3A  0BE0               	andlw	224
 22956  006F3C  1816               	xorwf	ECANSetOperationMode@mode,w,c
 22957  006F3E  B4D8               	btfsc	status,2,c
 22958  006F40  0012               	return	
 22959  006F42  D7FA               	goto	l8780
 22960  006F44                     __end_of_ECANSetOperationMode:
 22961                           	opt stack 0
 22962                           tblptru	equ	0xFF8
 22963                           tblptrh	equ	0xFF7
 22964                           tblptrl	equ	0xFF6
 22965                           tablat	equ	0xFF5
 22966                           prodh	equ	0xFF4
 22967                           prodl	equ	0xFF3
 22968                           intcon	equ	0xFF2
 22969                           intcon2	equ	0xFF1
 22970                           postinc0	equ	0xFEE
 22971                           wreg	equ	0xFE8
 22972                           indf1	equ	0xFE7
 22973                           fsr1h	equ	0xFE2
 22974                           fsr1l	equ	0xFE1
 22975                           indf2	equ	0xFDF
 22976                           postinc2	equ	0xFDE
 22977                           postdec2	equ	0xFDD
 22978                           plusw2	equ	0xFDB
 22979                           fsr2h	equ	0xFDA
 22980                           fsr2l	equ	0xFD9
 22981                           status	equ	0xFD8
 22982                           
 22983 ;; *************** function _vscp_readAppReg *****************
 22984 ;; Defined at:
 22985 ;;		line 1006 in file "../main.c"
 22986 ;; Parameters:    Size  Location     Type
 22987 ;;  reg             1   23[COMRAM] unsigned char 
 22988 ;; Auto vars:     Size  Location     Type
 22989 ;;  rv              1   25[COMRAM] unsigned char 
 22990 ;; Return value:  Size  Location     Type
 22991 ;;                  1    wreg      unsigned char 
 22992 ;; Registers used:
 22993 ;;		wreg, status,2, status,0, cstack
 22994 ;; Tracked objects:
 22995 ;;		On entry : 0/0
 22996 ;;		On exit  : 0/0
 22997 ;;		Unchanged: 0/0
 22998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22999 ;;      Params:         1       0       0       0       0       0       0
 23000 ;;      Locals:         1       0       0       0       0       0       0
 23001 ;;      Temps:          1       0       0       0       0       0       0
 23002 ;;      Totals:         3       0       0       0       0       0       0
 23003 ;;Total ram usage:        3 bytes
 23004 ;; Hardware stack levels used:    1
 23005 ;; Hardware stack levels required when called:    3
 23006 ;; This function calls:
 23007 ;;		_Read_b_eep
 23008 ;; This function is called by:
 23009 ;;		_vscp_readRegister
 23010 ;;		_vscp_handleProtocolEvent
 23011 ;; This function uses a non-reentrant model
 23012 ;;
 23013                           
 23014                           	psect	text74
 23015  006296                     __ptext74:
 23016                           	opt stack 0
 23017  006296                     _vscp_readAppReg:
 23018                           	opt stack 24
 23019                           
 23020                           ;main.c: 1007: uint8_t rv;
 23021                           ;main.c: 1009: rv = 0x00;
 23022                           
 23023                           ;incstack = 0
 23024                           ;incstack = 0
 23025  006296  6E19               	movwf	??_vscp_readAppReg& (0+255),c
 23026  006298  0E00               	movlw	0
 23027  00629A  6E1A               	movwf	vscp_readAppReg@rv,c
 23028  00629C  5019               	movf	??_vscp_readAppReg& (0+255),w,c
 23029                           
 23030                           ;main.c: 1012: if ( 0 == vscp_page_select ) {
 23031  00629E  5037               	movf	_vscp_page_select+1,w,c
 23032  0062A0  1036               	iorwf	_vscp_page_select,w,c
 23033  0062A2  A4D8               	btfss	status,2,c
 23034  0062A4  D079               	goto	l10356
 23035                           
 23036                           ;main.c: 1015: if ( reg == 0 ) {
 23037  0062A6  6618               	tstfsz	vscp_readAppReg@reg,c
 23038  0062A8  D007               	goto	l10310
 23039                           
 23040                           ;main.c: 1016: rv = Read_b_eep(0x43 + 0);
 23041  0062AA  0E00               	movlw	0
 23042  0062AC  6E17               	movwf	?_Read_b_eep+1,c
 23043  0062AE  0E43               	movlw	67
 23044  0062B0  6E16               	movwf	?_Read_b_eep,c
 23045  0062B2  ECD8  F037         	call	_Read_b_eep	;wreg free
 23046  0062B6  D090               	goto	L161
 23047  0062B8                     l10310:
 23048                           
 23049                           ;main.c: 1018: else if ( reg == 1 ) {
 23050  0062B8  0418               	decf	vscp_readAppReg@reg,w,c
 23051  0062BA  A4D8               	btfss	status,2,c
 23052  0062BC  D007               	goto	l10314
 23053                           
 23054                           ;main.c: 1019: rv = Read_b_eep(0x43 + 1);
 23055  0062BE  0E00               	movlw	0
 23056  0062C0  6E17               	movwf	?_Read_b_eep+1,c
 23057  0062C2  0E44               	movlw	68
 23058  0062C4  6E16               	movwf	?_Read_b_eep,c
 23059  0062C6  ECD8  F037         	call	_Read_b_eep	;wreg free
 23060  0062CA  D086               	goto	L161
 23061  0062CC                     l10314:
 23062                           
 23063                           ;main.c: 1021: else if ( ( reg >= 2 ) &&
 23064                           ;main.c: 1022: ( reg <= 11 ) ) {
 23065  0062CC  0E01               	movlw	1
 23066  0062CE  6418               	cpfsgt	vscp_readAppReg@reg,c
 23067  0062D0  D00C               	goto	l10320
 23068  0062D2  0E0C               	movlw	12
 23069  0062D4  6018               	cpfslt	vscp_readAppReg@reg,c
 23070  0062D6  D009               	goto	l10320
 23071                           
 23072                           ;main.c: 1023: rv = Read_b_eep(0x43 + 2 + ( reg - 2 ));
 23073  0062D8  0E43               	movlw	67
 23074  0062DA  2418               	addwf	vscp_readAppReg@reg,w,c
 23075  0062DC  6E16               	movwf	?_Read_b_eep,c
 23076  0062DE  6A17               	clrf	?_Read_b_eep+1,c
 23077  0062E0  0E00               	movlw	0
 23078  0062E2  2217               	addwfc	?_Read_b_eep+1,f,c
 23079  0062E4  ECD8  F037         	call	_Read_b_eep	;wreg free
 23080  0062E8  D077               	goto	L161
 23081  0062EA                     l10320:
 23082                           
 23083                           ;main.c: 1027: else if ( ( reg >= 14 ) &&
 23084                           ;main.c: 1028: ( reg <= 23 ) ) {
 23085  0062EA  0E0D               	movlw	13
 23086  0062EC  6418               	cpfsgt	vscp_readAppReg@reg,c
 23087  0062EE  D045               	goto	l10350
 23088  0062F0  0E18               	movlw	24
 23089  0062F2  6018               	cpfslt	vscp_readAppReg@reg,c
 23090  0062F4  D042               	goto	l10350
 23091  0062F6  D021               	goto	l10348
 23092  0062F8                     l10326:
 23093                           
 23094                           ;main.c: 1034: rv = LATBbits.LATB0;
 23095  0062F8  0E00               	movlw	0
 23096  0062FA  B08A               	btfsc	3978,0,c	;volatile
 23097  0062FC  0E01               	movlw	1
 23098  0062FE  D06C               	goto	L161
 23099  006300                     l10328:
 23100                           
 23101                           ;main.c: 1039: rv = LATBbits.LATB1;
 23102  006300  0E00               	movlw	0
 23103  006302  B28A               	btfsc	3978,1,c	;volatile
 23104  006304  0E01               	movlw	1
 23105  006306  D068               	goto	L161
 23106  006308                     l10330:
 23107                           
 23108                           ;main.c: 1044: rv = LATCbits.LATC3;
 23109  006308  0E00               	movlw	0
 23110  00630A  B68B               	btfsc	3979,3,c	;volatile
 23111  00630C  0E01               	movlw	1
 23112  00630E  D064               	goto	L161
 23113  006310                     l10332:
 23114                           
 23115                           ;main.c: 1049: rv = LATCbits.LATC4;
 23116  006310  0E00               	movlw	0
 23117  006312  B88B               	btfsc	3979,4,c	;volatile
 23118  006314  0E01               	movlw	1
 23119  006316  D060               	goto	L161
 23120  006318                     l10334:
 23121                           
 23122                           ;main.c: 1054: rv = LATCbits.LATC5;
 23123  006318  0E00               	movlw	0
 23124  00631A  BA8B               	btfsc	3979,5,c	;volatile
 23125  00631C  0E01               	movlw	1
 23126  00631E  D05C               	goto	L161
 23127  006320                     l10336:
 23128                           
 23129                           ;main.c: 1059: rv = LATCbits.LATC6;
 23130  006320  0E00               	movlw	0
 23131  006322  BC8B               	btfsc	3979,6,c	;volatile
 23132  006324  0E01               	movlw	1
 23133  006326  D058               	goto	L161
 23134  006328                     l10338:
 23135                           
 23136                           ;main.c: 1064: rv = LATCbits.LATC7;
 23137  006328  0E00               	movlw	0
 23138  00632A  BE8B               	btfsc	3979,7,c	;volatile
 23139  00632C  0E01               	movlw	1
 23140  00632E  D054               	goto	L161
 23141  006330                     l10344:
 23142                           
 23143                           ;main.c: 1079: rv = 0;
 23144  006330  6E19               	movwf	??_vscp_readAppReg& (0+255),c
 23145  006332  0E00               	movlw	0
 23146  006334  6E1A               	movwf	vscp_readAppReg@rv,c
 23147  006336  5019               	movf	??_vscp_readAppReg& (0+255),w,c
 23148                           
 23149                           ;main.c: 1080: break;
 23150  006338  D050               	goto	l10368
 23151  00633A                     l10348:
 23152  00633A  5018               	movf	vscp_readAppReg@reg,w,c
 23153                           
 23154                           ; Switch size 1, requested type "space"
 23155                           ; Number of cases is 10, Range of values is 14 to 23
 23156                           ; switch strategies available:
 23157                           ; Name         Instructions Cycles
 23158                           ; simple_byte           31    16 (average)
 23159                           ;	Chosen strategy is simple_byte
 23160  00633C  0A0E               	xorlw	14	; case 14
 23161  00633E  B4D8               	btfsc	status,2,c
 23162  006340  D7DB               	goto	l10326
 23163  006342  0A01               	xorlw	1	; case 15
 23164  006344  B4D8               	btfsc	status,2,c
 23165  006346  D7DC               	goto	l10328
 23166  006348  0A1F               	xorlw	31	; case 16
 23167  00634A  B4D8               	btfsc	status,2,c
 23168  00634C  D7DD               	goto	l10330
 23169  00634E  0A01               	xorlw	1	; case 17
 23170  006350  B4D8               	btfsc	status,2,c
 23171  006352  D7DE               	goto	l10332
 23172  006354  0A03               	xorlw	3	; case 18
 23173  006356  B4D8               	btfsc	status,2,c
 23174  006358  D7DF               	goto	l10334
 23175  00635A  0A01               	xorlw	1	; case 19
 23176  00635C  B4D8               	btfsc	status,2,c
 23177  00635E  D7E0               	goto	l10336
 23178  006360  0A07               	xorlw	7	; case 20
 23179  006362  B4D8               	btfsc	status,2,c
 23180  006364  D7E1               	goto	l10338
 23181  006366  0A01               	xorlw	1	; case 21
 23182  006368  B4D8               	btfsc	status,2,c
 23183  00636A  D7E2               	goto	l10344
 23184  00636C  0A03               	xorlw	3	; case 22
 23185  00636E  B4D8               	btfsc	status,2,c
 23186  006370  D7DF               	goto	l10344
 23187  006372  0A01               	xorlw	1	; case 23
 23188  006374  B4D8               	btfsc	status,2,c
 23189  006376  D7DC               	goto	l10344
 23190  006378  D030               	goto	l10368
 23191  00637A                     l10350:
 23192                           
 23193                           ;main.c: 1084: else if ( ( reg >= 24 ) &&
 23194                           ;main.c: 1085: ( reg < 46 ) ) {
 23195  00637A  0E17               	movlw	23
 23196  00637C  6418               	cpfsgt	vscp_readAppReg@reg,c
 23197  00637E  D02D               	goto	l10368
 23198  006380  0E2E               	movlw	46
 23199  006382  6018               	cpfslt	vscp_readAppReg@reg,c
 23200  006384  D02A               	goto	l10368
 23201                           
 23202                           ;main.c: 1086: rv = Read_b_eep(0x43 + reg);
 23203  006386  0E43               	movlw	67
 23204  006388  2418               	addwf	vscp_readAppReg@reg,w,c
 23205  00638A  6E16               	movwf	?_Read_b_eep,c
 23206  00638C  6A17               	clrf	?_Read_b_eep+1,c
 23207  00638E  0E00               	movlw	0
 23208  006390  2217               	addwfc	?_Read_b_eep+1,f,c
 23209  006392  ECD8  F037         	call	_Read_b_eep	;wreg free
 23210  006396  D020               	goto	L161
 23211  006398                     l10356:
 23212                           
 23213                           ;main.c: 1092: else if ( 1 == vscp_page_select ) {
 23214  006398  0436               	decf	_vscp_page_select,w,c
 23215  00639A  1037               	iorwf	_vscp_page_select+1,w,c
 23216  00639C  A4D8               	btfss	status,2,c
 23217  00639E  D00C               	goto	l10362
 23218                           
 23219                           ;main.c: 1093: if ( reg < 40 ) {
 23220  0063A0  0E28               	movlw	40
 23221  0063A2  6018               	cpfslt	vscp_readAppReg@reg,c
 23222  0063A4  D01A               	goto	l10368
 23223                           
 23224                           ;main.c: 1094: rv = Read_b_eep(0x43 + 46 + reg);
 23225  0063A6  0E71               	movlw	113
 23226  0063A8  2418               	addwf	vscp_readAppReg@reg,w,c
 23227  0063AA  6E16               	movwf	?_Read_b_eep,c
 23228  0063AC  6A17               	clrf	?_Read_b_eep+1,c
 23229  0063AE  0E00               	movlw	0
 23230  0063B0  2217               	addwfc	?_Read_b_eep+1,f,c
 23231  0063B2  ECD8  F037         	call	_Read_b_eep	;wreg free
 23232  0063B6  D010               	goto	L161
 23233  0063B8                     l10362:
 23234                           
 23235                           ;main.c: 1098: else if ( 2 == vscp_page_select ) {
 23236  0063B8  5036               	movf	_vscp_page_select,w,c
 23237  0063BA  0A02               	xorlw	2
 23238  0063BC  1037               	iorwf	_vscp_page_select+1,w,c
 23239  0063BE  A4D8               	btfss	status,2,c
 23240  0063C0  D00C               	goto	l10368
 23241                           
 23242                           ;main.c: 1099: if ( reg < 8*8 ) {
 23243  0063C2  0E40               	movlw	64
 23244  0063C4  6018               	cpfslt	vscp_readAppReg@reg,c
 23245  0063C6  D009               	goto	l10368
 23246                           
 23247                           ;main.c: 1100: rv = Read_b_eep(0x43 + 46 + 40 + reg);
 23248  0063C8  0E99               	movlw	153
 23249  0063CA  2418               	addwf	vscp_readAppReg@reg,w,c
 23250  0063CC  6E16               	movwf	?_Read_b_eep,c
 23251  0063CE  6A17               	clrf	?_Read_b_eep+1,c
 23252  0063D0  0E00               	movlw	0
 23253  0063D2  2217               	addwfc	?_Read_b_eep+1,f,c
 23254  0063D4  ECD8  F037         	call	_Read_b_eep	;wreg free
 23255  0063D8                     L161:
 23256  0063D8  6E1A               	movwf	vscp_readAppReg@rv,c
 23257  0063DA                     l10368:
 23258                           
 23259                           ;main.c: 1101: }
 23260                           ;main.c: 1102: }
 23261                           ;main.c: 1104: return rv;
 23262  0063DA  501A               	movf	vscp_readAppReg@rv,w,c
 23263  0063DC  0012               	return	
 23264  0063DE                     __end_of_vscp_readAppReg:
 23265                           	opt stack 0
 23266                           tblptru	equ	0xFF8
 23267                           tblptrh	equ	0xFF7
 23268                           tblptrl	equ	0xFF6
 23269                           tablat	equ	0xFF5
 23270                           prodh	equ	0xFF4
 23271                           prodl	equ	0xFF3
 23272                           intcon	equ	0xFF2
 23273                           intcon2	equ	0xFF1
 23274                           postinc0	equ	0xFEE
 23275                           wreg	equ	0xFE8
 23276                           indf1	equ	0xFE7
 23277                           fsr1h	equ	0xFE2
 23278                           fsr1l	equ	0xFE1
 23279                           indf2	equ	0xFDF
 23280                           postinc2	equ	0xFDE
 23281                           postdec2	equ	0xFDD
 23282                           plusw2	equ	0xFDB
 23283                           fsr2h	equ	0xFDA
 23284                           fsr2l	equ	0xFD9
 23285                           status	equ	0xFD8
 23286                           
 23287 ;; *************** function _Read_b_eep *****************
 23288 ;; Defined at:
 23289 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\EEP\read_B.c"
 23290 ;; Parameters:    Size  Location     Type
 23291 ;;  badd            2   21[COMRAM] unsigned int 
 23292 ;; Auto vars:     Size  Location     Type
 23293 ;;		None
 23294 ;; Return value:  Size  Location     Type
 23295 ;;                  1    wreg      unsigned char 
 23296 ;; Registers used:
 23297 ;;		wreg, status,2
 23298 ;; Tracked objects:
 23299 ;;		On entry : 0/0
 23300 ;;		On exit  : 0/0
 23301 ;;		Unchanged: 0/0
 23302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23303 ;;      Params:         2       0       0       0       0       0       0
 23304 ;;      Locals:         0       0       0       0       0       0       0
 23305 ;;      Temps:          0       0       0       0       0       0       0
 23306 ;;      Totals:         2       0       0       0       0       0       0
 23307 ;;Total ram usage:        2 bytes
 23308 ;; Hardware stack levels used:    1
 23309 ;; Hardware stack levels required when called:    2
 23310 ;; This function calls:
 23311 ;;		Nothing
 23312 ;; This function is called by:
 23313 ;;		_init_app_ram
 23314 ;;		_doApplicationOneSecondWork
 23315 ;;		_vscp_readNicknamePermanent
 23316 ;;		_vscp_getZone
 23317 ;;		_vscp_getSubzone
 23318 ;;		_vscp_readAppReg
 23319 ;;		_vscp_writeAppReg
 23320 ;;		_SendInformationEvent
 23321 ;;		_doDM
 23322 ;;		_doActionOn
 23323 ;;		_doActionOff
 23324 ;;		_doActionPulse
 23325 ;;		_doActionStatus
 23326 ;;		_doActionToggle
 23327 ;;		_vscp_getGUID
 23328 ;;		_vscp_getUserID
 23329 ;;		_vscp_getManufacturerId
 23330 ;;		_vscp_getSegmentCRC
 23331 ;;		_calculateSetFilterMask
 23332 ;;		_doActionDisable
 23333 ;;		_vscp_getNickname
 23334 ;;		_vscp_getControlByte
 23335 ;; This function uses a non-reentrant model
 23336 ;;
 23337                           
 23338                           	psect	text75
 23339  006FB0                     __ptext75:
 23340                           	opt stack 0
 23341  006FB0                     _Read_b_eep:
 23342                           	opt stack 24
 23343                           
 23344                           ;incstack = 0
 23345                           ;incstack = 0
 23346  006FB0  C016  FFA9         	movff	Read_b_eep@badd,4009	;volatile
 23347  006FB4  9CA6               	bcf	4006,6,c	;volatile
 23348  006FB6  9EA6               	bcf	4006,7,c	;volatile
 23349  006FB8  80A6               	bsf	4006,0,c	;volatile
 23350  006FBA  F000               	nop		;# 
 23351  006FBC  F000               	nop		;# 
 23352  006FBE  50A8               	movf	4008,w,c	;volatile
 23353  006FC0  0012               	return	
 23354  006FC2                     __end_of_Read_b_eep:
 23355                           	opt stack 0
 23356                           tblptru	equ	0xFF8
 23357                           tblptrh	equ	0xFF7
 23358                           tblptrl	equ	0xFF6
 23359                           tablat	equ	0xFF5
 23360                           prodh	equ	0xFF4
 23361                           prodl	equ	0xFF3
 23362                           intcon	equ	0xFF2
 23363                           intcon2	equ	0xFF1
 23364                           postinc0	equ	0xFEE
 23365                           wreg	equ	0xFE8
 23366                           indf1	equ	0xFE7
 23367                           fsr1h	equ	0xFE2
 23368                           fsr1l	equ	0xFE1
 23369                           indf2	equ	0xFDF
 23370                           postinc2	equ	0xFDE
 23371                           postdec2	equ	0xFDD
 23372                           plusw2	equ	0xFDB
 23373                           fsr2h	equ	0xFDA
 23374                           fsr2l	equ	0xFD9
 23375                           status	equ	0xFD8
 23376                           
 23377 ;; *************** function _interrupt_at_low_vector *****************
 23378 ;; Defined at:
 23379 ;;		line 132 in file "../main.c"
 23380 ;; Parameters:    Size  Location     Type
 23381 ;;		None
 23382 ;; Auto vars:     Size  Location     Type
 23383 ;;		None
 23384 ;; Return value:  Size  Location     Type
 23385 ;;		None               void
 23386 ;; Registers used:
 23387 ;;		wreg, status,2, status,0, cstack
 23388 ;; Tracked objects:
 23389 ;;		On entry : 0/0
 23390 ;;		On exit  : 0/0
 23391 ;;		Unchanged: 0/0
 23392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23393 ;;      Params:         0       0       0       0       0       0       0
 23394 ;;      Locals:         0       0       0       0       0       0       0
 23395 ;;      Temps:         17       0       0       0       0       0       0
 23396 ;;      Totals:        17       0       0       0       0       0       0
 23397 ;;Total ram usage:       17 bytes
 23398 ;; Hardware stack levels used:    1
 23399 ;; Hardware stack levels required when called:    1
 23400 ;; This function calls:
 23401 ;;		i1_WriteTimer0
 23402 ;; This function is called by:
 23403 ;;		Interrupt level 1
 23404 ;; This function uses a non-reentrant model
 23405 ;;
 23406                           
 23407                           	psect	intcodelo
 23408  000018                     __pintcodelo:
 23409                           	opt stack 0
 23410  000018                     _interrupt_at_low_vector:
 23411                           	opt stack 20
 23412                           
 23413                           ;incstack = 0
 23414  000018  CFD8 F005          	movff	status,??_interrupt_at_low_vector
 23415  00001C  CFE8 F006          	movff	wreg,??_interrupt_at_low_vector+1
 23416  000020  CFE0 F007          	movff	bsr,??_interrupt_at_low_vector+2
 23417  000024  CFFA F008          	movff	pclath,??_interrupt_at_low_vector+3
 23418  000028  CFFB F009          	movff	pclatu,??_interrupt_at_low_vector+4
 23419  00002C  CFE9 F00A          	movff	fsr0l,??_interrupt_at_low_vector+5
 23420  000030  CFEA F00B          	movff	fsr0h,??_interrupt_at_low_vector+6
 23421  000034  CFE1 F00C          	movff	fsr1l,??_interrupt_at_low_vector+7
 23422  000038  CFE2 F00D          	movff	fsr1h,??_interrupt_at_low_vector+8
 23423  00003C  CFD9 F00E          	movff	fsr2l,??_interrupt_at_low_vector+9
 23424  000040  CFDA F00F          	movff	fsr2h,??_interrupt_at_low_vector+10
 23425  000044  CFF3 F010          	movff	prodl,??_interrupt_at_low_vector+11
 23426  000048  CFF4 F011          	movff	prodh,??_interrupt_at_low_vector+12
 23427  00004C  CFF6 F012          	movff	tblptrl,??_interrupt_at_low_vector+13
 23428  000050  CFF7 F013          	movff	tblptrh,??_interrupt_at_low_vector+14
 23429  000054  CFF8 F014          	movff	tblptru,??_interrupt_at_low_vector+15
 23430  000058  CFF5 F015          	movff	tablat,??_interrupt_at_low_vector+16
 23431  00005C                     
 23432                           ;main.c: 134: if ( INTCONbits.TMR0IF ) {
 23433  00005C  A4F2               	btfss	intcon,2,c	;volatile
 23434  00005E  D001               	goto	i1u976_21
 23435  000060  D001               	goto	i1u976_20
 23436  000062                     i1u976_21:
 23437  000062  D052               	goto	i1l403
 23438  000064                     i1u976_20:
 23439  000064                     
 23440                           ;main.c: 137: WriteTimer0(0xfb1d);
 23441  000064  0EFB               	movlw	251
 23442  000066  6E02               	movwf	?i1_WriteTimer0+1,c
 23443  000068  0E1D               	movlw	29
 23444  00006A  6E01               	movwf	?i1_WriteTimer0,c
 23445  00006C  ECE1  F037         	call	i1_WriteTimer0	;wreg free
 23446  000070                     
 23447                           ;main.c: 139: vscp_timer++;
 23448  000070  4A38               	infsnz	_vscp_timer,f,c	;volatile
 23449  000072  2A39               	incf	_vscp_timer+1,f,c	;volatile
 23450  000074                     
 23451                           ;main.c: 140: vscp_configtimer++;
 23452  000074  0100               	movlb	0	; () banked
 23453  000076  0100               	movlb	0	; () banked
 23454  000078  4BD9               	infsnz	_vscp_configtimer& (0+255),f,b	;volatile
 23455  00007A  2BDA               	incf	(_vscp_configtimer+1)& (0+255),f,b	;volatile
 23456  00007C                     
 23457                           ; BSR set to: 0
 23458                           ;main.c: 141: measurement_clock++;
 23459  00007C  0E01               	movlw	1
 23460  00007E  0100               	movlb	0	; () banked
 23461  000080  0100               	movlb	0	; () banked
 23462  000082  27D1               	addwf	_measurement_clock& (0+255),f,b	;volatile
 23463  000084  0E00               	movlw	0
 23464  000086  0100               	movlb	0	; () banked
 23465  000088  23D2               	addwfc	(_measurement_clock+1)& (0+255),f,b	;volatile
 23466  00008A  0E00               	movlw	0
 23467  00008C  0100               	movlb	0	; () banked
 23468  00008E  23D3               	addwfc	(_measurement_clock+2)& (0+255),f,b	;volatile
 23469  000090  0E00               	movlw	0
 23470  000092  0100               	movlb	0	; () banked
 23471  000094  23D4               	addwfc	(_measurement_clock+3)& (0+255),f,b	;volatile
 23472  000096                     
 23473                           ; BSR set to: 0
 23474                           ;main.c: 144: if ( PORTCbits.RC0 ) {
 23475  000096  A082               	btfss	3970,0,c	;volatile
 23476  000098  D001               	goto	i1u977_21
 23477  00009A  D001               	goto	i1u977_20
 23478  00009C                     i1u977_21:
 23479  00009C  D005               	goto	i1l8618
 23480  00009E                     i1u977_20:
 23481  00009E                     
 23482                           ; BSR set to: 0
 23483                           ;main.c: 145: vscp_initbtncnt = 0;
 23484  00009E  0E00               	movlw	0
 23485  0000A0  0100               	movlb	0	; () banked
 23486  0000A2  0100               	movlb	0	; () banked
 23487  0000A4  6FEA               	movwf	_vscp_initbtncnt& (0+255),b	;volatile
 23488                           
 23489                           ;main.c: 146: }
 23490  0000A6  D003               	goto	i1l395
 23491  0000A8                     i1l8618:
 23492                           
 23493                           ; BSR set to: 0
 23494                           ;main.c: 147: else {
 23495                           ;main.c: 149: vscp_initbtncnt++;
 23496  0000A8  0100               	movlb	0	; () banked
 23497  0000AA  0100               	movlb	0	; () banked
 23498  0000AC  2BEA               	incf	_vscp_initbtncnt& (0+255),f,b	;volatile
 23499  0000AE                     i1l395:
 23500                           
 23501                           ; BSR set to: 0
 23502                           ;main.c: 150: }
 23503                           ;main.c: 153: vscp_statuscnt++;
 23504  0000AE  2A3D               	incf	_vscp_statuscnt,f,c	;volatile
 23505  0000B0                     
 23506                           ; BSR set to: 0
 23507                           ;main.c: 154: if ( ( 0x02 == vscp_initledfunc ) &&
 23508                           ;main.c: 155: ( vscp_statuscnt > 100 ) ) {
 23509  0000B0  503B               	movf	_vscp_initledfunc,w,c
 23510  0000B2  0A02               	xorlw	2
 23511  0000B4  A4D8               	btfss	status,2,c
 23512  0000B6  D001               	goto	i1u978_21
 23513  0000B8  D001               	goto	i1u978_20
 23514  0000BA                     i1u978_21:
 23515  0000BA  D010               	goto	i1l8630
 23516  0000BC                     i1u978_20:
 23517  0000BC                     
 23518                           ; BSR set to: 0
 23519  0000BC  0E64               	movlw	100
 23520  0000BE  643D               	cpfsgt	_vscp_statuscnt,c	;volatile
 23521  0000C0  D001               	goto	i1u979_21
 23522  0000C2  D001               	goto	i1u979_20
 23523  0000C4                     i1u979_21:
 23524  0000C4  D00B               	goto	i1l8630
 23525  0000C6                     i1u979_20:
 23526  0000C6                     
 23527                           ; BSR set to: 0
 23528                           ;main.c: 157: if ( PORTCbits.RC1 ) {
 23529  0000C6  A282               	btfss	3970,1,c	;volatile
 23530  0000C8  D001               	goto	i1u980_21
 23531  0000CA  D001               	goto	i1u980_20
 23532  0000CC                     i1u980_21:
 23533  0000CC  D002               	goto	i1l397
 23534  0000CE                     i1u980_20:
 23535  0000CE                     
 23536                           ; BSR set to: 0
 23537                           ;main.c: 158: PORTCbits.RC1 = 0;
 23538  0000CE  9282               	bcf	3970,1,c	;volatile
 23539                           
 23540                           ;main.c: 159: }
 23541  0000D0  D002               	goto	i1l8628
 23542  0000D2                     i1l397:
 23543                           
 23544                           ; BSR set to: 0
 23545                           ;main.c: 160: else {
 23546                           ;main.c: 161: PORTCbits.RC1 = 1;
 23547  0000D2  8282               	bsf	3970,1,c	;volatile
 23548  0000D4  D000               	goto	i1l8628
 23549  0000D6                     i1l8628:
 23550                           
 23551                           ; BSR set to: 0
 23552                           ;main.c: 162: }
 23553                           ;main.c: 164: vscp_statuscnt = 0;
 23554  0000D6  0E00               	movlw	0
 23555  0000D8  6E3D               	movwf	_vscp_statuscnt,c	;volatile
 23556                           
 23557                           ;main.c: 166: }
 23558  0000DA  D013               	goto	i1l8640
 23559  0000DC                     i1l8630:
 23560                           
 23561                           ; BSR set to: 0
 23562                           ;main.c: 167: else if (0x01 == vscp_initledfunc) {
 23563  0000DC  043B               	decf	_vscp_initledfunc,w,c
 23564  0000DE  A4D8               	btfss	status,2,c
 23565  0000E0  D001               	goto	i1u981_21
 23566  0000E2  D001               	goto	i1u981_20
 23567  0000E4                     i1u981_21:
 23568  0000E4  D004               	goto	i1l400
 23569  0000E6                     i1u981_20:
 23570  0000E6                     
 23571                           ; BSR set to: 0
 23572                           ;main.c: 168: PORTCbits.RC1 = 1;
 23573  0000E6  8282               	bsf	3970,1,c	;volatile
 23574  0000E8                     
 23575                           ; BSR set to: 0
 23576                           ;main.c: 169: vscp_statuscnt = 0;
 23577  0000E8  0E00               	movlw	0
 23578  0000EA  6E3D               	movwf	_vscp_statuscnt,c	;volatile
 23579                           
 23580                           ;main.c: 170: }
 23581  0000EC  D00A               	goto	i1l8640
 23582  0000EE                     i1l400:
 23583                           
 23584                           ; BSR set to: 0
 23585                           ;main.c: 171: else if (0x00 == vscp_initledfunc) {
 23586  0000EE  663B               	tstfsz	_vscp_initledfunc,c
 23587  0000F0  D001               	goto	i1u982_21
 23588  0000F2  D001               	goto	i1u982_20
 23589  0000F4                     i1u982_21:
 23590  0000F4  D006               	goto	i1l8640
 23591  0000F6                     i1u982_20:
 23592  0000F6                     
 23593                           ; BSR set to: 0
 23594                           ;main.c: 172: PORTCbits.RC1 = 0;
 23595  0000F6  9282               	bcf	3970,1,c	;volatile
 23596  0000F8                     
 23597                           ; BSR set to: 0
 23598                           ;main.c: 173: vscp_statuscnt = 0;
 23599  0000F8  0E00               	movlw	0
 23600  0000FA  6E3D               	movwf	_vscp_statuscnt,c	;volatile
 23601  0000FC  D002               	goto	i1l8640
 23602  0000FE                     
 23603                           ; BSR set to: 0
 23604  0000FE  D001               	goto	i1l8640
 23605  000100                     
 23606                           ; BSR set to: 0
 23607  000100  D000               	goto	i1l8640
 23608  000102                     i1l8640:
 23609                           
 23610                           ; BSR set to: 0
 23611                           ;main.c: 174: }
 23612                           ;main.c: 176: INTCONbits.TMR0IF = 0;
 23613  000102  94F2               	bcf	intcon,2,c	;volatile
 23614  000104  D001               	goto	i1l403
 23615  000106                     
 23616                           ; BSR set to: 0
 23617  000106  D000               	goto	i1l403
 23618  000108                     i1l403:
 23619  000108  C015  FFF5         	movff	??_interrupt_at_low_vector+16,tablat
 23620  00010C  C014  FFF8         	movff	??_interrupt_at_low_vector+15,tblptru
 23621  000110  C013  FFF7         	movff	??_interrupt_at_low_vector+14,tblptrh
 23622  000114  C012  FFF6         	movff	??_interrupt_at_low_vector+13,tblptrl
 23623  000118  C011  FFF4         	movff	??_interrupt_at_low_vector+12,prodh
 23624  00011C  C010  FFF3         	movff	??_interrupt_at_low_vector+11,prodl
 23625  000120  C00F  FFDA         	movff	??_interrupt_at_low_vector+10,fsr2h
 23626  000124  C00E  FFD9         	movff	??_interrupt_at_low_vector+9,fsr2l
 23627  000128  C00D  FFE2         	movff	??_interrupt_at_low_vector+8,fsr1h
 23628  00012C  C00C  FFE1         	movff	??_interrupt_at_low_vector+7,fsr1l
 23629  000130  C00B  FFEA         	movff	??_interrupt_at_low_vector+6,fsr0h
 23630  000134  C00A  FFE9         	movff	??_interrupt_at_low_vector+5,fsr0l
 23631  000138  C009  FFFB         	movff	??_interrupt_at_low_vector+4,pclatu
 23632  00013C  C008  FFFA         	movff	??_interrupt_at_low_vector+3,pclath
 23633  000140  C007  FFE0         	movff	??_interrupt_at_low_vector+2,bsr
 23634  000144  C006  FFE8         	movff	??_interrupt_at_low_vector+1,wreg
 23635  000148  C005  FFD8         	movff	??_interrupt_at_low_vector,status
 23636  00014C  0010               	retfie	
 23637  00014E                     __end_of_interrupt_at_low_vector:
 23638                           	opt stack 0
 23639                           pclatu	equ	0xFFB
 23640                           pclath	equ	0xFFA
 23641                           tblptru	equ	0xFF8
 23642                           tblptrh	equ	0xFF7
 23643                           tblptrl	equ	0xFF6
 23644                           tablat	equ	0xFF5
 23645                           prodh	equ	0xFF4
 23646                           prodl	equ	0xFF3
 23647                           intcon	equ	0xFF2
 23648                           intcon2	equ	0xFF1
 23649                           postinc0	equ	0xFEE
 23650                           fsr0h	equ	0xFEA
 23651                           fsr0l	equ	0xFE9
 23652                           wreg	equ	0xFE8
 23653                           indf1	equ	0xFE7
 23654                           fsr1h	equ	0xFE2
 23655                           fsr1l	equ	0xFE1
 23656                           bsr	equ	0xFE0
 23657                           indf2	equ	0xFDF
 23658                           postinc2	equ	0xFDE
 23659                           postdec2	equ	0xFDD
 23660                           plusw2	equ	0xFDB
 23661                           fsr2h	equ	0xFDA
 23662                           fsr2l	equ	0xFD9
 23663                           status	equ	0xFD8
 23664                           
 23665 ;; *************** function i1_WriteTimer0 *****************
 23666 ;; Defined at:
 23667 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c"
 23668 ;; Parameters:    Size  Location     Type
 23669 ;;  timer0          2    0[COMRAM] unsigned int 
 23670 ;; Auto vars:     Size  Location     Type
 23671 ;;  WriteTimer0     2    2[COMRAM] struct Timers
 23672 ;; Return value:  Size  Location     Type
 23673 ;;		None               void
 23674 ;; Registers used:
 23675 ;;		None
 23676 ;; Tracked objects:
 23677 ;;		On entry : 0/0
 23678 ;;		On exit  : 0/0
 23679 ;;		Unchanged: 0/0
 23680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23681 ;;      Params:         2       0       0       0       0       0       0
 23682 ;;      Locals:         2       0       0       0       0       0       0
 23683 ;;      Temps:          0       0       0       0       0       0       0
 23684 ;;      Totals:         4       0       0       0       0       0       0
 23685 ;;Total ram usage:        4 bytes
 23686 ;; Hardware stack levels used:    1
 23687 ;; This function calls:
 23688 ;;		Nothing
 23689 ;; This function is called by:
 23690 ;;		_interrupt_at_low_vector
 23691 ;; This function uses a non-reentrant model
 23692 ;;
 23693                           
 23694                           	psect	text77
 23695  006FC2                     __ptext77:
 23696                           	opt stack 0
 23697  006FC2                     i1_WriteTimer0:
 23698                           	opt stack 20
 23699                           
 23700                           ;incstack = 0
 23701                           ;incstack = 0
 23702  006FC2  C001  F003         	movff	i1WriteTimer0@timer0,i1WriteTimer0@timer
 23703  006FC6  C002  F004         	movff	i1WriteTimer0@timer0+1,i1WriteTimer0@timer+1
 23704  006FCA  C004  FFD7         	movff	i1WriteTimer0@timer+1,4055	;volatile
 23705  006FCE  C003  FFD6         	movff	i1WriteTimer0@timer,4054	;volatile
 23706  006FD2  0012               	return	
 23707  006FD4                     __end_ofi1_WriteTimer0:
 23708                           	opt stack 0
 23709                           pclatu	equ	0xFFB
 23710                           pclath	equ	0xFFA
 23711                           tblptru	equ	0xFF8
 23712                           tblptrh	equ	0xFF7
 23713                           tblptrl	equ	0xFF6
 23714                           tablat	equ	0xFF5
 23715                           prodh	equ	0xFF4
 23716                           prodl	equ	0xFF3
 23717                           intcon	equ	0xFF2
 23718                           intcon2	equ	0xFF1
 23719                           postinc0	equ	0xFEE
 23720                           fsr0h	equ	0xFEA
 23721                           fsr0l	equ	0xFE9
 23722                           wreg	equ	0xFE8
 23723                           indf1	equ	0xFE7
 23724                           fsr1h	equ	0xFE2
 23725                           fsr1l	equ	0xFE1
 23726                           bsr	equ	0xFE0
 23727                           indf2	equ	0xFDF
 23728                           postinc2	equ	0xFDE
 23729                           postdec2	equ	0xFDD
 23730                           plusw2	equ	0xFDB
 23731                           fsr2h	equ	0xFDA
 23732                           fsr2l	equ	0xFD9
 23733                           status	equ	0xFD8
 23734                           pclatu	equ	0xFFB
 23735                           pclath	equ	0xFFA
 23736                           tblptru	equ	0xFF8
 23737                           tblptrh	equ	0xFF7
 23738                           tblptrl	equ	0xFF6
 23739                           tablat	equ	0xFF5
 23740                           prodh	equ	0xFF4
 23741                           prodl	equ	0xFF3
 23742                           intcon	equ	0xFF2
 23743                           intcon2	equ	0xFF1
 23744                           postinc0	equ	0xFEE
 23745                           fsr0h	equ	0xFEA
 23746                           fsr0l	equ	0xFE9
 23747                           wreg	equ	0xFE8
 23748                           indf1	equ	0xFE7
 23749                           fsr1h	equ	0xFE2
 23750                           fsr1l	equ	0xFE1
 23751                           bsr	equ	0xFE0
 23752                           indf2	equ	0xFDF
 23753                           postinc2	equ	0xFDE
 23754                           postdec2	equ	0xFDD
 23755                           plusw2	equ	0xFDB
 23756                           fsr2h	equ	0xFDA
 23757                           fsr2l	equ	0xFD9
 23758                           status	equ	0xFD8
 23759                           
 23760                           	psect	rparam
 23761  0000                     pclatu	equ	0xFFB
 23762                           pclath	equ	0xFFA
 23763                           tblptru	equ	0xFF8
 23764                           tblptrh	equ	0xFF7
 23765                           tblptrl	equ	0xFF6
 23766                           tablat	equ	0xFF5
 23767                           prodh	equ	0xFF4
 23768                           prodl	equ	0xFF3
 23769                           intcon	equ	0xFF2
 23770                           intcon2	equ	0xFF1
 23771                           postinc0	equ	0xFEE
 23772                           fsr0h	equ	0xFEA
 23773                           fsr0l	equ	0xFE9
 23774                           wreg	equ	0xFE8
 23775                           indf1	equ	0xFE7
 23776                           fsr1h	equ	0xFE2
 23777                           fsr1l	equ	0xFE1
 23778                           bsr	equ	0xFE0
 23779                           indf2	equ	0xFDF
 23780                           postinc2	equ	0xFDE
 23781                           postdec2	equ	0xFDD
 23782                           plusw2	equ	0xFDB
 23783                           fsr2h	equ	0xFDA
 23784                           fsr2l	equ	0xFD9
 23785                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         107
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     53      74
    BANK0           160     93     160
    BANK1           256     38      58
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    vscp_getMatrixInfo@pData	PTR unsigned char  size(2) Largest target is 13
		 -> vscp_omsg(COMRAM[13]), 

    ?___awmod	int  size(2) Largest target is 0

    ?__ECANPointBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    getCANFrame@pdlc	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    getCANFrame@pdata	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    getCANFrame@pid	PTR unsigned long  size(2) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), 

    sendCANFrame@pdata	PTR unsigned char  size(2) Largest target is 13
		 -> SendInformationEvent@data(BANK0[3]), vscp_omsg(COMRAM[13]), 

    getVSCPFrame@pPriority	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    getVSCPFrame@pvscpclass	PTR unsigned short  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    getVSCPFrame@pvscptype	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    getVSCPFrame@pNodeId	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    getVSCPFrame@pData	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    getVSCPFrame@pSize	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    sendVSCPFrame@pData	PTR unsigned char  size(2) Largest target is 13
		 -> SendInformationEvent@data(BANK0[3]), vscp_omsg(COMRAM[13]), 

    _ECANPointBuffer@pt	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    _RegsToCANID@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    _RegsToCANID@val	PTR unsigned long  size(2) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), 

    _RegsToCANID@Value	PTR struct _CAN_MESSAGE_ID size(2) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), 

    _CANIDToRegs@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), RXM1SIDH(ABS[1]), 
		 -> RXF1SIDH(ABS[1]), B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), 
		 -> B2CON(ABS[1]), B1CON(ABS[1]), B0CON(ABS[1]), 

    _CANIDToRegs@Value	PTR struct _CAN_MESSAGE_ID size(2) Largest target is 4
		 -> _CANIDToRegs@val(COMRAM[4]), 

    ECANReceiveMessage@data	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    ECANReceiveMessage@id	PTR unsigned long  size(2) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), 

    ECANReceiveMessage@dataLen	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    ECANReceiveMessage@savedPtr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    sp___ECANPointBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ECANReceiveMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ECANReceiveMessage@msgFlags	PTR enum E16333 size(2) Largest target is 1
		 -> getCANFrame@flags(COMRAM[1]), 

    ECANSendMessage@data	PTR unsigned char  size(2) Largest target is 13
		 -> SendInformationEvent@data(BANK0[3]), vscp_omsg(COMRAM[13]), 

    ECANSendMessage@tempPtr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    ECANSendMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    ECANSendMessage@pb	PTR unsigned char [9] size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 


Critical Paths under _main in COMRAM

    _doApplicationOneSecondWork->_SendInformationEvent
    _vscp_doOneSecondWork->_vscp_sendHeartBeat
    _vscp_sendHeartBeat->_vscp_sendEvent
    _vscp_getSubzone->_Read_b_eep
    _vscp_getZone->_Read_b_eep
    _doActionToggle->_SendInformationEvent
    _doActionStatus->_SendInformationEvent
    _doActionPulse->_Read_b_eep
    _doActionOn->_SendInformationEvent
    _doActionOff->_SendInformationEvent
    _vscp_restoreDefaults->_init_app_eeprom
    _init_app_ram->_Read_b_eep
    _init_app_eeprom->_Write_b_eep
    _vscp_setUserID->_Write_b_eep
    _vscp_setManufacturerId->_Write_b_eep
    _vscp_setGUID->_Write_b_eep
    _vscp_writeAppReg->_SendInformationEvent
    _calculateSetFilterMask->__CANIDToRegs
    _SendInformationEvent->_sendVSCPFrame
    _vscp_readRegister->_vscp_readStdReg
    _vscp_readStdReg->_vscp_getFamilyCode
    _vscp_readStdReg->_vscp_getFamilyType
    _vscp_getManufacturerId->_Read_b_eep
    _vscp_getUserID->_Read_b_eep
    _vscp_getGUID->_Read_b_eep
    _vscp_newNodeOnline->_vscp_sendEvent
    _vscp_handleDropNickname->_vscp_writeNicknamePermanent
    _vscp_readNicknamePermanent->_Read_b_eep
    _vscp_handleSetNickname->_vscp_writeNicknamePermanent
    _vscp_handleSetNickname->_vscp_setSegmentCRC
    _vscp_handleHeartbeat->_vscp_writeNicknamePermanent
    _vscp_handleHeartbeat->_vscp_setSegmentCRC
    _vscp_goBootloaderMode->_Write_b_eep
    _vscp_handleProbeState->_vscp_goActiveState
    _vscp_goActiveState->_vscp_sendEvent
    _vscp_sendEvent->_sendVSCPFrame
    _sendVSCPFrame->_sendCANFrame
    _sendCANFrame->_ECANSendMessage
    _ECANSendMessage->__CANIDToRegs
    _getVSCPFrame->_getCANFrame
    _getCANFrame->_ECANReceiveMessage
    _ECANReceiveMessage->__RegsToCANID
    _vscp_check_pstorage->_vscp_writeNicknamePermanent
    _vscp_check_pstorage->_vscp_setSegmentCRC
    _vscp_check_pstorage->_vscp_setControlByte
    _vscp_setControlByte->_Write_b_eep
    _vscp_setSegmentCRC->_Write_b_eep
    _vscp_getSegmentCRC->_Read_b_eep
    _vscp_writeNicknamePermanent->_Write_b_eep
    _init->_WriteTimer0
    _ECANInitialize->_ECANSetOperationMode
    _vscp_readAppReg->_Read_b_eep

Critical Paths under _interrupt_at_low_vector in COMRAM

    _interrupt_at_low_vector->i1_WriteTimer0

Critical Paths under _main in BANK0

    _main->_doDM
    _doApplicationOneSecondWork->_doActionOff
    _doDM->_doActionOn
    _doActionToggle->_SendInformationEvent
    _doActionStatus->_SendInformationEvent
    _doActionOn->_SendInformationEvent
    _doActionOff->_SendInformationEvent
    _vscp_handleProtocolEvent->_vscp_writeRegister
    _vscp_writeRegister->_vscp_writeAppReg
    _vscp_restoreDefaults->_init_app_ram
    _vscp_writeAppReg->_SendInformationEvent
    _SendInformationEvent->_sendVSCPFrame
    _vscp_sendEvent->_sendVSCPFrame
    _sendVSCPFrame->_sendCANFrame
    _sendCANFrame->_ECANSendMessage
    _vscp_getEvent->_getVSCPFrame

Critical Paths under _interrupt_at_low_vector in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_doApplicationOneSecondWork

Critical Paths under _interrupt_at_low_vector in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_at_low_vector in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_at_low_vector in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_at_low_vector in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_at_low_vector in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   69313
                                             37 BANK1      1     1      0
                               _init
                _vscp_check_pstorage
                    _init_app_eeprom
                       _init_app_ram
                          _vscp_init
                           _Busy_eep
                        _Write_b_eep
                      _vscp_getEvent
                 _vscp_goActiveState
              _vscp_handleProbeState
           _vscp_handleProtocolEvent
                               _doDM
                         _vscp_error
               _vscp_doOneSecondWork
         _doApplicationOneSecondWork
                             _doWork
 ---------------------------------------------------------------------------------
 (1) _doWork                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doApplicationOneSecondWork                          42    42      0    7168
                                             72 BANK0      5     5      0
                                              0 BANK1     37    37      0
                         _Read_b_eep
               _SendInformationEvent
                        _doActionOff
 ---------------------------------------------------------------------------------
 (1) _vscp_doOneSecondWork                                 1     1      0    2370
                                             51 COMRAM     1     1      0
                       _vscp_getZone
                    _vscp_getSubzone
                 _vscp_sendHeartBeat
 ---------------------------------------------------------------------------------
 (2) _vscp_sendHeartBeat                                   3     1      2    2308
                                             48 COMRAM     3     1      2
                       _vscp_getZone (ARG)
                    _vscp_getSubzone (ARG)
                     _vscp_sendEvent
 ---------------------------------------------------------------------------------
 (2) _vscp_getSubzone                                      0     0      0      31
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (2) _vscp_getZone                                         0     0      0      31
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (1) _vscp_error                                           1     1      0       0
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _doDM                                                19    19      0   13192
                                             74 BANK0     19    19      0
                         _Read_b_eep
                        _doActionOff
                         _doActionOn
                      _doActionPulse
                     _doActionStatus
                     _doActionToggle
 ---------------------------------------------------------------------------------
 (2) _doActionToggle                                       7     5      2    3008
                                             66 BANK0      7     5      2
                         _Read_b_eep
               _SendInformationEvent
 ---------------------------------------------------------------------------------
 (2) _doActionStatus                                       7     5      2    2978
                                             66 BANK0      7     5      2
                         _Read_b_eep
               _SendInformationEvent
 ---------------------------------------------------------------------------------
 (2) _doActionPulse                                        8     6      2     319
                                             23 COMRAM     8     6      2
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (2) _doActionOn                                           8     6      2    2883
                                             66 BANK0      8     6      2
                         _Read_b_eep
               _SendInformationEvent
 ---------------------------------------------------------------------------------
 (2) _doActionOff                                          6     4      2    2883
                                             66 BANK0      6     4      2
                         _Read_b_eep
               _SendInformationEvent
 ---------------------------------------------------------------------------------
 (1) _vscp_handleProtocolEvent                            30    30      0   35054
                                             78 BANK0      9     9      0
                                              0 BANK1     21    21      0
                          _vscp_init
                    _vscp_readAppReg
                   _vscp_writeAppReg
                     _vscp_sendEvent
                       _vscp_getGUID
                    _vscp_getMDF_URL
              _vscp_goBootloaderMode
                 _vscp_getMatrixInfo
               _vscp_handleHeartbeat
             _vscp_handleSetNickname
            _vscp_handleDropNickname
                 _vscp_newNodeOnline
                  _vscp_readRegister
                    _vscp_readStdReg
                 _vscp_writeRegister
                   _vscp_writeStdReg
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     433
                                             21 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _vscp_writeRegister                                   2     0      2   11525
                                             76 BANK0      2     0      2
                   _vscp_writeAppReg
                   _vscp_writeStdReg
 ---------------------------------------------------------------------------------
 (2) _vscp_writeStdReg                                     7     5      2    3037
                                             29 COMRAM     7     5      2
                       _vscp_setGUID
             _vscp_setManufacturerId
                       _vscp_getGUID
                     _vscp_getUserID
                     _vscp_setUserID
             _vscp_getManufacturerId
               _vscp_restoreDefaults
 ---------------------------------------------------------------------------------
 (3) _vscp_restoreDefaults                                 0     0      0    1433
                    _init_app_eeprom
                       _init_app_ram
 ---------------------------------------------------------------------------------
 (4) _init_app_ram                                        39    39      0     610
                                             23 COMRAM     2     2      0
                                              0 BANK0     37    37      0
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (4) _init_app_eeprom                                      3     3      0     823
                                             26 COMRAM     3     3      0
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_setUserID                                       2     0      2     161
                                             26 COMRAM     2     0      2
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_setManufacturerId                               2     0      2     192
                                             26 COMRAM     2     0      2
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_setGUID                                         2     0      2     192
                                             26 COMRAM     2     0      2
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_writeAppReg                                    10     8      2    8333
                                             66 BANK0     10     8      2
                           _Busy_eep
                        _Write_b_eep
                         _Read_b_eep
               _SendInformationEvent
                    _vscp_readAppReg (ARG)
             _calculateSetFilterMask
 ---------------------------------------------------------------------------------
 (4) _calculateSetFilterMask                              51    51      0    1863
                                             32 COMRAM    19    19      0
                                              0 BANK0     32    32      0
               _ECANSetOperationMode
                       __CANIDToRegs
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (3) _SendInformationEvent                                 8     5      3    2502
                                             47 COMRAM     5     2      3
                                             63 BANK0      3     3      0
                         _Read_b_eep
                      _sendVSCPFrame
 ---------------------------------------------------------------------------------
 (2) _vscp_readRegister                                    1     0      1    2014
                                             42 COMRAM     1     0      1
                    _vscp_readAppReg
                    _vscp_readStdReg
 ---------------------------------------------------------------------------------
 (2) _vscp_readStdReg                                     17    16      1    1343
                                             25 COMRAM    17    16      1
               _vscp_getMajorVersion
               _vscp_getMinorVersion
            _vscp_getSubMinorVersion
                       _vscp_getGUID
                    _vscp_getMDF_URL
                     _vscp_getUserID
             _vscp_getManufacturerId
        _vscp_getBootLoaderAlgorithm
                 _vscp_getBufferSize
                 _vscp_getFamilyCode
                 _vscp_getFamilyType
          _vscp_getRegisterPagesUsed
 ---------------------------------------------------------------------------------
 (3) _vscp_getRegisterPagesUsed                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _vscp_getFamilyType                                   4     0      4       0
                                             21 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _vscp_getFamilyCode                                   4     0      4       0
                                             21 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _vscp_getBufferSize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _vscp_getBootLoaderAlgorithm                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _vscp_getManufacturerId                               1     0      1      62
                                             23 COMRAM     1     0      1
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_getUserID                                       1     0      1      62
                                             23 COMRAM     1     0      1
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_getMDF_URL                                      1     0      1      31
                                             21 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (3) _vscp_getGUID                                         1     0      1      62
                                             23 COMRAM     1     0      1
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_getSubMinorVersion                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _vscp_getMinorVersion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _vscp_getMajorVersion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _vscp_newNodeOnline                                   1     1      0    2246
                                             48 COMRAM     1     1      0
                     _vscp_sendEvent
 ---------------------------------------------------------------------------------
 (2) _vscp_handleDropNickname                              2     2      0     257
                                             27 COMRAM     2     2      0
                          _vscp_init
        _vscp_writeNicknamePermanent
 ---------------------------------------------------------------------------------
 (3) _vscp_init                                            1     1      0      31
                                             23 COMRAM     1     1      0
         _vscp_readNicknamePermanent
 ---------------------------------------------------------------------------------
 (4) _vscp_readNicknamePermanent                           0     0      0      31
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (2) _vscp_handleSetNickname                               1     1      0     260
                                             27 COMRAM     1     1      0
        _vscp_writeNicknamePermanent
                 _vscp_setSegmentCRC
 ---------------------------------------------------------------------------------
 (2) _vscp_handleHeartbeat                                 1     1      0     291
                                             27 COMRAM     1     1      0
        _vscp_writeNicknamePermanent
                 _vscp_getSegmentCRC
                 _vscp_setSegmentCRC
 ---------------------------------------------------------------------------------
 (2) _vscp_getMatrixInfo                                   4     2      2      99
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _vscp_goBootloaderMode                                2     1      1     130
                                             26 COMRAM     2     1      1
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (1) _vscp_handleProbeState                                1     1      0    4752
                                             49 COMRAM     1     1      0
                 _vscp_goActiveState
        _vscp_writeNicknamePermanent
                     _vscp_sendEvent
                 _vscp_setSegmentCRC
 ---------------------------------------------------------------------------------
 (2) _vscp_goActiveState                                   1     1      0    2246
                                             48 COMRAM     1     1      0
                     _vscp_sendEvent
 ---------------------------------------------------------------------------------
 (3) _vscp_sendEvent                                       1     1      0    2246
                                             47 COMRAM     1     1      0
                      _sendVSCPFrame
 ---------------------------------------------------------------------------------
 (4) _sendVSCPFrame                                       32    24      8    2236
                                             43 COMRAM     4     4      0
                                             35 BANK0     28    20      8
                       _sendCANFrame
 ---------------------------------------------------------------------------------
 (5) _sendCANFrame                                         9     2      7    2016
                                             41 COMRAM     2     2      0
                                             28 BANK0      7     0      7
                    _ECANSendMessage
 ---------------------------------------------------------------------------------
 (6) _ECANSendMessage                                     37    29      8    1886
                                             32 COMRAM     9     1      8
                                              0 BANK0     28    28      0
                       __CANIDToRegs
 ---------------------------------------------------------------------------------
 (7) __CANIDToRegs                                        11     4      7     693
                                             21 COMRAM    11     4      7
 ---------------------------------------------------------------------------------
 (1) _vscp_getEvent                                        1     1      0    2371
                                             20 BANK0      1     1      0
                       _getVSCPFrame
 ---------------------------------------------------------------------------------
 (2) _getVSCPFrame                                        20     8     12    2361
                                              0 BANK0     20     8     12
                        _getCANFrame
 ---------------------------------------------------------------------------------
 (3) _getCANFrame                                          7     1      6    1954
                                             46 COMRAM     7     1      6
                 _ECANReceiveMessage
 ---------------------------------------------------------------------------------
 (4) _ECANReceiveMessage                                  16     8      8    1720
                                             30 COMRAM    16     8      8
                   __ECANPointBuffer
                       __RegsToCANID
 ---------------------------------------------------------------------------------
 (5) __RegsToCANID                                         9     4      5     697
                                             21 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (5) __ECANPointBuffer                                     4     2      2      86
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _vscp_check_pstorage                                  1     1      0     421
                                             27 COMRAM     1     1      0
        _vscp_writeNicknamePermanent
                 _vscp_getSegmentCRC
                 _vscp_setSegmentCRC
                _vscp_setControlByte
 ---------------------------------------------------------------------------------
 (2) _vscp_setControlByte                                  1     0      1     130
                                             26 COMRAM     1     0      1
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_setSegmentCRC                                   1     0      1     130
                                             26 COMRAM     1     0      1
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_getSegmentCRC                                   0     0      0      31
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_writeNicknamePermanent                          1     0      1     130
                                             26 COMRAM     1     0      1
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (5) _Write_b_eep                                          5     2      3      99
                                             21 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (5) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0     176
                                             25 COMRAM     1     1      0
                     _ECANInitialize
                        _WriteTimer0
                         _OpenTimer0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     0      1      44
                                             21 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2      70
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ECANInitialize                                       1     1      0      62
                                             22 COMRAM     1     1      0
               _ECANSetOperationMode
 ---------------------------------------------------------------------------------
 (5) _ECANSetOperationMode                                 1     0      1      62
                                             21 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (3) _vscp_readAppReg                                      3     2      1     578
                                             23 COMRAM     3     2      1
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (4) _Read_b_eep                                           2     0      2      31
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Read_b_eep                                           2     0      2      31
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _interrupt_at_low_vector                             17    17      0     221
                                              4 COMRAM    17    17      0
                      i1_WriteTimer0
 ---------------------------------------------------------------------------------
 (10) i1_WriteTimer0                                       4     2      2     221
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _ECANInitialize
       _ECANSetOperationMode
     _WriteTimer0
     _OpenTimer0
   _vscp_check_pstorage
     _vscp_writeNicknamePermanent
       _Busy_eep
       _Write_b_eep
     _vscp_getSegmentCRC
       _Read_b_eep
     _vscp_setSegmentCRC
       _Busy_eep
       _Write_b_eep
     _vscp_setControlByte
       _Busy_eep
       _Write_b_eep
   _init_app_eeprom
     _Busy_eep
     _Write_b_eep
   _init_app_ram
     _Read_b_eep
   _vscp_init
     _vscp_readNicknamePermanent
       _Read_b_eep
   _Busy_eep
   _Write_b_eep
   _vscp_getEvent
     _getVSCPFrame
       _getCANFrame
         _ECANReceiveMessage
           __ECANPointBuffer
           __RegsToCANID
   _vscp_goActiveState
     _vscp_sendEvent
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
   _vscp_handleProbeState
     _vscp_goActiveState
       _vscp_sendEvent
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
     _vscp_writeNicknamePermanent
       _Busy_eep
       _Write_b_eep
     _vscp_sendEvent
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
     _vscp_setSegmentCRC
       _Busy_eep
       _Write_b_eep
   _vscp_handleProtocolEvent
     _vscp_init
       _vscp_readNicknamePermanent
         _Read_b_eep
     _vscp_readAppReg
       _Read_b_eep
     _vscp_writeAppReg
       _Busy_eep
       _Write_b_eep
       _Read_b_eep
       _SendInformationEvent
         _Read_b_eep
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
       _vscp_readAppReg (ARG)
         _Read_b_eep
       _calculateSetFilterMask (ARG)
         _ECANSetOperationMode
         __CANIDToRegs
         _Read_b_eep
     _vscp_sendEvent
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
     _vscp_getGUID
       _Read_b_eep
     _vscp_getMDF_URL
     _vscp_goBootloaderMode
       _Busy_eep
       _Write_b_eep
     _vscp_getMatrixInfo
     _vscp_handleHeartbeat
       _vscp_writeNicknamePermanent
         _Busy_eep
         _Write_b_eep
       _vscp_getSegmentCRC
         _Read_b_eep
       _vscp_setSegmentCRC
         _Busy_eep
         _Write_b_eep
     _vscp_handleSetNickname
       _vscp_writeNicknamePermanent
         _Busy_eep
         _Write_b_eep
       _vscp_setSegmentCRC
         _Busy_eep
         _Write_b_eep
     _vscp_handleDropNickname
       _vscp_init
         _vscp_readNicknamePermanent
           _Read_b_eep
       _vscp_writeNicknamePermanent
         _Busy_eep
         _Write_b_eep
     _vscp_newNodeOnline
       _vscp_sendEvent
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
     _vscp_readRegister
       _vscp_readAppReg
         _Read_b_eep
       _vscp_readStdReg
         _vscp_getMajorVersion
         _vscp_getMinorVersion
         _vscp_getSubMinorVersion
         _vscp_getGUID
           _Read_b_eep
         _vscp_getMDF_URL
         _vscp_getUserID
           _Read_b_eep
         _vscp_getManufacturerId
           _Read_b_eep
         _vscp_getBootLoaderAlgorithm
         _vscp_getBufferSize
         _vscp_getFamilyCode
         _vscp_getFamilyType
         _vscp_getRegisterPagesUsed
     _vscp_readStdReg
       _vscp_getMajorVersion
       _vscp_getMinorVersion
       _vscp_getSubMinorVersion
       _vscp_getGUID
         _Read_b_eep
       _vscp_getMDF_URL
       _vscp_getUserID
         _Read_b_eep
       _vscp_getManufacturerId
         _Read_b_eep
       _vscp_getBootLoaderAlgorithm
       _vscp_getBufferSize
       _vscp_getFamilyCode
       _vscp_getFamilyType
       _vscp_getRegisterPagesUsed
     _vscp_writeRegister
       _vscp_writeAppReg
         _Busy_eep
         _Write_b_eep
         _Read_b_eep
         _SendInformationEvent
           _Read_b_eep
           _sendVSCPFrame
             _sendCANFrame
               _ECANSendMessage
                 __CANIDToRegs
         _vscp_readAppReg (ARG)
           _Read_b_eep
         _calculateSetFilterMask (ARG)
           _ECANSetOperationMode
           __CANIDToRegs
           _Read_b_eep
       _vscp_writeStdReg
         _vscp_setGUID
           _Busy_eep
           _Write_b_eep
         _vscp_setManufacturerId
           _Busy_eep
           _Write_b_eep
         _vscp_getGUID
           _Read_b_eep
         _vscp_getUserID
           _Read_b_eep
         _vscp_setUserID
           _Busy_eep
           _Write_b_eep
         _vscp_getManufacturerId
           _Read_b_eep
         _vscp_restoreDefaults
           _init_app_eeprom
             _Busy_eep
             _Write_b_eep
           _init_app_ram
             _Read_b_eep
     _vscp_writeStdReg
       _vscp_setGUID
         _Busy_eep
         _Write_b_eep
       _vscp_setManufacturerId
         _Busy_eep
         _Write_b_eep
       _vscp_getGUID
         _Read_b_eep
       _vscp_getUserID
         _Read_b_eep
       _vscp_setUserID
         _Busy_eep
         _Write_b_eep
       _vscp_getManufacturerId
         _Read_b_eep
       _vscp_restoreDefaults
         _init_app_eeprom
           _Busy_eep
           _Write_b_eep
         _init_app_ram
           _Read_b_eep
     ___awmod
   _doDM
     _Read_b_eep
     _doActionOff
       _Read_b_eep
       _SendInformationEvent
         _Read_b_eep
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
     _doActionOn
       _Read_b_eep
       _SendInformationEvent
         _Read_b_eep
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
     _doActionPulse
       _Read_b_eep
     _doActionStatus
       _Read_b_eep
       _SendInformationEvent
         _Read_b_eep
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
     _doActionToggle
       _Read_b_eep
       _SendInformationEvent
         _Read_b_eep
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
   _vscp_error
   _vscp_doOneSecondWork
     _vscp_getZone
       _Read_b_eep
     _vscp_getSubzone
       _Read_b_eep
     _vscp_sendHeartBeat
       _vscp_getZone (ARG)
         _Read_b_eep
       _vscp_getSubzone (ARG)
         _Read_b_eep
       _vscp_sendEvent (ARG)
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
   _doApplicationOneSecondWork
     _Read_b_eep
     _SendInformationEvent
       _Read_b_eep
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
     _doActionOff
       _Read_b_eep
       _SendInformationEvent
         _Read_b_eep
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
   _doWork

 _interrupt_at_low_vector (ROOT)
   i1_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     26      3A       6       22.7%
BITBANK5            EF      0       0      13        0.0%
BANK5               EF      0       0      14        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     5D      A0       4      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     35      4A       1       77.9%
BITSFR_8             0      0       0      40        0.0%
SFR_8                0      0       0      40        0.0%
BITSFR_7             0      0       0      40        0.0%
SFR_7                0      0       0      40        0.0%
BITSFR_6             0      0       0      40        0.0%
SFR_6                0      0       0      40        0.0%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       C       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     124      15        0.0%
DATA                 0      0     130      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Thu Jun 25 23:14:44 2015

                      doActionToggle@val 00A6                  __end_of_vscp_readAppReg 63DE  
                  __end_of_sendVSCPFrame 661E             ?_vscp_writeNicknamePermanent 001B  
            ??_vscp_getRegisterPagesUsed 0016                                       bsr 000FE0  
    vscp_writeNicknamePermanent@nickname 001B                              __CFG_BORV$3 000000  
                __end_of_vscp_readStdReg 5464                    doActionToggle@dmflags 00A2  
                                    l200 4EB0                                      l202 4EC6  
                                    l212 4F7A                                      l204 4EDC  
                                    l230 6294                                      l240 68E4  
                                    l235 5E58                                      l181 4DF2  
                                    l501 31D2                                      l510 31F6  
                                    l502 31DA                                      l191 4EF6  
                                    l511 31FE                                      l407 59D6  
                                    l192 4E54                                      l176 527C  
                                    l168 5198                                      l504 31DE  
                                    l416 5A5C                                      l513 3202  
                                    l505 31E6                       vscp_readStdReg@idx 0028  
                                    l194 4E68                                      l514 320A  
                                    l507 31EA                                      l196 4E80  
                                    l188 5030                                      l620 08DA  
                                    l516 320E                                      l508 31F2  
                                    l517 3216                                      l198 4E98  
                                    l630 0A12                                      l542 6E40  
                                    l615 083E                                      l519 33DA  
                                    l640 0B4A                                      l625 0976  
                                    l609 07A2                                      l801 40C4  
                                    l650 0C82                                      l538 6E62  
                                    l635 0AAE                                      l803 4122  
                                    l740 1E78                                      l820 646E  
                                    l900 550E                                      l492 31A8  
                                    l645 0BE6                                      l821 6472  
                                    l493 31B6                                      l822 6476  
                                    l902 5512                                      l655 0D1E  
                                    l823 647A                                      l911 5536  
                                    l903 551A                                      l495 31BA  
                                    l824 647E                                      l840 4AF6  
                                    l920 555A                                      l912 553E  
                                    l760 42D2                                      l496 31C2  
                                    l488 319C                                      l825 6482  
                                    l817 6466                                      l921 5562  
                                    l905 551E                                      l489 31A4  
                                    l826 6486                                      l818 64D0  
                                    l850 4D24                                      l842 4B34  
                                    l914 5542                                      l906 5526  
                                    l754 4686                                      l498 31C6  
                                    l827 648A                                      l819 646A  
                                    l843 4B72                                      l923 5566  
                                    l915 554A                                      l499 31CE  
                      doActionStatus@bOn 00A7                                      l844 4BB0  
                                    l924 556E                                      l908 552A  
                                    l845 4BEE                                      l917 554E  
                                    l909 5532                                      l846 4C2C  
                                    l926 55F8                                      l918 5556  
                                    l758 42AA                       vscp_readStdReg@reg 001A  
                                    l791 3EEE                                      l847 4C6A  
                                    l784 3DD4                                      l848 4CA8  
                                    l872 57C4                                      l793 3F4C  
                                    l849 4CE6                                      l786 41C2  
                                    l795 3FAA                                      l787 3E32  
                                    l797 4008                                      l789 3E90  
                                    l799 4066                                      l895 54F4  
                                    l896 54FC                                      l985 6E84  
                                    l899 5500                             __CFG_CPB$OFF 000000  
         __size_of_vscp_handleProbeState 0172                        doActionStatus@arg 00A3  
                         getVSCPFrame@id 0070                        doActionStatus@val 00A6  
          __end_of_vscp_handleProbeState 5FCC                    ?_vscp_restoreDefaults 0001  
                   __size_of_WriteTimer0 0012                     __size_of_Write_b_eep 003C  
                           ___awmod@sign 001C                                      prod 000FF3  
                 _calculateSetFilterMask 367A                                      wreg 000FE8  
            ?_doApplicationOneSecondWork 0001                             __CFG_LVP$OFF 000000  
                           __CFG_WDT$OFF 000000                                     l1010 67C0  
                                   l1021 6C40                                     l1006 661C  
                                   l1210 6C00                                     l1205 6BA6  
                   __size_of_doActionOff 012C                                     l1206 6BBC  
                                   l1223 6ED6                                     l1152 6D62  
                                   l1402 7020                                     l1171 5F56  
                                   l1163 5ECA                                     l1219 6858  
                                   l1353 26C4                                     l1443 6E9E  
                                   l1427 6CAA                                     l1195 6B22  
                                   l1363 27F2                                     l1444 6EA0  
                                   l1268 6E1E                                     l1199 6CF2  
                                   l1392 6C7E                                     l1377 29F4  
                                   l1396 697A                                     l1388 2CCE  
                    vscp_readStdReg@code 0020                vscp_getManufacturerId@idx 0018  
                                   l9004 4FE2                                     l9012 5000  
                                   l9030 685C                                     l9110 5A50  
                                   l9102 5A28                                     l9040 6894  
                                   l9032 6864                                     l9120 5A7E  
                                   l9112 5A56                                     l9042 689E  
                                   l9034 6870                                     l9018 501A  
                                   l9106 5A3A                                     l9044 68A8  
                                   l9036 687C                                     l9124 5A90  
                                   l9038 6888                                     l9214 5838  
                                   l9150 5B48                                     l9118 5A78  
                                   l9126 5AB6                                     l9048 68B6  
                                   l9064 5D86                                     l9232 5892  
                                   l9330 473C                                     l9154 5B62  
                                   l9138 5B08                                     l9244 58C0  
                                   l9340 4858                                     l9510 5F98  
                                   l9262 591E                                     l9318 46EE  
                                   l9336 47E4                                     l9442 5E5C  
                                   l9514 5FA6                                     l9274 594C  
                                   l9530 1EE0                                     l9522 1EC0  
                                   l9098 5A12                                     l9196 6D3C  
                                   l9516 5FBE                                     l9292 5984  
                                   l9700 2470                                     l9524 1EC8  
                                   l9286 597A                                     l9710 24BC  
                                   l9702 2484                                     l9614 2120  
                                   l9550 1F4E                                     l9526 1ED0  
                                   l8832 5212                                     l8840 5238  
                                   l8824 51BE                                     l8808 5158  
                                   l9368 663E                                     l9624 218C  
                                   l9528 1ED8                                     l8914 4E32  
                                   l8922 4E40                                     l8818 519C  
                                   l8850 5264                                     l9458 5E96  
                                   l9810 2754                                     l9730 2590  
                                   l9634 21F8                                     l8780 6F38  
                                   l8908 4E0E                                     l8852 526A  
                                   l9484 5F14                                     l9804 2742  
                                   l9716 2544                                     l9644 2264  
                                   l9660 2314                                     l9564 1F90  
                                   l8846 5260                                     l8790 50EC  
                                   l9478 5F04                                     l9910 2A64  
                                   l9902 29E0                                     l9814 2792  
                                   l9654 22D0                                     l9920 2AB4  
                                   l9672 2364                                     l9664 2328  
                                   l9584 2002                                     l8962 4F0E  
                                   l9906 2A1E                                     l9850 2852  
                                   l9762 265C                                     l9746 25F6  
                                   l9682 2414                                     l9658 22DE  
                                   l8868 61B8                                     l8796 5114  
                                   l9932 2BA8                                     l9836 2808  
                                   l9684 2432                                     l8966 4F12  
                                   l9862 28A0                                     l9790 2712  
                                   l9782 26DA                                     l9766 2676  
                                   l9678 23E4                                     l9598 2048  
                                   l8976 4F38                                     l9928 2AF6  
                                   l9880 2928                                     l8994 4FA0  
                                   l8898 4DD8                                     l9882 2936  
                                   l9794 2722                                     l9698 246A  
                                   l9954 2C54                                     l9876 290A  
                                   l9972 421A                                     l9798 272E  
                                   l9898 2996                                     l9994 42FA  
            __size_of_vscp_getMatrixInfo 0038                           sendCANFrame@id 007C  
                         sendCANFrame@rv 002B                                     u9945 617A  
                                   u9955 61A2                                     u9965 61CC  
                       ??_ECANInitialize 0017                             __CFG_PWRT$ON 000000  
              vscp_setManufacturerId@idx 001B                                     ___IT 000101  
                                   _doDM 41FC                    __size_of_vscp_getGUID 0012  
                       ?_vscp_getMDF_URL 0016                                     _main 59BE  
                                   _init 6B24                                     fsr0h 000FEA  
                                   fsr1h 000FE2                                     fsr0l 000FE9  
                                   fsr2h 000FDA                                     indf1 000FE7  
                                   fsr1l 000FE1                                     indf2 000FDF  
                                   fsr2l 000FD9                                     pclat 000FFA  
                  __size_of_vscp_getZone 000E                      i1WriteTimer0@timer0 0001  
                       _vscp_writeAppReg 0622                              _vscp_minute 00EB  
                            _vscp_second 00F0                                     prodh 000FF4  
                                   prodl 000FF3                                     start 014E  
                   doActionPulse@dmflags 0018            __size_of_vscp_doOneSecondWork 0098  
                      vscp_getUserID@idx 0018                    __size_of_vscp_setGUID 0022  
                       _vscp_writeStdReg 5B68                ECANReceiveMessage@dataLen 0023  
                  getVSCPFrame@pPriority 0066                     __end_of_getVSCPFrame 67C2  
            __size_of_vscp_getSegmentCRC 000E                         __RegsToCANID@val 0018  
                       __RegsToCANID@ptr 0016                     __size_of_getCANFrame 0040  
                                  l10010 453C                                    l10002 44A4  
                                  l10012 4588                                    l10006 44F0  
                                  l10022 4620                                    l10102 2F22  
                                  l10110 2F90                                    l11000 36A0  
                                  l10016 45D4                                    l10024 4676  
                                  l10040 6800                                    l10050 6832  
                                  l10202 322A                                    l10130 3098  
                                  l11020 3B5C                                    l11100 3DB0  
                                  l10212 33B0                                    l10204 326C  
                                  l10132 30FE                                    l10220 3492  
                                  l10310 62B8                                    l10046 681C  
                                  l10320 62EA                                    l11016 3A3C  
                                  l11008 3A1E                                    l10128 3090  
                                  l10330 6308                                    l10314 62CC  
                                  l11034 3B88                                    l11042 3C8E  
                                  l10218 3404                                    l10082 2E06  
                                  l10332 6310                                    l11044 3CC4  
                                  l10412 0732                                    l10404 06FC  
                                  l11220 4DA0                                    l10092 2E96  
                                  l10084 2E26                                    l10068 2D36  
                                  l10334 6318                                    l10326 62F8  
                                  l10350 637A                                    l11038 3C50  
                                  l10262 648E                                    l10254 6442  
                                  l10246 63F0                                    l11230 5654  
                                  l10094 2EB6                                    l10344 6330  
                                  l10336 6320                                    l10328 6300  
                                  l10512 0A3E                                    l10432 07CE  
                                  l11152 41EA                                    l11240 56C2  
                                  _B0CON 000E20                                    l10362 63B8  
                                  l10338 6328                                    l11082 661A  
                                  l10274 6E4A                                    l10282 6E28  
                                  l10266 64F8                                    l11218 4D62  
                                  l11170 4ADE                                    l11162 4AA2  
                                  l11250 5708                                    l11242 56D0  
                                  l10348 633A                                    l10356 6398  
                                  l10700 105E                                    l10532 0ADA  
                                  l10452 086A                                    l11148 4180  
                                  l11092 3D5E                                    l11252 5716  
                                  l11244 56DE                                    l10622 0DAC  
                                  l10614 0D4A                                    l11254 5724  
                                  l11246 56EC                                    l11262 574E  
                                  l11238 56A6                                    l10368 63DA  
                                  l11512 6AB6                                    l10800 13CC  
                                  l10552 0B76                                    l10472 0906  
                                  l10616 0D90                                    l11256 5732  
                                  l11248 56FA                                    l11264 5790  
                                  l11272 57EC                                    _B1CON 000E30  
                                  ?_doDM 0001                                    l11514 6AC0  
                                  l10722 111A                                    l10394 06B4  
                                  l10386 0686                                    l11258 5740  
                                  l11354 5582                                    l11290 54D8  
                                  l11282 5486                                    l11508 6A7E  
                                  l10820 1492                                    l10804 13F6  
                                  l10716 10FA                                    l10644 0E68  
                                  l10572 0C12                                    l10492 09A2  
                                  l11356 55C4                                    l11364 5620  
                                  l11526 6742                                    l11710 534A  
                                  l11702 5330                                    l10910 180C  
                                  l10830 14DA                                    l10742 11E0  
                                  l10726 1144                                    l10670 0F4E  
                                  l10638 0E48                                    l11608 6B1A  
                                  l10920 196A                                    l10912 1852  
                                  l10752 122A                                    l10664 0F2E  
                                  l10648 0E92                                    l10592 0CAE  
                                  l11800 5C36                                    _B2CON 000E40  
                                  l11722 5374                                    l11714 5358  
                                  l11706 533E                                    l10922 19B0  
                                  l10914 1898                                    l10906 1780  
                                  l10930 1A80                                    l10826 14B2  
                                  l10690 1014                                    l10674 0F78  
                                  l11484 6D0E                                    l11732 53D4  
                                  l11652 6ECE                                    l10940 1ACC  
                                  l10924 19F6                                    l10916 18DE  
                                  l10908 17C6                                    l10852 1596  
                                  l10748 1200                                    l11820 5CAE  
                                  l11812 5C8A                                    l11558 6C3E  
                                  l11742 5436                                    l11718 5366  
                                  l10950 1C2A                                    l10942 1B12  
                                  l10918 1924                                    l10846 1576  
                                  l10774 12E6                                    l11830 5CDC  
                                  l11680 52DC                                    l11672 52BE  
                                  l11752 5460                                    l11664 529E  
                                  l10952 1C70                                    l10944 1B58  
                                  l10928 1A3C                                    l10872 165A  
                                  l10856 15BE                                    l10768 12C6  
                                  l10696 1034                                    l11832 5CE2  
                                  _B3CON 000E50                                    l10954 1CB6  
                                  l10946 1B9E                                    l10962 1D88  
                                  l10794 13AC                                    l10778 1310  
                                  l11748 544E                                    l11692 530A  
                                  l11684 52EA                                    l11676 52CE  
                                  l11668 52B0                                    l10956 1CFC  
                                  l10948 1BE4                                    l10964 1DCC  
                                  l10884 16A0                                    l11828 5CD2  
                                  l11764 6E12                                    l11860 69D6  
                                  l11852 69B6                                    l11844 6998  
                                  l10958 1D42                                    l10878 167A  
                                  l10886 16E8                                    l11782 5BBE  
                                  l11854 69BE                                    l11688 52F8  
                                  l10976 1E1A                                    l10896 1736  
                                  l11776 5B94                                    l11856 69C2  
                                  l11864 69E0                                    l11848 69A4  
                                  _B4CON 000E60                                    l11698 5322  
          __size_of_SendInformationEvent 0070            __size_of_vscp_getMajorVersion 0004  
                                  l10988 1EA6                                    l11788 5BE2  
                                  l11868 69EE                                    _B5CON 000E70  
             __end_of_vscp_goActiveState 6DCC            ??_vscp_writeNicknamePermanent 001C  
                                  ?_main 0001                                    ?_init 0001  
                 ?_vscp_goBootloaderMode 001B                            i1_WriteTimer0 6FC2  
                                  _EEADR 000FA9                          __end_of___awmod 69F8  
                _vscp_handleDropNickname 6B72                                    _BSEL0 000DF8  
                                  u10005 4DE4                                    u10007 4DEA  
                                  _T0CON 000FD5                                    u12105 3534  
                                  u10275 5D30                                    u12115 354E  
                                  u10604 4770                                    u10285 5D50  
                                  u10605 4768                                    u12125 3568  
                                  u10295 5DA2                                    u12135 3592  
                                  u12154 6406                                    u10715 6CB6  
                                  u13115 37D0                                    u12155 6400  
                                  u10716 6CB8                                    u13140 3A5E  
                                  u10645 4952                                    u13214 3BD0  
                                  u13150 3AAC                                    u13215 3BCA  
                                  u10655 496C                                    u13224 3BF0  
                                  u13225 3BEA                                    u13145 3A52  
                                  u10665 4986                                    u13314 3D74  
                                  u13155 3AA0                                    u10675 49B0  
                                  u13315 3D6E                                    u13244 3C1E  
                                  u11804 2ED8                                    u11724 2DB8  
                                  u13245 3C16                                    u13165 3AFE  
                                  u11805 2ED0                                    u11725 2DB0  
                                  u13174 3B1C                                    u13175 3B14  
                                  u11914 3118                                    u11834 2F44  
                                  u11915 3110                                    u11835 2F3C  
                                  u11764 2E48                                    u11684 2D50  
                                  u13285 6562                                    u11765 2E40  
                                  u11685 2D48                                    u14360 53CE  
                                  u13564 566A                                    u14365 53C4  
                                  u13565 5664                                    u14390 542E  
                                  u13494 4AB2                                    u13654 549C  
                                  u11894 3054                                    u13495 4AAE  
                                  u13655 5496                                    u11895 304E  
                                  u14395 5424                                    u13950 67AA  
                                  u13955 679E                                    i1l400 00EE  
                                  i1l401 0100                                    i1l402 00FE  
                                  i1l403 0108                                    i1l393 0106  
                                  i1l394 00A8                                    i1l395 00AE  
                                  i1l396 00DC                                    i1l397 00D2  
                                  i1l398 00D6                                    i1l399 0102  
                        sendCANFrame@dlc 0080                                    _MSEL0 000DF0  
                                  _MSEL1 000DF1                                    _MSEL2 000DF2  
                                  _IRXIF 007D27                                    _TMR0H 000FD7  
                                  _TMR0L 000FD6       __end_of_vscp_readNicknamePermanent 6FFE  
             _vscp_readNicknamePermanent 6FF0                                    _PORTA 000F80  
                                  _PORTB 000F81                                    _PORTC 000F82  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                         ?_vscp_getSubzone 0001  
                         __CFG_EBTR0$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                           _vscp_getGUID 6F8C                                    doDM@i 00BC  
                          __CFG_WRTD$OFF 000000                           Read_b_eep@badd 0016  
                         __CFG_EBTRB$OFF 000000                   Write_b_eep@GIE_BIT_VAL 001A  
                           _vscp_getZone 6FE2                       vscp_writeAppReg@rv 00AA  
                                  _hours 00E3                _vscp_getRegisterPagesUsed 7026  
                 __size_of_vscp_getEvent 008E                             _vscp_setGUID 6E42  
                                  tablat 000FF5                  _vscp_getSubMinorVersion 7032  
                                  plusw2 000FDB                                    status 000FD8  
             __end_of_vscp_sendHeartBeat 6D9A                     _ECANSetOperationMode 6F30  
                        __initialization 6DCC                             __end_of_doDM 4688  
                           __end_of_main 5B68                             __end_of_init 6B72  
                       ?_vscp_readAppReg 0018                               _Read_b_eep 6FB0  
                _interrupt_at_low_vector 0018                         __end_of_Busy_eep 7026  
                         doDM@class_mask 00B2                           __CFG_OSC$HSPLL 000000  
                      ??_ECANSendMessage 0029                           ?i1_WriteTimer0 0001  
                                 ??_doDM 00AA                         ?_vscp_readStdReg 001A  
                  getVSCPFrame@pvscptype 0062                   ??_vscp_restoreDefaults 001E  
                                 ??_main 0125                                   ??_init 001A  
          __size_of_vscp_handleHeartbeat 0058                 ??_vscp_getManufacturerId 0019  
               ??_vscp_setManufacturerId 001D                 _vscp_handleProtocolEvent 1EAE  
                          __activetblptr 000002                        __RegsToCANID@type 001A  
             ECANReceiveMessage@msgFlags 0025            doApplicationOneSecondWork@bOn 00AA  
              __size_of__ECANPointBuffer 0094                                   _B0TXEN 006FC2  
                                 _B1TXEN 006FC3                                   _B2TXEN 006FC4  
                                 _B3TXEN 006FC5                                   _B4TXEN 006FC6  
                                 _B5TXEN 006FC7                   __size_of_doActionPulse 0312  
             ECANReceiveMessage@savedPtr 0028                                   _CANCON 000F6F  
                                 _EEDATA 000FA8                                   _EECON2 000FA7  
                                 _CIOCON 000F73                            doDM@type_mask 00B5  
                    _channel_pulse_flags 00D5                       vscp_writeStdReg@rv 0024  
                          ?_init_app_ram 0001                                   _MDSEL0 007BBE  
                                 _MDSEL1 007BBF                               _OpenTimer0 6E86  
                                 i1l8610 0074                                   i1l8620 00B0  
                                 i1l8612 007C                                   i1l8604 005C  
                                 i1l8622 00BC                                   i1l8630 00DC  
                                 i1l8614 0096                                   i1l8606 0064  
                                 i1l8632 00E6                                   i1l8640 0102  
                                 i1l8624 00C6                                   i1l8616 009E  
                                 i1l8608 0070                                   i1l8642 0108  
                                 i1l8634 00E8                                   i1l8626 00CE  
                                 i1l8618 00A8                                   i1l8636 00F6  
                                 i1l8628 00D6                                   i1l8638 00F8  
                        _init_app_eeprom 57FE                      _channel_pulse_timer 0126  
                                 _RXB0IF 007D20                                   _RXB1IF 007D21  
                                 _RXF1EN 006EA1                   ECANReceiveMessage@data 0021  
                 ECANReceiveMessage@mode 002B                   ECANReceiveMessage@temp 002C  
                      getVSCPFrame@pData 006A                        getVSCPFrame@pSize 0068  
                                 __IT_ID 00DD                       _vscp_newNodeOnline 6BBE  
                  ?_ECANSetOperationMode 0016                       __CANIDToRegs@Value 001F  
 vscp_handleProtocolEvent@page_save_1404 0102                           getCANFrame@pid 002F  
                         __CFG_STVREN$ON 000000                                ??___awmod 001A  
                          _vscp_getEvent 68EE                                   _doWork 703E  
                       OpenTimer0@config 0016                      ?_vscp_newNodeOnline 0001  
              ??_vscp_handleDropNickname 001C                      vscp_writeAppReg@bOn 00AB  
        calculateSetFilterMask@rowfilter 002E               calculateSetFilterMask@mask 0026  
                    vscp_writeAppReg@reg 00A2               __end_of_vscp_setSegmentCRC 6F1A  
                    vscp_writeAppReg@val 00A3                                   clear_0 6DD2  
                                 clear_1 6DDE                                   clear_2 6DEA  
                        ___awmod@divisor 0018                          ___awmod@counter 001B  
                          ?_sendCANFrame 007C             vscp_handleProtocolEvent@byte 010F  
                __size_of_vscp_getUserID 0012                            _vscp_nickname 00EC  
                          _vscp_errorcnt 00E8                             __mediumconst 0000  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                    vscp_setSegmentCRC@crc 001B  
              ??_vscp_getSubMinorVersion 0016     __size_of_vscp_getBootLoaderAlgorithm 0004  
                         ??_init_app_ram 0060                     ??_vscp_newNodeOnline 0031  
                        doActionToggle@i 00A8                               __accesstop 0060  
                __end_of__initialization 6DF0            __size_of_vscp_getMinorVersion 0004  
                        doActionStatus@i 00A8                          _current_iostate 00D7  
                  __size_of_getVSCPFrame 00AA                       _vscp_writeRegister 6DFA  
              ??_interrupt_at_low_vector 0005                  __size_of_vscp_sendEvent 003E  
                         __pcstackCOMRAM 0001                           ?_vscp_getEvent 0001  
                          _doActionPulse 4A98              __end_of_vscp_check_pstorage 6D64  
                __size_of_vscp_setUserID 001A                              ?_Read_b_eep 0016  
                        ??i1_WriteTimer0 0003                      ?_vscp_writeRegister 00AC  
                         ??_sendCANFrame 002A                               _doActionOn 3D4C  
                ?_calculateSetFilterMask 0001            calculateSetFilterMask@lastOID 0025  
             __end_of_vscp_getFamilyCode 6F68                            ?__RegsToCANID 0016  
            __size_of_ECANReceiveMessage 0288                       sendVSCPFrame@pData 0089  
             __end_of_vscp_getFamilyType 6F56          __size_of_vscp_getManufacturerId 0012  
                vscp_writeRegister@value 00AD          __size_of_vscp_setManufacturerId 0022  
               __end_of_vscp_writeAppReg 1EAE                   getVSCPFrame@pvscpclass 0060  
                __end_of_init_app_eeprom 59BE              __end_of_vscp_setControlByte 6F04  
               __end_of_vscp_writeStdReg 5CE6            calculateSetFilterMask@rowmask 0021  
                     __RegsToCANID@Value 001D                     ??_vscp_writeRegister 0035  
        __end_of_vscp_handleDropNickname 6BBE                             _getVSCPFrame 6718  
                             __pbssBANK0 00BD                               __pbssBANK1 0126  
                            ?_OpenTimer0 0016               __end_of_vscp_getBufferSize 702E  
                              ?_Busy_eep 0001                    vscp_writeRegister@reg 00AC  
                 ??_ECANSetOperationMode 0017                             __IT_INT_MASK 00DE  
                           __IT_SAVE_BSR 00DF       __size_of_vscp_getRegisterPagesUsed 0004  
                         ?_doActionPulse 0018          __end_of_vscp_getSubMinorVersion 7036  
               ECANSetOperationMode@mode 0016                                  _B0RXFUL 007107  
                                _B1RXFUL 007187                     __ECANRxFilterHitInfo 00DB  
                                _B2RXFUL 007207                                  _B3RXFUL 007287  
                                _B4RXFUL 007307                                  ?_doWork 0001  
                ??_vscp_goBootloaderMode 001C                                  _B5RXFUL 007387  
         __end_of_calculateSetFilterMask 3D4C                  __size_of_doActionToggle 01CE  
                       WriteTimer0@timer 0018                  __size_of_doActionStatus 01CC  
                                _ECANCON 000F77                            ??_WriteTimer0 0018  
                         ??__RegsToCANID 001B                            ??_Write_b_eep 0019  
                  sendVSCPFrame@priority 0087                                  _BRGCON1 000F70  
                                _BRGCON2 000F71                                  _BRGCON3 000F72  
         SendInformationEvent@eventClass 0031                      vscp_writeStdReg@reg 001E  
           __end_of_vscp_doOneSecondWork 685A              ?_vscp_readNicknamePermanent 0001  
                  sendVSCPFrame@vscptype 0085                            ??_doActionOff 00A4  
        __end_of_interrupt_at_low_vector 014E                 vscp_readStdReg@code_1377 0024  
                      sendCANFrame@pdata 0081                    _vscp_handleProbeState 5E5A  
                                _RXB0CON 000F60                                  _RXB1CON 000F50  
                                _RXB0FUL 007B07                         __ECANPointBuffer 685A  
             __end_of_vscp_getMatrixInfo 6D2C                                  _TXB0CON 000F40  
                                _TXB1CON 000F30                                  _TXB2CON 000F20  
                                _RXFCON0 000DD4                                  _RXFCON1 000DD5  
                  doActionStatus@dmflags 00A2                       _vscp_goActiveState 6D9A  
                 __size_of_sendVSCPFrame 0114             __end_of_SendInformationEvent 6A68  
           __end_of_vscp_getMajorVersion 703E                      __size_of_Read_b_eep 0012  
                     __size_of_vscp_init 00FA                               ??_Busy_eep 0016  
                SendInformationEvent@idx 0030                   _vscp_getManufacturerId 6F68  
                 _vscp_setManufacturerId 6E20                          _ECANSendMessage 5032  
                    ?_vscp_goActiveState 0001                                  __Hparam 0000  
                        ??_vscp_getEvent 0036                                  __Lparam 0000  
                     _vscp_node_substate 00EE               __end_of_vscp_getSegmentCRC 700C  
             ??_vscp_handleProtocolEvent 00AE                            ??_getCANFrame 0035  
                           doActionOff@i 00A7        __end_of_vscp_getRegisterPagesUsed 702A  
               __size_of_vscp_getMDF_URL 0016                                  ___awmod 697C  
                        getCANFrame@pdlc 0031                                _FIFOEMPTY 007BA7  
                        __size_of_doWork 0002                             __psmallconst 0600  
                   __end_of_init_app_ram 4A98                       _vscp_sendHeartBeat 6D64  
                                __pcinit 6DCC                           _vscp_deviceURL 0600  
                            ?_doActionOn 00A2                                  __ramtop 0600  
                    __size_of_OpenTimer0 001E                                  __ptext0 59BE  
                                __ptext1 703E                                  __ptext2 2CD0  
                                __ptext3 67C2                                  __ptext4 6D64  
                                __ptext5 6FD4                                  __ptext6 6FE2  
                                __ptext7 700C                                  __ptext8 41FC  
                                __ptext9 5464                           _vscp_getUserID 6F7A  
                              _T0CONbits 000FD5                     ??_vscp_goActiveState 0031  
                       ___awmod@dividend 0016                    vscp_writeStdReg@value 001F  
                    ?_vscp_sendHeartBeat 0031                 ??_vscp_handleSetNickname 001C  
                                _minutes 00E4                                  _seconds 00E5  
                    __end_of_WriteTimer0 6FB0                         ?_init_app_eeprom 0001  
                    __end_of_Write_b_eep 6CBC                        vscp_readAppReg@rv 001A  
                     vscp_getMDF_URL@idx 0016            vscp_handleProtocolEvent@bytes 0106  
                   end_of_initialization 6DF0                          init_app_ram@dir 0018  
                    __end_of_doActionOff 650A             __end_of_vscp_handleHeartbeat 6B24  
               __size_of_vscp_getSubzone 000E                            __Lmediumconst 0000  
                   __end_of_sendCANFrame 6ACC                vscp_handleProtocolEvent@i 0113  
              vscp_handleProtocolEvent@j 0114                vscp_handleProtocolEvent@k 010D  
                        ??_doActionPulse 001A                     ??_vscp_sendHeartBeat 0033  
                         _vscp_sendEvent 6C42                        ECANSendMessage@id 0021  
                      ECANSendMessage@pb 0060                                  postdec2 000FDD  
                __size_of_ECANInitialize 016C                           _vscp_setUserID 6EA4  
                                postinc0 000FEE                                  postinc2 000FDE  
                 __end_of_vscp_deviceURL 0620      __end_of_vscp_writeNicknamePermanent 6F30  
            _vscp_writeNicknamePermanent 6F1A                       __ECANPointBuffer@b 0016  
                          _sendVSCPFrame 650A                   __end_of_vscp_getUserID 6F8C  
           ?_vscp_getBootLoaderAlgorithm 0001                                _RXM0EXIDM 0078CB  
                      __end_of_vscp_init 6718                           _vscp_probe_cnt 00EF  
                              _PORTCbits 000F82                      __end_of_getCANFrame 6C42  
          __size_of_vscp_restoreDefaults 000A                   ?_vscp_handleProbeState 0001  
               __size_of_vscp_readAppReg 0148                         doActionPulse@arg 0019  
                         _vscp_statuscnt 003D                 __size_of_vscp_readStdReg 01E6  
                       doActionPulse@val 001E                       _vscp_setSegmentCRC 6F04  
             vscp_handleProtocolEvent@cb 010B                  __end_of_ECANSendMessage 527E  
                      vscp_readStdReg@rv 002A                            ?__CANIDToRegs 0016  
                            doDM@dmflags 00BB                     __end_of__RegsToCANID 5E5A  
                    __size_of_doActionOn 04B0                      ?_vscp_setSegmentCRC 001B  
                 __end_of_vscp_sendEvent 6C80                               _vscp_error 700C  
                   _vscp_doOneSecondWork 67C2                       i1WriteTimer0@timer 0003  
                             _vscp_timer 0038                   __end_of_vscp_setUserID 6EBE  
                 vscp_sendHeartBeat@zone 0031                             ??_Read_b_eep 0018  
                         ?_sendVSCPFrame 0083              doApplicationOneSecondWork@i 00AC  
                         _doActionToggle 5464                           _doActionStatus 5632  
                        ?_vscp_getUserID 0018                           __end_of_doWork 7040  
           __end_of_vscp_getMinorVersion 703A                              _WriteTimer0 6F9E  
                   _SendInformationEvent 69F8                     _vscp_getMajorVersion 703A  
                            _Write_b_eep 6C80                     ??_vscp_setSegmentCRC 001C  
                      ??_vscp_getMDF_URL 0017            ??_vscp_getBootLoaderAlgorithm 0016  
                              ___DCDelay 00FF                        ?_vscp_writeAppReg 00A2  
                    start_initialization 6DCC                              _doActionOff 63DE  
        __size_of_vscp_handleSetNickname 0038                       ??_vscp_writeAppReg 00A4  
                      ?_vscp_writeStdReg 001E                      __CFG_BOREN$BOACTIVE 000000  
            __size_of_vscp_newNodeOnline 0044                             ??_OpenTimer0 0017  
                     ??_vscp_writeStdReg 0020                       _vscp_getFamilyCode 6F56  
                         ??__CANIDToRegs 001D                       _vscp_getFamilyType 6F44  
               _channel_protection_timer 00BD                         doDM@class_filter 00B0  
                     __end_of_Read_b_eep 6FC2                      sendVSCPFrame@nodeid 0086  
                      _vscp_readRegister 6EBE                          ?_vscp_sendEvent 0001  
vscp_handleProtocolEvent@bytes_this_time 010A                    ?_vscp_doOneSecondWork 0001  
                      __size_of_Busy_eep 0006                    ECANReceiveMessage@ptr 002D  
                    ?_vscp_getFamilyCode 0016                       ?_vscp_readRegister 002B  
       __end_of_vscp_handleProtocolEvent 2CD0                          ?_vscp_setUserID 001B  
                              _doDM$2282 00B6                                _doDM$2283 00B7  
                              _doDM$2284 00B8                                _doDM$2285 00B9  
                    ?_vscp_getFamilyType 0016                                _doDM$2286 00BA  
                  __size_of_init_app_ram 0410                 ?_vscp_handleDropNickname 0001  
                 __end_of_doActionToggle 5632                        ??_vscp_getSubzone 0018  
                 __end_of_doActionStatus 57FE                 __end_of__ECANPointBuffer 68EE  
                      __CANIDToRegs@type 001C                              _getCANFrame 6C02  
                               ??_doWork 0016                       _vscp_getBufferSize 702A  
            vscp_handleProtocolEvent@len 0107                           doActionOff@arg 00A3  
            vscp_handleProtocolEvent@pos 0105               __end_of_ECANReceiveMessage 5032  
                         doActionOff@val 00A6                      ??_vscp_readRegister 002C  
         __size_of_vscp_goBootloaderMode 0022                    ?_SendInformationEvent 0030  
                  ?_vscp_getMajorVersion 0001                    __end_ofi1_WriteTimer0 6FD4  
          __end_of_vscp_goBootloaderMode 6E86                     _vscp_handleHeartbeat 6ACC  
                     __end_of_OpenTimer0 6EA4      __size_of_doApplicationOneSecondWork 09AA  
                    ?_vscp_getBufferSize 0001                           doActionPulse@i 001F  
           __size_of_vscp_check_pstorage 0038                     ??_vscp_getFamilyCode 001A  
               ?_vscp_getSubMinorVersion 0001                              __pbssCOMRAM 0036  
                   ??_vscp_getFamilyType 001A                          __IT_SAVE_STATUS 00E0  
                          ?_vscp_getGUID 0018                            __pcstackBANK0 0060  
                          __pcstackBANK1 0100                         _vscp_alarmstatus 00E7  
                          ?_vscp_getZone 0001                    __size_of_sendCANFrame 0064  
                ?_vscp_getManufacturerId 0018                  ?_vscp_setManufacturerId 001B  
                          ?_vscp_setGUID 001B              __size_of_vscp_writeRegister 0026  
                       ?_ECANSendMessage 0021                        ??_vscp_readAppReg 0019  
                      sendVSCPFrame@size 0088                __end_of_vscp_readRegister 6ED8  
                           _init_app_ram 4688             __size_of_vscp_setControlByte 0016  
               ?_interrupt_at_low_vector 0001                        ??_vscp_readStdReg 001B  
                   ??_vscp_getBufferSize 0016                                __pnvBANK0 00FF  
                          __IT_SAVE_WREG 00E1                              ?_vscp_error 0001  
                     _vscp_getMatrixInfo 6CF4                   _vscp_handleSetNickname 6CBC  
          __size_of_ECANSetOperationMode 0014                          ??_sendVSCPFrame 008B  
                        ?_doActionToggle 00A2                           _ECANInitialize 5FCC  
                        ?_doActionStatus 00A2                                 ?___awmod 0016  
                    ?_vscp_getMatrixInfo 0016                  calculateSetFilterMask@i 0033  
                calculateSetFilterMask@j 0032                          vscp_getGUID@idx 0018  
                            __pintcodelo 0018                             ??_doActionOn 00A4  
                  ?_vscp_handleHeartbeat 0001         vscp_handleProtocolEvent@len_1394 0109  
                vscp_readStdReg@idx_1378 0029               vscp_setManufacturerId@data 001C  
                           _sendCANFrame 6A68                              __smallconst 0600  
                      WriteTimer0@timer0 0016                       _vscp_getSegmentCRC 6FFE  
                         ??_vscp_getGUID 0019                           ??_vscp_getZone 0018  
                            doActionOn@i 00A9           __end_of_vscp_getManufacturerId 6F7A  
         __end_of_vscp_setManufacturerId 6E42                    __size_of__RegsToCANID 0174  
       vscp_handleProtocolEvent@pos_1393 0108                          doDM@type_filter 00B4  
                         ??_vscp_setGUID 001D                      ?_vscp_getSegmentCRC 0001  
                   ??_vscp_getMatrixInfo 0018                         _vscp_configtimer 00D9  
        SendInformationEvent@eventTypeId 0032                   ??_vscp_doOneSecondWork 0034  
                 sendVSCPFrame@vscpclass 0083                                 _LATAbits 000F89  
                               _LATBbits 000F8A                     _vscp_getMinorVersion 7036  
                               _LATCbits 000F8B                                _sendTimer 00E6  
                     __end_of_doActionOn 41FC                   __end_of_ECANInitialize 6138  
                               i1u980_20 00CE                                 i1u980_21 00CC  
                               i1u981_20 00E6                                 i1u981_21 00E4  
                       ECANSendMessage@i 0079                         ECANSendMessage@j 0074  
                               i1u982_20 00F6                                 i1u982_21 00F4  
                               i1u976_20 0064                                 i1u976_21 0062  
                               i1u977_20 009E                                 i1u977_21 009C  
                               i1u978_20 00BC                                 i1u978_21 00BA  
                               i1u979_20 00C6                                 i1u979_21 00C4  
                  __end_of_vscp_getEvent 697C                                 _RXF0EIDH 000F02  
                               _RXF0EIDL 000F03                                 _RXB0OVFL 007BA7  
                               _RXF1EIDH 000F06                                 _RXF1EIDL 000F07  
                               _RXB1OVFL 007BA6                                 _RXF0SIDH 000F00  
                               _RXF0SIDL 000F01                                 _RXF1SIDH 000F04  
                               _RXF1SIDL 000F05                                 _RXM0EIDH 000F1A  
                               _RXM0EIDL 000F1B                          vscp_getEvent@rv 0074  
                               _RXM1EIDH 000F1E                                 _RXM1EIDL 000F1F  
                   ??_vscp_getSegmentCRC 0018                                 _RXFBCON0 000DE0  
                               _RXFBCON1 000DE1                                 _RXFBCON2 000DE2  
                               _RXFBCON3 000DE3                                 _RXFBCON4 000DE4  
                               _RXFBCON5 000DE5                                 _RXFBCON6 000DE6  
                               _RXFBCON7 000DE7                                 _RXM0SIDH 000F18  
                               _RXM0SIDL 000F19                   ??_SendInformationEvent 0033  
                               _RXM1SIDH 000F1C                   ??_vscp_getMajorVersion 0016  
                               _RXM1SIDL 000F1D               ?_vscp_getRegisterPagesUsed 0001  
                ??_vscp_handleProbeState 0032                       vscp_setUserID@data 001C  
                   __end_of__CANIDToRegs 6296                             __RegsToCANID 5CE6  
                     _vscp_probe_address 003C                          Write_b_eep@badd 0016  
                        Write_b_eep@bdat 0018                       doActionOff@dmflags 00A2  
            __size_of_vscp_goActiveState 0032                      getVSCPFrame@pNodeId 0064  
                              _vscp_init 661E                                _vscp_imsg 00F1  
                              _vscp_hour 00E9                                _vscp_omsg 003E  
                       vscp_setGUID@data 001C        __size_of_vscp_handleProtocolEvent 0E22  
                    __size_of_vscp_error 000A                ?_vscp_handleProtocolEvent 0001  
               SendInformationEvent@data 009F                                 __IT_DATA 00DC  
   __size_of_vscp_writeNicknamePermanent 0016       __end_of_doApplicationOneSecondWork 367A  
             _doApplicationOneSecondWork 2CD0                         _vscp_page_select 0036  
                            _INTCON2bits 000FF1               __size_of_vscp_readRegister 001A  
                               ___DCByte 00E2                        _measurement_clock 00D1  
                               _Busy_eep 7020                    ?_vscp_getMinorVersion 0001  
               __size_of_init_app_eeprom 01C0             __end_of_vscp_restoreDefaults 7020  
                             _EECON1bits 000FA6                          ?_ECANInitialize 0001  
               ??_calculateSetFilterMask 0060                                 __Hrparam 0000  
                   ECANReceiveMessage@id 001F              __size_of_vscp_sendHeartBeat 0036  
                       ??_vscp_getUserID 0019                          _vscp_getMDF_URL 6ED8  
                               __Lrparam 0000                    __end_of_doActionPulse 4DAA  
                       __CANIDToRegs@val 0018                         __CANIDToRegs@ptr 0016  
                          doActionOn@arg 00A3                            doActionOn@val 00A8  
 doApplicationOneSecondWork@iodirections 00A8                         _vscp_initledfunc 003B  
                       __size_of___awmod 007C                   ??_vscp_handleHeartbeat 001C  
                       getCANFrame@flags 0035                             ?_WriteTimer0 0016  
               vscp_writeAppReg@val_1166 00A8                         getCANFrame@pdata 0033  
                           ?_Write_b_eep 0016               vscp_writeAppReg@bInfoEvent 00A9  
                             ?_vscp_init 0001                             ?_doActionOff 00A2  
                               __ptext10 5632                                 __ptext11 4A98  
                               __ptext20 57FE                                 __ptext12 3D4C  
                               __ptext21 6EA4                                 __ptext13 63DE  
                               __ptext30 6F44                                 __ptext22 6E20  
                               __ptext14 1EAE                                 __ptext31 6F56  
                               __ptext23 6E42                                 __ptext15 697C  
                               __ptext40 703A                                 __ptext32 702A  
                               __ptext24 0622                                 __ptext16 6DFA  
                               __ptext41 6BBE                                 __ptext33 702E  
                               __ptext25 367A                                 __ptext17 5B68  
                               __ptext50 6D9A                                 __ptext42 6B72  
                               __ptext34 6F68                                 __ptext26 69F8  
                               __ptext18 7016                                 __ptext51 6C42  
                               __ptext43 661E                                 __ptext35 6F7A  
                               __ptext27 6EBE                                 __ptext19 4688  
                               __ptext60 5CE6                                 __ptext52 650A  
                               __ptext44 6FF0                                 __ptext36 6ED8  
                               __ptext28 527E                                 __ptext61 685A  
                               __ptext53 6A68                                 __ptext45 6CBC  
                               __ptext37 6F8C                                 __ptext29 7026  
                               __ptext70 6E86                                 __ptext62 6D2C  
                               __ptext54 5032                                 __ptext46 6ACC  
                               __ptext38 7032                                 __ptext71 6F9E  
                               __ptext63 6EEE                                 __ptext55 6138  
                               __ptext47 6CF4                                 __ptext39 7036  
                               __ptext72 5FCC                                 __ptext64 6F04  
                               __ptext56 68EE                                 __ptext48 6E64  
                               __ptext73 6F30                                 __ptext65 6FFE  
                               __ptext57 6718                                 __ptext49 5E5A  
                               __ptext74 6296                                 __ptext66 6F1A  
                               __ptext58 6C02                                 __ptext75 6FB0  
                               __ptext67 6C80                                 __ptext59 4DAA  
                               __ptext68 7020                                 __ptext77 6FC2  
                               __ptext69 6B24           vscp_goBootloaderMode@algorithm 001B  
              vscp_sendHeartBeat@subzone 0032                            ?_getVSCPFrame 0060  
                       ??_vscp_sendEvent 0030                          _vscp_getSubzone 6FD4  
           calculateSetFilterMask@filter 002A                         ??_vscp_setUserID 001D  
                          __size_of_doDM 048C                            __size_of_main 01AA  
                          __size_of_init 004E                __size_of_vscp_writeAppReg 188C  
                    _vscp_check_pstorage 6D2C                            init_app_ram@i 0019  
         vscp_handleProtocolEvent@i_1403 010C           vscp_handleProtocolEvent@i_1392 010E  
         vscp_handleProtocolEvent@i_1395 0112                     __end_of_vscp_getGUID 6F9E  
              __size_of_vscp_writeStdReg 017E                      ECANSendMessage@data 0025  
               ECANSendMessage@tempBSEL0 0075                             ?_getCANFrame 002F  
                    ECANSendMessage@mode 0072                     __end_of_vscp_getZone 6FF0  
                    ECANSendMessage@temp 0078                        ?__ECANPointBuffer 0016  
                      doActionOn@dmflags 00A2                        vscp_setUserID@idx 001B  
                   __end_of_vscp_setGUID 6E64                       vscp_readAppReg@reg 0018  
                       vscp_sendEvent@rv 0030                       ??__ECANPointBuffer 0018  
         vscp_handleProtocolEvent@offset 0104                              _RXB0FILHIT0 007B00  
                        vscp_setGUID@idx 001B                         init_app_eeprom@i 001D  
                       init_app_eeprom@j 001C                      _vscp_setControlByte 6EEE  
            __size_of_vscp_setSegmentCRC 0016                          _vscp_readAppReg 6296  
                   ?_vscp_check_pstorage 0001                              _RXB1CONbits 000F50  
       __size_of_vscp_handleDropNickname 004C                               _INTCONbits 000FF2  
           ??_vscp_readNicknamePermanent 0018                      ECANReceiveMessage@i 002A  
                        _vscp_guid_reset 003A                          _vscp_readStdReg 527E  
           vscp_handleDropNickname@bytes 001D               __end_of_vscp_newNodeOnline 6C02  
                     _ECANReceiveMessage 4DAA                           ??_getVSCPFrame 006C  
                        _vscp_initbtncnt 00EA                          sendVSCPFrame@id 002C  
                               intlevel1 0000                   ??_vscp_getMinorVersion 0016  
                vscp_getMatrixInfo@pData 0016                  __end_of_vscp_getMDF_URL 6EEE  
                   ?_vscp_setControlByte 001B                      ?_ECANReceiveMessage 001F  
                ?_vscp_handleSetNickname 0001                         ??_doActionToggle 00A4  
       __size_of_vscp_getSubMinorVersion 0004                         ??_doActionStatus 00A4  
                        _vscp_node_state 00ED                             ??_vscp_error 0016  
                ECANSendMessage@msgFlags 0028                      vscp_getMatrixInfo@i 0019  
        __size_of_calculateSetFilterMask 06D2                  vscp_setControlByte@ctrl 001B  
                     ECANSendMessage@ptr 007A                        ??_init_app_eeprom 001B  
                  __size_of__CANIDToRegs 015E      __size_of_vscp_readNicknamePermanent 000E  
    __end_of_vscp_getBootLoaderAlgorithm 7032              _vscp_getBootLoaderAlgorithm 702E  
       __size_of_interrupt_at_low_vector 0136                   ECANSendMessage@dataLen 0027  
                    __ECANPointBuffer@pt 0018                     ??_ECANReceiveMessage 0027  
                  ??_vscp_check_pstorage 001C                   ECANSendMessage@buffers 0073  
                  _vscp_goBootloaderMode 6E64             __end_of_ECANSetOperationMode 6F44  
                   _vscp_restoreDefaults 7016              __size_of_vscp_getFamilyCode 0012  
                            ??_vscp_init 0018                  __end_of_vscp_getSubzone 6FE2  
            __size_of_vscp_getFamilyType 0012                               _RXM1EXIDEN 0078EB  
             __end_of_vscp_writeRegister 6E20                       __end_of_vscp_error 7016  
                 ECANSendMessage@tempPtr 0076           __end_of_vscp_handleSetNickname 6CF4  
     vscp_handleProtocolEvent@bytes_1399 0110                    ??_vscp_setControlByte 001C  
                   vscp_readRegister@reg 002B             ??_doApplicationOneSecondWork 0100  
                           __CANIDToRegs 6138                   __size_ofi1_WriteTimer0 0012  
      vscp_handleProtocolEvent@page_save 0100              __size_of_vscp_getBufferSize 0004  
      doApplicationOneSecondWork@ctrlreg 00AB                 __size_of_ECANSendMessage 024C  
                      doActionToggle@bOn 00A7                        doActionToggle@arg 00A3  
