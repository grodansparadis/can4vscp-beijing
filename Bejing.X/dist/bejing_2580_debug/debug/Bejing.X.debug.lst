

Microchip Technology PIC18 LITE Macro Assembler V1.21 build 54009 
                                                                                               Wed Jun 24 15:48:04 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	18F2580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	text56,global,reloc=2,class=CODE,delta=1
    71                           	psect	text57,global,reloc=2,class=CODE,delta=1
    72                           	psect	text58,global,reloc=2,class=CODE,delta=1
    73                           	psect	text59,global,reloc=2,class=CODE,delta=1
    74                           	psect	text60,global,reloc=2,class=CODE,delta=1
    75                           	psect	text61,global,reloc=2,class=CODE,delta=1
    76                           	psect	text62,global,reloc=2,class=CODE,delta=1
    77                           	psect	text63,global,reloc=2,class=CODE,delta=1
    78                           	psect	text64,global,reloc=2,class=CODE,delta=1
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	text66,global,reloc=2,class=CODE,delta=1
    81                           	psect	text67,global,reloc=2,class=CODE,delta=1
    82                           	psect	text68,global,reloc=2,class=CODE,delta=1
    83                           	psect	text69,global,reloc=2,class=CODE,delta=1
    84                           	psect	text70,global,reloc=2,class=CODE,delta=1
    85                           	psect	text71,global,reloc=2,class=CODE,delta=1
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	text73,global,reloc=2,class=CODE,delta=1
    88                           	psect	text74,global,reloc=2,class=CODE,delta=1
    89                           	psect	text75,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    91                           	psect	text77,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    94  0000                     
    95                           	psect	smallconst
    96  000600                     __psmallconst:
    97                           	opt stack 0
    98  000600                     _vscp_deviceURL:
    99                           	opt stack 0
   100  000600  77                 	db	119
   101  000601  77                 	db	119
   102  000602  77                 	db	119
   103  000603  2E                 	db	46
   104  000604  65                 	db	101
   105  000605  75                 	db	117
   106  000606  72                 	db	114
   107  000607  6F                 	db	111
   108  000608  73                 	db	115
   109  000609  6F                 	db	111
   110  00060A  75                 	db	117
   111  00060B  72                 	db	114
   112  00060C  63                 	db	99
   113  00060D  65                 	db	101
   114  00060E  2E                 	db	46
   115  00060F  73                 	db	115
   116  000610  65                 	db	101
   117  000611  2F                 	db	47
   118  000612  62                 	db	98
   119  000613  65                 	db	101
   120  000614  69                 	db	105
   121  000615  6A                 	db	106
   122  000616  69                 	db	105
   123  000617  6E                 	db	110
   124  000618  67                 	db	103
   125  000619  5F                 	db	95
   126  00061A  32                 	db	50
   127  00061B  2E                 	db	46
   128  00061C  78                 	db	120
   129  00061D  6D                 	db	109
   130  00061E  6C                 	db	108
   131  00061F  00                 	db	0
   132  000620                     __end_of_vscp_deviceURL:
   133                           	opt stack 0
   134  0000                     _BRGCON1	set	3952
   135  0000                     _BRGCON2	set	3953
   136  0000                     _BRGCON3	set	3954
   137  0000                     _BSEL0	set	3576
   138  0000                     _CANCON	set	3951
   139  0000                     _CIOCON	set	3955
   140  0000                     _ECANCON	set	3959
   141  0000                     _EEADR	set	4009
   142  0000                     _EECON1bits	set	4006
   143  0000                     _EECON2	set	4007
   144  0000                     _EEDATA	set	4008
   145  0000                     _INTCON2bits	set	4081
   146  0000                     _INTCONbits	set	4082
   147  0000                     _LATAbits	set	3977
   148  0000                     _LATBbits	set	3978
   149  0000                     _LATCbits	set	3979
   150  0000                     _MSEL0	set	3568
   151  0000                     _MSEL1	set	3569
   152  0000                     _MSEL2	set	3570
   153  0000                     _PORTA	set	3968
   154  0000                     _PORTB	set	3969
   155  0000                     _PORTC	set	3970
   156  0000                     _PORTCbits	set	3970
   157  0000                     _RXB1CONbits	set	3920
   158  0000                     _RXF0EIDH	set	3842
   159  0000                     _RXF0EIDL	set	3843
   160  0000                     _RXF0SIDH	set	3840
   161  0000                     _RXF0SIDL	set	3841
   162  0000                     _RXF1EIDH	set	3846
   163  0000                     _RXF1EIDL	set	3847
   164  0000                     _RXF1SIDL	set	3845
   165  0000                     _RXFBCON0	set	3552
   166  0000                     _RXFBCON1	set	3553
   167  0000                     _RXFBCON2	set	3554
   168  0000                     _RXFBCON3	set	3555
   169  0000                     _RXFBCON4	set	3556
   170  0000                     _RXFBCON5	set	3557
   171  0000                     _RXFBCON6	set	3558
   172  0000                     _RXFBCON7	set	3559
   173  0000                     _RXFCON0	set	3540
   174  0000                     _RXFCON1	set	3541
   175  0000                     _RXM0EIDH	set	3866
   176  0000                     _RXM0EIDL	set	3867
   177  0000                     _RXM0SIDH	set	3864
   178  0000                     _RXM0SIDL	set	3865
   179  0000                     _RXM1EIDH	set	3870
   180  0000                     _RXM1EIDL	set	3871
   181  0000                     _RXM1SIDL	set	3869
   182  0000                     _T0CON	set	4053
   183  0000                     _T0CONbits	set	4053
   184  0000                     _TMR0H	set	4055
   185  0000                     _TMR0L	set	4054
   186  0000                     _TRISA	set	3986
   187  0000                     _TRISB	set	3987
   188  0000                     _TRISC	set	3988
   189  0000                     _B0RXFUL	set	28935
   190  0000                     _B0TXEN	set	28610
   191  0000                     _B1RXFUL	set	29063
   192  0000                     _B1TXEN	set	28611
   193  0000                     _B2RXFUL	set	29191
   194  0000                     _B2TXEN	set	28612
   195  0000                     _B3RXFUL	set	29319
   196  0000                     _B3TXEN	set	28613
   197  0000                     _B4RXFUL	set	29447
   198  0000                     _B4TXEN	set	28614
   199  0000                     _B5RXFUL	set	29575
   200  0000                     _B5TXEN	set	28615
   201  0000                     _FIFOEMPTY	set	31655
   202  0000                     _IRXIF	set	32039
   203  0000                     _MDSEL0	set	31678
   204  0000                     _MDSEL1	set	31679
   205  0000                     _RXB0FILHIT0	set	31488
   206  0000                     _RXB0FUL	set	31495
   207  0000                     _RXB0IF	set	32032
   208  0000                     _RXB0OVFL	set	31655
   209  0000                     _RXB1IF	set	32033
   210  0000                     _RXB1OVFL	set	31654
   211  0000                     _RXF1EN	set	28321
   212  0000                     _RXM0EXIDM	set	30923
   213  0000                     _RXM1EXIDEN	set	30955
   214  0000                     _B0CON	set	3616
   215  0000                     _B1CON	set	3632
   216  0000                     _B2CON	set	3648
   217  0000                     _B3CON	set	3664
   218  0000                     _B4CON	set	3680
   219  0000                     _B5CON	set	3696
   220  0000                     _RXB0CON	set	3936
   221  0000                     _RXB1CON	set	3920
   222  0000                     _RXF1SIDH	set	3844
   223  0000                     _RXM1SIDH	set	3868
   224  0000                     _TXB0CON	set	3904
   225  0000                     _TXB1CON	set	3888
   226  0000                     _TXB2CON	set	3872
   227  000620  00                 	db	0	; dummy byte at the end
   228  0000                     
   229                           	psect	nvBANK0
   230  0000FF                     __pnvBANK0:
   231                           	opt stack 0
   232  0000FF                     ___DCDelay:
   233                           	opt stack 0
   234  0000FF                     	ds	1
   235                           
   236                           ; #config settings
   237  0000                     
   238                           	psect	cinit
   239  006C16                     __pcinit:
   240                           	opt stack 0
   241  006C16                     start_initialization:
   242                           	opt stack 0
   243  006C16                     __initialization:
   244                           	opt stack 0
   245                           
   246                           ; Clear objects allocated to BANK1 (20 bytes)
   247  006C16  EE01  F026         	lfsr	0,__pbssBANK1
   248  006C1A  0E14               	movlw	20
   249  006C1C                     clear_0:
   250  006C1C  6AEE               	clrf	postinc0,c
   251  006C1E  06E8               	decf	wreg,f,c
   252  006C20  E1FD               	bnz	clear_0
   253                           
   254                           ; Clear objects allocated to BANK0 (66 bytes)
   255  006C22  EE00  F0BD         	lfsr	0,__pbssBANK0
   256  006C26  0E42               	movlw	66
   257  006C28                     clear_1:
   258  006C28  6AEE               	clrf	postinc0,c
   259  006C2A  06E8               	decf	wreg,f,c
   260  006C2C  E1FD               	bnz	clear_1
   261                           
   262                           ; Clear objects allocated to COMRAM (21 bytes)
   263  006C2E  EE00  F036         	lfsr	0,__pbssCOMRAM
   264  006C32  0E15               	movlw	21
   265  006C34                     clear_2:
   266  006C34  6AEE               	clrf	postinc0,c
   267  006C36  06E8               	decf	wreg,f,c
   268  006C38  E1FD               	bnz	clear_2
   269  006C3A                     end_of_initialization:
   270                           	opt stack 0
   271  006C3A                     __end_of__initialization:
   272                           	opt stack 0
   273  006C3A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   274  006C3C  6EF8               	movwf	tblptru,c
   275  006C3E  0100               	movlb	0
   276  006C40  EFD2  F02B         	goto	_main	;jump to C main() function
   277                           tblptru	equ	0xFF8
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           
   281                           	psect	bssCOMRAM
   282  000036                     __pbssCOMRAM:
   283                           	opt stack 0
   284  000036                     _vscp_page_select:
   285                           	opt stack 0
   286  000036                     	ds	2
   287  000038                     _vscp_timer:
   288                           	opt stack 0
   289  000038                     	ds	2
   290  00003A                     _vscp_guid_reset:
   291                           	opt stack 0
   292  00003A                     	ds	1
   293  00003B                     _vscp_initledfunc:
   294                           	opt stack 0
   295  00003B                     	ds	1
   296  00003C                     _vscp_probe_address:
   297                           	opt stack 0
   298  00003C                     	ds	1
   299  00003D                     _vscp_statuscnt:
   300                           	opt stack 0
   301  00003D                     	ds	1
   302  00003E                     _vscp_omsg:
   303                           	opt stack 0
   304  00003E                     	ds	13
   305                           tblptru	equ	0xFF8
   306                           postinc0	equ	0xFEE
   307                           wreg	equ	0xFE8
   308                           
   309                           	psect	bssBANK0
   310  0000BD                     __pbssBANK0:
   311                           	opt stack 0
   312  0000BD                     _channel_protection_timer:
   313                           	opt stack 0
   314  0000BD                     	ds	20
   315  0000D1                     _measurement_clock:
   316                           	opt stack 0
   317  0000D1                     	ds	4
   318  0000D5                     _channel_pulse_flags:
   319                           	opt stack 0
   320  0000D5                     	ds	2
   321  0000D7                     _current_iostate:
   322                           	opt stack 0
   323  0000D7                     	ds	2
   324  0000D9                     _vscp_configtimer:
   325                           	opt stack 0
   326  0000D9                     	ds	2
   327  0000DB                     __ECANRxFilterHitInfo:
   328                           	opt stack 0
   329  0000DB                     	ds	1
   330  0000DC                     __IT_DATA:
   331                           	opt stack 0
   332  0000DC                     	ds	1
   333  0000DD                     __IT_ID:
   334                           	opt stack 0
   335  0000DD                     	ds	1
   336  0000DE                     __IT_INT_MASK:
   337                           	opt stack 0
   338  0000DE                     	ds	1
   339  0000DF                     __IT_SAVE_BSR:
   340                           	opt stack 0
   341  0000DF                     	ds	1
   342  0000E0                     __IT_SAVE_STATUS:
   343                           	opt stack 0
   344  0000E0                     	ds	1
   345  0000E1                     __IT_SAVE_WREG:
   346                           	opt stack 0
   347  0000E1                     	ds	1
   348  0000E2                     ___DCByte:
   349                           	opt stack 0
   350  0000E2                     	ds	1
   351  0000E3                     _hours:
   352                           	opt stack 0
   353  0000E3                     	ds	1
   354  0000E4                     _minutes:
   355                           	opt stack 0
   356  0000E4                     	ds	1
   357  0000E5                     _seconds:
   358                           	opt stack 0
   359  0000E5                     	ds	1
   360  0000E6                     _sendTimer:
   361                           	opt stack 0
   362  0000E6                     	ds	1
   363  0000E7                     _vscp_alarmstatus:
   364                           	opt stack 0
   365  0000E7                     	ds	1
   366  0000E8                     _vscp_errorcnt:
   367                           	opt stack 0
   368  0000E8                     	ds	1
   369  0000E9                     _vscp_hour:
   370                           	opt stack 0
   371  0000E9                     	ds	1
   372  0000EA                     _vscp_initbtncnt:
   373                           	opt stack 0
   374  0000EA                     	ds	1
   375  0000EB                     _vscp_minute:
   376                           	opt stack 0
   377  0000EB                     	ds	1
   378  0000EC                     _vscp_nickname:
   379                           	opt stack 0
   380  0000EC                     	ds	1
   381  0000ED                     _vscp_node_state:
   382                           	opt stack 0
   383  0000ED                     	ds	1
   384  0000EE                     _vscp_node_substate:
   385                           	opt stack 0
   386  0000EE                     	ds	1
   387  0000EF                     _vscp_probe_cnt:
   388                           	opt stack 0
   389  0000EF                     	ds	1
   390  0000F0                     _vscp_second:
   391                           	opt stack 0
   392  0000F0                     	ds	1
   393  0000F1                     _vscp_imsg:
   394                           	opt stack 0
   395  0000F1                     	ds	14
   396                           tblptru	equ	0xFF8
   397                           postinc0	equ	0xFEE
   398                           wreg	equ	0xFE8
   399                           
   400                           	psect	bssBANK1
   401  000126                     __pbssBANK1:
   402                           	opt stack 0
   403  000126                     _channel_pulse_timer:
   404                           	opt stack 0
   405  000126                     	ds	20
   406                           tblptru	equ	0xFF8
   407                           postinc0	equ	0xFEE
   408                           wreg	equ	0xFE8
   409                           
   410                           	psect	cstackBANK1
   411  000100                     __pcstackBANK1:
   412                           	opt stack 0
   413  000100                     ??_doApplicationOneSecondWork:
   414  000100                     vscp_handleProtocolEvent@page_save:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x0
   418  000100                     	ds	2
   419  000102                     vscp_handleProtocolEvent@page_save_1403:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x2
   423  000102                     	ds	2
   424  000104                     vscp_handleProtocolEvent@offset:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x4
   428  000104                     	ds	1
   429  000105                     vscp_handleProtocolEvent@pos:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x5
   433  000105                     	ds	1
   434  000106                     vscp_handleProtocolEvent@bytes:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x6
   438  000106                     	ds	1
   439  000107                     vscp_handleProtocolEvent@len:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x7
   443  000107                     	ds	1
   444  000108                     vscp_handleProtocolEvent@pos_1392:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x8
   448  000108                     	ds	1
   449  000109                     vscp_handleProtocolEvent@len_1393:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x9
   453  000109                     	ds	1
   454  00010A                     vscp_handleProtocolEvent@bytes_this_time:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0xA
   458  00010A                     	ds	1
   459  00010B                     vscp_handleProtocolEvent@cb:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0xB
   463  00010B                     	ds	1
   464  00010C                     vscp_handleProtocolEvent@i_1402:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0xC
   468  00010C                     	ds	1
   469  00010D                     vscp_handleProtocolEvent@k:
   470                           	opt stack 0
   471                           
   472                           ; 1 bytes @ 0xD
   473  00010D                     	ds	1
   474  00010E                     vscp_handleProtocolEvent@bytes_1399:
   475                           	opt stack 0
   476                           
   477                           ; 1 bytes @ 0xE
   478  00010E                     	ds	1
   479  00010F                     vscp_handleProtocolEvent@i_1391:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0xF
   483  00010F                     	ds	1
   484  000110                     vscp_handleProtocolEvent@byte:
   485                           	opt stack 0
   486                           
   487                           ; 1 bytes @ 0x10
   488  000110                     	ds	1
   489  000111                     vscp_handleProtocolEvent@i_1394:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x11
   493  000111                     	ds	1
   494  000112                     vscp_handleProtocolEvent@i:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x12
   498  000112                     	ds	1
   499  000113                     vscp_handleProtocolEvent@j:
   500                           	opt stack 0
   501                           
   502                           ; 1 bytes @ 0x13
   503  000113                     	ds	18
   504  000125                     ??_main:
   505                           
   506                           ; 0 bytes @ 0x25
   507  000125                     	ds	1
   508                           tblptru	equ	0xFF8
   509                           postinc0	equ	0xFEE
   510                           wreg	equ	0xFE8
   511                           
   512                           	psect	cstackBANK0
   513  000060                     __pcstackBANK0:
   514                           	opt stack 0
   515  000060                     ??_init_app_ram:
   516  000060                     ??_calculateSetFilterMask:
   517  000060                     ?_getVSCPFrame:
   518                           	opt stack 0
   519  000060                     getVSCPFrame@pvscpclass:
   520                           	opt stack 0
   521  000060                     ECANSendMessage@pb:
   522                           	opt stack 0
   523                           
   524                           ; 18 bytes @ 0x0
   525  000060                     	ds	2
   526  000062                     getVSCPFrame@pvscptype:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x2
   530  000062                     	ds	2
   531  000064                     getVSCPFrame@pNodeId:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x4
   535  000064                     	ds	2
   536  000066                     getVSCPFrame@pPriority:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x6
   540  000066                     	ds	2
   541  000068                     getVSCPFrame@pSize:
   542                           	opt stack 0
   543                           
   544                           ; 2 bytes @ 0x8
   545  000068                     	ds	2
   546  00006A                     getVSCPFrame@pData:
   547                           	opt stack 0
   548                           
   549                           ; 2 bytes @ 0xA
   550  00006A                     	ds	2
   551  00006C                     ??_getVSCPFrame:
   552                           
   553                           ; 0 bytes @ 0xC
   554  00006C                     	ds	4
   555  000070                     getVSCPFrame@id:
   556                           	opt stack 0
   557                           
   558                           ; 4 bytes @ 0x10
   559  000070                     	ds	2
   560  000072                     ECANSendMessage@mode:
   561                           	opt stack 0
   562                           
   563                           ; 1 bytes @ 0x12
   564  000072                     	ds	1
   565  000073                     ECANSendMessage@buffers:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x13
   569  000073                     	ds	1
   570  000074                     ECANSendMessage@j:
   571                           	opt stack 0
   572  000074                     vscp_getEvent@rv:
   573                           	opt stack 0
   574                           
   575                           ; 1 bytes @ 0x14
   576  000074                     	ds	1
   577  000075                     ECANSendMessage@tempBSEL0:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x15
   581  000075                     	ds	1
   582  000076                     ECANSendMessage@tempPtr:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x16
   586  000076                     	ds	2
   587  000078                     ECANSendMessage@temp:
   588                           	opt stack 0
   589                           
   590                           ; 1 bytes @ 0x18
   591  000078                     	ds	1
   592  000079                     ECANSendMessage@i:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x19
   596  000079                     	ds	1
   597  00007A                     ECANSendMessage@ptr:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x1A
   601  00007A                     	ds	2
   602  00007C                     ?_sendCANFrame:
   603                           	opt stack 0
   604  00007C                     sendCANFrame@id:
   605                           	opt stack 0
   606                           
   607                           ; 4 bytes @ 0x1C
   608  00007C                     	ds	4
   609  000080                     sendCANFrame@dlc:
   610                           	opt stack 0
   611                           
   612                           ; 1 bytes @ 0x20
   613  000080                     	ds	1
   614  000081                     sendCANFrame@pdata:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x21
   618  000081                     	ds	2
   619  000083                     ?_sendVSCPFrame:
   620                           	opt stack 0
   621  000083                     sendVSCPFrame@vscpclass:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x23
   625  000083                     	ds	2
   626  000085                     sendVSCPFrame@vscptype:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0x25
   630  000085                     	ds	1
   631  000086                     sendVSCPFrame@nodeid:
   632                           	opt stack 0
   633                           
   634                           ; 1 bytes @ 0x26
   635  000086                     	ds	1
   636  000087                     sendVSCPFrame@priority:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x27
   640  000087                     	ds	1
   641  000088                     sendVSCPFrame@size:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x28
   645  000088                     	ds	1
   646  000089                     sendVSCPFrame@pData:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x29
   650  000089                     	ds	2
   651  00008B                     ??_sendVSCPFrame:
   652                           
   653                           ; 0 bytes @ 0x2B
   654  00008B                     	ds	20
   655  00009F                     SendInformationEvent@data:
   656                           	opt stack 0
   657                           
   658                           ; 3 bytes @ 0x3F
   659  00009F                     	ds	3
   660  0000A2                     ?_doActionOff:
   661                           	opt stack 0
   662  0000A2                     ?_doActionOn:
   663                           	opt stack 0
   664  0000A2                     ?_doActionStatus:
   665                           	opt stack 0
   666  0000A2                     ?_doActionToggle:
   667                           	opt stack 0
   668  0000A2                     ?_vscp_writeAppReg:
   669                           	opt stack 0
   670  0000A2                     vscp_writeAppReg@reg:
   671                           	opt stack 0
   672  0000A2                     doActionOn@dmflags:
   673                           	opt stack 0
   674  0000A2                     doActionOff@dmflags:
   675                           	opt stack 0
   676  0000A2                     doActionStatus@dmflags:
   677                           	opt stack 0
   678  0000A2                     doActionToggle@dmflags:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x42
   682  0000A2                     	ds	1
   683  0000A3                     vscp_writeAppReg@val:
   684                           	opt stack 0
   685  0000A3                     doActionOn@arg:
   686                           	opt stack 0
   687  0000A3                     doActionOff@arg:
   688                           	opt stack 0
   689  0000A3                     doActionStatus@arg:
   690                           	opt stack 0
   691  0000A3                     doActionToggle@arg:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x43
   695  0000A3                     	ds	1
   696  0000A4                     ??_doActionOff:
   697  0000A4                     ??_doActionOn:
   698  0000A4                     ??_doActionStatus:
   699  0000A4                     ??_doActionToggle:
   700  0000A4                     ??_vscp_writeAppReg:
   701                           
   702                           ; 0 bytes @ 0x44
   703  0000A4                     	ds	2
   704  0000A6                     doActionOff@val:
   705                           	opt stack 0
   706  0000A6                     doActionStatus@val:
   707                           	opt stack 0
   708  0000A6                     doActionToggle@val:
   709                           	opt stack 0
   710                           
   711                           ; 1 bytes @ 0x46
   712  0000A6                     	ds	1
   713  0000A7                     doActionOff@i:
   714                           	opt stack 0
   715  0000A7                     doActionStatus@bOn:
   716                           	opt stack 0
   717  0000A7                     doActionToggle@bOn:
   718                           	opt stack 0
   719                           
   720                           ; 1 bytes @ 0x47
   721  0000A7                     	ds	1
   722  0000A8                     vscp_writeAppReg@val_1165:
   723                           	opt stack 0
   724  0000A8                     doActionOn@val:
   725                           	opt stack 0
   726  0000A8                     doActionStatus@i:
   727                           	opt stack 0
   728  0000A8                     doActionToggle@i:
   729                           	opt stack 0
   730  0000A8                     doApplicationOneSecondWork@iodirections:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0x48
   734  0000A8                     	ds	1
   735  0000A9                     vscp_writeAppReg@bInfoEvent:
   736                           	opt stack 0
   737  0000A9                     doActionOn@i:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x49
   741  0000A9                     	ds	1
   742  0000AA                     ??_doDM:
   743  0000AA                     doApplicationOneSecondWork@bOn:
   744                           	opt stack 0
   745  0000AA                     vscp_writeAppReg@bOn:
   746                           	opt stack 0
   747                           
   748                           ; 1 bytes @ 0x4A
   749  0000AA                     	ds	1
   750  0000AB                     doApplicationOneSecondWork@ctrlreg:
   751                           	opt stack 0
   752  0000AB                     vscp_writeAppReg@rv:
   753                           	opt stack 0
   754                           
   755                           ; 1 bytes @ 0x4B
   756  0000AB                     	ds	1
   757  0000AC                     ?_vscp_writeRegister:
   758                           	opt stack 0
   759  0000AC                     doApplicationOneSecondWork@i:
   760                           	opt stack 0
   761  0000AC                     vscp_writeRegister@reg:
   762                           	opt stack 0
   763                           
   764                           ; 1 bytes @ 0x4C
   765  0000AC                     	ds	1
   766  0000AD                     vscp_writeRegister@value:
   767                           	opt stack 0
   768                           
   769                           ; 1 bytes @ 0x4D
   770  0000AD                     	ds	1
   771  0000AE                     ??_vscp_handleProtocolEvent:
   772                           
   773                           ; 0 bytes @ 0x4E
   774  0000AE                     	ds	2
   775  0000B0                     doDM@class_filter:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x50
   779  0000B0                     	ds	2
   780  0000B2                     doDM@class_mask:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x52
   784  0000B2                     	ds	2
   785  0000B4                     doDM@type_filter:
   786                           	opt stack 0
   787                           
   788                           ; 1 bytes @ 0x54
   789  0000B4                     	ds	1
   790  0000B5                     doDM@type_mask:
   791                           	opt stack 0
   792                           
   793                           ; 1 bytes @ 0x55
   794  0000B5                     	ds	1
   795  0000B6                     _doDM$2281:
   796                           	opt stack 0
   797                           
   798                           ; 1 bytes @ 0x56
   799  0000B6                     	ds	1
   800  0000B7                     _doDM$2282:
   801                           	opt stack 0
   802                           
   803                           ; 1 bytes @ 0x57
   804  0000B7                     	ds	1
   805  0000B8                     _doDM$2283:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x58
   809  0000B8                     	ds	1
   810  0000B9                     _doDM$2284:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x59
   814  0000B9                     	ds	1
   815  0000BA                     _doDM$2285:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x5A
   819  0000BA                     	ds	1
   820  0000BB                     doDM@dmflags:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x5B
   824  0000BB                     	ds	1
   825  0000BC                     doDM@i:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x5C
   829  0000BC                     	ds	1
   830                           tblptru	equ	0xFF8
   831                           postinc0	equ	0xFEE
   832                           wreg	equ	0xFE8
   833                           
   834                           	psect	cstackCOMRAM
   835  000001                     __pcstackCOMRAM:
   836                           	opt stack 0
   837  000001                     ?i1_WriteTimer0:
   838                           	opt stack 0
   839  000001                     i1WriteTimer0@timer0:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0x0
   843  000001                     	ds	2
   844  000003                     i1WriteTimer0@timer:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0x2
   848  000003                     	ds	2
   849  000005                     ??_interrupt_at_low_vector:
   850                           
   851                           ; 0 bytes @ 0x4
   852  000005                     	ds	17
   853  000016                     ?_ECANSetOperationMode:
   854                           	opt stack 0
   855  000016                     ?__CANIDToRegs:
   856                           	opt stack 0
   857  000016                     ?__RegsToCANID:
   858                           	opt stack 0
   859  000016                     ?_WriteTimer0:
   860                           	opt stack 0
   861  000016                     ?_Write_b_eep:
   862                           	opt stack 0
   863  000016                     ??_vscp_error:
   864  000016                     ?_OpenTimer0:
   865                           	opt stack 0
   866  000016                     ?_vscp_getMatrixInfo:
   867                           	opt stack 0
   868  000016                     ?_Read_b_eep:
   869                           	opt stack 0
   870  000016                     ?_vscp_getMDF_URL:
   871                           	opt stack 0
   872  000016                     ?__ECANPointBuffer:
   873                           	opt stack 0
   874  000016                     ?___awmod:
   875                           	opt stack 0
   876  000016                     ?_vscp_getFamilyCode:
   877                           	opt stack 0
   878  000016                     ?_vscp_getFamilyType:
   879                           	opt stack 0
   880  000016                     ECANSetOperationMode@mode:
   881                           	opt stack 0
   882  000016                     __ECANPointBuffer@b:
   883                           	opt stack 0
   884  000016                     vscp_getMDF_URL@idx:
   885                           	opt stack 0
   886  000016                     OpenTimer0@config:
   887                           	opt stack 0
   888  000016                     __CANIDToRegs@ptr:
   889                           	opt stack 0
   890  000016                     __RegsToCANID@ptr:
   891                           	opt stack 0
   892  000016                     Read_b_eep@badd:
   893                           	opt stack 0
   894  000016                     Write_b_eep@badd:
   895                           	opt stack 0
   896  000016                     WriteTimer0@timer0:
   897                           	opt stack 0
   898  000016                     ___awmod@dividend:
   899                           	opt stack 0
   900                           
   901                           ; 2 bytes @ 0x15
   902  000016                     	ds	1
   903  000017                     ??_ECANInitialize:
   904  000017                     
   905                           ; 0 bytes @ 0x16
   906  000017                     	ds	1
   907  000018                     ??_vscp_init:
   908  000018                     ?_doActionPulse:
   909                           	opt stack 0
   910  000018                     ??_vscp_getMatrixInfo:
   911  000018                     ?_vscp_readAppReg:
   912                           	opt stack 0
   913  000018                     ?_vscp_getGUID:
   914                           	opt stack 0
   915  000018                     ?_vscp_getUserID:
   916                           	opt stack 0
   917  000018                     ?_vscp_getManufacturerId:
   918                           	opt stack 0
   919  000018                     init_app_ram@i:
   920                           	opt stack 0
   921  000018                     vscp_readAppReg@reg:
   922                           	opt stack 0
   923  000018                     doActionPulse@dmflags:
   924                           	opt stack 0
   925  000018                     vscp_getGUID@idx:
   926                           	opt stack 0
   927  000018                     vscp_getUserID@idx:
   928                           	opt stack 0
   929  000018                     vscp_getManufacturerId@idx:
   930                           	opt stack 0
   931  000018                     Write_b_eep@bdat:
   932                           	opt stack 0
   933  000018                     __RegsToCANID@val:
   934                           	opt stack 0
   935  000018                     __ECANPointBuffer@pt:
   936                           	opt stack 0
   937  000018                     WriteTimer0@timer:
   938                           	opt stack 0
   939  000018                     ___awmod@divisor:
   940                           	opt stack 0
   941  000018                     __CANIDToRegs@val:
   942                           	opt stack 0
   943                           
   944                           ; 4 bytes @ 0x17
   945  000018                     	ds	1
   946  000019                     ??_Write_b_eep:
   947  000019                     ??_vscp_readAppReg:
   948  000019                     doActionPulse@arg:
   949                           	opt stack 0
   950  000019                     vscp_getMatrixInfo@i:
   951                           	opt stack 0
   952                           
   953                           ; 1 bytes @ 0x18
   954  000019                     	ds	1
   955  00001A                     ??_init:
   956  00001A                     ??_doActionPulse:
   957  00001A                     ??___awmod:
   958  00001A                     ?_vscp_readStdReg:
   959                           	opt stack 0
   960  00001A                     __RegsToCANID@type:
   961                           	opt stack 0
   962  00001A                     vscp_readAppReg@rv:
   963                           	opt stack 0
   964  00001A                     vscp_readStdReg@reg:
   965                           	opt stack 0
   966  00001A                     Write_b_eep@GIE_BIT_VAL:
   967                           	opt stack 0
   968                           
   969                           ; 1 bytes @ 0x19
   970  00001A                     	ds	1
   971  00001B                     ??__RegsToCANID:
   972  00001B                     ??_init_app_eeprom:
   973  00001B                     ??_vscp_readStdReg:
   974  00001B                     ?_vscp_setGUID:
   975                           	opt stack 0
   976  00001B                     ?_vscp_setManufacturerId:
   977                           	opt stack 0
   978  00001B                     ?_vscp_writeNicknamePermanent:
   979                           	opt stack 0
   980  00001B                     ?_vscp_setUserID:
   981                           	opt stack 0
   982  00001B                     ?_vscp_setSegmentCRC:
   983                           	opt stack 0
   984  00001B                     ?_vscp_setControlByte:
   985                           	opt stack 0
   986  00001B                     ?_vscp_goBootloaderMode:
   987                           	opt stack 0
   988  00001B                     init@dir:
   989                           	opt stack 0
   990  00001B                     vscp_setGUID@idx:
   991                           	opt stack 0
   992  00001B                     vscp_setManufacturerId@idx:
   993                           	opt stack 0
   994  00001B                     vscp_writeNicknamePermanent@nickname:
   995                           	opt stack 0
   996  00001B                     vscp_setUserID@idx:
   997                           	opt stack 0
   998  00001B                     vscp_setSegmentCRC@crc:
   999                           	opt stack 0
  1000  00001B                     vscp_setControlByte@ctrl:
  1001                           	opt stack 0
  1002  00001B                     vscp_goBootloaderMode@algorithm:
  1003                           	opt stack 0
  1004  00001B                     ___awmod@counter:
  1005                           	opt stack 0
  1006                           
  1007                           ; 1 bytes @ 0x1A
  1008  00001B                     	ds	1
  1009  00001C                     ??_vscp_check_pstorage:
  1010  00001C                     ??_vscp_goBootloaderMode:
  1011  00001C                     ??_vscp_handleHeartbeat:
  1012  00001C                     ??_vscp_handleSetNickname:
  1013  00001C                     ??_vscp_handleDropNickname:
  1014  00001C                     __CANIDToRegs@type:
  1015                           	opt stack 0
  1016  00001C                     init_app_eeprom@j:
  1017                           	opt stack 0
  1018  00001C                     vscp_setGUID@data:
  1019                           	opt stack 0
  1020  00001C                     vscp_setManufacturerId@data:
  1021                           	opt stack 0
  1022  00001C                     vscp_setUserID@data:
  1023                           	opt stack 0
  1024  00001C                     ___awmod@sign:
  1025                           	opt stack 0
  1026                           
  1027                           ; 1 bytes @ 0x1B
  1028  00001C                     	ds	1
  1029  00001D                     ??__CANIDToRegs:
  1030  00001D                     init_app_eeprom@i:
  1031                           	opt stack 0
  1032  00001D                     vscp_handleDropNickname@bytes:
  1033                           	opt stack 0
  1034  00001D                     __RegsToCANID@Value:
  1035                           	opt stack 0
  1036                           
  1037                           ; 2 bytes @ 0x1C
  1038  00001D                     	ds	1
  1039  00001E                     ?_vscp_writeStdReg:
  1040                           	opt stack 0
  1041  00001E                     doActionPulse@val:
  1042                           	opt stack 0
  1043  00001E                     vscp_writeStdReg@reg:
  1044                           	opt stack 0
  1045                           
  1046                           ; 1 bytes @ 0x1D
  1047  00001E                     	ds	1
  1048  00001F                     ?_ECANReceiveMessage:
  1049                           	opt stack 0
  1050  00001F                     doActionPulse@i:
  1051                           	opt stack 0
  1052  00001F                     vscp_writeStdReg@value:
  1053                           	opt stack 0
  1054  00001F                     ECANReceiveMessage@id:
  1055                           	opt stack 0
  1056  00001F                     __CANIDToRegs@Value:
  1057                           	opt stack 0
  1058                           
  1059                           ; 2 bytes @ 0x1E
  1060  00001F                     	ds	1
  1061  000020                     ??_vscp_writeStdReg:
  1062  000020                     vscp_readStdReg@code:
  1063                           	opt stack 0
  1064                           
  1065                           ; 4 bytes @ 0x1F
  1066  000020                     	ds	1
  1067  000021                     ?_ECANSendMessage:
  1068                           	opt stack 0
  1069  000021                     ECANReceiveMessage@data:
  1070                           	opt stack 0
  1071  000021                     ECANSendMessage@id:
  1072                           	opt stack 0
  1073  000021                     calculateSetFilterMask@rowmask:
  1074                           	opt stack 0
  1075                           
  1076                           ; 4 bytes @ 0x20
  1077  000021                     	ds	2
  1078  000023                     ECANReceiveMessage@dataLen:
  1079                           	opt stack 0
  1080                           
  1081                           ; 2 bytes @ 0x22
  1082  000023                     	ds	1
  1083  000024                     vscp_writeStdReg@rv:
  1084                           	opt stack 0
  1085  000024                     vscp_readStdReg@code_1376:
  1086                           	opt stack 0
  1087                           
  1088                           ; 4 bytes @ 0x23
  1089  000024                     	ds	1
  1090  000025                     calculateSetFilterMask@lastOID:
  1091                           	opt stack 0
  1092  000025                     ECANSendMessage@data:
  1093                           	opt stack 0
  1094  000025                     ECANReceiveMessage@msgFlags:
  1095                           	opt stack 0
  1096                           
  1097                           ; 2 bytes @ 0x24
  1098  000025                     	ds	1
  1099  000026                     calculateSetFilterMask@mask:
  1100                           	opt stack 0
  1101                           
  1102                           ; 4 bytes @ 0x25
  1103  000026                     	ds	1
  1104  000027                     ??_ECANReceiveMessage:
  1105  000027                     ECANSendMessage@dataLen:
  1106                           	opt stack 0
  1107                           
  1108                           ; 1 bytes @ 0x26
  1109  000027                     	ds	1
  1110  000028                     ECANSendMessage@msgFlags:
  1111                           	opt stack 0
  1112  000028                     vscp_readStdReg@idx:
  1113                           	opt stack 0
  1114  000028                     ECANReceiveMessage@savedPtr:
  1115                           	opt stack 0
  1116                           
  1117                           ; 2 bytes @ 0x27
  1118  000028                     	ds	1
  1119  000029                     ??_ECANSendMessage:
  1120  000029                     vscp_readStdReg@idx_1377:
  1121                           	opt stack 0
  1122                           
  1123                           ; 1 bytes @ 0x28
  1124  000029                     	ds	1
  1125  00002A                     ??_sendCANFrame:
  1126  00002A                     ECANReceiveMessage@i:
  1127                           	opt stack 0
  1128  00002A                     vscp_readStdReg@rv:
  1129                           	opt stack 0
  1130  00002A                     calculateSetFilterMask@filter:
  1131                           	opt stack 0
  1132                           
  1133                           ; 4 bytes @ 0x29
  1134  00002A                     	ds	1
  1135  00002B                     ?_vscp_readRegister:
  1136                           	opt stack 0
  1137  00002B                     ECANReceiveMessage@mode:
  1138                           	opt stack 0
  1139  00002B                     sendCANFrame@rv:
  1140                           	opt stack 0
  1141  00002B                     vscp_readRegister@reg:
  1142                           	opt stack 0
  1143                           
  1144                           ; 1 bytes @ 0x2A
  1145  00002B                     	ds	1
  1146  00002C                     ECANReceiveMessage@temp:
  1147                           	opt stack 0
  1148  00002C                     sendVSCPFrame@id:
  1149                           	opt stack 0
  1150                           
  1151                           ; 4 bytes @ 0x2B
  1152  00002C                     	ds	1
  1153  00002D                     ECANReceiveMessage@ptr:
  1154                           	opt stack 0
  1155                           
  1156                           ; 2 bytes @ 0x2C
  1157  00002D                     	ds	1
  1158  00002E                     calculateSetFilterMask@rowfilter:
  1159                           	opt stack 0
  1160                           
  1161                           ; 4 bytes @ 0x2D
  1162  00002E                     	ds	1
  1163  00002F                     ?_getCANFrame:
  1164                           	opt stack 0
  1165  00002F                     getCANFrame@pid:
  1166                           	opt stack 0
  1167                           
  1168                           ; 2 bytes @ 0x2E
  1169  00002F                     	ds	1
  1170  000030                     ?_SendInformationEvent:
  1171                           	opt stack 0
  1172  000030                     SendInformationEvent@idx:
  1173                           	opt stack 0
  1174  000030                     vscp_sendEvent@rv:
  1175                           	opt stack 0
  1176                           
  1177                           ; 1 bytes @ 0x2F
  1178  000030                     	ds	1
  1179  000031                     ??_vscp_goActiveState:
  1180  000031                     ?_vscp_sendHeartBeat:
  1181                           	opt stack 0
  1182  000031                     ??_vscp_newNodeOnline:
  1183  000031                     SendInformationEvent@eventClass:
  1184                           	opt stack 0
  1185  000031                     vscp_sendHeartBeat@zone:
  1186                           	opt stack 0
  1187  000031                     getCANFrame@pdlc:
  1188                           	opt stack 0
  1189                           
  1190                           ; 2 bytes @ 0x30
  1191  000031                     	ds	1
  1192  000032                     ??_vscp_handleProbeState:
  1193  000032                     SendInformationEvent@eventTypeId:
  1194                           	opt stack 0
  1195  000032                     calculateSetFilterMask@j:
  1196                           	opt stack 0
  1197  000032                     vscp_sendHeartBeat@subzone:
  1198                           	opt stack 0
  1199                           
  1200                           ; 1 bytes @ 0x31
  1201  000032                     	ds	1
  1202  000033                     ??_SendInformationEvent:
  1203  000033                     ??_vscp_sendHeartBeat:
  1204  000033                     calculateSetFilterMask@i:
  1205                           	opt stack 0
  1206  000033                     getCANFrame@pdata:
  1207                           	opt stack 0
  1208                           
  1209                           ; 2 bytes @ 0x32
  1210  000033                     	ds	1
  1211  000034                     ??_vscp_doOneSecondWork:
  1212                           
  1213                           ; 0 bytes @ 0x33
  1214  000034                     	ds	1
  1215  000035                     getCANFrame@flags:
  1216                           	opt stack 0
  1217                           
  1218                           ; 1 bytes @ 0x34
  1219  000035                     	ds	1
  1220  000036                     tblptru	equ	0xFF8
  1221                           postinc0	equ	0xFEE
  1222                           wreg	equ	0xFE8
  1223                           
  1224                           ; 0 bytes @ 0x35
  1225 ;;
  1226 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1227 ;;
  1228 ;; *************** function _main *****************
  1229 ;; Defined at:
  1230 ;;		line 189 in file "../main.c"
  1231 ;; Parameters:    Size  Location     Type
  1232 ;;		None
  1233 ;; Auto vars:     Size  Location     Type
  1234 ;;  b               1    0        unsigned char 
  1235 ;; Return value:  Size  Location     Type
  1236 ;;		None               void
  1237 ;; Registers used:
  1238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1239 ;; Tracked objects:
  1240 ;;		On entry : 0/0
  1241 ;;		On exit  : 0/0
  1242 ;;		Unchanged: 0/0
  1243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1244 ;;      Params:         0       0       0       0       0       0       0
  1245 ;;      Locals:         0       0       0       0       0       0       0
  1246 ;;      Temps:          0       0       1       0       0       0       0
  1247 ;;      Totals:         0       0       1       0       0       0       0
  1248 ;;Total ram usage:        1 bytes
  1249 ;; Hardware stack levels required when called:   10
  1250 ;; This function calls:
  1251 ;;		_init
  1252 ;;		_vscp_check_pstorage
  1253 ;;		_init_app_eeprom
  1254 ;;		_init_app_ram
  1255 ;;		_vscp_init
  1256 ;;		_Busy_eep
  1257 ;;		_Write_b_eep
  1258 ;;		_vscp_getEvent
  1259 ;;		_vscp_goActiveState
  1260 ;;		_vscp_handleProbeState
  1261 ;;		_vscp_handleProtocolEvent
  1262 ;;		_doDM
  1263 ;;		_vscp_error
  1264 ;;		_vscp_doOneSecondWork
  1265 ;;		_doApplicationOneSecondWork
  1266 ;;		_doWork
  1267 ;; This function is called by:
  1268 ;;		Startup code after reset
  1269 ;; This function uses a non-reentrant model
  1270 ;;
  1271                           
  1272                           	psect	text0
  1273  0057A4                     __ptext0:
  1274                           	opt stack 0
  1275  0057A4                     _main:
  1276                           	opt stack 20
  1277                           
  1278                           ;main.c: 190: unsigned char b;
  1279                           ;main.c: 192: init();
  1280                           
  1281                           ;incstack = 0
  1282                           ;incstack = 0
  1283  0057A4  EC82  F032         	call	_init	;wreg free
  1284                           
  1285                           ;main.c: 196: if ( !vscp_check_pstorage() ) {
  1286  0057A8  ECBB  F035         	call	_vscp_check_pstorage	;wreg free
  1287  0057AC  0900               	iorlw	0
  1288  0057AE  A4D8               	btfss	status,2,c
  1289  0057B0  D004               	goto	l8953
  1290                           
  1291                           ;main.c: 199: init_app_eeprom();
  1292  0057B2  ECF0  F02A         	call	_init_app_eeprom	;wreg free
  1293                           
  1294                           ;main.c: 200: init_app_ram();
  1295  0057B6  EC65  F022         	call	_init_app_ram	;wreg free
  1296  0057BA                     l8953:
  1297                           
  1298                           ;main.c: 203: }
  1299                           ;main.c: 205: vscp_init();
  1300  0057BA  EC05  F032         	call	_vscp_init	;wreg free
  1301  0057BE                     l407:
  1302  0057BE  0004               	clrwdt		;# 
  1303                           
  1304                           ;main.c: 220: if ( ( vscp_initbtncnt > 250 ) &&
  1305                           ;main.c: 221: ( 0x01 != vscp_node_state ) ) {
  1306  0057C0  0EFA               	movlw	250
  1307  0057C2  0100               	movlb	0	; () banked
  1308  0057C4  0100               	movlb	0	; () banked
  1309  0057C6  65EA               	cpfsgt	_vscp_initbtncnt& (0+255),b	;volatile
  1310  0057C8  D018               	goto	l8967
  1311                           
  1312                           ; BSR set to: 0
  1313  0057CA  0100               	movlb	0	; () banked
  1314  0057CC  0100               	movlb	0	; () banked
  1315  0057CE  05ED               	decf	_vscp_node_state& (0+255),w,b
  1316  0057D0  B4D8               	btfsc	status,2,c
  1317  0057D2  D013               	goto	l8967
  1318                           
  1319                           ; BSR set to: 0
  1320                           ;main.c: 224: vscp_nickname = 0xff;
  1321  0057D4  0100               	movlb	0	; () banked
  1322  0057D6  0100               	movlb	0	; () banked
  1323  0057D8  69EC               	setf	_vscp_nickname& (0+255),b
  1324                           
  1325                           ; BSR set to: 0
  1326                           ;main.c: 225: (Busy_eep(), Write_b_eep(0x01,0xff));
  1327  0057DA  EC35  F037         	call	_Busy_eep	;wreg free
  1328  0057DE  0E00               	movlw	0
  1329  0057E0  6E17               	movwf	?_Write_b_eep+1,c
  1330  0057E2  0E01               	movlw	1
  1331  0057E4  6E16               	movwf	?_Write_b_eep,c
  1332  0057E6  0101               	movlb	1	; () banked
  1333  0057E8  6F25               	movwf	??_main& (0+255),b
  1334  0057EA  0EFF               	movlw	255
  1335  0057EC  6E18               	movwf	?_Write_b_eep+2,c
  1336  0057EE  0101               	movlb	1	; () banked
  1337  0057F0  5125               	movf	??_main& (0+255),w,b
  1338  0057F2  EC65  F035         	call	_Write_b_eep	;wreg free
  1339                           
  1340                           ;main.c: 226: vscp_init();
  1341  0057F6  EC05  F032         	call	_vscp_init	;wreg free
  1342  0057FA                     l8967:
  1343                           
  1344                           ;main.c: 228: }
  1345                           ;main.c: 231: vscp_imsg.flags = 0;
  1346  0057FA  0101               	movlb	1	; () banked
  1347  0057FC  6F25               	movwf	??_main& (0+255),b
  1348  0057FE  0E00               	movlw	0
  1349  005800  0100               	movlb	0	; () banked
  1350  005802  0100               	movlb	0	; () banked
  1351  005804  6FF1               	movwf	_vscp_imsg& (0+255),b
  1352  005806  0101               	movlb	1	; () banked
  1353  005808  5125               	movf	??_main& (0+255),w,b
  1354                           
  1355                           ; BSR set to: 1
  1356                           ;main.c: 232: vscp_getEvent();
  1357  00580A  ECC3  F033         	call	_vscp_getEvent	;wreg free
  1358                           
  1359                           ;main.c: 234: switch ( vscp_node_state ) {
  1360  00580E  D034               	goto	l8993
  1361  005810                     l8971:
  1362                           
  1363                           ;main.c: 239: if (0xff == vscp_nickname) {
  1364  005810  0100               	movlb	0	; () banked
  1365  005812  0100               	movlb	0	; () banked
  1366  005814  29EC               	incf	_vscp_nickname& (0+255),w,b
  1367  005816  A4D8               	btfss	status,2,c
  1368  005818  D004               	goto	l8975
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;main.c: 241: vscp_node_state = 0x01;
  1372  00581A  0101               	movlb	1	; () banked
  1373  00581C  6F25               	movwf	??_main& (0+255),b
  1374  00581E  0E01               	movlw	1
  1375  005820  D025               	goto	L1
  1376  005822                     l8975:
  1377                           
  1378                           ;main.c: 244: vscp_node_state = 0x03;
  1379  005822  0101               	movlb	1	; () banked
  1380  005824  6F25               	movwf	??_main& (0+255),b
  1381  005826  0E03               	movlw	3
  1382  005828  0100               	movlb	0	; () banked
  1383  00582A  0100               	movlb	0	; () banked
  1384  00582C  6FED               	movwf	_vscp_node_state& (0+255),b
  1385  00582E  0101               	movlb	1	; () banked
  1386  005830  5125               	movf	??_main& (0+255),w,b
  1387                           
  1388                           ; BSR set to: 1
  1389                           ;main.c: 245: vscp_goActiveState();
  1390  005832  ECF2  F035         	call	_vscp_goActiveState	;wreg free
  1391  005836  D033               	goto	l8995
  1392  005838                     l8979:
  1393                           
  1394                           ;main.c: 250: vscp_handleProbeState();
  1395  005838  EC21  F02E         	call	_vscp_handleProbeState	;wreg free
  1396                           
  1397                           ;main.c: 251: break;
  1398  00583C  D030               	goto	l8995
  1399  00583E                     l8981:
  1400                           
  1401                           ;main.c: 254: vscp_goActiveState();
  1402  00583E  ECF2  F035         	call	_vscp_goActiveState	;wreg free
  1403                           
  1404                           ;main.c: 255: break;
  1405  005842  D02D               	goto	l8995
  1406  005844                     l416:
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;main.c: 260: if (vscp_imsg.flags & 0x80) {
  1410  005844  0100               	movlb	0	; () banked
  1411  005846  0100               	movlb	0	; () banked
  1412  005848  AFF1               	btfss	_vscp_imsg& (0+255),7,b
  1413  00584A  D029               	goto	l8995
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;main.c: 262: if ( 0 == vscp_imsg.vscp_class ) {
  1417  00584C  0100               	movlb	0	; () banked
  1418  00584E  0100               	movlb	0	; () banked
  1419  005850  51F4               	movf	(_vscp_imsg+3)& (0+255),w,b
  1420  005852  11F3               	iorwf	(_vscp_imsg+2)& (0+255),w,b
  1421  005854  B4D8               	btfsc	status,2,c
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;main.c: 265: vscp_handleProtocolEvent();
  1425  005856  ECA4  F00E         	call	_vscp_handleProtocolEvent	;wreg free
  1426                           
  1427                           ;main.c: 267: }
  1428                           ;main.c: 269: doDM();
  1429  00585A  EC1F  F020         	call	_doDM	;wreg free
  1430  00585E  D01F               	goto	l8995
  1431  005860                     l8987:
  1432                           
  1433                           ;main.c: 275: vscp_error();
  1434  005860  EC2B  F037         	call	_vscp_error	;wreg free
  1435                           
  1436                           ;main.c: 276: break;
  1437  005864  D01C               	goto	l8995
  1438  005866                     l8989:
  1439                           
  1440                           ;main.c: 279: vscp_node_state = 0x00;
  1441  005866  0101               	movlb	1	; () banked
  1442  005868  6F25               	movwf	??_main& (0+255),b
  1443  00586A  0E00               	movlw	0
  1444  00586C                     L1:
  1445  00586C  0100               	movlb	0	; () banked
  1446  00586E  0100               	movlb	0	; () banked
  1447  005870  6FED               	movwf	_vscp_node_state& (0+255),b
  1448  005872  0101               	movlb	1	; () banked
  1449  005874  5125               	movf	??_main& (0+255),w,b
  1450                           
  1451                           ;main.c: 280: break;
  1452  005876  D013               	goto	l8995
  1453  005878                     l8993:
  1454  005878  0100               	movlb	0	; () banked
  1455  00587A  0100               	movlb	0	; () banked
  1456  00587C  51ED               	movf	_vscp_node_state& (0+255),w,b
  1457                           
  1458                           ; Switch size 1, requested type "space"
  1459                           ; Number of cases is 5, Range of values is 0 to 4
  1460                           ; switch strategies available:
  1461                           ; Name         Instructions Cycles
  1462                           ; simple_byte           16     9 (average)
  1463                           ;	Chosen strategy is simple_byte
  1464  00587E  0A00               	xorlw	0	; case 0
  1465  005880  B4D8               	btfsc	status,2,c
  1466  005882  D7C6               	goto	l8971
  1467  005884  0A01               	xorlw	1	; case 1
  1468  005886  B4D8               	btfsc	status,2,c
  1469  005888  D7D7               	goto	l8979
  1470  00588A  0A03               	xorlw	3	; case 2
  1471  00588C  B4D8               	btfsc	status,2,c
  1472  00588E  D7D7               	goto	l8981
  1473  005890  0A01               	xorlw	1	; case 3
  1474  005892  B4D8               	btfsc	status,2,c
  1475  005894  D7D7               	goto	l416
  1476  005896  0A07               	xorlw	7	; case 4
  1477  005898  B4D8               	btfsc	status,2,c
  1478  00589A  D7E2               	goto	l8987
  1479  00589C  D7E4               	goto	l8989
  1480  00589E                     l8995:
  1481                           
  1482                           ;main.c: 285: if ( measurement_clock > 1000 ) {
  1483  00589E  0EE9               	movlw	233
  1484  0058A0  0100               	movlb	0	; () banked
  1485  0058A2  0100               	movlb	0	; () banked
  1486  0058A4  5DD1               	subwf	_measurement_clock& (0+255),w,b	;volatile
  1487  0058A6  0E03               	movlw	3
  1488  0058A8  0100               	movlb	0	; () banked
  1489  0058AA  59D2               	subwfb	(_measurement_clock+1)& (0+255),w,b	;volatile
  1490  0058AC  0E00               	movlw	0
  1491  0058AE  0100               	movlb	0	; () banked
  1492  0058B0  59D3               	subwfb	(_measurement_clock+2)& (0+255),w,b	;volatile
  1493  0058B2  0E00               	movlw	0
  1494  0058B4  0100               	movlb	0	; () banked
  1495  0058B6  0100               	movlb	0	; () banked
  1496  0058B8  59D4               	subwfb	(_measurement_clock+3)& (0+255),w,b	;volatile
  1497  0058BA  A0D8               	btfss	status,0,c
  1498  0058BC  D019               	goto	l9007
  1499                           
  1500                           ; BSR set to: 0
  1501                           ;main.c: 287: measurement_clock = 0;
  1502  0058BE  0E00               	movlw	0
  1503  0058C0  0100               	movlb	0	; () banked
  1504  0058C2  0100               	movlb	0	; () banked
  1505  0058C4  6FD1               	movwf	_measurement_clock& (0+255),b	;volatile
  1506  0058C6  0E00               	movlw	0
  1507  0058C8  0100               	movlb	0	; () banked
  1508  0058CA  6FD2               	movwf	(_measurement_clock+1)& (0+255),b	;volatile
  1509  0058CC  0E00               	movlw	0
  1510  0058CE  0100               	movlb	0	; () banked
  1511  0058D0  6FD3               	movwf	(_measurement_clock+2)& (0+255),b	;volatile
  1512  0058D2  0E00               	movlw	0
  1513  0058D4  0100               	movlb	0	; () banked
  1514  0058D6  6FD4               	movwf	(_measurement_clock+3)& (0+255),b	;volatile
  1515                           
  1516                           ; BSR set to: 0
  1517                           ;main.c: 288: sendTimer++;
  1518  0058D8  0100               	movlb	0	; () banked
  1519  0058DA  0100               	movlb	0	; () banked
  1520  0058DC  2BE6               	incf	_sendTimer& (0+255),f,b
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;main.c: 291: vscp_doOneSecondWork();
  1524  0058DE  EC2D  F033         	call	_vscp_doOneSecondWork	;wreg free
  1525                           
  1526                           ;main.c: 295: if ( 0x03 == vscp_node_state ) {
  1527  0058E2  0100               	movlb	0	; () banked
  1528  0058E4  0100               	movlb	0	; () banked
  1529  0058E6  51ED               	movf	_vscp_node_state& (0+255),w,b
  1530  0058E8  0A03               	xorlw	3
  1531  0058EA  B4D8               	btfsc	status,2,c
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;main.c: 298: doApplicationOneSecondWork();
  1535  0058EC  EC92  F015         	call	_doApplicationOneSecondWork	;wreg free
  1536  0058F0                     l9007:
  1537                           
  1538                           ;main.c: 300: }
  1539                           ;main.c: 302: }
  1540                           ;main.c: 305: if ( seconds > 59 ) {
  1541  0058F0  0E3B               	movlw	59
  1542  0058F2  0100               	movlb	0	; () banked
  1543  0058F4  0100               	movlb	0	; () banked
  1544  0058F6  65E5               	cpfsgt	_seconds& (0+255),b
  1545  0058F8  D028               	goto	l9023
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;main.c: 307: seconds = 0;
  1549  0058FA  0101               	movlb	1	; () banked
  1550  0058FC  6F25               	movwf	??_main& (0+255),b
  1551  0058FE  0E00               	movlw	0
  1552  005900  0100               	movlb	0	; () banked
  1553  005902  0100               	movlb	0	; () banked
  1554  005904  6FE5               	movwf	_seconds& (0+255),b
  1555  005906  0101               	movlb	1	; () banked
  1556  005908  5125               	movf	??_main& (0+255),w,b
  1557                           
  1558                           ; BSR set to: 1
  1559                           ;main.c: 308: minutes++;
  1560  00590A  0100               	movlb	0	; () banked
  1561  00590C  0100               	movlb	0	; () banked
  1562  00590E  2BE4               	incf	_minutes& (0+255),f,b
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;main.c: 310: if ( minutes > 59 ) {
  1566  005910  0E3B               	movlw	59
  1567  005912  0100               	movlb	0	; () banked
  1568  005914  0100               	movlb	0	; () banked
  1569  005916  65E4               	cpfsgt	_minutes& (0+255),b
  1570  005918  D00B               	goto	l9019
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;main.c: 311: minutes = 0;
  1574  00591A  0101               	movlb	1	; () banked
  1575  00591C  6F25               	movwf	??_main& (0+255),b
  1576  00591E  0E00               	movlw	0
  1577  005920  0100               	movlb	0	; () banked
  1578  005922  0100               	movlb	0	; () banked
  1579  005924  6FE4               	movwf	_minutes& (0+255),b
  1580  005926  0101               	movlb	1	; () banked
  1581  005928  5125               	movf	??_main& (0+255),w,b
  1582                           
  1583                           ; BSR set to: 1
  1584                           ;main.c: 312: hours++;
  1585  00592A  0100               	movlb	0	; () banked
  1586  00592C  0100               	movlb	0	; () banked
  1587  00592E  2BE3               	incf	_hours& (0+255),f,b
  1588  005930                     l9019:
  1589                           
  1590                           ; BSR set to: 0
  1591                           ;main.c: 313: }
  1592                           ;main.c: 315: if ( hours > 23 ) hours = 0;
  1593  005930  0E17               	movlw	23
  1594  005932  0100               	movlb	0	; () banked
  1595  005934  0100               	movlb	0	; () banked
  1596  005936  65E3               	cpfsgt	_hours& (0+255),b
  1597  005938  D008               	goto	l9023
  1598                           
  1599                           ; BSR set to: 0
  1600  00593A  0101               	movlb	1	; () banked
  1601  00593C  6F25               	movwf	??_main& (0+255),b
  1602  00593E  0E00               	movlw	0
  1603  005940  0100               	movlb	0	; () banked
  1604  005942  0100               	movlb	0	; () banked
  1605  005944  6FE3               	movwf	_hours& (0+255),b
  1606  005946  0101               	movlb	1	; () banked
  1607  005948  5125               	movf	??_main& (0+255),w,b
  1608  00594A                     l9023:
  1609                           
  1610                           ;main.c: 317: }
  1611                           ;main.c: 319: doWork();
  1612  00594A  EC44  F037         	call	_doWork	;wreg free
  1613  00594E  D737               	goto	l407
  1614  005950                     __end_of_main:
  1615                           	opt stack 0
  1616                           tblptru	equ	0xFF8
  1617                           postinc0	equ	0xFEE
  1618                           wreg	equ	0xFE8
  1619                           status	equ	0xFD8
  1620                           
  1621 ;; *************** function _doWork *****************
  1622 ;; Defined at:
  1623 ;;		line 997 in file "../main.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;		None               void
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, status,0
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1637 ;;      Params:         0       0       0       0       0       0       0
  1638 ;;      Locals:         0       0       0       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0
  1640 ;;      Totals:         0       0       0       0       0       0       0
  1641 ;;Total ram usage:        0 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    2
  1644 ;; This function calls:
  1645 ;;		Nothing
  1646 ;; This function is called by:
  1647 ;;		_main
  1648 ;; This function uses a non-reentrant model
  1649 ;;
  1650                           
  1651                           	psect	text1
  1652  006E88                     __ptext1:
  1653                           	opt stack 0
  1654  006E88                     _doWork:
  1655                           	opt stack 27
  1656                           
  1657                           ;main.c: 999: ;
  1658                           
  1659                           ;incstack = 0
  1660                           ;incstack = 0
  1661  006E88  0012               	return	
  1662  006E8A                     __end_of_doWork:
  1663                           	opt stack 0
  1664                           tblptru	equ	0xFF8
  1665                           postinc0	equ	0xFEE
  1666                           wreg	equ	0xFE8
  1667                           status	equ	0xFD8
  1668                           
  1669 ;; *************** function _doApplicationOneSecondWork *****************
  1670 ;; Defined at:
  1671 ;;		line 579 in file "../main.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;		None
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  iodirections    2   72[BANK0 ] unsigned short 
  1676 ;;  i               1   76[BANK0 ] unsigned char 
  1677 ;;  ctrlreg         1   75[BANK0 ] unsigned char 
  1678 ;;  bOn             1   74[BANK0 ] enum E15660
  1679 ;; Return value:  Size  Location     Type
  1680 ;;		None               void
  1681 ;; Registers used:
  1682 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1688 ;;      Params:         0       0       0       0       0       0       0
  1689 ;;      Locals:         0       5       0       0       0       0       0
  1690 ;;      Temps:          0       0      37       0       0       0       0
  1691 ;;      Totals:         0       5      37       0       0       0       0
  1692 ;;Total ram usage:       42 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; Hardware stack levels required when called:    8
  1695 ;; This function calls:
  1696 ;;		_Read_b_eep
  1697 ;;		_SendInformationEvent
  1698 ;;		_doActionOff
  1699 ;; This function is called by:
  1700 ;;		_main
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text2
  1705  002B24                     __ptext2:
  1706                           	opt stack 0
  1707  002B24                     _doApplicationOneSecondWork:
  1708                           	opt stack 21
  1709                           
  1710                           ;main.c: 581: uint8_t i;
  1711                           ;main.c: 582: uint16_t iodirections;
  1712                           ;main.c: 583: uint8_t ctrlreg;
  1713                           ;main.c: 584: BOOL bOn = 0;
  1714                           
  1715                           ;incstack = 0
  1716                           ;incstack = 0
  1717  002B24  0101               	movlb	1	; () banked
  1718  002B26  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  1719  002B28  0E00               	movlw	0
  1720  002B2A  0100               	movlb	0	; () banked
  1721  002B2C  0100               	movlb	0	; () banked
  1722  002B2E  6FAA               	movwf	doApplicationOneSecondWork@bOn& (0+255),b
  1723  002B30  0101               	movlb	1	; () banked
  1724  002B32  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  1725                           
  1726                           ; BSR set to: 1
  1727                           ;main.c: 587: iodirections = ( Read_b_eep(0x43 + 12) << 8 ) +
  1728                           ;main.c: 588: Read_b_eep(0x43 + 13);
  1729  002B34  0E00               	movlw	0
  1730  002B36  6E17               	movwf	?_Read_b_eep+1,c
  1731  002B38  0E50               	movlw	80
  1732  002B3A  6E16               	movwf	?_Read_b_eep,c
  1733  002B3C  ECFD  F036         	call	_Read_b_eep	;wreg free
  1734  002B40  0101               	movlb	1	; () banked
  1735  002B42  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  1736  002B44  0E00               	movlw	0
  1737  002B46  6E17               	movwf	?_Read_b_eep+1,c
  1738  002B48  0E4F               	movlw	79
  1739  002B4A  6E16               	movwf	?_Read_b_eep,c
  1740  002B4C  ECFD  F036         	call	_Read_b_eep	;wreg free
  1741  002B50  0101               	movlb	1	; () banked
  1742  002B52  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  1743  002B54  0101               	movlb	1	; () banked
  1744  002B56  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  1745  002B58  0101               	movlb	1	; () banked
  1746  002B5A  6F03               	movwf	(??_doApplicationOneSecondWork+3)& (0+255),b
  1747  002B5C  6B02               	clrf	(??_doApplicationOneSecondWork+2)& (0+255),b
  1748  002B5E  0101               	movlb	1	; () banked
  1749  002B60  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  1750  002B62  0101               	movlb	1	; () banked
  1751  002B64  2502               	addwf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  1752  002B66  0100               	movlb	0	; () banked
  1753  002B68  0100               	movlb	0	; () banked
  1754  002B6A  6FA8               	movwf	doApplicationOneSecondWork@iodirections& (0+255),b
  1755  002B6C  0101               	movlb	1	; () banked
  1756  002B6E  0E00               	movlw	0
  1757  002B70  0101               	movlb	1	; () banked
  1758  002B72  2103               	addwfc	(??_doApplicationOneSecondWork+3)& (0+255),w,b
  1759  002B74  0100               	movlb	0	; () banked
  1760  002B76  6FA9               	movwf	(doApplicationOneSecondWork@iodirections+1)& (0+255),b
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;main.c: 590: for ( i = 0; i < 10; i++ ) {
  1764  002B78  0101               	movlb	1	; () banked
  1765  002B7A  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  1766  002B7C  0E00               	movlw	0
  1767  002B7E  0100               	movlb	0	; () banked
  1768  002B80  0100               	movlb	0	; () banked
  1769  002B82  6FAC               	movwf	doApplicationOneSecondWork@i& (0+255),b
  1770  002B84  0101               	movlb	1	; () banked
  1771  002B86  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  1772  002B88  D3A8               	goto	L21
  1773  002B8A                     l9937:
  1774                           
  1775                           ; BSR set to: 0
  1776                           ;main.c: 592: if ( iodirections & ( 1 << i ) ) {
  1777  002B8A  C0AC  F100         	movff	doApplicationOneSecondWork@i,??_doApplicationOneSecondWork
  1778  002B8E  0E01               	movlw	1
  1779  002B90  0101               	movlb	1	; () banked
  1780  002B92  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  1781  002B94  6B02               	clrf	(??_doApplicationOneSecondWork+2)& (0+255),b
  1782  002B96  0101               	movlb	1	; () banked
  1783  002B98  2B00               	incf	??_doApplicationOneSecondWork& (0+255),f,b
  1784  002B9A  D004               	goto	u11654
  1785  002B9C                     u11655:
  1786  002B9C  90D8               	bcf	status,0,c
  1787  002B9E  0101               	movlb	1	; () banked
  1788  002BA0  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  1789  002BA2  3702               	rlcf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  1790  002BA4                     u11654:
  1791  002BA4  0101               	movlb	1	; () banked
  1792  002BA6  2F00               	decfsz	??_doApplicationOneSecondWork& (0+255),f,b
  1793  002BA8  D7F9               	goto	u11655
  1794  002BAA  0100               	movlb	0	; () banked
  1795  002BAC  0100               	movlb	0	; () banked
  1796  002BAE  51A8               	movf	doApplicationOneSecondWork@iodirections& (0+255),w,b
  1797  002BB0  0101               	movlb	1	; () banked
  1798  002BB2  1701               	andwf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  1799  002BB4  0100               	movlb	0	; () banked
  1800  002BB6  0100               	movlb	0	; () banked
  1801  002BB8  51A9               	movf	(doApplicationOneSecondWork@iodirections+1)& (0+255),w,b
  1802  002BBA  0101               	movlb	1	; () banked
  1803  002BBC  1702               	andwf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  1804  002BBE  0101               	movlb	1	; () banked
  1805  002BC0  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  1806  002BC2  1101               	iorwf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  1807  002BC4  B4D8               	btfsc	status,2,c
  1808  002BC6  D10E               	goto	l9979
  1809                           
  1810                           ; BSR set to: 1
  1811                           ;main.c: 597: ctrlreg = Read_b_eep(0x43 + 34 + i);
  1812  002BC8  0E65               	movlw	101
  1813  002BCA  0100               	movlb	0	; () banked
  1814  002BCC  0100               	movlb	0	; () banked
  1815  002BCE  25AC               	addwf	doApplicationOneSecondWork@i& (0+255),w,b
  1816  002BD0  6E16               	movwf	?_Read_b_eep,c
  1817  002BD2  6A17               	clrf	?_Read_b_eep+1,c
  1818  002BD4  0E00               	movlw	0
  1819  002BD6  2217               	addwfc	?_Read_b_eep+1,f,c
  1820  002BD8  ECFD  F036         	call	_Read_b_eep	;wreg free
  1821  002BDC  0100               	movlb	0	; () banked
  1822  002BDE  0100               	movlb	0	; () banked
  1823  002BE0  6FAB               	movwf	doApplicationOneSecondWork@ctrlreg& (0+255),b
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;main.c: 600: if ( !( ctrlreg & 0x80 ) ) continue;
  1827  002BE2  0100               	movlb	0	; () banked
  1828  002BE4  0100               	movlb	0	; () banked
  1829  002BE6  AFAB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),7,b
  1830  002BE8  D375               	goto	l10089
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;main.c: 603: if ( ctrlreg & 0x01 ) {
  1834                           
  1835                           ; BSR set to: 0
  1836  002BEA  0100               	movlb	0	; () banked
  1837  002BEC  0100               	movlb	0	; () banked
  1838  002BEE  A1AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),0,b
  1839  002BF0  D044               	goto	l9953
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;main.c: 605: if ( !( current_iostate & ( 1 << i ) ) ) {
  1843  002BF2  C0AC  F100         	movff	doApplicationOneSecondWork@i,??_doApplicationOneSecondWork
  1844  002BF6  0E01               	movlw	1
  1845  002BF8  0101               	movlb	1	; () banked
  1846  002BFA  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  1847  002BFC  6B02               	clrf	(??_doApplicationOneSecondWork+2)& (0+255),b
  1848  002BFE  0101               	movlb	1	; () banked
  1849  002C00  2B00               	incf	??_doApplicationOneSecondWork& (0+255),f,b
  1850  002C02  D004               	goto	u11694
  1851  002C04                     u11695:
  1852  002C04  90D8               	bcf	status,0,c
  1853  002C06  0101               	movlb	1	; () banked
  1854  002C08  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  1855  002C0A  3702               	rlcf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  1856  002C0C                     u11694:
  1857  002C0C  0101               	movlb	1	; () banked
  1858  002C0E  2F00               	decfsz	??_doApplicationOneSecondWork& (0+255),f,b
  1859  002C10  D7F9               	goto	u11695
  1860  002C12  0100               	movlb	0	; () banked
  1861  002C14  0100               	movlb	0	; () banked
  1862  002C16  51D7               	movf	_current_iostate& (0+255),w,b
  1863  002C18  0101               	movlb	1	; () banked
  1864  002C1A  1701               	andwf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  1865  002C1C  0100               	movlb	0	; () banked
  1866  002C1E  0100               	movlb	0	; () banked
  1867  002C20  51D8               	movf	(_current_iostate+1)& (0+255),w,b
  1868  002C22  0101               	movlb	1	; () banked
  1869  002C24  1702               	andwf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  1870  002C26  0101               	movlb	1	; () banked
  1871  002C28  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  1872  002C2A  1101               	iorwf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  1873  002C2C  A4D8               	btfss	status,2,c
  1874  002C2E  D025               	goto	l9953
  1875                           
  1876                           ; BSR set to: 1
  1877                           ;main.c: 606: if ( ctrlreg & 0x04 ) {
  1878  002C30  0100               	movlb	0	; () banked
  1879  002C32  0100               	movlb	0	; () banked
  1880  002C34  A5AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),2,b
  1881  002C36  D011               	goto	l9951
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;main.c: 607: SendInformationEvent(i, 20,
  1885                           ;main.c: 608: 3 );
  1886  002C38  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  1887  002C3C  0101               	movlb	1	; () banked
  1888  002C3E  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  1889  002C40  0E14               	movlw	20
  1890  002C42  6E31               	movwf	?_SendInformationEvent+1,c
  1891  002C44  0101               	movlb	1	; () banked
  1892  002C46  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  1893  002C48  0101               	movlb	1	; () banked
  1894  002C4A  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  1895  002C4C  0E03               	movlw	3
  1896  002C4E  6E32               	movwf	?_SendInformationEvent+2,c
  1897  002C50  0101               	movlb	1	; () banked
  1898  002C52  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  1899  002C54  EC48  F034         	call	_SendInformationEvent	;wreg free
  1900                           
  1901                           ;main.c: 609: }
  1902  002C58  D010               	goto	l9953
  1903  002C5A                     l9951:
  1904                           
  1905                           ;main.c: 610: else {
  1906                           ;main.c: 611: SendInformationEvent(i, 30,
  1907                           ;main.c: 612: 5 );
  1908  002C5A  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  1909  002C5E  0101               	movlb	1	; () banked
  1910  002C60  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  1911  002C62  0E1E               	movlw	30
  1912  002C64  6E31               	movwf	?_SendInformationEvent+1,c
  1913  002C66  0101               	movlb	1	; () banked
  1914  002C68  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  1915  002C6A  0101               	movlb	1	; () banked
  1916  002C6C  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  1917  002C6E  0E05               	movlw	5
  1918  002C70  6E32               	movwf	?_SendInformationEvent+2,c
  1919  002C72  0101               	movlb	1	; () banked
  1920  002C74  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  1921  002C76  EC48  F034         	call	_SendInformationEvent	;wreg free
  1922  002C7A                     l9953:
  1923                           
  1924                           ;main.c: 613: }
  1925                           ;main.c: 614: }
  1926                           ;main.c: 615: }
  1927                           ;main.c: 618: if ( ctrlreg & 0x02 ) {
  1928  002C7A  0100               	movlb	0	; () banked
  1929  002C7C  0100               	movlb	0	; () banked
  1930  002C7E  A3AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),1,b
  1931  002C80  D044               	goto	l9963
  1932                           
  1933                           ; BSR set to: 0
  1934                           ;main.c: 620: if ( current_iostate & ( 1 << i ) ) {
  1935  002C82  C0AC  F100         	movff	doApplicationOneSecondWork@i,??_doApplicationOneSecondWork
  1936  002C86  0E01               	movlw	1
  1937  002C88  0101               	movlb	1	; () banked
  1938  002C8A  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  1939  002C8C  6B02               	clrf	(??_doApplicationOneSecondWork+2)& (0+255),b
  1940  002C8E  0101               	movlb	1	; () banked
  1941  002C90  2B00               	incf	??_doApplicationOneSecondWork& (0+255),f,b
  1942  002C92  D004               	goto	u11734
  1943  002C94                     u11735:
  1944  002C94  90D8               	bcf	status,0,c
  1945  002C96  0101               	movlb	1	; () banked
  1946  002C98  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  1947  002C9A  3702               	rlcf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  1948  002C9C                     u11734:
  1949  002C9C  0101               	movlb	1	; () banked
  1950  002C9E  2F00               	decfsz	??_doApplicationOneSecondWork& (0+255),f,b
  1951  002CA0  D7F9               	goto	u11735
  1952  002CA2  0100               	movlb	0	; () banked
  1953  002CA4  0100               	movlb	0	; () banked
  1954  002CA6  51D7               	movf	_current_iostate& (0+255),w,b
  1955  002CA8  0101               	movlb	1	; () banked
  1956  002CAA  1701               	andwf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  1957  002CAC  0100               	movlb	0	; () banked
  1958  002CAE  0100               	movlb	0	; () banked
  1959  002CB0  51D8               	movf	(_current_iostate+1)& (0+255),w,b
  1960  002CB2  0101               	movlb	1	; () banked
  1961  002CB4  1702               	andwf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  1962  002CB6  0101               	movlb	1	; () banked
  1963  002CB8  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  1964  002CBA  1101               	iorwf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  1965  002CBC  B4D8               	btfsc	status,2,c
  1966  002CBE  D025               	goto	l9963
  1967                           
  1968                           ; BSR set to: 1
  1969                           ;main.c: 621: if ( ctrlreg & 0x04 ) {
  1970  002CC0  0100               	movlb	0	; () banked
  1971  002CC2  0100               	movlb	0	; () banked
  1972  002CC4  A5AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),2,b
  1973  002CC6  D011               	goto	l9961
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;main.c: 622: SendInformationEvent(i, 20,
  1977                           ;main.c: 623: 4 );
  1978  002CC8  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  1979  002CCC  0101               	movlb	1	; () banked
  1980  002CCE  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  1981  002CD0  0E14               	movlw	20
  1982  002CD2  6E31               	movwf	?_SendInformationEvent+1,c
  1983  002CD4  0101               	movlb	1	; () banked
  1984  002CD6  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  1985  002CD8  0101               	movlb	1	; () banked
  1986  002CDA  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  1987  002CDC  0E04               	movlw	4
  1988  002CDE  6E32               	movwf	?_SendInformationEvent+2,c
  1989  002CE0  0101               	movlb	1	; () banked
  1990  002CE2  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  1991  002CE4  EC48  F034         	call	_SendInformationEvent	;wreg free
  1992                           
  1993                           ;main.c: 624: }
  1994  002CE8  D010               	goto	l9963
  1995  002CEA                     l9961:
  1996                           
  1997                           ;main.c: 625: else {
  1998                           ;main.c: 626: SendInformationEvent(i, 30,
  1999                           ;main.c: 627: 6 );
  2000  002CEA  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  2001  002CEE  0101               	movlb	1	; () banked
  2002  002CF0  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2003  002CF2  0E1E               	movlw	30
  2004  002CF4  6E31               	movwf	?_SendInformationEvent+1,c
  2005  002CF6  0101               	movlb	1	; () banked
  2006  002CF8  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2007  002CFA  0101               	movlb	1	; () banked
  2008  002CFC  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2009  002CFE  0E06               	movlw	6
  2010  002D00  6E32               	movwf	?_SendInformationEvent+2,c
  2011  002D02  0101               	movlb	1	; () banked
  2012  002D04  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2013  002D06  EC48  F034         	call	_SendInformationEvent	;wreg free
  2014  002D0A                     l9963:
  2015                           
  2016                           ;main.c: 628: }
  2017                           ;main.c: 629: }
  2018                           ;main.c: 630: }
  2019                           ;main.c: 633: if ( ctrlreg & 0x10 ) {
  2020  002D0A  0100               	movlb	0	; () banked
  2021  002D0C  0100               	movlb	0	; () banked
  2022  002D0E  A9AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),4,b
  2023  002D10  D032               	goto	l9971
  2024                           
  2025                           ; BSR set to: 0
  2026                           ;main.c: 635: if ( !( current_iostate & ( 1 << i ) ) ) {
  2027  002D12  C0AC  F100         	movff	doApplicationOneSecondWork@i,??_doApplicationOneSecondWork
  2028  002D16  0E01               	movlw	1
  2029  002D18  0101               	movlb	1	; () banked
  2030  002D1A  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2031  002D1C  6B02               	clrf	(??_doApplicationOneSecondWork+2)& (0+255),b
  2032  002D1E  0101               	movlb	1	; () banked
  2033  002D20  2B00               	incf	??_doApplicationOneSecondWork& (0+255),f,b
  2034  002D22  D004               	goto	u11774
  2035  002D24                     u11775:
  2036  002D24  90D8               	bcf	status,0,c
  2037  002D26  0101               	movlb	1	; () banked
  2038  002D28  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2039  002D2A  3702               	rlcf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  2040  002D2C                     u11774:
  2041  002D2C  0101               	movlb	1	; () banked
  2042  002D2E  2F00               	decfsz	??_doApplicationOneSecondWork& (0+255),f,b
  2043  002D30  D7F9               	goto	u11775
  2044  002D32  0100               	movlb	0	; () banked
  2045  002D34  0100               	movlb	0	; () banked
  2046  002D36  51D7               	movf	_current_iostate& (0+255),w,b
  2047  002D38  0101               	movlb	1	; () banked
  2048  002D3A  1701               	andwf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2049  002D3C  0100               	movlb	0	; () banked
  2050  002D3E  0100               	movlb	0	; () banked
  2051  002D40  51D8               	movf	(_current_iostate+1)& (0+255),w,b
  2052  002D42  0101               	movlb	1	; () banked
  2053  002D44  1702               	andwf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  2054  002D46  0101               	movlb	1	; () banked
  2055  002D48  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  2056  002D4A  1101               	iorwf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2057  002D4C  A4D8               	btfss	status,2,c
  2058  002D4E  D013               	goto	l9971
  2059                           
  2060                           ; BSR set to: 1
  2061                           ;main.c: 636: SendInformationEvent( i, 1,
  2062                           ;main.c: 637: 2 );
  2063  002D50  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  2064  002D54  0101               	movlb	1	; () banked
  2065  002D56  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2066  002D58  0E01               	movlw	1
  2067  002D5A  6E31               	movwf	?_SendInformationEvent+1,c
  2068  002D5C  0101               	movlb	1	; () banked
  2069  002D5E  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2070  002D60  0101               	movlb	1	; () banked
  2071  002D62  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2072  002D64  0E02               	movlw	2
  2073  002D66  6E32               	movwf	?_SendInformationEvent+2,c
  2074  002D68  0101               	movlb	1	; () banked
  2075  002D6A  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2076  002D6C  EC48  F034         	call	_SendInformationEvent	;wreg free
  2077                           
  2078                           ;main.c: 638: vscp_alarmstatus |= 0x02;
  2079  002D70  0100               	movlb	0	; () banked
  2080  002D72  0100               	movlb	0	; () banked
  2081  002D74  83E7               	bsf	_vscp_alarmstatus& (0+255),1,b
  2082  002D76                     l9971:
  2083                           
  2084                           ;main.c: 639: }
  2085                           ;main.c: 640: }
  2086                           ;main.c: 643: if ( ctrlreg & 0x08 ) {
  2087  002D76  0100               	movlb	0	; () banked
  2088  002D78  0100               	movlb	0	; () banked
  2089  002D7A  A7AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),3,b
  2090  002D7C  D2AB               	goto	l10089
  2091                           
  2092                           ; BSR set to: 0
  2093                           ;main.c: 645: if ( current_iostate & ( 1 << i ) ) {
  2094  002D7E  C0AC  F100         	movff	doApplicationOneSecondWork@i,??_doApplicationOneSecondWork
  2095  002D82  0E01               	movlw	1
  2096  002D84  0101               	movlb	1	; () banked
  2097  002D86  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2098  002D88  6B02               	clrf	(??_doApplicationOneSecondWork+2)& (0+255),b
  2099  002D8A  0101               	movlb	1	; () banked
  2100  002D8C  2B00               	incf	??_doApplicationOneSecondWork& (0+255),f,b
  2101  002D8E  D004               	goto	u11804
  2102  002D90                     u11805:
  2103  002D90  90D8               	bcf	status,0,c
  2104  002D92  0101               	movlb	1	; () banked
  2105  002D94  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2106  002D96  3702               	rlcf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  2107  002D98                     u11804:
  2108  002D98  0101               	movlb	1	; () banked
  2109  002D9A  2F00               	decfsz	??_doApplicationOneSecondWork& (0+255),f,b
  2110  002D9C  D7F9               	goto	u11805
  2111  002D9E  0100               	movlb	0	; () banked
  2112  002DA0  0100               	movlb	0	; () banked
  2113  002DA2  51D7               	movf	_current_iostate& (0+255),w,b
  2114  002DA4  0101               	movlb	1	; () banked
  2115  002DA6  1701               	andwf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2116  002DA8  0100               	movlb	0	; () banked
  2117  002DAA  0100               	movlb	0	; () banked
  2118  002DAC  51D8               	movf	(_current_iostate+1)& (0+255),w,b
  2119  002DAE  0101               	movlb	1	; () banked
  2120  002DB0  1702               	andwf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  2121  002DB2  0101               	movlb	1	; () banked
  2122  002DB4  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  2123  002DB6  1101               	iorwf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2124  002DB8  B4D8               	btfsc	status,2,c
  2125  002DBA  D28C               	goto	l10089
  2126                           
  2127                           ; BSR set to: 1
  2128                           ;main.c: 646: SendInformationEvent( i, 1,
  2129                           ;main.c: 647: 2 );
  2130  002DBC  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  2131  002DC0  0101               	movlb	1	; () banked
  2132  002DC2  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2133  002DC4  0E01               	movlw	1
  2134  002DC6  6E31               	movwf	?_SendInformationEvent+1,c
  2135  002DC8  0101               	movlb	1	; () banked
  2136  002DCA  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2137  002DCC  0101               	movlb	1	; () banked
  2138  002DCE  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2139  002DD0  0E02               	movlw	2
  2140  002DD2  6E32               	movwf	?_SendInformationEvent+2,c
  2141  002DD4  0101               	movlb	1	; () banked
  2142  002DD6  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2143  002DD8  EC48  F034         	call	_SendInformationEvent	;wreg free
  2144                           
  2145                           ;main.c: 648: vscp_alarmstatus |= 0x04;
  2146  002DDC  0100               	movlb	0	; () banked
  2147  002DDE  0100               	movlb	0	; () banked
  2148  002DE0  85E7               	bsf	_vscp_alarmstatus& (0+255),2,b
  2149  002DE2  D278               	goto	l10089
  2150  002DE4                     l9979:
  2151                           
  2152                           ;main.c: 653: else {
  2153                           ;main.c: 658: ctrlreg = Read_b_eep(0x43 + 24 + i);
  2154  002DE4  0E5B               	movlw	91
  2155  002DE6  0100               	movlb	0	; () banked
  2156  002DE8  0100               	movlb	0	; () banked
  2157  002DEA  25AC               	addwf	doApplicationOneSecondWork@i& (0+255),w,b
  2158  002DEC  6E16               	movwf	?_Read_b_eep,c
  2159  002DEE  6A17               	clrf	?_Read_b_eep+1,c
  2160  002DF0  0E00               	movlw	0
  2161  002DF2  2217               	addwfc	?_Read_b_eep+1,f,c
  2162  002DF4  ECFD  F036         	call	_Read_b_eep	;wreg free
  2163  002DF8  0100               	movlb	0	; () banked
  2164  002DFA  0100               	movlb	0	; () banked
  2165  002DFC  6FAB               	movwf	doApplicationOneSecondWork@ctrlreg& (0+255),b
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;main.c: 661: if ( !( ctrlreg & 0x80 ) ) continue;
  2169  002DFE  0100               	movlb	0	; () banked
  2170  002E00  0100               	movlb	0	; () banked
  2171  002E02  AFAB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),7,b
  2172  002E04  D267               	goto	l10089
  2173                           
  2174                           ; BSR set to: 0
  2175                           ;main.c: 665: if ( channel_protection_timer[ i ] ) {
  2176                           
  2177                           ; BSR set to: 0
  2178                           
  2179                           ; BSR set to: 0
  2180  002E06  0100               	movlb	0	; () banked
  2181  002E08  0100               	movlb	0	; () banked
  2182  002E0A  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2183  002E0C  0D02               	mullw	2
  2184  002E0E  0100               	movlb	0	; () banked
  2185  002E10  0EBD               	movlw	low _channel_protection_timer
  2186  002E12  24F3               	addwf	prodl,w,c
  2187  002E14  6ED9               	movwf	fsr2l,c
  2188  002E16  0100               	movlb	0	; () banked
  2189  002E18  0E00               	movlw	high _channel_protection_timer
  2190  002E1A  20F4               	addwfc	prodh,w,c
  2191  002E1C  6EDA               	movwf	fsr2h,c
  2192  002E1E  50DE               	movf	postinc2,w,c
  2193  002E20  10DD               	iorwf	postdec2,w,c
  2194  002E22  B4D8               	btfsc	status,2,c
  2195  002E24  D063               	goto	l9999
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;main.c: 667: channel_protection_timer[ i ]--;
  2199  002E26  0100               	movlb	0	; () banked
  2200  002E28  0100               	movlb	0	; () banked
  2201  002E2A  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2202  002E2C  0D02               	mullw	2
  2203  002E2E  0100               	movlb	0	; () banked
  2204  002E30  0EBD               	movlw	low _channel_protection_timer
  2205  002E32  24F3               	addwf	prodl,w,c
  2206  002E34  6ED9               	movwf	fsr2l,c
  2207  002E36  0100               	movlb	0	; () banked
  2208  002E38  0E00               	movlw	high _channel_protection_timer
  2209  002E3A  20F4               	addwfc	prodh,w,c
  2210  002E3C  6EDA               	movwf	fsr2h,c
  2211  002E3E  06DE               	decf	postinc2,f,c
  2212  002E40  0E00               	movlw	0
  2213  002E42  5ADD               	subwfb	postdec2,f,c
  2214                           
  2215                           ;main.c: 670: if (!channel_protection_timer[ i ] &&
  2216                           ;main.c: 671: ( Read_b_eep(0x43 + 24 + i) &
  2217                           ;main.c: 672: 0x04 ) ) {
  2218  002E44  0100               	movlb	0	; () banked
  2219  002E46  0100               	movlb	0	; () banked
  2220  002E48  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2221  002E4A  0D02               	mullw	2
  2222  002E4C  0100               	movlb	0	; () banked
  2223  002E4E  0EBD               	movlw	low _channel_protection_timer
  2224  002E50  24F3               	addwf	prodl,w,c
  2225  002E52  6ED9               	movwf	fsr2l,c
  2226  002E54  0100               	movlb	0	; () banked
  2227  002E56  0E00               	movlw	high _channel_protection_timer
  2228  002E58  20F4               	addwfc	prodh,w,c
  2229  002E5A  6EDA               	movwf	fsr2h,c
  2230  002E5C  50DE               	movf	postinc2,w,c
  2231  002E5E  10DD               	iorwf	postdec2,w,c
  2232  002E60  A4D8               	btfss	status,2,c
  2233  002E62  D077               	goto	l10001
  2234                           
  2235                           ; BSR set to: 0
  2236  002E64  0E5B               	movlw	91
  2237  002E66  0100               	movlb	0	; () banked
  2238  002E68  0100               	movlb	0	; () banked
  2239  002E6A  25AC               	addwf	doApplicationOneSecondWork@i& (0+255),w,b
  2240  002E6C  6E16               	movwf	?_Read_b_eep,c
  2241  002E6E  6A17               	clrf	?_Read_b_eep+1,c
  2242  002E70  0E00               	movlw	0
  2243  002E72  2217               	addwfc	?_Read_b_eep+1,f,c
  2244  002E74  ECFD  F036         	call	_Read_b_eep	;wreg free
  2245  002E78  0101               	movlb	1	; () banked
  2246  002E7A  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2247  002E7C  0101               	movlb	1	; () banked
  2248  002E7E  A500               	btfss	??_doApplicationOneSecondWork& (0+255),2,b
  2249  002E80  D068               	goto	l10001
  2250                           
  2251                           ; BSR set to: 1
  2252                           ;main.c: 675: doActionOff(0, (1 << i));
  2253  002E82  0101               	movlb	1	; () banked
  2254  002E84  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2255  002E86  0E00               	movlw	0
  2256  002E88  0100               	movlb	0	; () banked
  2257  002E8A  0100               	movlb	0	; () banked
  2258  002E8C  6FA2               	movwf	?_doActionOff& (0+255),b
  2259  002E8E  0101               	movlb	1	; () banked
  2260  002E90  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2261  002E92  C0AC  F101         	movff	doApplicationOneSecondWork@i,??_doApplicationOneSecondWork+1
  2262  002E96  0E01               	movlw	1
  2263  002E98  0101               	movlb	1	; () banked
  2264  002E9A  6F02               	movwf	(??_doApplicationOneSecondWork+2)& (0+255),b
  2265  002E9C  0101               	movlb	1	; () banked
  2266  002E9E  2B01               	incf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2267  002EA0  D003               	goto	u11864
  2268  002EA2                     u11865:
  2269  002EA2  0101               	movlb	1	; () banked
  2270  002EA4  90D8               	bcf	status,0,c
  2271  002EA6  3702               	rlcf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  2272  002EA8                     u11864:
  2273  002EA8  0101               	movlb	1	; () banked
  2274  002EAA  2F01               	decfsz	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2275  002EAC  D7FA               	goto	u11865
  2276  002EAE  0101               	movlb	1	; () banked
  2277  002EB0  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  2278  002EB2  0100               	movlb	0	; () banked
  2279  002EB4  0100               	movlb	0	; () banked
  2280  002EB6  6FA3               	movwf	(?_doActionOff+1)& (0+255),b
  2281  002EB8  ECE5  F030         	call	_doActionOff	;wreg free
  2282                           
  2283                           ;main.c: 678: if (ctrlreg & 0x02) {
  2284  002EBC  0100               	movlb	0	; () banked
  2285  002EBE  0100               	movlb	0	; () banked
  2286  002EC0  A3AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),1,b
  2287  002EC2  D010               	goto	l9997
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;main.c: 679: SendInformationEvent(i, 1,
  2291                           ;main.c: 680: 2);
  2292  002EC4  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  2293  002EC8  0101               	movlb	1	; () banked
  2294  002ECA  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2295  002ECC  0E01               	movlw	1
  2296  002ECE  6E31               	movwf	?_SendInformationEvent+1,c
  2297  002ED0  0101               	movlb	1	; () banked
  2298  002ED2  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2299  002ED4  0101               	movlb	1	; () banked
  2300  002ED6  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2301  002ED8  0E02               	movlw	2
  2302  002EDA  6E32               	movwf	?_SendInformationEvent+2,c
  2303  002EDC  0101               	movlb	1	; () banked
  2304  002EDE  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2305  002EE0  EC48  F034         	call	_SendInformationEvent	;wreg free
  2306  002EE4                     l9997:
  2307                           
  2308                           ;main.c: 681: }
  2309                           ;main.c: 683: vscp_alarmstatus |= 0x01;
  2310  002EE4  0100               	movlb	0	; () banked
  2311  002EE6  0100               	movlb	0	; () banked
  2312  002EE8  81E7               	bsf	_vscp_alarmstatus& (0+255),0,b
  2313  002EEA  D033               	goto	l10001
  2314  002EEC                     l9999:
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;main.c: 687: else {
  2318                           ;main.c: 689: channel_protection_timer[ i ] =
  2319                           ;main.c: 690: Read_b_eep(0x43 + 46 + 20 + i) * 256 +
  2320                           ;main.c: 692: Read_b_eep(0x43 + 46 + 21 + i);
  2321  002EEC  0E85               	movlw	133
  2322  002EEE  0100               	movlb	0	; () banked
  2323  002EF0  0100               	movlb	0	; () banked
  2324  002EF2  25AC               	addwf	doApplicationOneSecondWork@i& (0+255),w,b
  2325  002EF4  6E16               	movwf	?_Read_b_eep,c
  2326  002EF6  6A17               	clrf	?_Read_b_eep+1,c
  2327  002EF8  0E00               	movlw	0
  2328  002EFA  2217               	addwfc	?_Read_b_eep+1,f,c
  2329  002EFC  ECFD  F036         	call	_Read_b_eep	;wreg free
  2330  002F00  0101               	movlb	1	; () banked
  2331  002F02  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2332  002F04  0101               	movlb	1	; () banked
  2333  002F06  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2334  002F08  0101               	movlb	1	; () banked
  2335  002F0A  6F02               	movwf	(??_doApplicationOneSecondWork+2)& (0+255),b
  2336  002F0C  6B01               	clrf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2337  002F0E  0E86               	movlw	134
  2338  002F10  0100               	movlb	0	; () banked
  2339  002F12  0100               	movlb	0	; () banked
  2340  002F14  25AC               	addwf	doApplicationOneSecondWork@i& (0+255),w,b
  2341  002F16  6E16               	movwf	?_Read_b_eep,c
  2342  002F18  6A17               	clrf	?_Read_b_eep+1,c
  2343  002F1A  0E00               	movlw	0
  2344  002F1C  2217               	addwfc	?_Read_b_eep+1,f,c
  2345  002F1E  ECFD  F036         	call	_Read_b_eep	;wreg free
  2346  002F22  0101               	movlb	1	; () banked
  2347  002F24  6F03               	movwf	(??_doApplicationOneSecondWork+3)& (0+255),b
  2348  002F26  0101               	movlb	1	; () banked
  2349  002F28  5103               	movf	(??_doApplicationOneSecondWork+3)& (0+255),w,b
  2350  002F2A  0101               	movlb	1	; () banked
  2351  002F2C  2701               	addwf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2352  002F2E  0E00               	movlw	0
  2353  002F30  2302               	addwfc	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  2354  002F32  0100               	movlb	0	; () banked
  2355  002F34  0100               	movlb	0	; () banked
  2356  002F36  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2357  002F38  0D02               	mullw	2
  2358  002F3A  0100               	movlb	0	; () banked
  2359  002F3C  0EBD               	movlw	low _channel_protection_timer
  2360  002F3E  24F3               	addwf	prodl,w,c
  2361  002F40  6ED9               	movwf	fsr2l,c
  2362  002F42  0100               	movlb	0	; () banked
  2363  002F44  0E00               	movlw	high _channel_protection_timer
  2364  002F46  20F4               	addwfc	prodh,w,c
  2365  002F48  6EDA               	movwf	fsr2h,c
  2366  002F4A  C101  FFDE         	movff	??_doApplicationOneSecondWork+1,postinc2
  2367  002F4E  C102  FFDD         	movff	??_doApplicationOneSecondWork+2,postdec2
  2368  002F52                     l10001:
  2369                           
  2370                           ;main.c: 694: }
  2371                           ;main.c: 697: if ( channel_pulse_flags & (1 << i) ) {
  2372  002F52  C0AC  F100         	movff	doApplicationOneSecondWork@i,??_doApplicationOneSecondWork
  2373  002F56  0E01               	movlw	1
  2374  002F58  0101               	movlb	1	; () banked
  2375  002F5A  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2376  002F5C  6B02               	clrf	(??_doApplicationOneSecondWork+2)& (0+255),b
  2377  002F5E  0101               	movlb	1	; () banked
  2378  002F60  2B00               	incf	??_doApplicationOneSecondWork& (0+255),f,b
  2379  002F62  D004               	goto	u11884
  2380  002F64                     u11885:
  2381  002F64  90D8               	bcf	status,0,c
  2382  002F66  0101               	movlb	1	; () banked
  2383  002F68  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2384  002F6A  3702               	rlcf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  2385  002F6C                     u11884:
  2386  002F6C  0101               	movlb	1	; () banked
  2387  002F6E  2F00               	decfsz	??_doApplicationOneSecondWork& (0+255),f,b
  2388  002F70  D7F9               	goto	u11885
  2389  002F72  0100               	movlb	0	; () banked
  2390  002F74  0100               	movlb	0	; () banked
  2391  002F76  51D5               	movf	_channel_pulse_flags& (0+255),w,b
  2392  002F78  0101               	movlb	1	; () banked
  2393  002F7A  1701               	andwf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2394  002F7C  0100               	movlb	0	; () banked
  2395  002F7E  0100               	movlb	0	; () banked
  2396  002F80  51D6               	movf	(_channel_pulse_flags+1)& (0+255),w,b
  2397  002F82  0101               	movlb	1	; () banked
  2398  002F84  1702               	andwf	(??_doApplicationOneSecondWork+2)& (0+255),f,b
  2399  002F86  0101               	movlb	1	; () banked
  2400  002F88  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  2401  002F8A  1101               	iorwf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2402  002F8C  B4D8               	btfsc	status,2,c
  2403  002F8E  D1A2               	goto	l10089
  2404                           
  2405                           ; BSR set to: 1
  2406                           ;main.c: 699: if ( channel_pulse_timer[ i ] ) {
  2407  002F90  0100               	movlb	0	; () banked
  2408  002F92  0100               	movlb	0	; () banked
  2409  002F94  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2410  002F96  0D02               	mullw	2
  2411  002F98  0101               	movlb	1	; () banked
  2412  002F9A  0E26               	movlw	low _channel_pulse_timer
  2413  002F9C  24F3               	addwf	prodl,w,c
  2414  002F9E  6ED9               	movwf	fsr2l,c
  2415  002FA0  0101               	movlb	1	; () banked
  2416  002FA2  0E01               	movlw	high _channel_pulse_timer
  2417  002FA4  20F4               	addwfc	prodh,w,c
  2418  002FA6  6EDA               	movwf	fsr2h,c
  2419  002FA8  50DE               	movf	postinc2,w,c
  2420  002FAA  10DD               	iorwf	postdec2,w,c
  2421  002FAC  B4D8               	btfsc	status,2,c
  2422  002FAE  D154               	goto	l10087
  2423                           
  2424                           ; BSR set to: 1
  2425                           ;main.c: 701: channel_pulse_timer[ i ]--;
  2426  002FB0  0100               	movlb	0	; () banked
  2427  002FB2  0100               	movlb	0	; () banked
  2428  002FB4  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2429  002FB6  0D02               	mullw	2
  2430  002FB8  0101               	movlb	1	; () banked
  2431  002FBA  0E26               	movlw	low _channel_pulse_timer
  2432  002FBC  24F3               	addwf	prodl,w,c
  2433  002FBE  6ED9               	movwf	fsr2l,c
  2434  002FC0  0101               	movlb	1	; () banked
  2435  002FC2  0E01               	movlw	high _channel_pulse_timer
  2436  002FC4  20F4               	addwfc	prodh,w,c
  2437  002FC6  6EDA               	movwf	fsr2h,c
  2438  002FC8  06DE               	decf	postinc2,f,c
  2439  002FCA  0E00               	movlw	0
  2440  002FCC  5ADD               	subwfb	postdec2,f,c
  2441                           
  2442                           ;main.c: 704: if ( !channel_pulse_timer[ i ] ) {
  2443  002FCE  0100               	movlb	0	; () banked
  2444  002FD0  0100               	movlb	0	; () banked
  2445  002FD2  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2446  002FD4  0D02               	mullw	2
  2447  002FD6  0101               	movlb	1	; () banked
  2448  002FD8  0E26               	movlw	low _channel_pulse_timer
  2449  002FDA  24F3               	addwf	prodl,w,c
  2450  002FDC  6ED9               	movwf	fsr2l,c
  2451  002FDE  0101               	movlb	1	; () banked
  2452  002FE0  0E01               	movlw	high _channel_pulse_timer
  2453  002FE2  20F4               	addwfc	prodh,w,c
  2454  002FE4  6EDA               	movwf	fsr2h,c
  2455  002FE6  50DE               	movf	postinc2,w,c
  2456  002FE8  10DD               	iorwf	postdec2,w,c
  2457  002FEA  B4D8               	btfsc	status,2,c
  2458  002FEC  D048               	goto	l10071
  2459  002FEE  D172               	goto	l10089
  2460  002FF0                     l488:
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;main.c: 709: if ( LATBbits.LATB0 ) {
  2464  002FF0  A08A               	btfss	3978,0,c	;volatile
  2465  002FF2  D002               	goto	l489
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;main.c: 710: LATBbits.LATB0 = 0;
  2469  002FF4  908A               	bcf	3978,0,c	;volatile
  2470  002FF6  D005               	goto	L29
  2471  002FF8                     l489:
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;main.c: 713: else {
  2475                           ;main.c: 714: LATBbits.LATB0 = 1;
  2476  002FF8  808A               	bsf	3978,0,c	;volatile
  2477  002FFA  D038               	goto	L26
  2478  002FFC                     l492:
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;main.c: 720: if ( LATBbits.LATB1 ) {
  2482  002FFC  A28A               	btfss	3978,1,c	;volatile
  2483  002FFE  D005               	goto	l493
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;main.c: 721: LATBbits.LATB1 = 0;
  2487  003000  928A               	bcf	3978,1,c	;volatile
  2488  003002                     L29:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;main.c: 722: bOn = 0;
  2492  003002  0101               	movlb	1	; () banked
  2493  003004  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2494  003006  0E00               	movlw	0
  2495  003008  D034               	goto	L20
  2496  00300A                     l493:
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;main.c: 724: else {
  2500                           ;main.c: 725: LATBbits.LATB1 = 1;
  2501  00300A  828A               	bsf	3978,1,c	;volatile
  2502  00300C  D02F               	goto	L26
  2503  00300E                     l495:
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;main.c: 731: if ( LATCbits.LATC3 ) {
  2507  00300E  A68B               	btfss	3979,3,c	;volatile
  2508  003010  D002               	goto	l496
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;main.c: 732: LATCbits.LATC3 = 0;
  2512  003012  968B               	bcf	3979,3,c	;volatile
  2513  003014  D7F6               	goto	L29
  2514  003016                     l496:
  2515                           
  2516                           ; BSR set to: 0
  2517                           ;main.c: 735: else {
  2518                           ;main.c: 736: LATCbits.LATC3 = 1;
  2519  003016  868B               	bsf	3979,3,c	;volatile
  2520  003018  D029               	goto	L26
  2521  00301A                     l498:
  2522                           
  2523                           ; BSR set to: 0
  2524                           ;main.c: 742: if ( LATCbits.LATC4 ) {
  2525  00301A  A88B               	btfss	3979,4,c	;volatile
  2526  00301C  D002               	goto	l499
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;main.c: 743: LATCbits.LATC4 = 0;
  2530  00301E  988B               	bcf	3979,4,c	;volatile
  2531  003020  D7F0               	goto	L29
  2532  003022                     l499:
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;main.c: 746: else {
  2536                           ;main.c: 747: LATCbits.LATC4 = 1;
  2537  003022  888B               	bsf	3979,4,c	;volatile
  2538  003024  D023               	goto	L26
  2539  003026                     l501:
  2540                           
  2541                           ; BSR set to: 0
  2542                           ;main.c: 753: if ( LATCbits.LATC5 ) {
  2543  003026  AA8B               	btfss	3979,5,c	;volatile
  2544  003028  D002               	goto	l502
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;main.c: 754: LATCbits.LATC5 = 0;
  2548  00302A  9A8B               	bcf	3979,5,c	;volatile
  2549  00302C  D7EA               	goto	L29
  2550  00302E                     l502:
  2551                           
  2552                           ; BSR set to: 0
  2553                           ;main.c: 757: else {
  2554                           ;main.c: 758: LATCbits.LATC5 = 1;
  2555  00302E  8A8B               	bsf	3979,5,c	;volatile
  2556  003030  D01D               	goto	L26
  2557  003032                     l504:
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;main.c: 764: if ( LATCbits.LATC6 ) {
  2561  003032  AC8B               	btfss	3979,6,c	;volatile
  2562  003034  D002               	goto	l505
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;main.c: 765: LATCbits.LATC6 = 0;
  2566  003036  9C8B               	bcf	3979,6,c	;volatile
  2567  003038  D7E4               	goto	L29
  2568  00303A                     l505:
  2569                           
  2570                           ; BSR set to: 0
  2571                           ;main.c: 768: else {
  2572                           ;main.c: 769: LATCbits.LATC6 = 1;
  2573  00303A  8C8B               	bsf	3979,6,c	;volatile
  2574  00303C  D017               	goto	L26
  2575  00303E                     l507:
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;main.c: 775: if ( LATCbits.LATC7 ) {
  2579  00303E  AE8B               	btfss	3979,7,c	;volatile
  2580  003040  D002               	goto	l508
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;main.c: 776: LATCbits.LATC7 = 0;
  2584  003042  9E8B               	bcf	3979,7,c	;volatile
  2585  003044  D7DE               	goto	L29
  2586  003046                     l508:
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;main.c: 779: else {
  2590                           ;main.c: 780: LATCbits.LATC7 = 1;
  2591  003046  8E8B               	bsf	3979,7,c	;volatile
  2592  003048  D011               	goto	L26
  2593  00304A                     l510:
  2594                           
  2595                           ; BSR set to: 0
  2596                           ;main.c: 786: if ( LATAbits.LATA2 ) {
  2597  00304A  A489               	btfss	3977,2,c	;volatile
  2598  00304C  D002               	goto	l511
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;main.c: 787: LATAbits.LATA2 = 0;
  2602  00304E  9489               	bcf	3977,2,c	;volatile
  2603  003050  D7D8               	goto	L29
  2604  003052                     l511:
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;main.c: 790: else {
  2608                           ;main.c: 791: LATAbits.LATA2 = 1;
  2609  003052  8489               	bsf	3977,2,c	;volatile
  2610  003054  D00B               	goto	L26
  2611  003056                     l513:
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;main.c: 797: if ( LATAbits.LATA1 ) {
  2615  003056  A289               	btfss	3977,1,c	;volatile
  2616  003058  D002               	goto	l514
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;main.c: 798: LATAbits.LATA1 = 0;
  2620  00305A  9289               	bcf	3977,1,c	;volatile
  2621  00305C  D7D2               	goto	L29
  2622  00305E                     l514:
  2623                           
  2624                           ; BSR set to: 0
  2625                           ;main.c: 801: else {
  2626                           ;main.c: 802: LATAbits.LATA1 = 1;
  2627  00305E  8289               	bsf	3977,1,c	;volatile
  2628  003060  D005               	goto	L26
  2629  003062                     l516:
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;main.c: 808: if ( LATAbits.LATA0 ) {
  2633  003062  A089               	btfss	3977,0,c	;volatile
  2634  003064  D002               	goto	l517
  2635                           
  2636                           ; BSR set to: 0
  2637                           ;main.c: 809: LATAbits.LATA0 = 0;
  2638  003066  9089               	bcf	3977,0,c	;volatile
  2639  003068  D7CC               	goto	L29
  2640  00306A                     l517:
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;main.c: 812: else {
  2644                           ;main.c: 813: LATAbits.LATA0 = 1;
  2645  00306A  8089               	bsf	3977,0,c	;volatile
  2646  00306C                     L26:
  2647                           
  2648                           ; BSR set to: 0
  2649                           ;main.c: 814: bOn = 1;
  2650  00306C  0101               	movlb	1	; () banked
  2651  00306E  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2652  003070  0E01               	movlw	1
  2653  003072                     L20:
  2654  003072  0100               	movlb	0	; () banked
  2655  003074  0100               	movlb	0	; () banked
  2656  003076  6FAA               	movwf	doApplicationOneSecondWork@bOn& (0+255),b
  2657  003078  0101               	movlb	1	; () banked
  2658  00307A  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2659  00307C  D021               	goto	l10073
  2660  00307E                     l10071:
  2661                           
  2662                           ; BSR set to: 1
  2663  00307E  0100               	movlb	0	; () banked
  2664  003080  0100               	movlb	0	; () banked
  2665  003082  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2666                           
  2667                           ; Switch size 1, requested type "space"
  2668                           ; Number of cases is 10, Range of values is 0 to 9
  2669                           ; switch strategies available:
  2670                           ; Name         Instructions Cycles
  2671                           ; simple_byte           31    16 (average)
  2672                           ;	Chosen strategy is simple_byte
  2673  003084  0A00               	xorlw	0	; case 0
  2674  003086  B4D8               	btfsc	status,2,c
  2675  003088  D7B3               	goto	l488
  2676  00308A  0A01               	xorlw	1	; case 1
  2677  00308C  B4D8               	btfsc	status,2,c
  2678  00308E  D7B6               	goto	l492
  2679  003090  0A03               	xorlw	3	; case 2
  2680  003092  B4D8               	btfsc	status,2,c
  2681  003094  D7BC               	goto	l495
  2682  003096  0A01               	xorlw	1	; case 3
  2683  003098  B4D8               	btfsc	status,2,c
  2684  00309A  D7BF               	goto	l498
  2685  00309C  0A07               	xorlw	7	; case 4
  2686  00309E  B4D8               	btfsc	status,2,c
  2687  0030A0  D7C2               	goto	l501
  2688  0030A2  0A01               	xorlw	1	; case 5
  2689  0030A4  B4D8               	btfsc	status,2,c
  2690  0030A6  D7C5               	goto	l504
  2691  0030A8  0A03               	xorlw	3	; case 6
  2692  0030AA  B4D8               	btfsc	status,2,c
  2693  0030AC  D7C8               	goto	l507
  2694  0030AE  0A01               	xorlw	1	; case 7
  2695  0030B0  B4D8               	btfsc	status,2,c
  2696  0030B2  D7CB               	goto	l510
  2697  0030B4  0A0F               	xorlw	15	; case 8
  2698  0030B6  B4D8               	btfsc	status,2,c
  2699  0030B8  D7CE               	goto	l513
  2700  0030BA  0A01               	xorlw	1	; case 9
  2701  0030BC  B4D8               	btfsc	status,2,c
  2702  0030BE  D7D1               	goto	l516
  2703  0030C0                     l10073:
  2704                           
  2705                           ;main.c: 820: channel_pulse_timer[ i ] =
  2706                           ;main.c: 821: Read_b_eep(0x43 + 46 + 0 + 2 * i) * 256 +
  2707                           ;main.c: 823: Read_b_eep(0x43 + 46 + 0 + 2 * i);
  2708  0030C0  90D8               	bcf	status,0,c
  2709  0030C2  0100               	movlb	0	; () banked
  2710  0030C4  0100               	movlb	0	; () banked
  2711  0030C6  35AC               	rlcf	doApplicationOneSecondWork@i& (0+255),w,b
  2712  0030C8  0101               	movlb	1	; () banked
  2713  0030CA  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2714  0030CC  0101               	movlb	1	; () banked
  2715  0030CE  6B01               	clrf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2716  0030D0  0101               	movlb	1	; () banked
  2717  0030D2  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2718  0030D4  0E71               	movlw	113
  2719  0030D6  0101               	movlb	1	; () banked
  2720  0030D8  2500               	addwf	??_doApplicationOneSecondWork& (0+255),w,b
  2721  0030DA  6E16               	movwf	?_Read_b_eep,c
  2722  0030DC  0E00               	movlw	0
  2723  0030DE  0101               	movlb	1	; () banked
  2724  0030E0  2101               	addwfc	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2725  0030E2  6E17               	movwf	?_Read_b_eep+1,c
  2726  0030E4  ECFD  F036         	call	_Read_b_eep	;wreg free
  2727  0030E8  0101               	movlb	1	; () banked
  2728  0030EA  6F02               	movwf	(??_doApplicationOneSecondWork+2)& (0+255),b
  2729  0030EC  0101               	movlb	1	; () banked
  2730  0030EE  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  2731  0030F0  0101               	movlb	1	; () banked
  2732  0030F2  6F04               	movwf	(??_doApplicationOneSecondWork+4)& (0+255),b
  2733  0030F4  6B03               	clrf	(??_doApplicationOneSecondWork+3)& (0+255),b
  2734  0030F6  90D8               	bcf	status,0,c
  2735  0030F8  0100               	movlb	0	; () banked
  2736  0030FA  0100               	movlb	0	; () banked
  2737  0030FC  35AC               	rlcf	doApplicationOneSecondWork@i& (0+255),w,b
  2738  0030FE  0101               	movlb	1	; () banked
  2739  003100  6F05               	movwf	(??_doApplicationOneSecondWork+5)& (0+255),b
  2740  003102  0101               	movlb	1	; () banked
  2741  003104  6B06               	clrf	(??_doApplicationOneSecondWork+6)& (0+255),b
  2742  003106  0101               	movlb	1	; () banked
  2743  003108  3706               	rlcf	(??_doApplicationOneSecondWork+6)& (0+255),f,b
  2744  00310A  0E71               	movlw	113
  2745  00310C  0101               	movlb	1	; () banked
  2746  00310E  2505               	addwf	(??_doApplicationOneSecondWork+5)& (0+255),w,b
  2747  003110  6E16               	movwf	?_Read_b_eep,c
  2748  003112  0E00               	movlw	0
  2749  003114  0101               	movlb	1	; () banked
  2750  003116  2106               	addwfc	(??_doApplicationOneSecondWork+6)& (0+255),w,b
  2751  003118  6E17               	movwf	?_Read_b_eep+1,c
  2752  00311A  ECFD  F036         	call	_Read_b_eep	;wreg free
  2753  00311E  0101               	movlb	1	; () banked
  2754  003120  6F07               	movwf	(??_doApplicationOneSecondWork+7)& (0+255),b
  2755  003122  0101               	movlb	1	; () banked
  2756  003124  5107               	movf	(??_doApplicationOneSecondWork+7)& (0+255),w,b
  2757  003126  0101               	movlb	1	; () banked
  2758  003128  2703               	addwf	(??_doApplicationOneSecondWork+3)& (0+255),f,b
  2759  00312A  0E00               	movlw	0
  2760  00312C  2304               	addwfc	(??_doApplicationOneSecondWork+4)& (0+255),f,b
  2761  00312E  0100               	movlb	0	; () banked
  2762  003130  0100               	movlb	0	; () banked
  2763  003132  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2764  003134  0D02               	mullw	2
  2765  003136  0101               	movlb	1	; () banked
  2766  003138  0E26               	movlw	low _channel_pulse_timer
  2767  00313A  24F3               	addwf	prodl,w,c
  2768  00313C  6ED9               	movwf	fsr2l,c
  2769  00313E  0101               	movlb	1	; () banked
  2770  003140  0E01               	movlw	high _channel_pulse_timer
  2771  003142  20F4               	addwfc	prodh,w,c
  2772  003144  6EDA               	movwf	fsr2h,c
  2773  003146  C103  FFDE         	movff	??_doApplicationOneSecondWork+3,postinc2
  2774  00314A  C104  FFDD         	movff	??_doApplicationOneSecondWork+4,postdec2
  2775                           
  2776                           ; BSR set to: 1
  2777                           ;main.c: 826: if ( bOn ) {
  2778  00314E  0100               	movlb	0	; () banked
  2779  003150  0100               	movlb	0	; () banked
  2780  003152  51AA               	movf	doApplicationOneSecondWork@bOn& (0+255),w,b
  2781  003154  B4D8               	btfsc	status,2,c
  2782  003156  D06B               	goto	l519
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;main.c: 829: if ( Read_b_eep(0x43 + 24 + i) &
  2786                           ;main.c: 830: 0x04) {
  2787  003158  0E5B               	movlw	91
  2788  00315A  0100               	movlb	0	; () banked
  2789  00315C  0100               	movlb	0	; () banked
  2790  00315E  25AC               	addwf	doApplicationOneSecondWork@i& (0+255),w,b
  2791  003160  6E16               	movwf	?_Read_b_eep,c
  2792  003162  6A17               	clrf	?_Read_b_eep+1,c
  2793  003164  0E00               	movlw	0
  2794  003166  2217               	addwfc	?_Read_b_eep+1,f,c
  2795  003168  ECFD  F036         	call	_Read_b_eep	;wreg free
  2796  00316C  0101               	movlb	1	; () banked
  2797  00316E  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2798  003170  0101               	movlb	1	; () banked
  2799  003172  A500               	btfss	??_doApplicationOneSecondWork& (0+255),2,b
  2800  003174  D047               	goto	l10081
  2801                           
  2802                           ; BSR set to: 1
  2803                           ;main.c: 831: channel_protection_timer[ i ] =
  2804                           ;main.c: 832: Read_b_eep(0x43 + 46 + 20 + 2 * i) * 256 +
  2805                           ;main.c: 834: Read_b_eep(0x43 + 46 + 21 + 2 * i);
  2806  003176  90D8               	bcf	status,0,c
  2807  003178  0100               	movlb	0	; () banked
  2808  00317A  0100               	movlb	0	; () banked
  2809  00317C  35AC               	rlcf	doApplicationOneSecondWork@i& (0+255),w,b
  2810  00317E  0101               	movlb	1	; () banked
  2811  003180  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2812  003182  0101               	movlb	1	; () banked
  2813  003184  6B01               	clrf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2814  003186  0101               	movlb	1	; () banked
  2815  003188  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2816  00318A  0E85               	movlw	133
  2817  00318C  0101               	movlb	1	; () banked
  2818  00318E  2500               	addwf	??_doApplicationOneSecondWork& (0+255),w,b
  2819  003190  6E16               	movwf	?_Read_b_eep,c
  2820  003192  0E00               	movlw	0
  2821  003194  0101               	movlb	1	; () banked
  2822  003196  2101               	addwfc	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2823  003198  6E17               	movwf	?_Read_b_eep+1,c
  2824  00319A  ECFD  F036         	call	_Read_b_eep	;wreg free
  2825  00319E  0101               	movlb	1	; () banked
  2826  0031A0  6F02               	movwf	(??_doApplicationOneSecondWork+2)& (0+255),b
  2827  0031A2  0101               	movlb	1	; () banked
  2828  0031A4  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  2829  0031A6  0101               	movlb	1	; () banked
  2830  0031A8  6F04               	movwf	(??_doApplicationOneSecondWork+4)& (0+255),b
  2831  0031AA  6B03               	clrf	(??_doApplicationOneSecondWork+3)& (0+255),b
  2832  0031AC  90D8               	bcf	status,0,c
  2833  0031AE  0100               	movlb	0	; () banked
  2834  0031B0  0100               	movlb	0	; () banked
  2835  0031B2  35AC               	rlcf	doApplicationOneSecondWork@i& (0+255),w,b
  2836  0031B4  0101               	movlb	1	; () banked
  2837  0031B6  6F05               	movwf	(??_doApplicationOneSecondWork+5)& (0+255),b
  2838  0031B8  0101               	movlb	1	; () banked
  2839  0031BA  6B06               	clrf	(??_doApplicationOneSecondWork+6)& (0+255),b
  2840  0031BC  0101               	movlb	1	; () banked
  2841  0031BE  3706               	rlcf	(??_doApplicationOneSecondWork+6)& (0+255),f,b
  2842  0031C0  0E86               	movlw	134
  2843  0031C2  0101               	movlb	1	; () banked
  2844  0031C4  2505               	addwf	(??_doApplicationOneSecondWork+5)& (0+255),w,b
  2845  0031C6  6E16               	movwf	?_Read_b_eep,c
  2846  0031C8  0E00               	movlw	0
  2847  0031CA  0101               	movlb	1	; () banked
  2848  0031CC  2106               	addwfc	(??_doApplicationOneSecondWork+6)& (0+255),w,b
  2849  0031CE  6E17               	movwf	?_Read_b_eep+1,c
  2850  0031D0  ECFD  F036         	call	_Read_b_eep	;wreg free
  2851  0031D4  0101               	movlb	1	; () banked
  2852  0031D6  6F07               	movwf	(??_doApplicationOneSecondWork+7)& (0+255),b
  2853  0031D8  0101               	movlb	1	; () banked
  2854  0031DA  5107               	movf	(??_doApplicationOneSecondWork+7)& (0+255),w,b
  2855  0031DC  0101               	movlb	1	; () banked
  2856  0031DE  2703               	addwf	(??_doApplicationOneSecondWork+3)& (0+255),f,b
  2857  0031E0  0E00               	movlw	0
  2858  0031E2  2304               	addwfc	(??_doApplicationOneSecondWork+4)& (0+255),f,b
  2859  0031E4  0100               	movlb	0	; () banked
  2860  0031E6  0100               	movlb	0	; () banked
  2861  0031E8  51AC               	movf	doApplicationOneSecondWork@i& (0+255),w,b
  2862  0031EA  0D02               	mullw	2
  2863  0031EC  0100               	movlb	0	; () banked
  2864  0031EE  0EBD               	movlw	low _channel_protection_timer
  2865  0031F0  24F3               	addwf	prodl,w,c
  2866  0031F2  6ED9               	movwf	fsr2l,c
  2867  0031F4  0100               	movlb	0	; () banked
  2868  0031F6  0E00               	movlw	high _channel_protection_timer
  2869  0031F8  20F4               	addwfc	prodh,w,c
  2870  0031FA  6EDA               	movwf	fsr2h,c
  2871  0031FC  C103  FFDE         	movff	??_doApplicationOneSecondWork+3,postinc2
  2872  003200  C104  FFDD         	movff	??_doApplicationOneSecondWork+4,postdec2
  2873  003204                     l10081:
  2874                           
  2875                           ;main.c: 836: }
  2876                           ;main.c: 838: if ( ctrlreg & 0x08 ) {
  2877  003204  0100               	movlb	0	; () banked
  2878  003206  0100               	movlb	0	; () banked
  2879  003208  A7AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),3,b
  2880  00320A  D064               	goto	l10089
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;main.c: 839: SendInformationEvent(i, 20,
  2884                           ;main.c: 840: 3);
  2885  00320C  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  2886  003210  0101               	movlb	1	; () banked
  2887  003212  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2888  003214  0E14               	movlw	20
  2889  003216  6E31               	movwf	?_SendInformationEvent+1,c
  2890  003218  0101               	movlb	1	; () banked
  2891  00321A  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2892  00321C  0101               	movlb	1	; () banked
  2893  00321E  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2894  003220  0E03               	movlw	3
  2895  003222  6E32               	movwf	?_SendInformationEvent+2,c
  2896  003224  0101               	movlb	1	; () banked
  2897  003226  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2898  003228  EC48  F034         	call	_SendInformationEvent	;wreg free
  2899  00322C  D053               	goto	l10089
  2900  00322E                     l519:
  2901                           
  2902                           ; BSR set to: 0
  2903                           ;main.c: 845: else {
  2904                           ;main.c: 847: if ( ctrlreg & 0x10 ) {
  2905  00322E  0100               	movlb	0	; () banked
  2906  003230  0100               	movlb	0	; () banked
  2907  003232  A9AB               	btfss	doApplicationOneSecondWork@ctrlreg& (0+255),4,b
  2908  003234  D04F               	goto	l10089
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;main.c: 848: SendInformationEvent( i, 20,
  2912                           ;main.c: 849: 4);
  2913  003236  C0AC  F030         	movff	doApplicationOneSecondWork@i,?_SendInformationEvent
  2914  00323A  0101               	movlb	1	; () banked
  2915  00323C  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2916  00323E  0E14               	movlw	20
  2917  003240  6E31               	movwf	?_SendInformationEvent+1,c
  2918  003242  0101               	movlb	1	; () banked
  2919  003244  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  2920  003246  0101               	movlb	1	; () banked
  2921  003248  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2922  00324A  0E04               	movlw	4
  2923  00324C  6E32               	movwf	?_SendInformationEvent+2,c
  2924  00324E  0101               	movlb	1	; () banked
  2925  003250  5101               	movf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2926  003252  EC48  F034         	call	_SendInformationEvent	;wreg free
  2927  003256  D03E               	goto	l10089
  2928  003258                     l10087:
  2929                           
  2930                           ;main.c: 857: else {
  2931                           ;main.c: 859: channel_pulse_timer[ 0 ] =
  2932                           ;main.c: 860: Read_b_eep(0x43 + 46 + 0 + 2 * i) * 256 +
  2933                           ;main.c: 862: Read_b_eep(0x43 + 46 + 1 + 2 * i);
  2934  003258  90D8               	bcf	status,0,c
  2935  00325A  0100               	movlb	0	; () banked
  2936  00325C  0100               	movlb	0	; () banked
  2937  00325E  35AC               	rlcf	doApplicationOneSecondWork@i& (0+255),w,b
  2938  003260  0101               	movlb	1	; () banked
  2939  003262  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  2940  003264  0101               	movlb	1	; () banked
  2941  003266  6B01               	clrf	(??_doApplicationOneSecondWork+1)& (0+255),b
  2942  003268  0101               	movlb	1	; () banked
  2943  00326A  3701               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),f,b
  2944  00326C  0E72               	movlw	114
  2945  00326E  0101               	movlb	1	; () banked
  2946  003270  2500               	addwf	??_doApplicationOneSecondWork& (0+255),w,b
  2947  003272  6E16               	movwf	?_Read_b_eep,c
  2948  003274  0E00               	movlw	0
  2949  003276  0101               	movlb	1	; () banked
  2950  003278  2101               	addwfc	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  2951  00327A  6E17               	movwf	?_Read_b_eep+1,c
  2952  00327C  ECFD  F036         	call	_Read_b_eep	;wreg free
  2953  003280  0101               	movlb	1	; () banked
  2954  003282  6F02               	movwf	(??_doApplicationOneSecondWork+2)& (0+255),b
  2955  003284  90D8               	bcf	status,0,c
  2956  003286  0100               	movlb	0	; () banked
  2957  003288  0100               	movlb	0	; () banked
  2958  00328A  35AC               	rlcf	doApplicationOneSecondWork@i& (0+255),w,b
  2959  00328C  0101               	movlb	1	; () banked
  2960  00328E  6F03               	movwf	(??_doApplicationOneSecondWork+3)& (0+255),b
  2961  003290  0101               	movlb	1	; () banked
  2962  003292  6B04               	clrf	(??_doApplicationOneSecondWork+4)& (0+255),b
  2963  003294  0101               	movlb	1	; () banked
  2964  003296  3704               	rlcf	(??_doApplicationOneSecondWork+4)& (0+255),f,b
  2965  003298  0E71               	movlw	113
  2966  00329A  0101               	movlb	1	; () banked
  2967  00329C  2503               	addwf	(??_doApplicationOneSecondWork+3)& (0+255),w,b
  2968  00329E  6E16               	movwf	?_Read_b_eep,c
  2969  0032A0  0E00               	movlw	0
  2970  0032A2  0101               	movlb	1	; () banked
  2971  0032A4  2104               	addwfc	(??_doApplicationOneSecondWork+4)& (0+255),w,b
  2972  0032A6  6E17               	movwf	?_Read_b_eep+1,c
  2973  0032A8  ECFD  F036         	call	_Read_b_eep	;wreg free
  2974  0032AC  0101               	movlb	1	; () banked
  2975  0032AE  6F05               	movwf	(??_doApplicationOneSecondWork+5)& (0+255),b
  2976  0032B0  0101               	movlb	1	; () banked
  2977  0032B2  5105               	movf	(??_doApplicationOneSecondWork+5)& (0+255),w,b
  2978  0032B4  0101               	movlb	1	; () banked
  2979  0032B6  6F07               	movwf	(??_doApplicationOneSecondWork+7)& (0+255),b
  2980  0032B8  6B06               	clrf	(??_doApplicationOneSecondWork+6)& (0+255),b
  2981  0032BA  0101               	movlb	1	; () banked
  2982  0032BC  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  2983  0032BE  0101               	movlb	1	; () banked
  2984  0032C0  2506               	addwf	(??_doApplicationOneSecondWork+6)& (0+255),w,b
  2985  0032C2  0101               	movlb	1	; () banked
  2986  0032C4  0101               	movlb	1	; () banked
  2987  0032C6  6F26               	movwf	_channel_pulse_timer& (0+255),b
  2988  0032C8  0101               	movlb	1	; () banked
  2989  0032CA  0E00               	movlw	0
  2990  0032CC  0101               	movlb	1	; () banked
  2991  0032CE  2107               	addwfc	(??_doApplicationOneSecondWork+7)& (0+255),w,b
  2992  0032D0  0101               	movlb	1	; () banked
  2993  0032D2  6F27               	movwf	(_channel_pulse_timer+1)& (0+255),b
  2994  0032D4                     l10089:
  2995  0032D4  0100               	movlb	0	; () banked
  2996  0032D6  0100               	movlb	0	; () banked
  2997  0032D8  2BAC               	incf	doApplicationOneSecondWork@i& (0+255),f,b
  2998  0032DA                     L21:
  2999                           
  3000                           ; BSR set to: 0
  3001  0032DA  0E09               	movlw	9
  3002  0032DC  0100               	movlb	0	; () banked
  3003  0032DE  0100               	movlb	0	; () banked
  3004  0032E0  65AC               	cpfsgt	doApplicationOneSecondWork@i& (0+255),b
  3005  0032E2  D453               	goto	l9937
  3006                           
  3007                           ; BSR set to: 0
  3008                           ;main.c: 864: }
  3009                           ;main.c: 866: }
  3010                           ;main.c: 868: }
  3011                           ;main.c: 870: }
  3012                           ;main.c: 873: current_iostate = ( LATAbits.LATA0 << 9 ) +
  3013                           ;main.c: 874: ( LATAbits.LATA1 << 8 ) +
  3014                           ;main.c: 875: ( LATAbits.LATA2 << 7 ) +
  3015                           ;main.c: 876: ( LATCbits.LATC7 << 6 ) +
  3016                           ;main.c: 877: ( LATCbits.LATC6 << 5 ) +
  3017                           ;main.c: 878: ( LATCbits.LATC5 << 4 ) +
  3018                           ;main.c: 879: ( LATCbits.LATC4 << 3 ) +
  3019                           ;main.c: 880: ( LATCbits.LATC3 << 2 ) +
  3020                           ;main.c: 881: ( LATBbits.LATB1 << 1 ) +
  3021                           ;main.c: 882: LATBbits.LATB0;
  3022                           
  3023                           ; BSR set to: 0
  3024  0032E4  508A               	movf	3978,w,c	;volatile
  3025  0032E6  0B01               	andlw	1
  3026  0032E8  0101               	movlb	1	; () banked
  3027  0032EA  6F00               	movwf	??_doApplicationOneSecondWork& (0+255),b
  3028  0032EC  308A               	rrcf	3978,w,c	;volatile
  3029  0032EE  0B01               	andlw	1
  3030  0032F0  0101               	movlb	1	; () banked
  3031  0032F2  6F01               	movwf	(??_doApplicationOneSecondWork+1)& (0+255),b
  3032  0032F4  90D8               	bcf	status,0,c
  3033  0032F6  0101               	movlb	1	; () banked
  3034  0032F8  3501               	rlcf	(??_doApplicationOneSecondWork+1)& (0+255),w,b
  3035  0032FA  0101               	movlb	1	; () banked
  3036  0032FC  6F02               	movwf	(??_doApplicationOneSecondWork+2)& (0+255),b
  3037  0032FE  0101               	movlb	1	; () banked
  3038  003300  6B03               	clrf	(??_doApplicationOneSecondWork+3)& (0+255),b
  3039  003302  0101               	movlb	1	; () banked
  3040  003304  3703               	rlcf	(??_doApplicationOneSecondWork+3)& (0+255),f,b
  3041  003306  308B               	rrcf	3979,w,c	;volatile
  3042  003308  32E8               	rrcf	wreg,f,c
  3043  00330A  32E8               	rrcf	wreg,f,c
  3044  00330C  0B01               	andlw	1
  3045  00330E  0101               	movlb	1	; () banked
  3046  003310  6F04               	movwf	(??_doApplicationOneSecondWork+4)& (0+255),b
  3047  003312  6B05               	clrf	(??_doApplicationOneSecondWork+5)& (0+255),b
  3048  003314  0101               	movlb	1	; () banked
  3049  003316  90D8               	bcf	status,0,c
  3050  003318  3704               	rlcf	(??_doApplicationOneSecondWork+4)& (0+255),f,b
  3051  00331A  3705               	rlcf	(??_doApplicationOneSecondWork+5)& (0+255),f,b
  3052  00331C  0101               	movlb	1	; () banked
  3053  00331E  90D8               	bcf	status,0,c
  3054  003320  3704               	rlcf	(??_doApplicationOneSecondWork+4)& (0+255),f,b
  3055  003322  3705               	rlcf	(??_doApplicationOneSecondWork+5)& (0+255),f,b
  3056  003324  388B               	swapf	3979,w,c	;volatile
  3057  003326  0B01               	andlw	1
  3058  003328  0101               	movlb	1	; () banked
  3059  00332A  6F06               	movwf	(??_doApplicationOneSecondWork+6)& (0+255),b
  3060  00332C  6B07               	clrf	(??_doApplicationOneSecondWork+7)& (0+255),b
  3061  00332E  0101               	movlb	1	; () banked
  3062  003330  90D8               	bcf	status,0,c
  3063  003332  3706               	rlcf	(??_doApplicationOneSecondWork+6)& (0+255),f,b
  3064  003334  3707               	rlcf	(??_doApplicationOneSecondWork+7)& (0+255),f,b
  3065  003336  0101               	movlb	1	; () banked
  3066  003338  90D8               	bcf	status,0,c
  3067  00333A  3706               	rlcf	(??_doApplicationOneSecondWork+6)& (0+255),f,b
  3068  00333C  3707               	rlcf	(??_doApplicationOneSecondWork+7)& (0+255),f,b
  3069  00333E  0101               	movlb	1	; () banked
  3070  003340  90D8               	bcf	status,0,c
  3071  003342  3706               	rlcf	(??_doApplicationOneSecondWork+6)& (0+255),f,b
  3072  003344  3707               	rlcf	(??_doApplicationOneSecondWork+7)& (0+255),f,b
  3073  003346  388B               	swapf	3979,w,c	;volatile
  3074  003348  32E8               	rrcf	wreg,f,c
  3075  00334A  0B01               	andlw	1
  3076  00334C  0101               	movlb	1	; () banked
  3077  00334E  6F08               	movwf	(??_doApplicationOneSecondWork+8)& (0+255),b
  3078  003350  6B09               	clrf	(??_doApplicationOneSecondWork+9)& (0+255),b
  3079  003352  0101               	movlb	1	; () banked
  3080  003354  3B08               	swapf	(??_doApplicationOneSecondWork+8)& (0+255),f,b
  3081  003356  3B09               	swapf	(??_doApplicationOneSecondWork+9)& (0+255),f,b
  3082  003358  0EF0               	movlw	240
  3083  00335A  1709               	andwf	(??_doApplicationOneSecondWork+9)& (0+255),f,b
  3084  00335C  5108               	movf	(??_doApplicationOneSecondWork+8)& (0+255),w,b
  3085  00335E  0B0F               	andlw	15
  3086  003360  1309               	iorwf	(??_doApplicationOneSecondWork+9)& (0+255),f,b
  3087  003362  0EF0               	movlw	240
  3088  003364  1708               	andwf	(??_doApplicationOneSecondWork+8)& (0+255),f,b
  3089  003366  388B               	swapf	3979,w,c	;volatile
  3090  003368  32E8               	rrcf	wreg,f,c
  3091  00336A  32E8               	rrcf	wreg,f,c
  3092  00336C  0B01               	andlw	1
  3093  00336E  0101               	movlb	1	; () banked
  3094  003370  6F0A               	movwf	(??_doApplicationOneSecondWork+10)& (0+255),b
  3095  003372  6B0B               	clrf	(??_doApplicationOneSecondWork+11)& (0+255),b
  3096  003374  0E05               	movlw	5
  3097  003376                     u12075:
  3098  003376  90D8               	bcf	status,0,c
  3099  003378  0101               	movlb	1	; () banked
  3100  00337A  370A               	rlcf	(??_doApplicationOneSecondWork+10)& (0+255),f,b
  3101  00337C  370B               	rlcf	(??_doApplicationOneSecondWork+11)& (0+255),f,b
  3102  00337E  2EE8               	decfsz	wreg,f,c
  3103  003380  D7FA               	goto	u12075
  3104  003382  348B               	rlcf	3979,w,c	;volatile
  3105  003384  36E8               	rlcf	wreg,f,c
  3106  003386  0B01               	andlw	1
  3107  003388  0101               	movlb	1	; () banked
  3108  00338A  6F0C               	movwf	(??_doApplicationOneSecondWork+12)& (0+255),b
  3109  00338C  6B0D               	clrf	(??_doApplicationOneSecondWork+13)& (0+255),b
  3110  00338E  0E06               	movlw	6
  3111  003390                     u12085:
  3112  003390  90D8               	bcf	status,0,c
  3113  003392  0101               	movlb	1	; () banked
  3114  003394  370C               	rlcf	(??_doApplicationOneSecondWork+12)& (0+255),f,b
  3115  003396  370D               	rlcf	(??_doApplicationOneSecondWork+13)& (0+255),f,b
  3116  003398  2EE8               	decfsz	wreg,f,c
  3117  00339A  D7FA               	goto	u12085
  3118  00339C  3089               	rrcf	3977,w,c	;volatile
  3119  00339E  32E8               	rrcf	wreg,f,c
  3120  0033A0  0B01               	andlw	1
  3121  0033A2  0101               	movlb	1	; () banked
  3122  0033A4  6F0E               	movwf	(??_doApplicationOneSecondWork+14)& (0+255),b
  3123  0033A6  6B0F               	clrf	(??_doApplicationOneSecondWork+15)& (0+255),b
  3124  0033A8  0E07               	movlw	7
  3125  0033AA                     u12095:
  3126  0033AA  90D8               	bcf	status,0,c
  3127  0033AC  0101               	movlb	1	; () banked
  3128  0033AE  370E               	rlcf	(??_doApplicationOneSecondWork+14)& (0+255),f,b
  3129  0033B0  370F               	rlcf	(??_doApplicationOneSecondWork+15)& (0+255),f,b
  3130  0033B2  2EE8               	decfsz	wreg,f,c
  3131  0033B4  D7FA               	goto	u12095
  3132  0033B6  3089               	rrcf	3977,w,c	;volatile
  3133  0033B8  0B01               	andlw	1
  3134  0033BA  0101               	movlb	1	; () banked
  3135  0033BC  6F10               	movwf	(??_doApplicationOneSecondWork+16)& (0+255),b
  3136  0033BE  0101               	movlb	1	; () banked
  3137  0033C0  5110               	movf	(??_doApplicationOneSecondWork+16)& (0+255),w,b
  3138  0033C2  0101               	movlb	1	; () banked
  3139  0033C4  6F12               	movwf	(??_doApplicationOneSecondWork+18)& (0+255),b
  3140  0033C6  6B11               	clrf	(??_doApplicationOneSecondWork+17)& (0+255),b
  3141  0033C8  5089               	movf	3977,w,c	;volatile
  3142  0033CA  0B01               	andlw	1
  3143  0033CC  0101               	movlb	1	; () banked
  3144  0033CE  6F13               	movwf	(??_doApplicationOneSecondWork+19)& (0+255),b
  3145  0033D0  6B14               	clrf	(??_doApplicationOneSecondWork+20)& (0+255),b
  3146  0033D2  0E09               	movlw	9
  3147  0033D4                     u12105:
  3148  0033D4  90D8               	bcf	status,0,c
  3149  0033D6  0101               	movlb	1	; () banked
  3150  0033D8  3713               	rlcf	(??_doApplicationOneSecondWork+19)& (0+255),f,b
  3151  0033DA  3714               	rlcf	(??_doApplicationOneSecondWork+20)& (0+255),f,b
  3152  0033DC  2EE8               	decfsz	wreg,f,c
  3153  0033DE  D7FA               	goto	u12105
  3154  0033E0  0101               	movlb	1	; () banked
  3155  0033E2  5111               	movf	(??_doApplicationOneSecondWork+17)& (0+255),w,b
  3156  0033E4  0101               	movlb	1	; () banked
  3157  0033E6  2513               	addwf	(??_doApplicationOneSecondWork+19)& (0+255),w,b
  3158  0033E8  0101               	movlb	1	; () banked
  3159  0033EA  6F15               	movwf	(??_doApplicationOneSecondWork+21)& (0+255),b
  3160  0033EC  0101               	movlb	1	; () banked
  3161  0033EE  5112               	movf	(??_doApplicationOneSecondWork+18)& (0+255),w,b
  3162  0033F0  0101               	movlb	1	; () banked
  3163  0033F2  2114               	addwfc	(??_doApplicationOneSecondWork+20)& (0+255),w,b
  3164  0033F4  0101               	movlb	1	; () banked
  3165  0033F6  6F16               	movwf	(??_doApplicationOneSecondWork+22)& (0+255),b
  3166  0033F8  0101               	movlb	1	; () banked
  3167  0033FA  510E               	movf	(??_doApplicationOneSecondWork+14)& (0+255),w,b
  3168  0033FC  0101               	movlb	1	; () banked
  3169  0033FE  2515               	addwf	(??_doApplicationOneSecondWork+21)& (0+255),w,b
  3170  003400  0101               	movlb	1	; () banked
  3171  003402  6F17               	movwf	(??_doApplicationOneSecondWork+23)& (0+255),b
  3172  003404  0101               	movlb	1	; () banked
  3173  003406  510F               	movf	(??_doApplicationOneSecondWork+15)& (0+255),w,b
  3174  003408  0101               	movlb	1	; () banked
  3175  00340A  2116               	addwfc	(??_doApplicationOneSecondWork+22)& (0+255),w,b
  3176  00340C  0101               	movlb	1	; () banked
  3177  00340E  6F18               	movwf	(??_doApplicationOneSecondWork+24)& (0+255),b
  3178  003410  0101               	movlb	1	; () banked
  3179  003412  510C               	movf	(??_doApplicationOneSecondWork+12)& (0+255),w,b
  3180  003414  0101               	movlb	1	; () banked
  3181  003416  2517               	addwf	(??_doApplicationOneSecondWork+23)& (0+255),w,b
  3182  003418  0101               	movlb	1	; () banked
  3183  00341A  6F19               	movwf	(??_doApplicationOneSecondWork+25)& (0+255),b
  3184  00341C  0101               	movlb	1	; () banked
  3185  00341E  510D               	movf	(??_doApplicationOneSecondWork+13)& (0+255),w,b
  3186  003420  0101               	movlb	1	; () banked
  3187  003422  2118               	addwfc	(??_doApplicationOneSecondWork+24)& (0+255),w,b
  3188  003424  0101               	movlb	1	; () banked
  3189  003426  6F1A               	movwf	(??_doApplicationOneSecondWork+26)& (0+255),b
  3190  003428  0101               	movlb	1	; () banked
  3191  00342A  510A               	movf	(??_doApplicationOneSecondWork+10)& (0+255),w,b
  3192  00342C  0101               	movlb	1	; () banked
  3193  00342E  2519               	addwf	(??_doApplicationOneSecondWork+25)& (0+255),w,b
  3194  003430  0101               	movlb	1	; () banked
  3195  003432  6F1B               	movwf	(??_doApplicationOneSecondWork+27)& (0+255),b
  3196  003434  0101               	movlb	1	; () banked
  3197  003436  510B               	movf	(??_doApplicationOneSecondWork+11)& (0+255),w,b
  3198  003438  0101               	movlb	1	; () banked
  3199  00343A  211A               	addwfc	(??_doApplicationOneSecondWork+26)& (0+255),w,b
  3200  00343C  0101               	movlb	1	; () banked
  3201  00343E  6F1C               	movwf	(??_doApplicationOneSecondWork+28)& (0+255),b
  3202  003440  0101               	movlb	1	; () banked
  3203  003442  5108               	movf	(??_doApplicationOneSecondWork+8)& (0+255),w,b
  3204  003444  0101               	movlb	1	; () banked
  3205  003446  251B               	addwf	(??_doApplicationOneSecondWork+27)& (0+255),w,b
  3206  003448  0101               	movlb	1	; () banked
  3207  00344A  6F1D               	movwf	(??_doApplicationOneSecondWork+29)& (0+255),b
  3208  00344C  0101               	movlb	1	; () banked
  3209  00344E  5109               	movf	(??_doApplicationOneSecondWork+9)& (0+255),w,b
  3210  003450  0101               	movlb	1	; () banked
  3211  003452  211C               	addwfc	(??_doApplicationOneSecondWork+28)& (0+255),w,b
  3212  003454  0101               	movlb	1	; () banked
  3213  003456  6F1E               	movwf	(??_doApplicationOneSecondWork+30)& (0+255),b
  3214  003458  0101               	movlb	1	; () banked
  3215  00345A  5106               	movf	(??_doApplicationOneSecondWork+6)& (0+255),w,b
  3216  00345C  0101               	movlb	1	; () banked
  3217  00345E  251D               	addwf	(??_doApplicationOneSecondWork+29)& (0+255),w,b
  3218  003460  0101               	movlb	1	; () banked
  3219  003462  6F1F               	movwf	(??_doApplicationOneSecondWork+31)& (0+255),b
  3220  003464  0101               	movlb	1	; () banked
  3221  003466  5107               	movf	(??_doApplicationOneSecondWork+7)& (0+255),w,b
  3222  003468  0101               	movlb	1	; () banked
  3223  00346A  211E               	addwfc	(??_doApplicationOneSecondWork+30)& (0+255),w,b
  3224  00346C  0101               	movlb	1	; () banked
  3225  00346E  6F20               	movwf	(??_doApplicationOneSecondWork+32)& (0+255),b
  3226  003470  0101               	movlb	1	; () banked
  3227  003472  5104               	movf	(??_doApplicationOneSecondWork+4)& (0+255),w,b
  3228  003474  0101               	movlb	1	; () banked
  3229  003476  251F               	addwf	(??_doApplicationOneSecondWork+31)& (0+255),w,b
  3230  003478  0101               	movlb	1	; () banked
  3231  00347A  6F21               	movwf	(??_doApplicationOneSecondWork+33)& (0+255),b
  3232  00347C  0101               	movlb	1	; () banked
  3233  00347E  5105               	movf	(??_doApplicationOneSecondWork+5)& (0+255),w,b
  3234  003480  0101               	movlb	1	; () banked
  3235  003482  2120               	addwfc	(??_doApplicationOneSecondWork+32)& (0+255),w,b
  3236  003484  0101               	movlb	1	; () banked
  3237  003486  6F22               	movwf	(??_doApplicationOneSecondWork+34)& (0+255),b
  3238  003488  0101               	movlb	1	; () banked
  3239  00348A  5102               	movf	(??_doApplicationOneSecondWork+2)& (0+255),w,b
  3240  00348C  0101               	movlb	1	; () banked
  3241  00348E  2521               	addwf	(??_doApplicationOneSecondWork+33)& (0+255),w,b
  3242  003490  0101               	movlb	1	; () banked
  3243  003492  6F23               	movwf	(??_doApplicationOneSecondWork+35)& (0+255),b
  3244  003494  0101               	movlb	1	; () banked
  3245  003496  5103               	movf	(??_doApplicationOneSecondWork+3)& (0+255),w,b
  3246  003498  0101               	movlb	1	; () banked
  3247  00349A  2122               	addwfc	(??_doApplicationOneSecondWork+34)& (0+255),w,b
  3248  00349C  0101               	movlb	1	; () banked
  3249  00349E  6F24               	movwf	(??_doApplicationOneSecondWork+36)& (0+255),b
  3250  0034A0  0101               	movlb	1	; () banked
  3251  0034A2  5100               	movf	??_doApplicationOneSecondWork& (0+255),w,b
  3252  0034A4  0101               	movlb	1	; () banked
  3253  0034A6  2523               	addwf	(??_doApplicationOneSecondWork+35)& (0+255),w,b
  3254  0034A8  0100               	movlb	0	; () banked
  3255  0034AA  0100               	movlb	0	; () banked
  3256  0034AC  6FD7               	movwf	_current_iostate& (0+255),b
  3257  0034AE  0101               	movlb	1	; () banked
  3258  0034B0  0E00               	movlw	0
  3259  0034B2  0101               	movlb	1	; () banked
  3260  0034B4  2124               	addwfc	(??_doApplicationOneSecondWork+36)& (0+255),w,b
  3261  0034B6  0100               	movlb	0	; () banked
  3262  0034B8  6FD8               	movwf	(_current_iostate+1)& (0+255),b
  3263                           
  3264                           ; BSR set to: 0
  3265  0034BA  0012               	return	
  3266  0034BC                     __end_of_doApplicationOneSecondWork:
  3267                           	opt stack 0
  3268                           tblptru	equ	0xFF8
  3269                           prodh	equ	0xFF4
  3270                           prodl	equ	0xFF3
  3271                           postinc0	equ	0xFEE
  3272                           wreg	equ	0xFE8
  3273                           postinc2	equ	0xFDE
  3274                           postdec2	equ	0xFDD
  3275                           fsr2h	equ	0xFDA
  3276                           fsr2l	equ	0xFD9
  3277                           status	equ	0xFD8
  3278                           
  3279 ;; *************** function _vscp_doOneSecondWork *****************
  3280 ;; Defined at:
  3281 ;;		line 524 in file "../../vscp_firmware/common/vscp_firmware.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;		None
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;		None
  3286 ;; Return value:  Size  Location     Type
  3287 ;;		None               void
  3288 ;; Registers used:
  3289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3290 ;; Tracked objects:
  3291 ;;		On entry : 0/0
  3292 ;;		On exit  : 0/0
  3293 ;;		Unchanged: 0/0
  3294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3295 ;;      Params:         0       0       0       0       0       0       0
  3296 ;;      Locals:         0       0       0       0       0       0       0
  3297 ;;      Temps:          1       0       0       0       0       0       0
  3298 ;;      Totals:         1       0       0       0       0       0       0
  3299 ;;Total ram usage:        1 bytes
  3300 ;; Hardware stack levels used:    1
  3301 ;; Hardware stack levels required when called:    8
  3302 ;; This function calls:
  3303 ;;		_vscp_getZone
  3304 ;;		_vscp_getSubzone
  3305 ;;		_vscp_sendHeartBeat
  3306 ;; This function is called by:
  3307 ;;		_main
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text3
  3312  00665A                     __ptext3:
  3313                           	opt stack 0
  3314  00665A                     _vscp_doOneSecondWork:
  3315                           	opt stack 21
  3316                           
  3317                           ;vscp_firmware.c: 526: ++vscp_second;
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;incstack = 0
  3321                           ;incstack = 0
  3322  00665A  0100               	movlb	0	; () banked
  3323  00665C  0100               	movlb	0	; () banked
  3324  00665E  2BF0               	incf	_vscp_second& (0+255),f,b
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;vscp_firmware.c: 528: if (vscp_second > 59) {
  3328  006660  0E3B               	movlw	59
  3329  006662  0100               	movlb	0	; () banked
  3330  006664  0100               	movlb	0	; () banked
  3331  006666  65F0               	cpfsgt	_vscp_second& (0+255),b
  3332  006668  D017               	goto	l9909
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;vscp_firmware.c: 529: vscp_second = 0;
  3336  00666A  6E34               	movwf	??_vscp_doOneSecondWork& (0+255),c
  3337  00666C  0E00               	movlw	0
  3338  00666E  0100               	movlb	0	; () banked
  3339  006670  0100               	movlb	0	; () banked
  3340  006672  6FF0               	movwf	_vscp_second& (0+255),b
  3341  006674  5034               	movf	??_vscp_doOneSecondWork& (0+255),w,c
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;vscp_firmware.c: 530: vscp_minute++;
  3345  006676  0100               	movlb	0	; () banked
  3346  006678  0100               	movlb	0	; () banked
  3347  00667A  2BEB               	incf	_vscp_minute& (0+255),f,b
  3348                           
  3349                           ; BSR set to: 0
  3350                           ;vscp_firmware.c: 533: if (0x03 == vscp_node_state) {
  3351  00667C  0100               	movlb	0	; () banked
  3352  00667E  0100               	movlb	0	; () banked
  3353  006680  51ED               	movf	_vscp_node_state& (0+255),w,b
  3354  006682  0A03               	xorlw	3
  3355  006684  A4D8               	btfss	status,2,c
  3356  006686  D008               	goto	l9909
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;vscp_firmware.c: 534: vscp_sendHeartBeat(vscp_getZone(),
  3360                           ;vscp_firmware.c: 535: vscp_getSubzone());
  3361  006688  EC16  F037         	call	_vscp_getZone	;wreg free
  3362  00668C  6E31               	movwf	?_vscp_sendHeartBeat,c
  3363  00668E  EC0F  F037         	call	_vscp_getSubzone	;wreg free
  3364  006692  6E32               	movwf	?_vscp_sendHeartBeat+1,c
  3365  006694  ECD7  F035         	call	_vscp_sendHeartBeat	;wreg free
  3366  006698                     l9909:
  3367                           
  3368                           ;vscp_firmware.c: 536: }
  3369                           ;vscp_firmware.c: 537: }
  3370                           ;vscp_firmware.c: 539: if (vscp_minute > 59) {
  3371  006698  0E3B               	movlw	59
  3372  00669A  0100               	movlb	0	; () banked
  3373  00669C  0100               	movlb	0	; () banked
  3374  00669E  65EB               	cpfsgt	_vscp_minute& (0+255),b
  3375  0066A0  D009               	goto	l9915
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;vscp_firmware.c: 540: vscp_minute = 0;
  3379  0066A2  6E34               	movwf	??_vscp_doOneSecondWork& (0+255),c
  3380  0066A4  0E00               	movlw	0
  3381  0066A6  0100               	movlb	0	; () banked
  3382  0066A8  0100               	movlb	0	; () banked
  3383  0066AA  6FEB               	movwf	_vscp_minute& (0+255),b
  3384  0066AC  5034               	movf	??_vscp_doOneSecondWork& (0+255),w,c
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;vscp_firmware.c: 541: vscp_hour++;
  3388  0066AE  0100               	movlb	0	; () banked
  3389  0066B0  0100               	movlb	0	; () banked
  3390  0066B2  2BE9               	incf	_vscp_hour& (0+255),f,b
  3391  0066B4                     l9915:
  3392                           
  3393                           ; BSR set to: 0
  3394                           ;vscp_firmware.c: 542: }
  3395                           ;vscp_firmware.c: 544: if (vscp_hour > 23) vscp_hour = 0;
  3396  0066B4  0E17               	movlw	23
  3397  0066B6  0100               	movlb	0	; () banked
  3398  0066B8  0100               	movlb	0	; () banked
  3399  0066BA  65E9               	cpfsgt	_vscp_hour& (0+255),b
  3400  0066BC  D006               	goto	l9919
  3401                           
  3402                           ; BSR set to: 0
  3403  0066BE  6E34               	movwf	??_vscp_doOneSecondWork& (0+255),c
  3404  0066C0  0E00               	movlw	0
  3405  0066C2  0100               	movlb	0	; () banked
  3406  0066C4  0100               	movlb	0	; () banked
  3407  0066C6  6FE9               	movwf	_vscp_hour& (0+255),b
  3408  0066C8  5034               	movf	??_vscp_doOneSecondWork& (0+255),w,c
  3409  0066CA                     l9919:
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;vscp_firmware.c: 548: if (0x03 == vscp_node_state) {
  3413  0066CA  0100               	movlb	0	; () banked
  3414  0066CC  0100               	movlb	0	; () banked
  3415  0066CE  51ED               	movf	_vscp_node_state& (0+255),w,b
  3416  0066D0  0A03               	xorlw	3
  3417  0066D2  A4D8               	btfss	status,2,c
  3418  0066D4  D00D               	goto	l1209
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;vscp_firmware.c: 549: vscp_guid_reset++;
  3422  0066D6  2A3A               	incf	_vscp_guid_reset,f,c
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;vscp_firmware.c: 550: if ((vscp_guid_reset & 0x0f) >= 2) {
  3426  0066D8  C03A  F034         	movff	_vscp_guid_reset,??_vscp_doOneSecondWork
  3427  0066DC  0E0F               	movlw	15
  3428  0066DE  1634               	andwf	??_vscp_doOneSecondWork,f,c
  3429  0066E0  0E02               	movlw	2
  3430  0066E2  5C34               	subwf	??_vscp_doOneSecondWork,w,c
  3431  0066E4  A0D8               	btfss	status,0,c
  3432  0066E6  D004               	goto	l1209
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;vscp_firmware.c: 551: vscp_guid_reset = 0;
  3436  0066E8  6E34               	movwf	??_vscp_doOneSecondWork& (0+255),c
  3437  0066EA  0E00               	movlw	0
  3438  0066EC  6E3A               	movwf	_vscp_guid_reset,c
  3439  0066EE  5034               	movf	??_vscp_doOneSecondWork& (0+255),w,c
  3440  0066F0                     l1209:
  3441                           
  3442                           ; BSR set to: 0
  3443  0066F0  0012               	return	
  3444  0066F2                     __end_of_vscp_doOneSecondWork:
  3445                           	opt stack 0
  3446                           tblptru	equ	0xFF8
  3447                           prodh	equ	0xFF4
  3448                           prodl	equ	0xFF3
  3449                           postinc0	equ	0xFEE
  3450                           wreg	equ	0xFE8
  3451                           postinc2	equ	0xFDE
  3452                           postdec2	equ	0xFDD
  3453                           fsr2h	equ	0xFDA
  3454                           fsr2l	equ	0xFD9
  3455                           status	equ	0xFD8
  3456                           
  3457 ;; *************** function _vscp_sendHeartBeat *****************
  3458 ;; Defined at:
  3459 ;;		line 378 in file "../../vscp_firmware/common/vscp_firmware.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;  zone            1   48[COMRAM] unsigned char 
  3462 ;;  subzone         1   49[COMRAM] unsigned char 
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;		None               void
  3467 ;; Registers used:
  3468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3474 ;;      Params:         2       0       0       0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0
  3476 ;;      Temps:          1       0       0       0       0       0       0
  3477 ;;      Totals:         3       0       0       0       0       0       0
  3478 ;;Total ram usage:        3 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    7
  3481 ;; This function calls:
  3482 ;;		_vscp_sendEvent
  3483 ;; This function is called by:
  3484 ;;		_vscp_doOneSecondWork
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text4
  3489  006BAE                     __ptext4:
  3490                           	opt stack 0
  3491  006BAE                     _vscp_sendHeartBeat:
  3492                           	opt stack 21
  3493                           
  3494                           ;vscp_firmware.c: 379: vscp_omsg.flags = 0x80 + 3;
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;incstack = 0
  3498                           ;incstack = 0
  3499  006BAE  6E33               	movwf	??_vscp_sendHeartBeat& (0+255),c
  3500  006BB0  0E83               	movlw	131
  3501  006BB2  6E3E               	movwf	_vscp_omsg,c
  3502  006BB4  5033               	movf	??_vscp_sendHeartBeat& (0+255),w,c
  3503                           
  3504                           ;vscp_firmware.c: 380: vscp_omsg.priority = 0x07;
  3505  006BB6  6E33               	movwf	??_vscp_sendHeartBeat& (0+255),c
  3506  006BB8  0E07               	movlw	7
  3507  006BBA  6E3F               	movwf	_vscp_omsg+1,c
  3508  006BBC  5033               	movf	??_vscp_sendHeartBeat& (0+255),w,c
  3509                           
  3510                           ;vscp_firmware.c: 381: vscp_omsg.vscp_class = 20;
  3511  006BBE  0E00               	movlw	0
  3512  006BC0  6E41               	movwf	_vscp_omsg+3,c
  3513  006BC2  0E14               	movlw	20
  3514  006BC4  6E40               	movwf	_vscp_omsg+2,c
  3515                           
  3516                           ;vscp_firmware.c: 382: vscp_omsg.vscp_type = 9;
  3517  006BC6  6E33               	movwf	??_vscp_sendHeartBeat& (0+255),c
  3518  006BC8  0E09               	movlw	9
  3519  006BCA  6E42               	movwf	_vscp_omsg+4,c
  3520  006BCC  5033               	movf	??_vscp_sendHeartBeat& (0+255),w,c
  3521                           
  3522                           ;vscp_firmware.c: 383: vscp_omsg.data[ 0 ] = 0;
  3523  006BCE  6E33               	movwf	??_vscp_sendHeartBeat& (0+255),c
  3524  006BD0  0E00               	movlw	0
  3525  006BD2  6E43               	movwf	_vscp_omsg+5,c
  3526  006BD4  5033               	movf	??_vscp_sendHeartBeat& (0+255),w,c
  3527                           
  3528                           ;vscp_firmware.c: 384: vscp_omsg.data[ 1 ] = zone;
  3529  006BD6  C031  F044         	movff	vscp_sendHeartBeat@zone,_vscp_omsg+6
  3530                           
  3531                           ;vscp_firmware.c: 385: vscp_omsg.data[ 2 ] = subzone;
  3532  006BDA  C032  F045         	movff	vscp_sendHeartBeat@subzone,_vscp_omsg+7
  3533                           
  3534                           ;vscp_firmware.c: 388: vscp_sendEvent();
  3535  006BDE  EC46  F035         	call	_vscp_sendEvent	;wreg free
  3536  006BE2  0012               	return	
  3537  006BE4                     __end_of_vscp_sendHeartBeat:
  3538                           	opt stack 0
  3539                           tblptru	equ	0xFF8
  3540                           prodh	equ	0xFF4
  3541                           prodl	equ	0xFF3
  3542                           postinc0	equ	0xFEE
  3543                           wreg	equ	0xFE8
  3544                           postinc2	equ	0xFDE
  3545                           postdec2	equ	0xFDD
  3546                           fsr2h	equ	0xFDA
  3547                           fsr2l	equ	0xFD9
  3548                           status	equ	0xFD8
  3549                           
  3550 ;; *************** function _vscp_getSubzone *****************
  3551 ;; Defined at:
  3552 ;;		line 986 in file "../main.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      unsigned char 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3566 ;;      Params:         0       0       0       0       0       0       0
  3567 ;;      Locals:         0       0       0       0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0       0       0
  3569 ;;      Totals:         0       0       0       0       0       0       0
  3570 ;;Total ram usage:        0 bytes
  3571 ;; Hardware stack levels used:    1
  3572 ;; Hardware stack levels required when called:    3
  3573 ;; This function calls:
  3574 ;;		_Read_b_eep
  3575 ;; This function is called by:
  3576 ;;		_vscp_doOneSecondWork
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text5
  3581  006E1E                     __ptext5:
  3582                           	opt stack 0
  3583  006E1E                     _vscp_getSubzone:
  3584                           	opt stack 25
  3585                           
  3586                           ;main.c: 987: return Read_b_eep(0x43 + 1);
  3587                           
  3588                           ;incstack = 0
  3589                           ;incstack = 0
  3590  006E1E  0E00               	movlw	0
  3591  006E20  6E17               	movwf	?_Read_b_eep+1,c
  3592  006E22  0E44               	movlw	68
  3593  006E24  6E16               	movwf	?_Read_b_eep,c
  3594  006E26  ECFD  F036         	call	_Read_b_eep	;wreg free
  3595  006E2A  0012               	return	
  3596  006E2C                     __end_of_vscp_getSubzone:
  3597                           	opt stack 0
  3598                           tblptru	equ	0xFF8
  3599                           prodh	equ	0xFF4
  3600                           prodl	equ	0xFF3
  3601                           postinc0	equ	0xFEE
  3602                           wreg	equ	0xFE8
  3603                           postinc2	equ	0xFDE
  3604                           postdec2	equ	0xFDD
  3605                           fsr2h	equ	0xFDA
  3606                           fsr2l	equ	0xFD9
  3607                           status	equ	0xFD8
  3608                           
  3609 ;; *************** function _vscp_getZone *****************
  3610 ;; Defined at:
  3611 ;;		line 977 in file "../main.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;		None
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      unsigned char 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, cstack
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3625 ;;      Params:         0       0       0       0       0       0       0
  3626 ;;      Locals:         0       0       0       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0       0       0
  3628 ;;      Totals:         0       0       0       0       0       0       0
  3629 ;;Total ram usage:        0 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    3
  3632 ;; This function calls:
  3633 ;;		_Read_b_eep
  3634 ;; This function is called by:
  3635 ;;		_vscp_doOneSecondWork
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text6
  3640  006E2C                     __ptext6:
  3641                           	opt stack 0
  3642  006E2C                     _vscp_getZone:
  3643                           	opt stack 25
  3644                           
  3645                           ;main.c: 978: return Read_b_eep(0x43 + 0);
  3646                           
  3647                           ;incstack = 0
  3648                           ;incstack = 0
  3649  006E2C  0E00               	movlw	0
  3650  006E2E  6E17               	movwf	?_Read_b_eep+1,c
  3651  006E30  0E43               	movlw	67
  3652  006E32  6E16               	movwf	?_Read_b_eep,c
  3653  006E34  ECFD  F036         	call	_Read_b_eep	;wreg free
  3654  006E38  0012               	return	
  3655  006E3A                     __end_of_vscp_getZone:
  3656                           	opt stack 0
  3657                           tblptru	equ	0xFF8
  3658                           prodh	equ	0xFF4
  3659                           prodl	equ	0xFF3
  3660                           postinc0	equ	0xFEE
  3661                           wreg	equ	0xFE8
  3662                           postinc2	equ	0xFDE
  3663                           postdec2	equ	0xFDD
  3664                           fsr2h	equ	0xFDA
  3665                           fsr2l	equ	0xFD9
  3666                           status	equ	0xFD8
  3667                           
  3668 ;; *************** function _vscp_error *****************
  3669 ;; Defined at:
  3670 ;;		line 193 in file "../../vscp_firmware/common/vscp_firmware.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;		None               void
  3677 ;; Registers used:
  3678 ;;		status,2
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3684 ;;      Params:         0       0       0       0       0       0       0
  3685 ;;      Locals:         0       0       0       0       0       0       0
  3686 ;;      Temps:          1       0       0       0       0       0       0
  3687 ;;      Totals:         1       0       0       0       0       0       0
  3688 ;;Total ram usage:        1 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:    2
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_main
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text7
  3699  006E56                     __ptext7:
  3700                           	opt stack 0
  3701  006E56                     _vscp_error:
  3702                           	opt stack 27
  3703                           
  3704                           ;vscp_firmware.c: 194: vscp_initledfunc = 0x00;
  3705                           
  3706                           ;incstack = 0
  3707                           ;incstack = 0
  3708  006E56  6E16               	movwf	??_vscp_error& (0+255),c
  3709  006E58  0E00               	movlw	0
  3710  006E5A  6E3B               	movwf	_vscp_initledfunc,c
  3711  006E5C  5016               	movf	??_vscp_error& (0+255),w,c
  3712  006E5E  0012               	return	
  3713  006E60                     __end_of_vscp_error:
  3714                           	opt stack 0
  3715                           tblptru	equ	0xFF8
  3716                           prodh	equ	0xFF4
  3717                           prodl	equ	0xFF3
  3718                           postinc0	equ	0xFEE
  3719                           wreg	equ	0xFE8
  3720                           postinc2	equ	0xFDE
  3721                           postdec2	equ	0xFDD
  3722                           fsr2h	equ	0xFDA
  3723                           fsr2l	equ	0xFD9
  3724                           status	equ	0xFD8
  3725                           
  3726 ;; *************** function _doDM *****************
  3727 ;; Defined at:
  3728 ;;		line 2014 in file "../main.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;		None
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  class_mask      2   82[BANK0 ] unsigned short 
  3733 ;;  class_filter    2   80[BANK0 ] unsigned short 
  3734 ;;  i               1   92[BANK0 ] unsigned char 
  3735 ;;  dmflags         1   91[BANK0 ] unsigned char 
  3736 ;;  type_mask       1   85[BANK0 ] unsigned char 
  3737 ;;  type_filter     1   84[BANK0 ] unsigned char 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;		None               void
  3740 ;; Registers used:
  3741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3747 ;;      Params:         0       0       0       0       0       0       0
  3748 ;;      Locals:         0      13       0       0       0       0       0
  3749 ;;      Temps:          0       6       0       0       0       0       0
  3750 ;;      Totals:         0      19       0       0       0       0       0
  3751 ;;Total ram usage:       19 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    8
  3754 ;; This function calls:
  3755 ;;		_Read_b_eep
  3756 ;;		_doActionOff
  3757 ;;		_doActionOn
  3758 ;;		_doActionPulse
  3759 ;;		_doActionStatus
  3760 ;;		_doActionToggle
  3761 ;; This function is called by:
  3762 ;;		_main
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           	psect	text8
  3767  00403E                     __ptext8:
  3768                           	opt stack 0
  3769  00403E                     _doDM:
  3770                           	opt stack 21
  3771                           
  3772                           ;main.c: 2015: unsigned char i;
  3773                           ;main.c: 2016: unsigned char dmflags;
  3774                           ;main.c: 2017: unsigned short class_filter;
  3775                           ;main.c: 2018: unsigned short class_mask;
  3776                           ;main.c: 2019: unsigned char type_filter;
  3777                           ;main.c: 2020: unsigned char type_mask;
  3778                           ;main.c: 2023: if ( 0 == vscp_imsg.vscp_class ) return;
  3779                           
  3780                           ;incstack = 0
  3781                           ;incstack = 0
  3782  00403E  0100               	movlb	0	; () banked
  3783  004040  0100               	movlb	0	; () banked
  3784  004042  51F4               	movf	(_vscp_imsg+3)& (0+255),w,b
  3785  004044  11F3               	iorwf	(_vscp_imsg+2)& (0+255),w,b
  3786  004046  B4D8               	btfsc	status,2,c
  3787  004048  D23F               	goto	l744
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;main.c: 2025: for (i = 0; i < 8; i++) {
  3791                           
  3792                           ; BSR set to: 0
  3793                           
  3794                           ; BSR set to: 0
  3795  00404A  0100               	movlb	0	; () banked
  3796  00404C  6FAA               	movwf	??_doDM& (0+255),b
  3797  00404E  0E00               	movlw	0
  3798  004050  0100               	movlb	0	; () banked
  3799  004052  0100               	movlb	0	; () banked
  3800  004054  6FBC               	movwf	doDM@i& (0+255),b
  3801  004056  0100               	movlb	0	; () banked
  3802  004058  51AA               	movf	??_doDM& (0+255),w,b
  3803  00405A  D231               	goto	L30
  3804  00405C                     l9841:
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;main.c: 2028: dmflags = Read_b_eep(0x43 + 46 + 40 + 0 + 1 + (8 * i));
  3808  00405C  0100               	movlb	0	; () banked
  3809  00405E  0100               	movlb	0	; () banked
  3810  004060  51BC               	movf	doDM@i& (0+255),w,b
  3811  004062  0100               	movlb	0	; () banked
  3812  004064  6FAA               	movwf	??_doDM& (0+255),b
  3813  004066  6BAB               	clrf	(??_doDM+1)& (0+255),b
  3814  004068  0100               	movlb	0	; () banked
  3815  00406A  90D8               	bcf	status,0,c
  3816  00406C  37AA               	rlcf	??_doDM& (0+255),f,b
  3817  00406E  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3818  004070  0100               	movlb	0	; () banked
  3819  004072  90D8               	bcf	status,0,c
  3820  004074  37AA               	rlcf	??_doDM& (0+255),f,b
  3821  004076  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3822  004078  0100               	movlb	0	; () banked
  3823  00407A  90D8               	bcf	status,0,c
  3824  00407C  37AA               	rlcf	??_doDM& (0+255),f,b
  3825  00407E  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3826  004080  0E9A               	movlw	154
  3827  004082  0100               	movlb	0	; () banked
  3828  004084  25AA               	addwf	??_doDM& (0+255),w,b
  3829  004086  6E16               	movwf	?_Read_b_eep,c
  3830  004088  0E00               	movlw	0
  3831  00408A  0100               	movlb	0	; () banked
  3832  00408C  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  3833  00408E  6E17               	movwf	?_Read_b_eep+1,c
  3834  004090  ECFD  F036         	call	_Read_b_eep	;wreg free
  3835  004094  0100               	movlb	0	; () banked
  3836  004096  0100               	movlb	0	; () banked
  3837  004098  6FBB               	movwf	doDM@dmflags& (0+255),b
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;main.c: 2031: if ( dmflags & 0x80 ) {
  3841  00409A  0100               	movlb	0	; () banked
  3842  00409C  0100               	movlb	0	; () banked
  3843  00409E  AFBB               	btfss	doDM@dmflags& (0+255),7,b
  3844  0040A0  D20B               	goto	l9893
  3845                           
  3846                           ; BSR set to: 0
  3847                           ;main.c: 2034: if ( ( dmflags & 0x40 ) &&
  3848                           ;main.c: 2035: ( vscp_imsg.oaddr != Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i)) ) ) {
  3849  0040A2  0100               	movlb	0	; () banked
  3850  0040A4  0100               	movlb	0	; () banked
  3851  0040A6  ADBB               	btfss	doDM@dmflags& (0+255),6,b
  3852  0040A8  D021               	goto	l748
  3853                           
  3854                           ; BSR set to: 0
  3855  0040AA  0100               	movlb	0	; () banked
  3856  0040AC  0100               	movlb	0	; () banked
  3857  0040AE  51BC               	movf	doDM@i& (0+255),w,b
  3858  0040B0  0100               	movlb	0	; () banked
  3859  0040B2  6FAA               	movwf	??_doDM& (0+255),b
  3860  0040B4  6BAB               	clrf	(??_doDM+1)& (0+255),b
  3861  0040B6  0100               	movlb	0	; () banked
  3862  0040B8  90D8               	bcf	status,0,c
  3863  0040BA  37AA               	rlcf	??_doDM& (0+255),f,b
  3864  0040BC  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3865  0040BE  0100               	movlb	0	; () banked
  3866  0040C0  90D8               	bcf	status,0,c
  3867  0040C2  37AA               	rlcf	??_doDM& (0+255),f,b
  3868  0040C4  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3869  0040C6  0100               	movlb	0	; () banked
  3870  0040C8  90D8               	bcf	status,0,c
  3871  0040CA  37AA               	rlcf	??_doDM& (0+255),f,b
  3872  0040CC  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3873  0040CE  0E99               	movlw	153
  3874  0040D0  0100               	movlb	0	; () banked
  3875  0040D2  25AA               	addwf	??_doDM& (0+255),w,b
  3876  0040D4  6E16               	movwf	?_Read_b_eep,c
  3877  0040D6  0E00               	movlw	0
  3878  0040D8  0100               	movlb	0	; () banked
  3879  0040DA  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  3880  0040DC  6E17               	movwf	?_Read_b_eep+1,c
  3881  0040DE  ECFD  F036         	call	_Read_b_eep	;wreg free
  3882  0040E2  0100               	movlb	0	; () banked
  3883  0040E4  0100               	movlb	0	; () banked
  3884  0040E6  19F6               	xorwf	(_vscp_imsg+5)& (0+255),w,b
  3885  0040E8  A4D8               	btfss	status,2,c
  3886  0040EA  D1E6               	goto	l9893
  3887  0040EC                     l748:
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;main.c: 2037: }
  3891                           ;main.c: 2040: if ( dmflags & 0x10 ) {
  3892  0040EC  0100               	movlb	0	; () banked
  3893  0040EE  0100               	movlb	0	; () banked
  3894  0040F0  A9BB               	btfss	doDM@dmflags& (0+255),4,b
  3895  0040F2  D010               	goto	l750
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;main.c: 2041: if ( 255 != vscp_imsg.data[ 1 ] ) {
  3899  0040F4  0100               	movlb	0	; () banked
  3900  0040F6  0100               	movlb	0	; () banked
  3901  0040F8  29F8               	incf	(_vscp_imsg+7)& (0+255),w,b
  3902  0040FA  B4D8               	btfsc	status,2,c
  3903  0040FC  D00B               	goto	l750
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;main.c: 2042: if ( vscp_imsg.data[ 1 ] != Read_b_eep(0x43 + 0) ) {
  3907  0040FE  0E00               	movlw	0
  3908  004100  6E17               	movwf	?_Read_b_eep+1,c
  3909  004102  0E43               	movlw	67
  3910  004104  6E16               	movwf	?_Read_b_eep,c
  3911  004106  ECFD  F036         	call	_Read_b_eep	;wreg free
  3912  00410A  0100               	movlb	0	; () banked
  3913  00410C  0100               	movlb	0	; () banked
  3914  00410E  19F8               	xorwf	(_vscp_imsg+7)& (0+255),w,b
  3915  004110  A4D8               	btfss	status,2,c
  3916  004112  D1D2               	goto	l9893
  3917  004114                     l750:
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;main.c: 2044: }
  3921                           ;main.c: 2045: }
  3922                           ;main.c: 2046: }
  3923                           ;main.c: 2049: if ( dmflags & 0x08 ) {
  3924  004114  0100               	movlb	0	; () banked
  3925  004116  0100               	movlb	0	; () banked
  3926  004118  A7BB               	btfss	doDM@dmflags& (0+255),3,b
  3927  00411A  D010               	goto	l9863
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;main.c: 2050: if ( 255 != vscp_imsg.data[ 1 ] ) {
  3931  00411C  0100               	movlb	0	; () banked
  3932  00411E  0100               	movlb	0	; () banked
  3933  004120  29F8               	incf	(_vscp_imsg+7)& (0+255),w,b
  3934  004122  B4D8               	btfsc	status,2,c
  3935  004124  D00B               	goto	l9863
  3936                           
  3937                           ; BSR set to: 0
  3938                           ;main.c: 2051: if ( vscp_imsg.data[ 1 ] != Read_b_eep(0x43 + 1) ) {
  3939  004126  0E00               	movlw	0
  3940  004128  6E17               	movwf	?_Read_b_eep+1,c
  3941  00412A  0E44               	movlw	68
  3942  00412C  6E16               	movwf	?_Read_b_eep,c
  3943  00412E  ECFD  F036         	call	_Read_b_eep	;wreg free
  3944  004132  0100               	movlb	0	; () banked
  3945  004134  0100               	movlb	0	; () banked
  3946  004136  19F8               	xorwf	(_vscp_imsg+7)& (0+255),w,b
  3947  004138  A4D8               	btfss	status,2,c
  3948  00413A  D1BE               	goto	l9893
  3949  00413C                     l9863:
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;main.c: 2053: }
  3953                           ;main.c: 2054: }
  3954                           ;main.c: 2055: }
  3955                           ;main.c: 2057: class_filter = ( dmflags & 0x01)*256 +
  3956                           ;main.c: 2058: Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 3);
  3957  00413C  0100               	movlb	0	; () banked
  3958  00413E  0100               	movlb	0	; () banked
  3959  004140  51BC               	movf	doDM@i& (0+255),w,b
  3960  004142  0100               	movlb	0	; () banked
  3961  004144  6FAA               	movwf	??_doDM& (0+255),b
  3962  004146  6BAB               	clrf	(??_doDM+1)& (0+255),b
  3963  004148  0100               	movlb	0	; () banked
  3964  00414A  90D8               	bcf	status,0,c
  3965  00414C  37AA               	rlcf	??_doDM& (0+255),f,b
  3966  00414E  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3967  004150  0100               	movlb	0	; () banked
  3968  004152  90D8               	bcf	status,0,c
  3969  004154  37AA               	rlcf	??_doDM& (0+255),f,b
  3970  004156  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3971  004158  0100               	movlb	0	; () banked
  3972  00415A  90D8               	bcf	status,0,c
  3973  00415C  37AA               	rlcf	??_doDM& (0+255),f,b
  3974  00415E  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  3975  004160  0E9C               	movlw	156
  3976  004162  0100               	movlb	0	; () banked
  3977  004164  25AA               	addwf	??_doDM& (0+255),w,b
  3978  004166  6E16               	movwf	?_Read_b_eep,c
  3979  004168  0E00               	movlw	0
  3980  00416A  0100               	movlb	0	; () banked
  3981  00416C  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  3982  00416E  6E17               	movwf	?_Read_b_eep+1,c
  3983  004170  ECFD  F036         	call	_Read_b_eep	;wreg free
  3984  004174  0100               	movlb	0	; () banked
  3985  004176  6FAC               	movwf	(??_doDM+2)& (0+255),b
  3986  004178  C0BB  F0AD         	movff	doDM@dmflags,??_doDM+3
  3987  00417C  0E01               	movlw	1
  3988  00417E  0100               	movlb	0	; () banked
  3989  004180  17AD               	andwf	(??_doDM+3)& (0+255),f,b
  3990  004182  0100               	movlb	0	; () banked
  3991  004184  51AD               	movf	(??_doDM+3)& (0+255),w,b
  3992  004186  0100               	movlb	0	; () banked
  3993  004188  6FAF               	movwf	(??_doDM+5)& (0+255),b
  3994  00418A  6BAE               	clrf	(??_doDM+4)& (0+255),b
  3995  00418C  0100               	movlb	0	; () banked
  3996  00418E  51AC               	movf	(??_doDM+2)& (0+255),w,b
  3997  004190  0100               	movlb	0	; () banked
  3998  004192  25AE               	addwf	(??_doDM+4)& (0+255),w,b
  3999  004194  0100               	movlb	0	; () banked
  4000  004196  0100               	movlb	0	; () banked
  4001  004198  6FB0               	movwf	doDM@class_filter& (0+255),b
  4002  00419A  0100               	movlb	0	; () banked
  4003  00419C  0E00               	movlw	0
  4004  00419E  0100               	movlb	0	; () banked
  4005  0041A0  21AF               	addwfc	(??_doDM+5)& (0+255),w,b
  4006  0041A2  0100               	movlb	0	; () banked
  4007  0041A4  6FB1               	movwf	(doDM@class_filter+1)& (0+255),b
  4008                           
  4009                           ;main.c: 2064: class_mask = ( dmflags & 0x02)*256 +
  4010                           ;main.c: 2065: Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 2);
  4011  0041A6  0100               	movlb	0	; () banked
  4012  0041A8  0100               	movlb	0	; () banked
  4013  0041AA  51BC               	movf	doDM@i& (0+255),w,b
  4014  0041AC  0100               	movlb	0	; () banked
  4015  0041AE  6FAA               	movwf	??_doDM& (0+255),b
  4016  0041B0  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4017  0041B2  0100               	movlb	0	; () banked
  4018  0041B4  90D8               	bcf	status,0,c
  4019  0041B6  37AA               	rlcf	??_doDM& (0+255),f,b
  4020  0041B8  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4021  0041BA  0100               	movlb	0	; () banked
  4022  0041BC  90D8               	bcf	status,0,c
  4023  0041BE  37AA               	rlcf	??_doDM& (0+255),f,b
  4024  0041C0  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4025  0041C2  0100               	movlb	0	; () banked
  4026  0041C4  90D8               	bcf	status,0,c
  4027  0041C6  37AA               	rlcf	??_doDM& (0+255),f,b
  4028  0041C8  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4029  0041CA  0E9B               	movlw	155
  4030  0041CC  0100               	movlb	0	; () banked
  4031  0041CE  25AA               	addwf	??_doDM& (0+255),w,b
  4032  0041D0  6E16               	movwf	?_Read_b_eep,c
  4033  0041D2  0E00               	movlw	0
  4034  0041D4  0100               	movlb	0	; () banked
  4035  0041D6  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4036  0041D8  6E17               	movwf	?_Read_b_eep+1,c
  4037  0041DA  ECFD  F036         	call	_Read_b_eep	;wreg free
  4038  0041DE  0100               	movlb	0	; () banked
  4039  0041E0  6FAC               	movwf	(??_doDM+2)& (0+255),b
  4040  0041E2  C0BB  F0AD         	movff	doDM@dmflags,??_doDM+3
  4041  0041E6  0E02               	movlw	2
  4042  0041E8  0100               	movlb	0	; () banked
  4043  0041EA  17AD               	andwf	(??_doDM+3)& (0+255),f,b
  4044  0041EC  0100               	movlb	0	; () banked
  4045  0041EE  51AD               	movf	(??_doDM+3)& (0+255),w,b
  4046  0041F0  0100               	movlb	0	; () banked
  4047  0041F2  6FAF               	movwf	(??_doDM+5)& (0+255),b
  4048  0041F4  6BAE               	clrf	(??_doDM+4)& (0+255),b
  4049  0041F6  0100               	movlb	0	; () banked
  4050  0041F8  51AC               	movf	(??_doDM+2)& (0+255),w,b
  4051  0041FA  0100               	movlb	0	; () banked
  4052  0041FC  25AE               	addwf	(??_doDM+4)& (0+255),w,b
  4053  0041FE  0100               	movlb	0	; () banked
  4054  004200  0100               	movlb	0	; () banked
  4055  004202  6FB2               	movwf	doDM@class_mask& (0+255),b
  4056  004204  0100               	movlb	0	; () banked
  4057  004206  0E00               	movlw	0
  4058  004208  0100               	movlb	0	; () banked
  4059  00420A  21AF               	addwfc	(??_doDM+5)& (0+255),w,b
  4060  00420C  0100               	movlb	0	; () banked
  4061  00420E  6FB3               	movwf	(doDM@class_mask+1)& (0+255),b
  4062                           
  4063                           ;main.c: 2071: type_filter = Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 5);
  4064  004210  0100               	movlb	0	; () banked
  4065  004212  0100               	movlb	0	; () banked
  4066  004214  51BC               	movf	doDM@i& (0+255),w,b
  4067  004216  0100               	movlb	0	; () banked
  4068  004218  6FAA               	movwf	??_doDM& (0+255),b
  4069  00421A  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4070  00421C  0100               	movlb	0	; () banked
  4071  00421E  90D8               	bcf	status,0,c
  4072  004220  37AA               	rlcf	??_doDM& (0+255),f,b
  4073  004222  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4074  004224  0100               	movlb	0	; () banked
  4075  004226  90D8               	bcf	status,0,c
  4076  004228  37AA               	rlcf	??_doDM& (0+255),f,b
  4077  00422A  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4078  00422C  0100               	movlb	0	; () banked
  4079  00422E  90D8               	bcf	status,0,c
  4080  004230  37AA               	rlcf	??_doDM& (0+255),f,b
  4081  004232  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4082  004234  0E9E               	movlw	158
  4083  004236  0100               	movlb	0	; () banked
  4084  004238  25AA               	addwf	??_doDM& (0+255),w,b
  4085  00423A  6E16               	movwf	?_Read_b_eep,c
  4086  00423C  0E00               	movlw	0
  4087  00423E  0100               	movlb	0	; () banked
  4088  004240  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4089  004242  6E17               	movwf	?_Read_b_eep+1,c
  4090  004244  ECFD  F036         	call	_Read_b_eep	;wreg free
  4091  004248  0100               	movlb	0	; () banked
  4092  00424A  0100               	movlb	0	; () banked
  4093  00424C  6FB4               	movwf	doDM@type_filter& (0+255),b
  4094                           
  4095                           ;main.c: 2077: type_mask = Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 4);
  4096  00424E  0100               	movlb	0	; () banked
  4097  004250  0100               	movlb	0	; () banked
  4098  004252  51BC               	movf	doDM@i& (0+255),w,b
  4099  004254  0100               	movlb	0	; () banked
  4100  004256  6FAA               	movwf	??_doDM& (0+255),b
  4101  004258  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4102  00425A  0100               	movlb	0	; () banked
  4103  00425C  90D8               	bcf	status,0,c
  4104  00425E  37AA               	rlcf	??_doDM& (0+255),f,b
  4105  004260  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4106  004262  0100               	movlb	0	; () banked
  4107  004264  90D8               	bcf	status,0,c
  4108  004266  37AA               	rlcf	??_doDM& (0+255),f,b
  4109  004268  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4110  00426A  0100               	movlb	0	; () banked
  4111  00426C  90D8               	bcf	status,0,c
  4112  00426E  37AA               	rlcf	??_doDM& (0+255),f,b
  4113  004270  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4114  004272  0E9D               	movlw	157
  4115  004274  0100               	movlb	0	; () banked
  4116  004276  25AA               	addwf	??_doDM& (0+255),w,b
  4117  004278  6E16               	movwf	?_Read_b_eep,c
  4118  00427A  0E00               	movlw	0
  4119  00427C  0100               	movlb	0	; () banked
  4120  00427E  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4121  004280  6E17               	movwf	?_Read_b_eep+1,c
  4122  004282  ECFD  F036         	call	_Read_b_eep	;wreg free
  4123  004286  0100               	movlb	0	; () banked
  4124  004288  0100               	movlb	0	; () banked
  4125  00428A  6FB5               	movwf	doDM@type_mask& (0+255),b
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;main.c: 2083: if ( !( ( class_filter ^ vscp_imsg.vscp_class ) & class_mask ) &&
  4129                           ;main.c: 2084: !( ( type_filter ^ vscp_imsg.vscp_type ) & type_mask ) ) {
  4130  00428C  0100               	movlb	0	; () banked
  4131  00428E  EE20  F0F3         	lfsr	2,_vscp_imsg+2
  4132  004292  CFDE F0AA          	movff	postinc2,??_doDM
  4133  004296  CFDD F0AB          	movff	postdec2,??_doDM+1
  4134  00429A  0100               	movlb	0	; () banked
  4135  00429C  0100               	movlb	0	; () banked
  4136  00429E  51B0               	movf	doDM@class_filter& (0+255),w,b
  4137  0042A0  0100               	movlb	0	; () banked
  4138  0042A2  1BAA               	xorwf	??_doDM& (0+255),f,b
  4139  0042A4  0100               	movlb	0	; () banked
  4140  0042A6  0100               	movlb	0	; () banked
  4141  0042A8  51B1               	movf	(doDM@class_filter+1)& (0+255),w,b
  4142  0042AA  0100               	movlb	0	; () banked
  4143  0042AC  1BAB               	xorwf	(??_doDM+1)& (0+255),f,b
  4144  0042AE  0100               	movlb	0	; () banked
  4145  0042B0  0100               	movlb	0	; () banked
  4146  0042B2  51B2               	movf	doDM@class_mask& (0+255),w,b
  4147  0042B4  0100               	movlb	0	; () banked
  4148  0042B6  17AA               	andwf	??_doDM& (0+255),f,b
  4149  0042B8  0100               	movlb	0	; () banked
  4150  0042BA  0100               	movlb	0	; () banked
  4151  0042BC  51B3               	movf	(doDM@class_mask+1)& (0+255),w,b
  4152  0042BE  0100               	movlb	0	; () banked
  4153  0042C0  17AB               	andwf	(??_doDM+1)& (0+255),f,b
  4154  0042C2  0100               	movlb	0	; () banked
  4155  0042C4  51AB               	movf	(??_doDM+1)& (0+255),w,b
  4156  0042C6  11AA               	iorwf	??_doDM& (0+255),w,b
  4157  0042C8  A4D8               	btfss	status,2,c
  4158  0042CA  D0F6               	goto	l9893
  4159                           
  4160                           ; BSR set to: 0
  4161  0042CC  0100               	movlb	0	; () banked
  4162  0042CE  0100               	movlb	0	; () banked
  4163  0042D0  51F5               	movf	(_vscp_imsg+4)& (0+255),w,b
  4164  0042D2  0100               	movlb	0	; () banked
  4165  0042D4  0100               	movlb	0	; () banked
  4166  0042D6  19B4               	xorwf	doDM@type_filter& (0+255),w,b
  4167  0042D8  0100               	movlb	0	; () banked
  4168  0042DA  0100               	movlb	0	; () banked
  4169  0042DC  15B5               	andwf	doDM@type_mask& (0+255),w,b
  4170  0042DE  0900               	iorlw	0
  4171  0042E0  B4D8               	btfsc	status,2,c
  4172  0042E2  D0BF               	goto	l9891
  4173  0042E4  D0E9               	goto	l9893
  4174  0042E6                     l9871:
  4175                           
  4176                           ;main.c: 2092: doActionOn( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4177  0042E6  0100               	movlb	0	; () banked
  4178  0042E8  0100               	movlb	0	; () banked
  4179  0042EA  51BC               	movf	doDM@i& (0+255),w,b
  4180  0042EC  0100               	movlb	0	; () banked
  4181  0042EE  6FAA               	movwf	??_doDM& (0+255),b
  4182  0042F0  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4183  0042F2  0100               	movlb	0	; () banked
  4184  0042F4  90D8               	bcf	status,0,c
  4185  0042F6  37AA               	rlcf	??_doDM& (0+255),f,b
  4186  0042F8  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4187  0042FA  0100               	movlb	0	; () banked
  4188  0042FC  90D8               	bcf	status,0,c
  4189  0042FE  37AA               	rlcf	??_doDM& (0+255),f,b
  4190  004300  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4191  004302  0100               	movlb	0	; () banked
  4192  004304  90D8               	bcf	status,0,c
  4193  004306  37AA               	rlcf	??_doDM& (0+255),f,b
  4194  004308  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4195  00430A  0EA0               	movlw	160
  4196  00430C  0100               	movlb	0	; () banked
  4197  00430E  25AA               	addwf	??_doDM& (0+255),w,b
  4198  004310  6E16               	movwf	?_Read_b_eep,c
  4199  004312  0E00               	movlw	0
  4200  004314  0100               	movlb	0	; () banked
  4201  004316  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4202  004318  6E17               	movwf	?_Read_b_eep+1,c
  4203  00431A  ECFD  F036         	call	_Read_b_eep	;wreg free
  4204  00431E  0100               	movlb	0	; () banked
  4205  004320  0100               	movlb	0	; () banked
  4206  004322  6FB6               	movwf	_doDM$2281& (0+255),b
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;main.c: 2092: doActionOn( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4210  004324  C0BB  F0A2         	movff	doDM@dmflags,?_doActionOn
  4211  004328  C0B6  F0A3         	movff	_doDM$2281,?_doActionOn+1
  4212  00432C  ECC7  F01D         	call	_doActionOn	;wreg free
  4213                           
  4214                           ;main.c: 2095: break;
  4215  004330  D0C3               	goto	l9893
  4216  004332                     l9875:
  4217                           
  4218                           ;main.c: 2098: doActionOff( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4219  004332  0100               	movlb	0	; () banked
  4220  004334  0100               	movlb	0	; () banked
  4221  004336  51BC               	movf	doDM@i& (0+255),w,b
  4222  004338  0100               	movlb	0	; () banked
  4223  00433A  6FAA               	movwf	??_doDM& (0+255),b
  4224  00433C  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4225  00433E  0100               	movlb	0	; () banked
  4226  004340  90D8               	bcf	status,0,c
  4227  004342  37AA               	rlcf	??_doDM& (0+255),f,b
  4228  004344  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4229  004346  0100               	movlb	0	; () banked
  4230  004348  90D8               	bcf	status,0,c
  4231  00434A  37AA               	rlcf	??_doDM& (0+255),f,b
  4232  00434C  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4233  00434E  0100               	movlb	0	; () banked
  4234  004350  90D8               	bcf	status,0,c
  4235  004352  37AA               	rlcf	??_doDM& (0+255),f,b
  4236  004354  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4237  004356  0EA0               	movlw	160
  4238  004358  0100               	movlb	0	; () banked
  4239  00435A  25AA               	addwf	??_doDM& (0+255),w,b
  4240  00435C  6E16               	movwf	?_Read_b_eep,c
  4241  00435E  0E00               	movlw	0
  4242  004360  0100               	movlb	0	; () banked
  4243  004362  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4244  004364  6E17               	movwf	?_Read_b_eep+1,c
  4245  004366  ECFD  F036         	call	_Read_b_eep	;wreg free
  4246  00436A  0100               	movlb	0	; () banked
  4247  00436C  0100               	movlb	0	; () banked
  4248  00436E  6FB7               	movwf	_doDM$2282& (0+255),b
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;main.c: 2098: doActionOff( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4252  004370  C0BB  F0A2         	movff	doDM@dmflags,?_doActionOff
  4253  004374  C0B7  F0A3         	movff	_doDM$2282,?_doActionOff+1
  4254  004378  ECE5  F030         	call	_doActionOff	;wreg free
  4255                           
  4256                           ;main.c: 2101: break;
  4257  00437C  D09D               	goto	l9893
  4258  00437E                     l9879:
  4259                           
  4260                           ;main.c: 2104: doActionPulse( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4261  00437E  0100               	movlb	0	; () banked
  4262  004380  0100               	movlb	0	; () banked
  4263  004382  51BC               	movf	doDM@i& (0+255),w,b
  4264  004384  0100               	movlb	0	; () banked
  4265  004386  6FAA               	movwf	??_doDM& (0+255),b
  4266  004388  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4267  00438A  0100               	movlb	0	; () banked
  4268  00438C  90D8               	bcf	status,0,c
  4269  00438E  37AA               	rlcf	??_doDM& (0+255),f,b
  4270  004390  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4271  004392  0100               	movlb	0	; () banked
  4272  004394  90D8               	bcf	status,0,c
  4273  004396  37AA               	rlcf	??_doDM& (0+255),f,b
  4274  004398  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4275  00439A  0100               	movlb	0	; () banked
  4276  00439C  90D8               	bcf	status,0,c
  4277  00439E  37AA               	rlcf	??_doDM& (0+255),f,b
  4278  0043A0  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4279  0043A2  0EA0               	movlw	160
  4280  0043A4  0100               	movlb	0	; () banked
  4281  0043A6  25AA               	addwf	??_doDM& (0+255),w,b
  4282  0043A8  6E16               	movwf	?_Read_b_eep,c
  4283  0043AA  0E00               	movlw	0
  4284  0043AC  0100               	movlb	0	; () banked
  4285  0043AE  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4286  0043B0  6E17               	movwf	?_Read_b_eep+1,c
  4287  0043B2  ECFD  F036         	call	_Read_b_eep	;wreg free
  4288  0043B6  0100               	movlb	0	; () banked
  4289  0043B8  0100               	movlb	0	; () banked
  4290  0043BA  6FB8               	movwf	_doDM$2283& (0+255),b
  4291                           
  4292                           ;main.c: 2104: doActionPulse( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4293  0043BC  C0BB  F018         	movff	doDM@dmflags,?_doActionPulse
  4294  0043C0  C0B8  F019         	movff	_doDM$2283,?_doActionPulse+1
  4295  0043C4  EC3D  F024         	call	_doActionPulse	;wreg free
  4296                           
  4297                           ;main.c: 2107: break;
  4298  0043C8  D077               	goto	l9893
  4299  0043CA                     l9881:
  4300                           
  4301                           ;main.c: 2110: doActionStatus( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4302  0043CA  0100               	movlb	0	; () banked
  4303  0043CC  0100               	movlb	0	; () banked
  4304  0043CE  51BC               	movf	doDM@i& (0+255),w,b
  4305  0043D0  0100               	movlb	0	; () banked
  4306  0043D2  6FAA               	movwf	??_doDM& (0+255),b
  4307  0043D4  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4308  0043D6  0100               	movlb	0	; () banked
  4309  0043D8  90D8               	bcf	status,0,c
  4310  0043DA  37AA               	rlcf	??_doDM& (0+255),f,b
  4311  0043DC  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4312  0043DE  0100               	movlb	0	; () banked
  4313  0043E0  90D8               	bcf	status,0,c
  4314  0043E2  37AA               	rlcf	??_doDM& (0+255),f,b
  4315  0043E4  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4316  0043E6  0100               	movlb	0	; () banked
  4317  0043E8  90D8               	bcf	status,0,c
  4318  0043EA  37AA               	rlcf	??_doDM& (0+255),f,b
  4319  0043EC  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4320  0043EE  0EA0               	movlw	160
  4321  0043F0  0100               	movlb	0	; () banked
  4322  0043F2  25AA               	addwf	??_doDM& (0+255),w,b
  4323  0043F4  6E16               	movwf	?_Read_b_eep,c
  4324  0043F6  0E00               	movlw	0
  4325  0043F8  0100               	movlb	0	; () banked
  4326  0043FA  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4327  0043FC  6E17               	movwf	?_Read_b_eep+1,c
  4328  0043FE  ECFD  F036         	call	_Read_b_eep	;wreg free
  4329  004402  0100               	movlb	0	; () banked
  4330  004404  0100               	movlb	0	; () banked
  4331  004406  6FB9               	movwf	_doDM$2284& (0+255),b
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;main.c: 2110: doActionStatus( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4335  004408  C0BB  F0A2         	movff	doDM@dmflags,?_doActionStatus
  4336  00440C  C0B9  F0A3         	movff	_doDM$2284,?_doActionStatus+1
  4337  004410  EC0A  F02A         	call	_doActionStatus	;wreg free
  4338                           
  4339                           ;main.c: 2113: break;
  4340  004414  D051               	goto	l9893
  4341  004416                     l9885:
  4342                           
  4343                           ;main.c: 2121: doActionToggle( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4344  004416  0100               	movlb	0	; () banked
  4345  004418  0100               	movlb	0	; () banked
  4346  00441A  51BC               	movf	doDM@i& (0+255),w,b
  4347  00441C  0100               	movlb	0	; () banked
  4348  00441E  6FAA               	movwf	??_doDM& (0+255),b
  4349  004420  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4350  004422  0100               	movlb	0	; () banked
  4351  004424  90D8               	bcf	status,0,c
  4352  004426  37AA               	rlcf	??_doDM& (0+255),f,b
  4353  004428  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4354  00442A  0100               	movlb	0	; () banked
  4355  00442C  90D8               	bcf	status,0,c
  4356  00442E  37AA               	rlcf	??_doDM& (0+255),f,b
  4357  004430  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4358  004432  0100               	movlb	0	; () banked
  4359  004434  90D8               	bcf	status,0,c
  4360  004436  37AA               	rlcf	??_doDM& (0+255),f,b
  4361  004438  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4362  00443A  0EA0               	movlw	160
  4363  00443C  0100               	movlb	0	; () banked
  4364  00443E  25AA               	addwf	??_doDM& (0+255),w,b
  4365  004440  6E16               	movwf	?_Read_b_eep,c
  4366  004442  0E00               	movlw	0
  4367  004444  0100               	movlb	0	; () banked
  4368  004446  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4369  004448  6E17               	movwf	?_Read_b_eep+1,c
  4370  00444A  ECFD  F036         	call	_Read_b_eep	;wreg free
  4371  00444E  0100               	movlb	0	; () banked
  4372  004450  0100               	movlb	0	; () banked
  4373  004452  6FBA               	movwf	_doDM$2285& (0+255),b
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;main.c: 2121: doActionToggle( dmflags, Read_b_eep(0x43 + 46 + 40 + 0 + (8 * i) + 7) );
  4377  004454  C0BB  F0A2         	movff	doDM@dmflags,?_doActionToggle
  4378  004458  C0BA  F0A3         	movff	_doDM$2285,?_doActionToggle+1
  4379  00445C  EC23  F029         	call	_doActionToggle	;wreg free
  4380                           
  4381                           ;main.c: 2124: break;
  4382  004460  D02B               	goto	l9893
  4383  004462                     l9891:
  4384  004462  0100               	movlb	0	; () banked
  4385  004464  0100               	movlb	0	; () banked
  4386  004466  51BC               	movf	doDM@i& (0+255),w,b
  4387  004468  0100               	movlb	0	; () banked
  4388  00446A  6FAA               	movwf	??_doDM& (0+255),b
  4389  00446C  6BAB               	clrf	(??_doDM+1)& (0+255),b
  4390  00446E  0100               	movlb	0	; () banked
  4391  004470  90D8               	bcf	status,0,c
  4392  004472  37AA               	rlcf	??_doDM& (0+255),f,b
  4393  004474  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4394  004476  0100               	movlb	0	; () banked
  4395  004478  90D8               	bcf	status,0,c
  4396  00447A  37AA               	rlcf	??_doDM& (0+255),f,b
  4397  00447C  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4398  00447E  0100               	movlb	0	; () banked
  4399  004480  90D8               	bcf	status,0,c
  4400  004482  37AA               	rlcf	??_doDM& (0+255),f,b
  4401  004484  37AB               	rlcf	(??_doDM+1)& (0+255),f,b
  4402  004486  0E9F               	movlw	159
  4403  004488  0100               	movlb	0	; () banked
  4404  00448A  25AA               	addwf	??_doDM& (0+255),w,b
  4405  00448C  6E16               	movwf	?_Read_b_eep,c
  4406  00448E  0E00               	movlw	0
  4407  004490  0100               	movlb	0	; () banked
  4408  004492  21AB               	addwfc	(??_doDM+1)& (0+255),w,b
  4409  004494  6E17               	movwf	?_Read_b_eep+1,c
  4410  004496  ECFD  F036         	call	_Read_b_eep	;wreg free
  4411                           
  4412                           ; Switch size 1, requested type "space"
  4413                           ; Number of cases is 5, Range of values is 1 to 6
  4414                           ; switch strategies available:
  4415                           ; Name         Instructions Cycles
  4416                           ; simple_byte           16     9 (average)
  4417                           ;	Chosen strategy is simple_byte
  4418  00449A  0A01               	xorlw	1	; case 1
  4419  00449C  B4D8               	btfsc	status,2,c
  4420  00449E  D723               	goto	l9871
  4421  0044A0  0A03               	xorlw	3	; case 2
  4422  0044A2  B4D8               	btfsc	status,2,c
  4423  0044A4  D746               	goto	l9875
  4424  0044A6  0A01               	xorlw	1	; case 3
  4425  0044A8  B4D8               	btfsc	status,2,c
  4426  0044AA  D769               	goto	l9879
  4427  0044AC  0A06               	xorlw	6	; case 5
  4428  0044AE  B4D8               	btfsc	status,2,c
  4429  0044B0  D7B2               	goto	l9885
  4430  0044B2  0A03               	xorlw	3	; case 6
  4431  0044B4  B4D8               	btfsc	status,2,c
  4432  0044B6  D789               	goto	l9881
  4433  0044B8                     l9893:
  4434  0044B8  0100               	movlb	0	; () banked
  4435  0044BA  0100               	movlb	0	; () banked
  4436  0044BC  2BBC               	incf	doDM@i& (0+255),f,b
  4437  0044BE                     L30:
  4438                           
  4439                           ; BSR set to: 0
  4440  0044BE  0E07               	movlw	7
  4441  0044C0  0100               	movlb	0	; () banked
  4442  0044C2  0100               	movlb	0	; () banked
  4443  0044C4  65BC               	cpfsgt	doDM@i& (0+255),b
  4444  0044C6  D5CA               	goto	l9841
  4445  0044C8                     l744:
  4446                           
  4447                           ; BSR set to: 0
  4448  0044C8  0012               	return	
  4449  0044CA                     __end_of_doDM:
  4450                           	opt stack 0
  4451                           tblptru	equ	0xFF8
  4452                           prodh	equ	0xFF4
  4453                           prodl	equ	0xFF3
  4454                           postinc0	equ	0xFEE
  4455                           wreg	equ	0xFE8
  4456                           postinc2	equ	0xFDE
  4457                           postdec2	equ	0xFDD
  4458                           fsr2h	equ	0xFDA
  4459                           fsr2l	equ	0xFD9
  4460                           status	equ	0xFD8
  4461                           
  4462 ;; *************** function _doActionToggle *****************
  4463 ;; Defined at:
  4464 ;;		line 2636 in file "../main.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  dmflags         1   66[BANK0 ] unsigned char 
  4467 ;;  arg             1   67[BANK0 ] unsigned char 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;  i               1   72[BANK0 ] unsigned char 
  4470 ;;  bOn             1   71[BANK0 ] enum E15660
  4471 ;;  val             1   70[BANK0 ] unsigned char 
  4472 ;; Return value:  Size  Location     Type
  4473 ;;		None               void
  4474 ;; Registers used:
  4475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4481 ;;      Params:         0       2       0       0       0       0       0
  4482 ;;      Locals:         0       3       0       0       0       0       0
  4483 ;;      Temps:          0       2       0       0       0       0       0
  4484 ;;      Totals:         0       7       0       0       0       0       0
  4485 ;;Total ram usage:        7 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; Hardware stack levels required when called:    7
  4488 ;; This function calls:
  4489 ;;		_Read_b_eep
  4490 ;;		_SendInformationEvent
  4491 ;; This function is called by:
  4492 ;;		_doDM
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text9
  4497  005246                     __ptext9:
  4498                           	opt stack 0
  4499  005246                     _doActionToggle:
  4500                           	opt stack 21
  4501                           
  4502                           ;main.c: 2638: unsigned char i;
  4503                           ;main.c: 2639: unsigned char val;
  4504                           ;main.c: 2640: BOOL bOn = 0;
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;incstack = 0
  4508                           ;incstack = 0
  4509  005246  0100               	movlb	0	; () banked
  4510  005248  6FA4               	movwf	??_doActionToggle& (0+255),b
  4511  00524A  0E00               	movlw	0
  4512  00524C  0100               	movlb	0	; () banked
  4513  00524E  0100               	movlb	0	; () banked
  4514  005250  6FA7               	movwf	doActionToggle@bOn& (0+255),b
  4515  005252  0100               	movlb	0	; () banked
  4516  005254  51A4               	movf	??_doActionToggle& (0+255),w,b
  4517                           
  4518                           ;main.c: 2642: for ( i = 0; i < 8; i++ ) {
  4519  005256  0100               	movlb	0	; () banked
  4520  005258  6FA4               	movwf	??_doActionToggle& (0+255),b
  4521  00525A  0E00               	movlw	0
  4522  00525C  0100               	movlb	0	; () banked
  4523  00525E  0100               	movlb	0	; () banked
  4524  005260  6FA8               	movwf	doActionToggle@i& (0+255),b
  4525  005262  0100               	movlb	0	; () banked
  4526  005264  51A4               	movf	??_doActionToggle& (0+255),w,b
  4527  005266  D0D0               	goto	L50
  4528  005268                     l11091:
  4529                           
  4530                           ; BSR set to: 0
  4531                           ;main.c: 2645: if ( !( arg & (1 << i) ) ) continue;
  4532  005268  C0A8  F0A4         	movff	doActionToggle@i,??_doActionToggle
  4533  00526C  0E01               	movlw	1
  4534  00526E  0100               	movlb	0	; () banked
  4535  005270  6FA5               	movwf	(??_doActionToggle+1)& (0+255),b
  4536  005272  0100               	movlb	0	; () banked
  4537  005274  2BA4               	incf	??_doActionToggle& (0+255),f,b
  4538  005276  D003               	goto	u13624
  4539  005278                     u13625:
  4540  005278  0100               	movlb	0	; () banked
  4541  00527A  90D8               	bcf	status,0,c
  4542  00527C  37A5               	rlcf	(??_doActionToggle+1)& (0+255),f,b
  4543  00527E                     u13624:
  4544  00527E  0100               	movlb	0	; () banked
  4545  005280  2FA4               	decfsz	??_doActionToggle& (0+255),f,b
  4546  005282  D7FA               	goto	u13625
  4547  005284  0100               	movlb	0	; () banked
  4548  005286  51A5               	movf	(??_doActionToggle+1)& (0+255),w,b
  4549  005288  0100               	movlb	0	; () banked
  4550  00528A  0100               	movlb	0	; () banked
  4551  00528C  15A3               	andwf	doActionToggle@arg& (0+255),w,b
  4552  00528E  0900               	iorlw	0
  4553  005290  B4D8               	btfsc	status,2,c
  4554  005292  D0B7               	goto	l11173
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;main.c: 2648: if ( dmflags & 0x08 ) {
  4558                           
  4559                           ; BSR set to: 0
  4560  005294  0100               	movlb	0	; () banked
  4561  005296  0100               	movlb	0	; () banked
  4562  005298  A7A2               	btfss	doActionToggle@dmflags& (0+255),3,b
  4563  00529A  D00F               	goto	l11099
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;main.c: 2649: if ( vscp_imsg.data[ 2 ] != Read_b_eep(0x43 + 3 + i) ) {
  4567  00529C  0E46               	movlw	70
  4568  00529E  0100               	movlb	0	; () banked
  4569  0052A0  0100               	movlb	0	; () banked
  4570  0052A2  25A8               	addwf	doActionToggle@i& (0+255),w,b
  4571  0052A4  6E16               	movwf	?_Read_b_eep,c
  4572  0052A6  6A17               	clrf	?_Read_b_eep+1,c
  4573  0052A8  0E00               	movlw	0
  4574  0052AA  2217               	addwfc	?_Read_b_eep+1,f,c
  4575  0052AC  ECFD  F036         	call	_Read_b_eep	;wreg free
  4576  0052B0  0100               	movlb	0	; () banked
  4577  0052B2  0100               	movlb	0	; () banked
  4578  0052B4  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  4579  0052B6  A4D8               	btfss	status,2,c
  4580  0052B8  D0A4               	goto	l11173
  4581  0052BA                     l11099:
  4582                           
  4583                           ; BSR set to: 0
  4584                           ;main.c: 2653: }
  4585                           ;main.c: 2654: }
  4586                           ;main.c: 2656: val = Read_b_eep(0x43 + 24 + i);
  4587  0052BA  0E5B               	movlw	91
  4588  0052BC  0100               	movlb	0	; () banked
  4589  0052BE  0100               	movlb	0	; () banked
  4590  0052C0  25A8               	addwf	doActionToggle@i& (0+255),w,b
  4591  0052C2  6E16               	movwf	?_Read_b_eep,c
  4592  0052C4  6A17               	clrf	?_Read_b_eep+1,c
  4593  0052C6  0E00               	movlw	0
  4594  0052C8  2217               	addwfc	?_Read_b_eep+1,f,c
  4595  0052CA  ECFD  F036         	call	_Read_b_eep	;wreg free
  4596  0052CE  0100               	movlb	0	; () banked
  4597  0052D0  0100               	movlb	0	; () banked
  4598  0052D2  6FA6               	movwf	doActionToggle@val& (0+255),b
  4599                           
  4600                           ;main.c: 2658: switch ( i ) {
  4601  0052D4  D047               	goto	l11163
  4602  0052D6                     l885:
  4603                           
  4604                           ; BSR set to: 0
  4605                           ;main.c: 2661: if ( LATBbits.LATB0 ) {
  4606  0052D6  A08A               	btfss	3978,0,c	;volatile
  4607  0052D8  D002               	goto	l886
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;main.c: 2662: LATBbits.LATB0 = 0;
  4611  0052DA  908A               	bcf	3978,0,c	;volatile
  4612  0052DC  D005               	goto	L58
  4613  0052DE                     l886:
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;main.c: 2665: LATBbits.LATB0 = 1;
  4617  0052DE  808A               	bsf	3978,0,c	;volatile
  4618  0052E0  D038               	goto	L55
  4619  0052E2                     l889:
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;main.c: 2671: if ( LATBbits.LATB1 ) {
  4623  0052E2  A28A               	btfss	3978,1,c	;volatile
  4624  0052E4  D005               	goto	l890
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;main.c: 2672: LATBbits.LATB1 = 0;
  4628  0052E6  928A               	bcf	3978,1,c	;volatile
  4629  0052E8                     L58:
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;main.c: 2673: bOn = 0;
  4633  0052E8  0100               	movlb	0	; () banked
  4634  0052EA  6FA4               	movwf	??_doActionToggle& (0+255),b
  4635  0052EC  0E00               	movlw	0
  4636  0052EE  D034               	goto	L49
  4637  0052F0                     l890:
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;main.c: 2675: LATBbits.LATB1 = 1;
  4641  0052F0  828A               	bsf	3978,1,c	;volatile
  4642  0052F2  D02F               	goto	L55
  4643  0052F4                     l892:
  4644                           
  4645                           ; BSR set to: 0
  4646                           ;main.c: 2681: if ( LATCbits.LATC3 ) {
  4647  0052F4  A68B               	btfss	3979,3,c	;volatile
  4648  0052F6  D002               	goto	l893
  4649                           
  4650                           ; BSR set to: 0
  4651                           ;main.c: 2682: LATCbits.LATC3 = 0;
  4652  0052F8  968B               	bcf	3979,3,c	;volatile
  4653  0052FA  D7F6               	goto	L58
  4654  0052FC                     l893:
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;main.c: 2685: LATCbits.LATC3 = 1;
  4658  0052FC  868B               	bsf	3979,3,c	;volatile
  4659  0052FE  D029               	goto	L55
  4660  005300                     l895:
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;main.c: 2691: if ( LATCbits.LATC4 ) {
  4664  005300  A88B               	btfss	3979,4,c	;volatile
  4665  005302  D002               	goto	l896
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;main.c: 2692: LATCbits.LATC4 = 0;
  4669  005304  988B               	bcf	3979,4,c	;volatile
  4670  005306  D7F0               	goto	L58
  4671  005308                     l896:
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;main.c: 2695: LATCbits.LATC4 = 1;
  4675  005308  888B               	bsf	3979,4,c	;volatile
  4676  00530A  D023               	goto	L55
  4677  00530C                     l898:
  4678                           
  4679                           ; BSR set to: 0
  4680                           ;main.c: 2701: if ( LATCbits.LATC5 ) {
  4681  00530C  AA8B               	btfss	3979,5,c	;volatile
  4682  00530E  D002               	goto	l899
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;main.c: 2702: LATCbits.LATC5 = 0;
  4686  005310  9A8B               	bcf	3979,5,c	;volatile
  4687  005312  D7EA               	goto	L58
  4688  005314                     l899:
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;main.c: 2705: LATCbits.LATC5 = 1;
  4692  005314  8A8B               	bsf	3979,5,c	;volatile
  4693  005316  D01D               	goto	L55
  4694  005318                     l901:
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;main.c: 2711: if ( LATCbits.LATC6 ) {
  4698  005318  AC8B               	btfss	3979,6,c	;volatile
  4699  00531A  D002               	goto	l902
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;main.c: 2712: LATCbits.LATC6 = 0;
  4703  00531C  9C8B               	bcf	3979,6,c	;volatile
  4704  00531E  D7E4               	goto	L58
  4705  005320                     l902:
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;main.c: 2715: LATCbits.LATC6 = 1;
  4709  005320  8C8B               	bsf	3979,6,c	;volatile
  4710  005322  D017               	goto	L55
  4711  005324                     l904:
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;main.c: 2721: if ( LATCbits.LATC7 ) {
  4715  005324  AE8B               	btfss	3979,7,c	;volatile
  4716  005326  D002               	goto	l905
  4717                           
  4718                           ; BSR set to: 0
  4719                           ;main.c: 2722: LATCbits.LATC7 = 0;
  4720  005328  9E8B               	bcf	3979,7,c	;volatile
  4721  00532A  D7DE               	goto	L58
  4722  00532C                     l905:
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;main.c: 2725: LATCbits.LATC7 = 1;
  4726  00532C  8E8B               	bsf	3979,7,c	;volatile
  4727  00532E  D011               	goto	L55
  4728  005330                     l907:
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;main.c: 2731: if ( LATAbits.LATA2 ) {
  4732  005330  A489               	btfss	3977,2,c	;volatile
  4733  005332  D002               	goto	l908
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;main.c: 2732: LATAbits.LATA2 = 0;
  4737  005334  9489               	bcf	3977,2,c	;volatile
  4738  005336  D7D8               	goto	L58
  4739  005338                     l908:
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;main.c: 2735: LATAbits.LATA2 = 1;
  4743  005338  8489               	bsf	3977,2,c	;volatile
  4744  00533A  D00B               	goto	L55
  4745  00533C                     l910:
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;main.c: 2741: if ( LATAbits.LATA1 ) {
  4749  00533C  A289               	btfss	3977,1,c	;volatile
  4750  00533E  D002               	goto	l911
  4751                           
  4752                           ; BSR set to: 0
  4753                           ;main.c: 2742: LATAbits.LATA1 = 0;
  4754  005340  9289               	bcf	3977,1,c	;volatile
  4755  005342  D7D2               	goto	L58
  4756  005344                     l911:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;main.c: 2745: LATAbits.LATA1 = 1;
  4760  005344  8289               	bsf	3977,1,c	;volatile
  4761  005346  D005               	goto	L55
  4762  005348                     l913:
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;main.c: 2751: if ( LATAbits.LATA0 ) {
  4766  005348  A089               	btfss	3977,0,c	;volatile
  4767  00534A  D002               	goto	l914
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;main.c: 2752: LATAbits.LATA0 = 0;
  4771  00534C  9089               	bcf	3977,0,c	;volatile
  4772  00534E  D7CC               	goto	L58
  4773  005350                     l914:
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;main.c: 2755: LATAbits.LATA0 = 1;
  4777  005350  8089               	bsf	3977,0,c	;volatile
  4778  005352                     L55:
  4779                           
  4780                           ; BSR set to: 0
  4781                           ;main.c: 2756: bOn = 1;
  4782  005352  0100               	movlb	0	; () banked
  4783  005354  6FA4               	movwf	??_doActionToggle& (0+255),b
  4784  005356  0E01               	movlw	1
  4785  005358                     L49:
  4786  005358  0100               	movlb	0	; () banked
  4787  00535A  0100               	movlb	0	; () banked
  4788  00535C  6FA7               	movwf	doActionToggle@bOn& (0+255),b
  4789  00535E  0100               	movlb	0	; () banked
  4790  005360  51A4               	movf	??_doActionToggle& (0+255),w,b
  4791  005362  D021               	goto	l11165
  4792  005364                     l11163:
  4793                           
  4794                           ; BSR set to: 0
  4795  005364  0100               	movlb	0	; () banked
  4796  005366  0100               	movlb	0	; () banked
  4797  005368  51A8               	movf	doActionToggle@i& (0+255),w,b
  4798                           
  4799                           ; Switch size 1, requested type "space"
  4800                           ; Number of cases is 10, Range of values is 0 to 9
  4801                           ; switch strategies available:
  4802                           ; Name         Instructions Cycles
  4803                           ; simple_byte           31    16 (average)
  4804                           ;	Chosen strategy is simple_byte
  4805  00536A  0A00               	xorlw	0	; case 0
  4806  00536C  B4D8               	btfsc	status,2,c
  4807  00536E  D7B3               	goto	l885
  4808  005370  0A01               	xorlw	1	; case 1
  4809  005372  B4D8               	btfsc	status,2,c
  4810  005374  D7B6               	goto	l889
  4811  005376  0A03               	xorlw	3	; case 2
  4812  005378  B4D8               	btfsc	status,2,c
  4813  00537A  D7BC               	goto	l892
  4814  00537C  0A01               	xorlw	1	; case 3
  4815  00537E  B4D8               	btfsc	status,2,c
  4816  005380  D7BF               	goto	l895
  4817  005382  0A07               	xorlw	7	; case 4
  4818  005384  B4D8               	btfsc	status,2,c
  4819  005386  D7C2               	goto	l898
  4820  005388  0A01               	xorlw	1	; case 5
  4821  00538A  B4D8               	btfsc	status,2,c
  4822  00538C  D7C5               	goto	l901
  4823  00538E  0A03               	xorlw	3	; case 6
  4824  005390  B4D8               	btfsc	status,2,c
  4825  005392  D7C8               	goto	l904
  4826  005394  0A01               	xorlw	1	; case 7
  4827  005396  B4D8               	btfsc	status,2,c
  4828  005398  D7CB               	goto	l907
  4829  00539A  0A0F               	xorlw	15	; case 8
  4830  00539C  B4D8               	btfsc	status,2,c
  4831  00539E  D7CE               	goto	l910
  4832  0053A0  0A01               	xorlw	1	; case 9
  4833  0053A2  B4D8               	btfsc	status,2,c
  4834  0053A4  D7D1               	goto	l913
  4835  0053A6                     l11165:
  4836                           
  4837                           ; BSR set to: 0
  4838                           ;main.c: 2761: if ( bOn ) {
  4839  0053A6  0100               	movlb	0	; () banked
  4840  0053A8  0100               	movlb	0	; () banked
  4841  0053AA  51A7               	movf	doActionToggle@bOn& (0+255),w,b
  4842  0053AC  B4D8               	btfsc	status,2,c
  4843  0053AE  D015               	goto	l916
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;main.c: 2764: if ( val & 0x08 ) {
  4847  0053B0  0100               	movlb	0	; () banked
  4848  0053B2  0100               	movlb	0	; () banked
  4849  0053B4  A7A6               	btfss	doActionToggle@val& (0+255),3,b
  4850  0053B6  D025               	goto	l11173
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;main.c: 2765: SendInformationEvent( i, 20, 3 );
  4854  0053B8  C0A8  F030         	movff	doActionToggle@i,?_SendInformationEvent
  4855  0053BC  0100               	movlb	0	; () banked
  4856  0053BE  6FA4               	movwf	??_doActionToggle& (0+255),b
  4857  0053C0  0E14               	movlw	20
  4858  0053C2  6E31               	movwf	?_SendInformationEvent+1,c
  4859  0053C4  0100               	movlb	0	; () banked
  4860  0053C6  51A4               	movf	??_doActionToggle& (0+255),w,b
  4861  0053C8  0100               	movlb	0	; () banked
  4862  0053CA  6FA5               	movwf	(??_doActionToggle+1)& (0+255),b
  4863  0053CC  0E03               	movlw	3
  4864  0053CE  6E32               	movwf	?_SendInformationEvent+2,c
  4865  0053D0  0100               	movlb	0	; () banked
  4866  0053D2  51A5               	movf	(??_doActionToggle+1)& (0+255),w,b
  4867  0053D4  EC48  F034         	call	_SendInformationEvent	;wreg free
  4868  0053D8  D014               	goto	l11173
  4869  0053DA                     l916:
  4870                           
  4871                           ; BSR set to: 0
  4872                           ;main.c: 2769: else {
  4873                           ;main.c: 2772: if ( val & 0x10 ) {
  4874  0053DA  0100               	movlb	0	; () banked
  4875  0053DC  0100               	movlb	0	; () banked
  4876  0053DE  A9A6               	btfss	doActionToggle@val& (0+255),4,b
  4877  0053E0  D010               	goto	l11173
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;main.c: 2773: SendInformationEvent( i, 20, 4 );
  4881  0053E2  C0A8  F030         	movff	doActionToggle@i,?_SendInformationEvent
  4882  0053E6  0100               	movlb	0	; () banked
  4883  0053E8  6FA4               	movwf	??_doActionToggle& (0+255),b
  4884  0053EA  0E14               	movlw	20
  4885  0053EC  6E31               	movwf	?_SendInformationEvent+1,c
  4886  0053EE  0100               	movlb	0	; () banked
  4887  0053F0  51A4               	movf	??_doActionToggle& (0+255),w,b
  4888  0053F2  0100               	movlb	0	; () banked
  4889  0053F4  6FA5               	movwf	(??_doActionToggle+1)& (0+255),b
  4890  0053F6  0E04               	movlw	4
  4891  0053F8  6E32               	movwf	?_SendInformationEvent+2,c
  4892  0053FA  0100               	movlb	0	; () banked
  4893  0053FC  51A5               	movf	(??_doActionToggle+1)& (0+255),w,b
  4894  0053FE  EC48  F034         	call	_SendInformationEvent	;wreg free
  4895  005402                     l11173:
  4896  005402  0100               	movlb	0	; () banked
  4897  005404  0100               	movlb	0	; () banked
  4898  005406  2BA8               	incf	doActionToggle@i& (0+255),f,b
  4899  005408                     L50:
  4900                           
  4901                           ; BSR set to: 0
  4902  005408  0E07               	movlw	7
  4903  00540A  0100               	movlb	0	; () banked
  4904  00540C  0100               	movlb	0	; () banked
  4905  00540E  65A8               	cpfsgt	doActionToggle@i& (0+255),b
  4906  005410  D72B               	goto	l11091
  4907                           
  4908                           ; BSR set to: 0
  4909                           
  4910                           ; BSR set to: 0
  4911  005412  0012               	return	
  4912  005414                     __end_of_doActionToggle:
  4913                           	opt stack 0
  4914                           tblptru	equ	0xFF8
  4915                           prodh	equ	0xFF4
  4916                           prodl	equ	0xFF3
  4917                           postinc0	equ	0xFEE
  4918                           wreg	equ	0xFE8
  4919                           postinc2	equ	0xFDE
  4920                           postdec2	equ	0xFDD
  4921                           fsr2h	equ	0xFDA
  4922                           fsr2l	equ	0xFD9
  4923                           status	equ	0xFD8
  4924                           
  4925 ;; *************** function _doActionStatus *****************
  4926 ;; Defined at:
  4927 ;;		line 2516 in file "../main.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  dmflags         1   66[BANK0 ] unsigned char 
  4930 ;;  arg             1   67[BANK0 ] unsigned char 
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;  i               1   72[BANK0 ] unsigned char 
  4933 ;;  bOn             1   71[BANK0 ] enum E15660
  4934 ;;  val             1   70[BANK0 ] unsigned char 
  4935 ;; Return value:  Size  Location     Type
  4936 ;;		None               void
  4937 ;; Registers used:
  4938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4944 ;;      Params:         0       2       0       0       0       0       0
  4945 ;;      Locals:         0       3       0       0       0       0       0
  4946 ;;      Temps:          0       2       0       0       0       0       0
  4947 ;;      Totals:         0       7       0       0       0       0       0
  4948 ;;Total ram usage:        7 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; Hardware stack levels required when called:    7
  4951 ;; This function calls:
  4952 ;;		_Read_b_eep
  4953 ;;		_SendInformationEvent
  4954 ;; This function is called by:
  4955 ;;		_doDM
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text10
  4960  005414                     __ptext10:
  4961                           	opt stack 0
  4962  005414                     _doActionStatus:
  4963                           	opt stack 21
  4964                           
  4965                           ;main.c: 2518: unsigned char i;
  4966                           ;main.c: 2519: unsigned char val;
  4967                           ;main.c: 2520: BOOL bOn = 0;
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;incstack = 0
  4971                           ;incstack = 0
  4972  005414  0100               	movlb	0	; () banked
  4973  005416  6FA4               	movwf	??_doActionStatus& (0+255),b
  4974  005418  0E00               	movlw	0
  4975  00541A  0100               	movlb	0	; () banked
  4976  00541C  0100               	movlb	0	; () banked
  4977  00541E  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  4978  005420  0100               	movlb	0	; () banked
  4979  005422  51A4               	movf	??_doActionStatus& (0+255),w,b
  4980                           
  4981                           ;main.c: 2522: for (i = 0; i < 8; i++) {
  4982  005424  0100               	movlb	0	; () banked
  4983  005426  6FA4               	movwf	??_doActionStatus& (0+255),b
  4984  005428  0E00               	movlw	0
  4985  00542A  0100               	movlb	0	; () banked
  4986  00542C  0100               	movlb	0	; () banked
  4987  00542E  6FA8               	movwf	doActionStatus@i& (0+255),b
  4988  005430  0100               	movlb	0	; () banked
  4989  005432  51A4               	movf	??_doActionStatus& (0+255),w,b
  4990  005434  D0CF               	goto	L59
  4991  005436                     l11039:
  4992                           
  4993                           ; BSR set to: 0
  4994                           ;main.c: 2525: if (!(arg & (1 << i))) continue;
  4995  005436  C0A8  F0A4         	movff	doActionStatus@i,??_doActionStatus
  4996  00543A  0E01               	movlw	1
  4997  00543C  0100               	movlb	0	; () banked
  4998  00543E  6FA5               	movwf	(??_doActionStatus+1)& (0+255),b
  4999  005440  0100               	movlb	0	; () banked
  5000  005442  2BA4               	incf	??_doActionStatus& (0+255),f,b
  5001  005444  D003               	goto	u13534
  5002  005446                     u13535:
  5003  005446  0100               	movlb	0	; () banked
  5004  005448  90D8               	bcf	status,0,c
  5005  00544A  37A5               	rlcf	(??_doActionStatus+1)& (0+255),f,b
  5006  00544C                     u13534:
  5007  00544C  0100               	movlb	0	; () banked
  5008  00544E  2FA4               	decfsz	??_doActionStatus& (0+255),f,b
  5009  005450  D7FA               	goto	u13535
  5010  005452  0100               	movlb	0	; () banked
  5011  005454  51A5               	movf	(??_doActionStatus+1)& (0+255),w,b
  5012  005456  0100               	movlb	0	; () banked
  5013  005458  0100               	movlb	0	; () banked
  5014  00545A  15A3               	andwf	doActionStatus@arg& (0+255),w,b
  5015  00545C  0900               	iorlw	0
  5016  00545E  B4D8               	btfsc	status,2,c
  5017  005460  D0B6               	goto	l11081
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;main.c: 2528: if (dmflags & 0x08) {
  5021                           
  5022                           ; BSR set to: 0
  5023  005462  0100               	movlb	0	; () banked
  5024  005464  0100               	movlb	0	; () banked
  5025  005466  A7A2               	btfss	doActionStatus@dmflags& (0+255),3,b
  5026  005468  D00F               	goto	l11047
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;main.c: 2529: if (vscp_imsg.data[ 2 ] != Read_b_eep(0x43 + 3 + i) ) {
  5030  00546A  0E46               	movlw	70
  5031  00546C  0100               	movlb	0	; () banked
  5032  00546E  0100               	movlb	0	; () banked
  5033  005470  25A8               	addwf	doActionStatus@i& (0+255),w,b
  5034  005472  6E16               	movwf	?_Read_b_eep,c
  5035  005474  6A17               	clrf	?_Read_b_eep+1,c
  5036  005476  0E00               	movlw	0
  5037  005478  2217               	addwfc	?_Read_b_eep+1,f,c
  5038  00547A  ECFD  F036         	call	_Read_b_eep	;wreg free
  5039  00547E  0100               	movlb	0	; () banked
  5040  005480  0100               	movlb	0	; () banked
  5041  005482  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  5042  005484  A4D8               	btfss	status,2,c
  5043  005486  D0A3               	goto	l11081
  5044  005488                     l11047:
  5045                           
  5046                           ; BSR set to: 0
  5047                           ;main.c: 2533: }
  5048                           ;main.c: 2534: }
  5049                           ;main.c: 2536: val = Read_b_eep(0x43 + 24 + i);
  5050  005488  0E5B               	movlw	91
  5051  00548A  0100               	movlb	0	; () banked
  5052  00548C  0100               	movlb	0	; () banked
  5053  00548E  25A8               	addwf	doActionStatus@i& (0+255),w,b
  5054  005490  6E16               	movwf	?_Read_b_eep,c
  5055  005492  6A17               	clrf	?_Read_b_eep+1,c
  5056  005494  0E00               	movlw	0
  5057  005496  2217               	addwfc	?_Read_b_eep+1,f,c
  5058  005498  ECFD  F036         	call	_Read_b_eep	;wreg free
  5059  00549C  0100               	movlb	0	; () banked
  5060  00549E  0100               	movlb	0	; () banked
  5061  0054A0  6FA6               	movwf	doActionStatus@val& (0+255),b
  5062                           
  5063                           ;main.c: 2538: switch (i) {
  5064  0054A2  D046               	goto	l11071
  5065  0054A4                     l11049:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;main.c: 2541: bOn = LATBbits.LATB0;
  5069  0054A4  0E00               	movlw	0
  5070  0054A6  B08A               	btfsc	3978,0,c	;volatile
  5071  0054A8  0E01               	movlw	1
  5072  0054AA  0100               	movlb	0	; () banked
  5073  0054AC  0100               	movlb	0	; () banked
  5074  0054AE  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5075                           
  5076                           ;main.c: 2542: break;
  5077  0054B0  D060               	goto	l11073
  5078  0054B2                     l11051:
  5079                           
  5080                           ; BSR set to: 0
  5081                           ;main.c: 2545: bOn = LATBbits.LATB1;
  5082  0054B2  0E00               	movlw	0
  5083  0054B4  B28A               	btfsc	3978,1,c	;volatile
  5084  0054B6  0E01               	movlw	1
  5085  0054B8  0100               	movlb	0	; () banked
  5086  0054BA  0100               	movlb	0	; () banked
  5087  0054BC  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5088                           
  5089                           ;main.c: 2546: break;
  5090  0054BE  D059               	goto	l11073
  5091  0054C0                     l11053:
  5092                           
  5093                           ; BSR set to: 0
  5094                           ;main.c: 2549: bOn = LATCbits.LATC3;
  5095  0054C0  0E00               	movlw	0
  5096  0054C2  B68B               	btfsc	3979,3,c	;volatile
  5097  0054C4  0E01               	movlw	1
  5098  0054C6  0100               	movlb	0	; () banked
  5099  0054C8  0100               	movlb	0	; () banked
  5100  0054CA  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5101                           
  5102                           ;main.c: 2550: break;
  5103  0054CC  D052               	goto	l11073
  5104  0054CE                     l11055:
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;main.c: 2553: bOn = LATCbits.LATC4;
  5108  0054CE  0E00               	movlw	0
  5109  0054D0  B88B               	btfsc	3979,4,c	;volatile
  5110  0054D2  0E01               	movlw	1
  5111  0054D4  0100               	movlb	0	; () banked
  5112  0054D6  0100               	movlb	0	; () banked
  5113  0054D8  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5114                           
  5115                           ;main.c: 2554: break;
  5116  0054DA  D04B               	goto	l11073
  5117  0054DC                     l11057:
  5118                           
  5119                           ; BSR set to: 0
  5120                           ;main.c: 2557: bOn = LATCbits.LATC5;
  5121  0054DC  0E00               	movlw	0
  5122  0054DE  BA8B               	btfsc	3979,5,c	;volatile
  5123  0054E0  0E01               	movlw	1
  5124  0054E2  0100               	movlb	0	; () banked
  5125  0054E4  0100               	movlb	0	; () banked
  5126  0054E6  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5127                           
  5128                           ;main.c: 2558: break;
  5129  0054E8  D044               	goto	l11073
  5130  0054EA                     l11059:
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;main.c: 2561: bOn = LATCbits.LATC6;
  5134  0054EA  0E00               	movlw	0
  5135  0054EC  BC8B               	btfsc	3979,6,c	;volatile
  5136  0054EE  0E01               	movlw	1
  5137  0054F0  0100               	movlb	0	; () banked
  5138  0054F2  0100               	movlb	0	; () banked
  5139  0054F4  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5140                           
  5141                           ;main.c: 2562: break;
  5142  0054F6  D03D               	goto	l11073
  5143  0054F8                     l11061:
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;main.c: 2565: bOn = LATCbits.LATC7;
  5147  0054F8  0E00               	movlw	0
  5148  0054FA  BE8B               	btfsc	3979,7,c	;volatile
  5149  0054FC  0E01               	movlw	1
  5150  0054FE  0100               	movlb	0	; () banked
  5151  005500  0100               	movlb	0	; () banked
  5152  005502  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5153                           
  5154                           ;main.c: 2566: break;
  5155  005504  D036               	goto	l11073
  5156  005506                     l11063:
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;main.c: 2569: bOn = LATAbits.LATA2;
  5160  005506  0E00               	movlw	0
  5161  005508  B489               	btfsc	3977,2,c	;volatile
  5162  00550A  0E01               	movlw	1
  5163  00550C  0100               	movlb	0	; () banked
  5164  00550E  0100               	movlb	0	; () banked
  5165  005510  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5166                           
  5167                           ;main.c: 2570: break;
  5168  005512  D02F               	goto	l11073
  5169  005514                     l11065:
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;main.c: 2573: bOn = LATAbits.LATA1;
  5173  005514  0E00               	movlw	0
  5174  005516  B289               	btfsc	3977,1,c	;volatile
  5175  005518  0E01               	movlw	1
  5176  00551A  0100               	movlb	0	; () banked
  5177  00551C  0100               	movlb	0	; () banked
  5178  00551E  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5179                           
  5180                           ;main.c: 2574: break;
  5181  005520  D028               	goto	l11073
  5182  005522                     l11067:
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;main.c: 2577: bOn = LATAbits.LATA0;
  5186  005522  0E00               	movlw	0
  5187  005524  B089               	btfsc	3977,0,c	;volatile
  5188  005526  0E01               	movlw	1
  5189  005528  0100               	movlb	0	; () banked
  5190  00552A  0100               	movlb	0	; () banked
  5191  00552C  6FA7               	movwf	doActionStatus@bOn& (0+255),b
  5192                           
  5193                           ;main.c: 2578: break;
  5194  00552E  D021               	goto	l11073
  5195  005530                     l11071:
  5196                           
  5197                           ; BSR set to: 0
  5198  005530  0100               	movlb	0	; () banked
  5199  005532  0100               	movlb	0	; () banked
  5200  005534  51A8               	movf	doActionStatus@i& (0+255),w,b
  5201                           
  5202                           ; Switch size 1, requested type "space"
  5203                           ; Number of cases is 10, Range of values is 0 to 9
  5204                           ; switch strategies available:
  5205                           ; Name         Instructions Cycles
  5206                           ; simple_byte           31    16 (average)
  5207                           ;	Chosen strategy is simple_byte
  5208  005536  0A00               	xorlw	0	; case 0
  5209  005538  B4D8               	btfsc	status,2,c
  5210  00553A  D7B4               	goto	l11049
  5211  00553C  0A01               	xorlw	1	; case 1
  5212  00553E  B4D8               	btfsc	status,2,c
  5213  005540  D7B8               	goto	l11051
  5214  005542  0A03               	xorlw	3	; case 2
  5215  005544  B4D8               	btfsc	status,2,c
  5216  005546  D7BC               	goto	l11053
  5217  005548  0A01               	xorlw	1	; case 3
  5218  00554A  B4D8               	btfsc	status,2,c
  5219  00554C  D7C0               	goto	l11055
  5220  00554E  0A07               	xorlw	7	; case 4
  5221  005550  B4D8               	btfsc	status,2,c
  5222  005552  D7C4               	goto	l11057
  5223  005554  0A01               	xorlw	1	; case 5
  5224  005556  B4D8               	btfsc	status,2,c
  5225  005558  D7C8               	goto	l11059
  5226  00555A  0A03               	xorlw	3	; case 6
  5227  00555C  B4D8               	btfsc	status,2,c
  5228  00555E  D7CC               	goto	l11061
  5229  005560  0A01               	xorlw	1	; case 7
  5230  005562  B4D8               	btfsc	status,2,c
  5231  005564  D7D0               	goto	l11063
  5232  005566  0A0F               	xorlw	15	; case 8
  5233  005568  B4D8               	btfsc	status,2,c
  5234  00556A  D7D4               	goto	l11065
  5235  00556C  0A01               	xorlw	1	; case 9
  5236  00556E  B4D8               	btfsc	status,2,c
  5237  005570  D7D8               	goto	l11067
  5238  005572                     l11073:
  5239                           
  5240                           ; BSR set to: 0
  5241                           ;main.c: 2581: if (bOn) {
  5242  005572  0100               	movlb	0	; () banked
  5243  005574  0100               	movlb	0	; () banked
  5244  005576  51A7               	movf	doActionStatus@bOn& (0+255),w,b
  5245  005578  B4D8               	btfsc	status,2,c
  5246  00557A  D015               	goto	l862
  5247                           
  5248                           ; BSR set to: 0
  5249                           ;main.c: 2584: if ( val & 0x10 ) {
  5250  00557C  0100               	movlb	0	; () banked
  5251  00557E  0100               	movlb	0	; () banked
  5252  005580  A9A6               	btfss	doActionStatus@val& (0+255),4,b
  5253  005582  D025               	goto	l11081
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;main.c: 2585: SendInformationEvent( i, 20, 4 );
  5257  005584  C0A8  F030         	movff	doActionStatus@i,?_SendInformationEvent
  5258  005588  0100               	movlb	0	; () banked
  5259  00558A  6FA4               	movwf	??_doActionStatus& (0+255),b
  5260  00558C  0E14               	movlw	20
  5261  00558E  6E31               	movwf	?_SendInformationEvent+1,c
  5262  005590  0100               	movlb	0	; () banked
  5263  005592  51A4               	movf	??_doActionStatus& (0+255),w,b
  5264  005594  0100               	movlb	0	; () banked
  5265  005596  6FA5               	movwf	(??_doActionStatus+1)& (0+255),b
  5266  005598  0E04               	movlw	4
  5267  00559A  6E32               	movwf	?_SendInformationEvent+2,c
  5268  00559C  0100               	movlb	0	; () banked
  5269  00559E  51A5               	movf	(??_doActionStatus+1)& (0+255),w,b
  5270  0055A0  EC48  F034         	call	_SendInformationEvent	;wreg free
  5271  0055A4  D014               	goto	l11081
  5272  0055A6                     l862:
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;main.c: 2589: else {
  5276                           ;main.c: 2592: if ( val & 0x10 ) {
  5277  0055A6  0100               	movlb	0	; () banked
  5278  0055A8  0100               	movlb	0	; () banked
  5279  0055AA  A9A6               	btfss	doActionStatus@val& (0+255),4,b
  5280  0055AC  D010               	goto	l11081
  5281                           
  5282                           ; BSR set to: 0
  5283                           ;main.c: 2593: SendInformationEvent( i, 20, 4 );
  5284  0055AE  C0A8  F030         	movff	doActionStatus@i,?_SendInformationEvent
  5285  0055B2  0100               	movlb	0	; () banked
  5286  0055B4  6FA4               	movwf	??_doActionStatus& (0+255),b
  5287  0055B6  0E14               	movlw	20
  5288  0055B8  6E31               	movwf	?_SendInformationEvent+1,c
  5289  0055BA  0100               	movlb	0	; () banked
  5290  0055BC  51A4               	movf	??_doActionStatus& (0+255),w,b
  5291  0055BE  0100               	movlb	0	; () banked
  5292  0055C0  6FA5               	movwf	(??_doActionStatus+1)& (0+255),b
  5293  0055C2  0E04               	movlw	4
  5294  0055C4  6E32               	movwf	?_SendInformationEvent+2,c
  5295  0055C6  0100               	movlb	0	; () banked
  5296  0055C8  51A5               	movf	(??_doActionStatus+1)& (0+255),w,b
  5297  0055CA  EC48  F034         	call	_SendInformationEvent	;wreg free
  5298  0055CE                     l11081:
  5299  0055CE  0100               	movlb	0	; () banked
  5300  0055D0  0100               	movlb	0	; () banked
  5301  0055D2  2BA8               	incf	doActionStatus@i& (0+255),f,b
  5302  0055D4                     L59:
  5303                           
  5304                           ; BSR set to: 0
  5305  0055D4  0E07               	movlw	7
  5306  0055D6  0100               	movlb	0	; () banked
  5307  0055D8  0100               	movlb	0	; () banked
  5308  0055DA  65A8               	cpfsgt	doActionStatus@i& (0+255),b
  5309  0055DC  D72C               	goto	l11039
  5310                           
  5311                           ; BSR set to: 0
  5312                           
  5313                           ; BSR set to: 0
  5314  0055DE  0012               	return	
  5315  0055E0                     __end_of_doActionStatus:
  5316                           	opt stack 0
  5317                           tblptru	equ	0xFF8
  5318                           prodh	equ	0xFF4
  5319                           prodl	equ	0xFF3
  5320                           postinc0	equ	0xFEE
  5321                           wreg	equ	0xFE8
  5322                           postinc2	equ	0xFDE
  5323                           postdec2	equ	0xFDD
  5324                           fsr2h	equ	0xFDA
  5325                           fsr2l	equ	0xFD9
  5326                           status	equ	0xFD8
  5327                           
  5328 ;; *************** function _doActionPulse *****************
  5329 ;; Defined at:
  5330 ;;		line 2382 in file "../main.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;  dmflags         1   23[COMRAM] unsigned char 
  5333 ;;  arg             1   24[COMRAM] unsigned char 
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;  i               1   30[COMRAM] unsigned char 
  5336 ;;  val             1   29[COMRAM] unsigned char 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;		None               void
  5339 ;; Registers used:
  5340 ;;		wreg, status,2, status,0, cstack
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5346 ;;      Params:         2       0       0       0       0       0       0
  5347 ;;      Locals:         2       0       0       0       0       0       0
  5348 ;;      Temps:          4       0       0       0       0       0       0
  5349 ;;      Totals:         8       0       0       0       0       0       0
  5350 ;;Total ram usage:        8 bytes
  5351 ;; Hardware stack levels used:    1
  5352 ;; Hardware stack levels required when called:    3
  5353 ;; This function calls:
  5354 ;;		_Read_b_eep
  5355 ;; This function is called by:
  5356 ;;		_doDM
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text11
  5361  00487A                     __ptext11:
  5362                           	opt stack 0
  5363  00487A                     _doActionPulse:
  5364                           	opt stack 25
  5365                           
  5366                           ;main.c: 2384: unsigned char i;
  5367                           ;main.c: 2385: unsigned char val;
  5368                           ;main.c: 2387: for ( i = 0; i < 8; i++ ) {
  5369                           
  5370                           ; BSR set to: 0
  5371                           ;incstack = 0
  5372                           ;incstack = 0
  5373  00487A  6E1A               	movwf	??_doActionPulse& (0+255),c
  5374  00487C  0E00               	movlw	0
  5375  00487E  6E1F               	movwf	doActionPulse@i,c
  5376  004880  501A               	movf	??_doActionPulse& (0+255),w,c
  5377  004882  D180               	goto	L60
  5378  004884                     l10971:
  5379                           
  5380                           ;main.c: 2390: if ( !( arg & ( 1 << i ) ) ) continue;
  5381  004884  C01F  F01A         	movff	doActionPulse@i,??_doActionPulse
  5382  004888  0E01               	movlw	1
  5383  00488A  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5384  00488C  2A1A               	incf	??_doActionPulse,f,c
  5385  00488E  D002               	goto	u13464
  5386  004890                     u13465:
  5387  004890  90D8               	bcf	status,0,c
  5388  004892  361B               	rlcf	??_doActionPulse+1,f,c
  5389  004894                     u13464:
  5390  004894  2E1A               	decfsz	??_doActionPulse,f,c
  5391  004896  D7FC               	goto	u13465
  5392  004898  501B               	movf	??_doActionPulse+1,w,c
  5393  00489A  1419               	andwf	doActionPulse@arg,w,c
  5394  00489C  0900               	iorlw	0
  5395  00489E  B4D8               	btfsc	status,2,c
  5396  0048A0  D170               	goto	l11029
  5397                           
  5398                           ;main.c: 2393: if (dmflags & 0x08) {
  5399  0048A2  A618               	btfss	doActionPulse@dmflags,3,c
  5400  0048A4  D00D               	goto	l10979
  5401                           
  5402                           ;main.c: 2394: if ( vscp_imsg.data[ 2 ] != Read_b_eep(0x43 + 3 + i) ) {
  5403  0048A6  0E46               	movlw	70
  5404  0048A8  241F               	addwf	doActionPulse@i,w,c
  5405  0048AA  6E16               	movwf	?_Read_b_eep,c
  5406  0048AC  6A17               	clrf	?_Read_b_eep+1,c
  5407  0048AE  0E00               	movlw	0
  5408  0048B0  2217               	addwfc	?_Read_b_eep+1,f,c
  5409  0048B2  ECFD  F036         	call	_Read_b_eep	;wreg free
  5410  0048B6  0100               	movlb	0	; () banked
  5411  0048B8  0100               	movlb	0	; () banked
  5412  0048BA  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  5413  0048BC  A4D8               	btfss	status,2,c
  5414  0048BE  D161               	goto	l11029
  5415  0048C0                     l10979:
  5416                           
  5417                           ;main.c: 2398: }
  5418                           ;main.c: 2399: }
  5419                           ;main.c: 2401: val = Read_b_eep(0x43 + 24 + i);
  5420  0048C0  0E5B               	movlw	91
  5421  0048C2  241F               	addwf	doActionPulse@i,w,c
  5422  0048C4  6E16               	movwf	?_Read_b_eep,c
  5423  0048C6  6A17               	clrf	?_Read_b_eep+1,c
  5424  0048C8  0E00               	movlw	0
  5425  0048CA  2217               	addwfc	?_Read_b_eep+1,f,c
  5426  0048CC  ECFD  F036         	call	_Read_b_eep	;wreg free
  5427  0048D0  6E1E               	movwf	doActionPulse@val,c
  5428                           
  5429                           ;main.c: 2404: if ( !( val & 0x80 ) ) continue;
  5430  0048D2  AE1E               	btfss	doActionPulse@val,7,c
  5431  0048D4  D156               	goto	l11029
  5432  0048D6  D136               	goto	l11027
  5433  0048D8                     l830:
  5434                           
  5435                           ;main.c: 2409: LATBbits.LATB0 = 0;
  5436  0048D8  908A               	bcf	3978,0,c	;volatile
  5437                           
  5438                           ;main.c: 2410: channel_pulse_flags |= 0x01;
  5439  0048DA  0100               	movlb	0	; () banked
  5440  0048DC  0100               	movlb	0	; () banked
  5441  0048DE  81D5               	bsf	_channel_pulse_flags& (0+255),0,b
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;main.c: 2411: channel_pulse_timer[ 0 ] =
  5445                           ;main.c: 2412: Read_b_eep(0x43 + 46 + 0) * 256 +
  5446                           ;main.c: 2414: Read_b_eep(0x43 + 46 + 1);
  5447  0048E0  0E00               	movlw	0
  5448  0048E2  6E17               	movwf	?_Read_b_eep+1,c
  5449  0048E4  0E72               	movlw	114
  5450  0048E6  6E16               	movwf	?_Read_b_eep,c
  5451  0048E8  ECFD  F036         	call	_Read_b_eep	;wreg free
  5452  0048EC  6E1A               	movwf	??_doActionPulse& (0+255),c
  5453  0048EE  0E00               	movlw	0
  5454  0048F0  6E17               	movwf	?_Read_b_eep+1,c
  5455  0048F2  0E71               	movlw	113
  5456  0048F4  6E16               	movwf	?_Read_b_eep,c
  5457  0048F6  ECFD  F036         	call	_Read_b_eep	;wreg free
  5458  0048FA  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5459  0048FC  501B               	movf	??_doActionPulse+1,w,c
  5460  0048FE  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5461  004900  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5462  004902  501A               	movf	??_doActionPulse,w,c
  5463  004904  241C               	addwf	??_doActionPulse+2,w,c
  5464  004906  0101               	movlb	1	; () banked
  5465  004908  0101               	movlb	1	; () banked
  5466  00490A  6F26               	movwf	_channel_pulse_timer& (0+255),b
  5467  00490C  0E00               	movlw	0
  5468  00490E  201D               	addwfc	??_doActionPulse+3,w,c
  5469  004910  0101               	movlb	1	; () banked
  5470  004912  6F27               	movwf	(_channel_pulse_timer+1)& (0+255),b
  5471                           
  5472                           ;main.c: 2416: break;
  5473  004914  D136               	goto	l11029
  5474  004916                     l832:
  5475                           
  5476                           ;main.c: 2419: LATBbits.LATB1 = 0;
  5477  004916  928A               	bcf	3978,1,c	;volatile
  5478                           
  5479                           ;main.c: 2420: channel_pulse_flags |= 0x02;
  5480  004918  0100               	movlb	0	; () banked
  5481  00491A  0100               	movlb	0	; () banked
  5482  00491C  83D5               	bsf	_channel_pulse_flags& (0+255),1,b
  5483                           
  5484                           ; BSR set to: 0
  5485                           ;main.c: 2421: channel_pulse_timer[ 1 ] =
  5486                           ;main.c: 2422: Read_b_eep(0x43 + 46 + 2) * 256 +
  5487                           ;main.c: 2424: Read_b_eep(0x43 + 46 + 3);
  5488  00491E  0E00               	movlw	0
  5489  004920  6E17               	movwf	?_Read_b_eep+1,c
  5490  004922  0E74               	movlw	116
  5491  004924  6E16               	movwf	?_Read_b_eep,c
  5492  004926  ECFD  F036         	call	_Read_b_eep	;wreg free
  5493  00492A  6E1A               	movwf	??_doActionPulse& (0+255),c
  5494  00492C  0E00               	movlw	0
  5495  00492E  6E17               	movwf	?_Read_b_eep+1,c
  5496  004930  0E73               	movlw	115
  5497  004932  6E16               	movwf	?_Read_b_eep,c
  5498  004934  ECFD  F036         	call	_Read_b_eep	;wreg free
  5499  004938  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5500  00493A  501B               	movf	??_doActionPulse+1,w,c
  5501  00493C  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5502  00493E  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5503  004940  501A               	movf	??_doActionPulse,w,c
  5504  004942  241C               	addwf	??_doActionPulse+2,w,c
  5505  004944  0101               	movlb	1	; () banked
  5506  004946  0101               	movlb	1	; () banked
  5507  004948  6F28               	movwf	(_channel_pulse_timer+2)& (0+255),b
  5508  00494A  0E00               	movlw	0
  5509  00494C  201D               	addwfc	??_doActionPulse+3,w,c
  5510  00494E  0101               	movlb	1	; () banked
  5511  004950  6F29               	movwf	(_channel_pulse_timer+3)& (0+255),b
  5512                           
  5513                           ;main.c: 2426: break;
  5514  004952  D117               	goto	l11029
  5515  004954                     l833:
  5516                           
  5517                           ;main.c: 2429: LATCbits.LATC3 = 0;
  5518  004954  968B               	bcf	3979,3,c	;volatile
  5519                           
  5520                           ;main.c: 2430: channel_pulse_flags |= 0x04;
  5521  004956  0100               	movlb	0	; () banked
  5522  004958  0100               	movlb	0	; () banked
  5523  00495A  85D5               	bsf	_channel_pulse_flags& (0+255),2,b
  5524                           
  5525                           ; BSR set to: 0
  5526                           ;main.c: 2431: channel_pulse_timer[ 2 ] =
  5527                           ;main.c: 2432: Read_b_eep(0x43 + 46 + 4) * 256 +
  5528                           ;main.c: 2434: Read_b_eep(0x43 + 46 + 5);
  5529  00495C  0E00               	movlw	0
  5530  00495E  6E17               	movwf	?_Read_b_eep+1,c
  5531  004960  0E76               	movlw	118
  5532  004962  6E16               	movwf	?_Read_b_eep,c
  5533  004964  ECFD  F036         	call	_Read_b_eep	;wreg free
  5534  004968  6E1A               	movwf	??_doActionPulse& (0+255),c
  5535  00496A  0E00               	movlw	0
  5536  00496C  6E17               	movwf	?_Read_b_eep+1,c
  5537  00496E  0E75               	movlw	117
  5538  004970  6E16               	movwf	?_Read_b_eep,c
  5539  004972  ECFD  F036         	call	_Read_b_eep	;wreg free
  5540  004976  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5541  004978  501B               	movf	??_doActionPulse+1,w,c
  5542  00497A  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5543  00497C  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5544  00497E  501A               	movf	??_doActionPulse,w,c
  5545  004980  241C               	addwf	??_doActionPulse+2,w,c
  5546  004982  0101               	movlb	1	; () banked
  5547  004984  0101               	movlb	1	; () banked
  5548  004986  6F2A               	movwf	(_channel_pulse_timer+4)& (0+255),b
  5549  004988  0E00               	movlw	0
  5550  00498A  201D               	addwfc	??_doActionPulse+3,w,c
  5551  00498C  0101               	movlb	1	; () banked
  5552  00498E  6F2B               	movwf	(_channel_pulse_timer+5)& (0+255),b
  5553                           
  5554                           ;main.c: 2436: break;
  5555  004990  D0F8               	goto	l11029
  5556  004992                     l834:
  5557                           
  5558                           ;main.c: 2439: LATCbits.LATC4 = 0;
  5559  004992  988B               	bcf	3979,4,c	;volatile
  5560                           
  5561                           ;main.c: 2440: channel_pulse_flags |= 0x08;
  5562  004994  0100               	movlb	0	; () banked
  5563  004996  0100               	movlb	0	; () banked
  5564  004998  87D5               	bsf	_channel_pulse_flags& (0+255),3,b
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;main.c: 2441: channel_pulse_timer[ 3 ] =
  5568                           ;main.c: 2442: Read_b_eep(0x43 + 46 + 6) * 256 +
  5569                           ;main.c: 2444: Read_b_eep(0x43 + 46 + 7);
  5570  00499A  0E00               	movlw	0
  5571  00499C  6E17               	movwf	?_Read_b_eep+1,c
  5572  00499E  0E78               	movlw	120
  5573  0049A0  6E16               	movwf	?_Read_b_eep,c
  5574  0049A2  ECFD  F036         	call	_Read_b_eep	;wreg free
  5575  0049A6  6E1A               	movwf	??_doActionPulse& (0+255),c
  5576  0049A8  0E00               	movlw	0
  5577  0049AA  6E17               	movwf	?_Read_b_eep+1,c
  5578  0049AC  0E77               	movlw	119
  5579  0049AE  6E16               	movwf	?_Read_b_eep,c
  5580  0049B0  ECFD  F036         	call	_Read_b_eep	;wreg free
  5581  0049B4  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5582  0049B6  501B               	movf	??_doActionPulse+1,w,c
  5583  0049B8  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5584  0049BA  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5585  0049BC  501A               	movf	??_doActionPulse,w,c
  5586  0049BE  241C               	addwf	??_doActionPulse+2,w,c
  5587  0049C0  0101               	movlb	1	; () banked
  5588  0049C2  0101               	movlb	1	; () banked
  5589  0049C4  6F2C               	movwf	(_channel_pulse_timer+6)& (0+255),b
  5590  0049C6  0E00               	movlw	0
  5591  0049C8  201D               	addwfc	??_doActionPulse+3,w,c
  5592  0049CA  0101               	movlb	1	; () banked
  5593  0049CC  6F2D               	movwf	(_channel_pulse_timer+7)& (0+255),b
  5594                           
  5595                           ;main.c: 2446: break;
  5596  0049CE  D0D9               	goto	l11029
  5597  0049D0                     l835:
  5598                           
  5599                           ;main.c: 2449: LATCbits.LATC5 = 0;
  5600  0049D0  9A8B               	bcf	3979,5,c	;volatile
  5601                           
  5602                           ;main.c: 2450: channel_pulse_flags |= 0x10;
  5603  0049D2  0100               	movlb	0	; () banked
  5604  0049D4  0100               	movlb	0	; () banked
  5605  0049D6  89D5               	bsf	_channel_pulse_flags& (0+255),4,b
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;main.c: 2451: channel_pulse_timer[ 4 ] =
  5609                           ;main.c: 2452: Read_b_eep(0x43 + 46 + 8) * 256 +
  5610                           ;main.c: 2454: Read_b_eep(0x43 + 46 + 9);
  5611  0049D8  0E00               	movlw	0
  5612  0049DA  6E17               	movwf	?_Read_b_eep+1,c
  5613  0049DC  0E7A               	movlw	122
  5614  0049DE  6E16               	movwf	?_Read_b_eep,c
  5615  0049E0  ECFD  F036         	call	_Read_b_eep	;wreg free
  5616  0049E4  6E1A               	movwf	??_doActionPulse& (0+255),c
  5617  0049E6  0E00               	movlw	0
  5618  0049E8  6E17               	movwf	?_Read_b_eep+1,c
  5619  0049EA  0E79               	movlw	121
  5620  0049EC  6E16               	movwf	?_Read_b_eep,c
  5621  0049EE  ECFD  F036         	call	_Read_b_eep	;wreg free
  5622  0049F2  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5623  0049F4  501B               	movf	??_doActionPulse+1,w,c
  5624  0049F6  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5625  0049F8  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5626  0049FA  501A               	movf	??_doActionPulse,w,c
  5627  0049FC  241C               	addwf	??_doActionPulse+2,w,c
  5628  0049FE  0101               	movlb	1	; () banked
  5629  004A00  0101               	movlb	1	; () banked
  5630  004A02  6F2E               	movwf	(_channel_pulse_timer+8)& (0+255),b
  5631  004A04  0E00               	movlw	0
  5632  004A06  201D               	addwfc	??_doActionPulse+3,w,c
  5633  004A08  0101               	movlb	1	; () banked
  5634  004A0A  6F2F               	movwf	(_channel_pulse_timer+9)& (0+255),b
  5635                           
  5636                           ;main.c: 2456: break;
  5637  004A0C  D0BA               	goto	l11029
  5638  004A0E                     l836:
  5639                           
  5640                           ;main.c: 2459: LATCbits.LATC6 = 0;
  5641  004A0E  9C8B               	bcf	3979,6,c	;volatile
  5642                           
  5643                           ;main.c: 2460: channel_pulse_flags |= 0x20;
  5644  004A10  0100               	movlb	0	; () banked
  5645  004A12  0100               	movlb	0	; () banked
  5646  004A14  8BD5               	bsf	_channel_pulse_flags& (0+255),5,b
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;main.c: 2461: channel_pulse_timer[ 5 ] =
  5650                           ;main.c: 2462: Read_b_eep(0x43 + 46 + 10) * 256 +
  5651                           ;main.c: 2464: Read_b_eep(0x43 + 46 + 11);
  5652  004A16  0E00               	movlw	0
  5653  004A18  6E17               	movwf	?_Read_b_eep+1,c
  5654  004A1A  0E7C               	movlw	124
  5655  004A1C  6E16               	movwf	?_Read_b_eep,c
  5656  004A1E  ECFD  F036         	call	_Read_b_eep	;wreg free
  5657  004A22  6E1A               	movwf	??_doActionPulse& (0+255),c
  5658  004A24  0E00               	movlw	0
  5659  004A26  6E17               	movwf	?_Read_b_eep+1,c
  5660  004A28  0E7B               	movlw	123
  5661  004A2A  6E16               	movwf	?_Read_b_eep,c
  5662  004A2C  ECFD  F036         	call	_Read_b_eep	;wreg free
  5663  004A30  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5664  004A32  501B               	movf	??_doActionPulse+1,w,c
  5665  004A34  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5666  004A36  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5667  004A38  501A               	movf	??_doActionPulse,w,c
  5668  004A3A  241C               	addwf	??_doActionPulse+2,w,c
  5669  004A3C  0101               	movlb	1	; () banked
  5670  004A3E  0101               	movlb	1	; () banked
  5671  004A40  6F30               	movwf	(_channel_pulse_timer+10)& (0+255),b
  5672  004A42  0E00               	movlw	0
  5673  004A44  201D               	addwfc	??_doActionPulse+3,w,c
  5674  004A46  0101               	movlb	1	; () banked
  5675  004A48  6F31               	movwf	(_channel_pulse_timer+11)& (0+255),b
  5676                           
  5677                           ;main.c: 2466: break;
  5678  004A4A  D09B               	goto	l11029
  5679  004A4C                     l837:
  5680                           
  5681                           ;main.c: 2469: LATCbits.LATC7 = 0;
  5682  004A4C  9E8B               	bcf	3979,7,c	;volatile
  5683                           
  5684                           ;main.c: 2470: channel_pulse_flags |= 0x40;
  5685  004A4E  0100               	movlb	0	; () banked
  5686  004A50  0100               	movlb	0	; () banked
  5687  004A52  8DD5               	bsf	_channel_pulse_flags& (0+255),6,b
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;main.c: 2471: channel_pulse_timer[ 6 ] =
  5691                           ;main.c: 2472: Read_b_eep(0x43 + 46 + 12) * 256 +
  5692                           ;main.c: 2474: Read_b_eep(0x43 + 46 + 13);
  5693  004A54  0E00               	movlw	0
  5694  004A56  6E17               	movwf	?_Read_b_eep+1,c
  5695  004A58  0E7E               	movlw	126
  5696  004A5A  6E16               	movwf	?_Read_b_eep,c
  5697  004A5C  ECFD  F036         	call	_Read_b_eep	;wreg free
  5698  004A60  6E1A               	movwf	??_doActionPulse& (0+255),c
  5699  004A62  0E00               	movlw	0
  5700  004A64  6E17               	movwf	?_Read_b_eep+1,c
  5701  004A66  0E7D               	movlw	125
  5702  004A68  6E16               	movwf	?_Read_b_eep,c
  5703  004A6A  ECFD  F036         	call	_Read_b_eep	;wreg free
  5704  004A6E  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5705  004A70  501B               	movf	??_doActionPulse+1,w,c
  5706  004A72  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5707  004A74  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5708  004A76  501A               	movf	??_doActionPulse,w,c
  5709  004A78  241C               	addwf	??_doActionPulse+2,w,c
  5710  004A7A  0101               	movlb	1	; () banked
  5711  004A7C  0101               	movlb	1	; () banked
  5712  004A7E  6F32               	movwf	(_channel_pulse_timer+12)& (0+255),b
  5713  004A80  0E00               	movlw	0
  5714  004A82  201D               	addwfc	??_doActionPulse+3,w,c
  5715  004A84  0101               	movlb	1	; () banked
  5716  004A86  6F33               	movwf	(_channel_pulse_timer+13)& (0+255),b
  5717                           
  5718                           ;main.c: 2476: break;
  5719  004A88  D07C               	goto	l11029
  5720  004A8A                     l838:
  5721                           
  5722                           ;main.c: 2479: LATAbits.LATA2 = 0;
  5723  004A8A  9489               	bcf	3977,2,c	;volatile
  5724                           
  5725                           ;main.c: 2480: channel_pulse_flags |= 0x40;
  5726  004A8C  0100               	movlb	0	; () banked
  5727  004A8E  0100               	movlb	0	; () banked
  5728  004A90  8DD5               	bsf	_channel_pulse_flags& (0+255),6,b
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;main.c: 2481: channel_pulse_timer[ 7 ] =
  5732                           ;main.c: 2482: Read_b_eep(0x43 + 46 + 14) * 256 +
  5733                           ;main.c: 2484: Read_b_eep(0x43 + 46 + 15);
  5734  004A92  0E00               	movlw	0
  5735  004A94  6E17               	movwf	?_Read_b_eep+1,c
  5736  004A96  0E80               	movlw	128
  5737  004A98  6E16               	movwf	?_Read_b_eep,c
  5738  004A9A  ECFD  F036         	call	_Read_b_eep	;wreg free
  5739  004A9E  6E1A               	movwf	??_doActionPulse& (0+255),c
  5740  004AA0  0E00               	movlw	0
  5741  004AA2  6E17               	movwf	?_Read_b_eep+1,c
  5742  004AA4  0E7F               	movlw	127
  5743  004AA6  6E16               	movwf	?_Read_b_eep,c
  5744  004AA8  ECFD  F036         	call	_Read_b_eep	;wreg free
  5745  004AAC  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5746  004AAE  501B               	movf	??_doActionPulse+1,w,c
  5747  004AB0  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5748  004AB2  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5749  004AB4  501A               	movf	??_doActionPulse,w,c
  5750  004AB6  241C               	addwf	??_doActionPulse+2,w,c
  5751  004AB8  0101               	movlb	1	; () banked
  5752  004ABA  0101               	movlb	1	; () banked
  5753  004ABC  6F34               	movwf	(_channel_pulse_timer+14)& (0+255),b
  5754  004ABE  0E00               	movlw	0
  5755  004AC0  201D               	addwfc	??_doActionPulse+3,w,c
  5756  004AC2  0101               	movlb	1	; () banked
  5757  004AC4  6F35               	movwf	(_channel_pulse_timer+15)& (0+255),b
  5758                           
  5759                           ;main.c: 2486: break;
  5760  004AC6  D05D               	goto	l11029
  5761  004AC8                     l839:
  5762                           
  5763                           ;main.c: 2489: LATAbits.LATA2 = 0;
  5764  004AC8  9489               	bcf	3977,2,c	;volatile
  5765                           
  5766                           ;main.c: 2490: channel_pulse_flags |= 0x40;
  5767  004ACA  0100               	movlb	0	; () banked
  5768  004ACC  0100               	movlb	0	; () banked
  5769  004ACE  8DD5               	bsf	_channel_pulse_flags& (0+255),6,b
  5770                           
  5771                           ; BSR set to: 0
  5772                           ;main.c: 2491: channel_pulse_timer[ 8 ] =
  5773                           ;main.c: 2492: Read_b_eep(0x43 + 46 + 16) * 256 +
  5774                           ;main.c: 2494: Read_b_eep(0x43 + 46 + 17);
  5775  004AD0  0E00               	movlw	0
  5776  004AD2  6E17               	movwf	?_Read_b_eep+1,c
  5777  004AD4  0E82               	movlw	130
  5778  004AD6  6E16               	movwf	?_Read_b_eep,c
  5779  004AD8  ECFD  F036         	call	_Read_b_eep	;wreg free
  5780  004ADC  6E1A               	movwf	??_doActionPulse& (0+255),c
  5781  004ADE  0E00               	movlw	0
  5782  004AE0  6E17               	movwf	?_Read_b_eep+1,c
  5783  004AE2  0E81               	movlw	129
  5784  004AE4  6E16               	movwf	?_Read_b_eep,c
  5785  004AE6  ECFD  F036         	call	_Read_b_eep	;wreg free
  5786  004AEA  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5787  004AEC  501B               	movf	??_doActionPulse+1,w,c
  5788  004AEE  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5789  004AF0  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5790  004AF2  501A               	movf	??_doActionPulse,w,c
  5791  004AF4  241C               	addwf	??_doActionPulse+2,w,c
  5792  004AF6  0101               	movlb	1	; () banked
  5793  004AF8  0101               	movlb	1	; () banked
  5794  004AFA  6F36               	movwf	(_channel_pulse_timer+16)& (0+255),b
  5795  004AFC  0E00               	movlw	0
  5796  004AFE  201D               	addwfc	??_doActionPulse+3,w,c
  5797  004B00  0101               	movlb	1	; () banked
  5798  004B02  6F37               	movwf	(_channel_pulse_timer+17)& (0+255),b
  5799                           
  5800                           ;main.c: 2496: break;
  5801  004B04  D03E               	goto	l11029
  5802  004B06                     l840:
  5803                           
  5804                           ;main.c: 2499: LATAbits.LATA2 = 0;
  5805  004B06  9489               	bcf	3977,2,c	;volatile
  5806                           
  5807                           ;main.c: 2500: channel_pulse_flags |= 0x40;
  5808  004B08  0100               	movlb	0	; () banked
  5809  004B0A  0100               	movlb	0	; () banked
  5810  004B0C  8DD5               	bsf	_channel_pulse_flags& (0+255),6,b
  5811                           
  5812                           ; BSR set to: 0
  5813                           ;main.c: 2501: channel_pulse_timer[ 9 ] =
  5814                           ;main.c: 2502: Read_b_eep(0x43 + 46 + 18) * 256 +
  5815                           ;main.c: 2504: Read_b_eep(0x43 + 46 + 19);
  5816  004B0E  0E00               	movlw	0
  5817  004B10  6E17               	movwf	?_Read_b_eep+1,c
  5818  004B12  0E84               	movlw	132
  5819  004B14  6E16               	movwf	?_Read_b_eep,c
  5820  004B16  ECFD  F036         	call	_Read_b_eep	;wreg free
  5821  004B1A  6E1A               	movwf	??_doActionPulse& (0+255),c
  5822  004B1C  0E00               	movlw	0
  5823  004B1E  6E17               	movwf	?_Read_b_eep+1,c
  5824  004B20  0E83               	movlw	131
  5825  004B22  6E16               	movwf	?_Read_b_eep,c
  5826  004B24  ECFD  F036         	call	_Read_b_eep	;wreg free
  5827  004B28  6E1B               	movwf	(??_doActionPulse+1)& (0+255),c
  5828  004B2A  501B               	movf	??_doActionPulse+1,w,c
  5829  004B2C  6E1D               	movwf	(??_doActionPulse+3)& (0+255),c
  5830  004B2E  6A1C               	clrf	(??_doActionPulse+2)& (0+255),c
  5831  004B30  501A               	movf	??_doActionPulse,w,c
  5832  004B32  241C               	addwf	??_doActionPulse+2,w,c
  5833  004B34  0101               	movlb	1	; () banked
  5834  004B36  0101               	movlb	1	; () banked
  5835  004B38  6F38               	movwf	(_channel_pulse_timer+18)& (0+255),b
  5836  004B3A  0E00               	movlw	0
  5837  004B3C  201D               	addwfc	??_doActionPulse+3,w,c
  5838  004B3E  0101               	movlb	1	; () banked
  5839  004B40  6F39               	movwf	(_channel_pulse_timer+19)& (0+255),b
  5840                           
  5841                           ;main.c: 2506: break;
  5842  004B42  D01F               	goto	l11029
  5843  004B44                     l11027:
  5844  004B44  501F               	movf	doActionPulse@i,w,c
  5845                           
  5846                           ; Switch size 1, requested type "space"
  5847                           ; Number of cases is 10, Range of values is 0 to 9
  5848                           ; switch strategies available:
  5849                           ; Name         Instructions Cycles
  5850                           ; simple_byte           31    16 (average)
  5851                           ;	Chosen strategy is simple_byte
  5852  004B46  0A00               	xorlw	0	; case 0
  5853  004B48  B4D8               	btfsc	status,2,c
  5854  004B4A  D6C6               	goto	l830
  5855  004B4C  0A01               	xorlw	1	; case 1
  5856  004B4E  B4D8               	btfsc	status,2,c
  5857  004B50  D6E2               	goto	l832
  5858  004B52  0A03               	xorlw	3	; case 2
  5859  004B54  B4D8               	btfsc	status,2,c
  5860  004B56  D6FE               	goto	l833
  5861  004B58  0A01               	xorlw	1	; case 3
  5862  004B5A  B4D8               	btfsc	status,2,c
  5863  004B5C  D71A               	goto	l834
  5864  004B5E  0A07               	xorlw	7	; case 4
  5865  004B60  B4D8               	btfsc	status,2,c
  5866  004B62  D736               	goto	l835
  5867  004B64  0A01               	xorlw	1	; case 5
  5868  004B66  B4D8               	btfsc	status,2,c
  5869  004B68  D752               	goto	l836
  5870  004B6A  0A03               	xorlw	3	; case 6
  5871  004B6C  B4D8               	btfsc	status,2,c
  5872  004B6E  D76E               	goto	l837
  5873  004B70  0A01               	xorlw	1	; case 7
  5874  004B72  B4D8               	btfsc	status,2,c
  5875  004B74  D78A               	goto	l838
  5876  004B76  0A0F               	xorlw	15	; case 8
  5877  004B78  B4D8               	btfsc	status,2,c
  5878  004B7A  D7A6               	goto	l839
  5879  004B7C  0A01               	xorlw	1	; case 9
  5880  004B7E  B4D8               	btfsc	status,2,c
  5881  004B80  D7C2               	goto	l840
  5882  004B82                     l11029:
  5883  004B82  2A1F               	incf	doActionPulse@i,f,c
  5884  004B84                     L60:
  5885  004B84  0E07               	movlw	7
  5886  004B86  641F               	cpfsgt	doActionPulse@i,c
  5887  004B88  D67D               	goto	l10971
  5888  004B8A  0012               	return	
  5889  004B8C                     __end_of_doActionPulse:
  5890                           	opt stack 0
  5891                           tblptru	equ	0xFF8
  5892                           prodh	equ	0xFF4
  5893                           prodl	equ	0xFF3
  5894                           postinc0	equ	0xFEE
  5895                           wreg	equ	0xFE8
  5896                           postinc2	equ	0xFDE
  5897                           postdec2	equ	0xFDD
  5898                           fsr2h	equ	0xFDA
  5899                           fsr2l	equ	0xFD9
  5900                           status	equ	0xFD8
  5901                           
  5902 ;; *************** function _doActionOn *****************
  5903 ;; Defined at:
  5904 ;;		line 2141 in file "../main.c"
  5905 ;; Parameters:    Size  Location     Type
  5906 ;;  dmflags         1   66[BANK0 ] unsigned char 
  5907 ;;  arg             1   67[BANK0 ] unsigned char 
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;  i               1   73[BANK0 ] unsigned char 
  5910 ;;  val             1   72[BANK0 ] unsigned char 
  5911 ;; Return value:  Size  Location     Type
  5912 ;;		None               void
  5913 ;; Registers used:
  5914 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5920 ;;      Params:         0       2       0       0       0       0       0
  5921 ;;      Locals:         0       2       0       0       0       0       0
  5922 ;;      Temps:          0       4       0       0       0       0       0
  5923 ;;      Totals:         0       8       0       0       0       0       0
  5924 ;;Total ram usage:        8 bytes
  5925 ;; Hardware stack levels used:    1
  5926 ;; Hardware stack levels required when called:    7
  5927 ;; This function calls:
  5928 ;;		_Read_b_eep
  5929 ;;		_SendInformationEvent
  5930 ;; This function is called by:
  5931 ;;		_doDM
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           	psect	text12
  5936  003B8E                     __ptext12:
  5937                           	opt stack 0
  5938  003B8E                     _doActionOn:
  5939                           	opt stack 21
  5940                           
  5941                           ;main.c: 2143: unsigned char i;
  5942                           ;main.c: 2144: unsigned char val;
  5943                           ;main.c: 2146: for (i = 0; i < 8; i++) {
  5944                           
  5945                           ;incstack = 0
  5946                           ;incstack = 0
  5947  003B8E  0100               	movlb	0	; () banked
  5948  003B90  6FA4               	movwf	??_doActionOn& (0+255),b
  5949  003B92  0E00               	movlw	0
  5950  003B94  0100               	movlb	0	; () banked
  5951  003B96  0100               	movlb	0	; () banked
  5952  003B98  6FA9               	movwf	doActionOn@i& (0+255),b
  5953  003B9A  0100               	movlb	0	; () banked
  5954  003B9C  51A4               	movf	??_doActionOn& (0+255),w,b
  5955  003B9E  D249               	goto	L61
  5956  003BA0                     l10901:
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;main.c: 2149: if ( !( arg & ( 1 << i ) ) ) continue;
  5960  003BA0  C0A9  F0A4         	movff	doActionOn@i,??_doActionOn
  5961  003BA4  0E01               	movlw	1
  5962  003BA6  0100               	movlb	0	; () banked
  5963  003BA8  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  5964  003BAA  0100               	movlb	0	; () banked
  5965  003BAC  2BA4               	incf	??_doActionOn& (0+255),f,b
  5966  003BAE  D003               	goto	u13284
  5967  003BB0                     u13285:
  5968  003BB0  0100               	movlb	0	; () banked
  5969  003BB2  90D8               	bcf	status,0,c
  5970  003BB4  37A5               	rlcf	(??_doActionOn+1)& (0+255),f,b
  5971  003BB6                     u13284:
  5972  003BB6  0100               	movlb	0	; () banked
  5973  003BB8  2FA4               	decfsz	??_doActionOn& (0+255),f,b
  5974  003BBA  D7FA               	goto	u13285
  5975  003BBC  0100               	movlb	0	; () banked
  5976  003BBE  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  5977  003BC0  0100               	movlb	0	; () banked
  5978  003BC2  0100               	movlb	0	; () banked
  5979  003BC4  15A3               	andwf	doActionOn@arg& (0+255),w,b
  5980  003BC6  0900               	iorlw	0
  5981  003BC8  B4D8               	btfsc	status,2,c
  5982  003BCA  D230               	goto	l10961
  5983                           
  5984                           ; BSR set to: 0
  5985                           ;main.c: 2152: if ( dmflags & 0x08 ) {
  5986                           
  5987                           ; BSR set to: 0
  5988  003BCC  0100               	movlb	0	; () banked
  5989  003BCE  0100               	movlb	0	; () banked
  5990  003BD0  A7A2               	btfss	doActionOn@dmflags& (0+255),3,b
  5991  003BD2  D00F               	goto	l10909
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;main.c: 2153: if ( vscp_imsg.data[ 2 ] != Read_b_eep(0x43 + 3 + i) ) {
  5995  003BD4  0E46               	movlw	70
  5996  003BD6  0100               	movlb	0	; () banked
  5997  003BD8  0100               	movlb	0	; () banked
  5998  003BDA  25A9               	addwf	doActionOn@i& (0+255),w,b
  5999  003BDC  6E16               	movwf	?_Read_b_eep,c
  6000  003BDE  6A17               	clrf	?_Read_b_eep+1,c
  6001  003BE0  0E00               	movlw	0
  6002  003BE2  2217               	addwfc	?_Read_b_eep+1,f,c
  6003  003BE4  ECFD  F036         	call	_Read_b_eep	;wreg free
  6004  003BE8  0100               	movlb	0	; () banked
  6005  003BEA  0100               	movlb	0	; () banked
  6006  003BEC  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  6007  003BEE  A4D8               	btfss	status,2,c
  6008  003BF0  D21D               	goto	l10961
  6009  003BF2                     l10909:
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;main.c: 2157: }
  6013                           ;main.c: 2158: }
  6014                           ;main.c: 2160: val = Read_b_eep(0x43 + 24 + i);
  6015  003BF2  0E5B               	movlw	91
  6016  003BF4  0100               	movlb	0	; () banked
  6017  003BF6  0100               	movlb	0	; () banked
  6018  003BF8  25A9               	addwf	doActionOn@i& (0+255),w,b
  6019  003BFA  6E16               	movwf	?_Read_b_eep,c
  6020  003BFC  6A17               	clrf	?_Read_b_eep+1,c
  6021  003BFE  0E00               	movlw	0
  6022  003C00  2217               	addwfc	?_Read_b_eep+1,f,c
  6023  003C02  ECFD  F036         	call	_Read_b_eep	;wreg free
  6024  003C06  0100               	movlb	0	; () banked
  6025  003C08  0100               	movlb	0	; () banked
  6026  003C0A  6FA8               	movwf	doActionOn@val& (0+255),b
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;main.c: 2163: if ( !( val & 0x80 ) ) continue;
  6030  003C0C  0100               	movlb	0	; () banked
  6031  003C0E  0100               	movlb	0	; () banked
  6032  003C10  AFA8               	btfss	doActionOn@val& (0+255),7,b
  6033  003C12  D20C               	goto	l10961
  6034  003C14  D1D6               	goto	l10957
  6035  003C16                     l774:
  6036                           
  6037                           ; BSR set to: 0
  6038                           ;main.c: 2168: LATBbits.LATB0 = 1;
  6039  003C16  808A               	bsf	3978,0,c	;volatile
  6040                           
  6041                           ; BSR set to: 0
  6042                           ;main.c: 2170: if (Read_b_eep(0x43 + 24) & 0x04 ) {
  6043  003C18  0E00               	movlw	0
  6044  003C1A  6E17               	movwf	?_Read_b_eep+1,c
  6045  003C1C  0E5B               	movlw	91
  6046  003C1E  6E16               	movwf	?_Read_b_eep,c
  6047  003C20  ECFD  F036         	call	_Read_b_eep	;wreg free
  6048  003C24  0100               	movlb	0	; () banked
  6049  003C26  6FA4               	movwf	??_doActionOn& (0+255),b
  6050  003C28  0100               	movlb	0	; () banked
  6051  003C2A  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6052  003C2C  D1EB               	goto	l776
  6053                           
  6054                           ; BSR set to: 0
  6055                           ;main.c: 2171: channel_protection_timer[ 0 ] =
  6056                           ;main.c: 2172: Read_b_eep(0x43 + 46 + 20) * 256 +
  6057                           ;main.c: 2174: Read_b_eep(0x43 + 46 + 21);
  6058  003C2E  0E00               	movlw	0
  6059  003C30  6E17               	movwf	?_Read_b_eep+1,c
  6060  003C32  0E86               	movlw	134
  6061  003C34  6E16               	movwf	?_Read_b_eep,c
  6062  003C36  ECFD  F036         	call	_Read_b_eep	;wreg free
  6063  003C3A  0100               	movlb	0	; () banked
  6064  003C3C  6FA4               	movwf	??_doActionOn& (0+255),b
  6065  003C3E  0E00               	movlw	0
  6066  003C40  6E17               	movwf	?_Read_b_eep+1,c
  6067  003C42  0E85               	movlw	133
  6068  003C44  6E16               	movwf	?_Read_b_eep,c
  6069  003C46  ECFD  F036         	call	_Read_b_eep	;wreg free
  6070  003C4A  0100               	movlb	0	; () banked
  6071  003C4C  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6072  003C4E  0100               	movlb	0	; () banked
  6073  003C50  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6074  003C52  0100               	movlb	0	; () banked
  6075  003C54  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6076  003C56  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6077  003C58  0100               	movlb	0	; () banked
  6078  003C5A  51A4               	movf	??_doActionOn& (0+255),w,b
  6079  003C5C  0100               	movlb	0	; () banked
  6080  003C5E  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6081  003C60  0100               	movlb	0	; () banked
  6082  003C62  0100               	movlb	0	; () banked
  6083  003C64  6FBD               	movwf	_channel_protection_timer& (0+255),b
  6084  003C66  0100               	movlb	0	; () banked
  6085  003C68  0E00               	movlw	0
  6086  003C6A  0100               	movlb	0	; () banked
  6087  003C6C  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6088  003C6E  0100               	movlb	0	; () banked
  6089  003C70  6FBE               	movwf	(_channel_protection_timer+1)& (0+255),b
  6090  003C72  D1C8               	goto	l776
  6091  003C74                     l777:
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;main.c: 2180: LATBbits.LATB1 = 1;
  6095  003C74  828A               	bsf	3978,1,c	;volatile
  6096                           
  6097                           ; BSR set to: 0
  6098                           ;main.c: 2182: if (Read_b_eep(0x43 + 25) & 0x04 ) {
  6099  003C76  0E00               	movlw	0
  6100  003C78  6E17               	movwf	?_Read_b_eep+1,c
  6101  003C7A  0E5C               	movlw	92
  6102  003C7C  6E16               	movwf	?_Read_b_eep,c
  6103  003C7E  ECFD  F036         	call	_Read_b_eep	;wreg free
  6104  003C82  0100               	movlb	0	; () banked
  6105  003C84  6FA4               	movwf	??_doActionOn& (0+255),b
  6106  003C86  0100               	movlb	0	; () banked
  6107  003C88  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6108  003C8A  D1BC               	goto	l776
  6109                           
  6110                           ; BSR set to: 0
  6111                           ;main.c: 2183: channel_protection_timer[ 1 ] =
  6112                           ;main.c: 2184: Read_b_eep(0x43 + 46 + 22) * 256 +
  6113                           ;main.c: 2186: Read_b_eep(0x43 + 46 + 23);
  6114  003C8C  0E00               	movlw	0
  6115  003C8E  6E17               	movwf	?_Read_b_eep+1,c
  6116  003C90  0E88               	movlw	136
  6117  003C92  6E16               	movwf	?_Read_b_eep,c
  6118  003C94  ECFD  F036         	call	_Read_b_eep	;wreg free
  6119  003C98  0100               	movlb	0	; () banked
  6120  003C9A  6FA4               	movwf	??_doActionOn& (0+255),b
  6121  003C9C  0E00               	movlw	0
  6122  003C9E  6E17               	movwf	?_Read_b_eep+1,c
  6123  003CA0  0E87               	movlw	135
  6124  003CA2  6E16               	movwf	?_Read_b_eep,c
  6125  003CA4  ECFD  F036         	call	_Read_b_eep	;wreg free
  6126  003CA8  0100               	movlb	0	; () banked
  6127  003CAA  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6128  003CAC  0100               	movlb	0	; () banked
  6129  003CAE  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6130  003CB0  0100               	movlb	0	; () banked
  6131  003CB2  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6132  003CB4  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6133  003CB6  0100               	movlb	0	; () banked
  6134  003CB8  51A4               	movf	??_doActionOn& (0+255),w,b
  6135  003CBA  0100               	movlb	0	; () banked
  6136  003CBC  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6137  003CBE  0100               	movlb	0	; () banked
  6138  003CC0  0100               	movlb	0	; () banked
  6139  003CC2  6FBF               	movwf	(_channel_protection_timer+2)& (0+255),b
  6140  003CC4  0100               	movlb	0	; () banked
  6141  003CC6  0E00               	movlw	0
  6142  003CC8  0100               	movlb	0	; () banked
  6143  003CCA  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6144  003CCC  0100               	movlb	0	; () banked
  6145  003CCE  6FC0               	movwf	(_channel_protection_timer+3)& (0+255),b
  6146  003CD0  D199               	goto	l776
  6147  003CD2                     l779:
  6148                           
  6149                           ; BSR set to: 0
  6150                           ;main.c: 2192: LATCbits.LATC3 = 1;
  6151  003CD2  868B               	bsf	3979,3,c	;volatile
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;main.c: 2194: if (Read_b_eep(0x43 + 26) & 0x04 ) {
  6155  003CD4  0E00               	movlw	0
  6156  003CD6  6E17               	movwf	?_Read_b_eep+1,c
  6157  003CD8  0E5D               	movlw	93
  6158  003CDA  6E16               	movwf	?_Read_b_eep,c
  6159  003CDC  ECFD  F036         	call	_Read_b_eep	;wreg free
  6160  003CE0  0100               	movlb	0	; () banked
  6161  003CE2  6FA4               	movwf	??_doActionOn& (0+255),b
  6162  003CE4  0100               	movlb	0	; () banked
  6163  003CE6  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6164  003CE8  D18D               	goto	l776
  6165                           
  6166                           ; BSR set to: 0
  6167                           ;main.c: 2195: channel_protection_timer[ 2 ] =
  6168                           ;main.c: 2196: Read_b_eep(0x43 + 46 + 24) * 256 +
  6169                           ;main.c: 2198: Read_b_eep(0x43 + 46 + 25);
  6170  003CEA  0E00               	movlw	0
  6171  003CEC  6E17               	movwf	?_Read_b_eep+1,c
  6172  003CEE  0E8A               	movlw	138
  6173  003CF0  6E16               	movwf	?_Read_b_eep,c
  6174  003CF2  ECFD  F036         	call	_Read_b_eep	;wreg free
  6175  003CF6  0100               	movlb	0	; () banked
  6176  003CF8  6FA4               	movwf	??_doActionOn& (0+255),b
  6177  003CFA  0E00               	movlw	0
  6178  003CFC  6E17               	movwf	?_Read_b_eep+1,c
  6179  003CFE  0E89               	movlw	137
  6180  003D00  6E16               	movwf	?_Read_b_eep,c
  6181  003D02  ECFD  F036         	call	_Read_b_eep	;wreg free
  6182  003D06  0100               	movlb	0	; () banked
  6183  003D08  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6184  003D0A  0100               	movlb	0	; () banked
  6185  003D0C  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6186  003D0E  0100               	movlb	0	; () banked
  6187  003D10  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6188  003D12  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6189  003D14  0100               	movlb	0	; () banked
  6190  003D16  51A4               	movf	??_doActionOn& (0+255),w,b
  6191  003D18  0100               	movlb	0	; () banked
  6192  003D1A  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6193  003D1C  0100               	movlb	0	; () banked
  6194  003D1E  0100               	movlb	0	; () banked
  6195  003D20  6FC1               	movwf	(_channel_protection_timer+4)& (0+255),b
  6196  003D22  0100               	movlb	0	; () banked
  6197  003D24  0E00               	movlw	0
  6198  003D26  0100               	movlb	0	; () banked
  6199  003D28  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6200  003D2A  0100               	movlb	0	; () banked
  6201  003D2C  6FC2               	movwf	(_channel_protection_timer+5)& (0+255),b
  6202  003D2E  D16A               	goto	l776
  6203  003D30                     l781:
  6204                           
  6205                           ; BSR set to: 0
  6206                           ;main.c: 2204: LATCbits.LATC4 = 1;
  6207  003D30  888B               	bsf	3979,4,c	;volatile
  6208                           
  6209                           ; BSR set to: 0
  6210                           ;main.c: 2206: if ( Read_b_eep(0x43 + 27) & 0x04 ) {
  6211  003D32  0E00               	movlw	0
  6212  003D34  6E17               	movwf	?_Read_b_eep+1,c
  6213  003D36  0E5E               	movlw	94
  6214  003D38  6E16               	movwf	?_Read_b_eep,c
  6215  003D3A  ECFD  F036         	call	_Read_b_eep	;wreg free
  6216  003D3E  0100               	movlb	0	; () banked
  6217  003D40  6FA4               	movwf	??_doActionOn& (0+255),b
  6218  003D42  0100               	movlb	0	; () banked
  6219  003D44  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6220  003D46  D15E               	goto	l776
  6221                           
  6222                           ; BSR set to: 0
  6223                           ;main.c: 2207: channel_protection_timer[ 3 ] =
  6224                           ;main.c: 2208: Read_b_eep(0x43 + 46 + 26) * 256 +
  6225                           ;main.c: 2210: Read_b_eep(0x43 + 46 + 27);
  6226  003D48  0E00               	movlw	0
  6227  003D4A  6E17               	movwf	?_Read_b_eep+1,c
  6228  003D4C  0E8C               	movlw	140
  6229  003D4E  6E16               	movwf	?_Read_b_eep,c
  6230  003D50  ECFD  F036         	call	_Read_b_eep	;wreg free
  6231  003D54  0100               	movlb	0	; () banked
  6232  003D56  6FA4               	movwf	??_doActionOn& (0+255),b
  6233  003D58  0E00               	movlw	0
  6234  003D5A  6E17               	movwf	?_Read_b_eep+1,c
  6235  003D5C  0E8B               	movlw	139
  6236  003D5E  6E16               	movwf	?_Read_b_eep,c
  6237  003D60  ECFD  F036         	call	_Read_b_eep	;wreg free
  6238  003D64  0100               	movlb	0	; () banked
  6239  003D66  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6240  003D68  0100               	movlb	0	; () banked
  6241  003D6A  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6242  003D6C  0100               	movlb	0	; () banked
  6243  003D6E  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6244  003D70  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6245  003D72  0100               	movlb	0	; () banked
  6246  003D74  51A4               	movf	??_doActionOn& (0+255),w,b
  6247  003D76  0100               	movlb	0	; () banked
  6248  003D78  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6249  003D7A  0100               	movlb	0	; () banked
  6250  003D7C  0100               	movlb	0	; () banked
  6251  003D7E  6FC3               	movwf	(_channel_protection_timer+6)& (0+255),b
  6252  003D80  0100               	movlb	0	; () banked
  6253  003D82  0E00               	movlw	0
  6254  003D84  0100               	movlb	0	; () banked
  6255  003D86  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6256  003D88  0100               	movlb	0	; () banked
  6257  003D8A  6FC4               	movwf	(_channel_protection_timer+7)& (0+255),b
  6258  003D8C  D13B               	goto	l776
  6259  003D8E                     l783:
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;main.c: 2216: LATCbits.LATC5 = 1;
  6263  003D8E  8A8B               	bsf	3979,5,c	;volatile
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;main.c: 2218: if (Read_b_eep(0x43 + 28) & 0x04 ) {
  6267  003D90  0E00               	movlw	0
  6268  003D92  6E17               	movwf	?_Read_b_eep+1,c
  6269  003D94  0E5F               	movlw	95
  6270  003D96  6E16               	movwf	?_Read_b_eep,c
  6271  003D98  ECFD  F036         	call	_Read_b_eep	;wreg free
  6272  003D9C  0100               	movlb	0	; () banked
  6273  003D9E  6FA4               	movwf	??_doActionOn& (0+255),b
  6274  003DA0  0100               	movlb	0	; () banked
  6275  003DA2  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6276  003DA4  D12F               	goto	l776
  6277                           
  6278                           ; BSR set to: 0
  6279                           ;main.c: 2219: channel_protection_timer[ 4 ] =
  6280                           ;main.c: 2220: Read_b_eep(0x43 + 46 + 28) * 256 +
  6281                           ;main.c: 2222: Read_b_eep(0x43 + 46 + 29);
  6282  003DA6  0E00               	movlw	0
  6283  003DA8  6E17               	movwf	?_Read_b_eep+1,c
  6284  003DAA  0E8E               	movlw	142
  6285  003DAC  6E16               	movwf	?_Read_b_eep,c
  6286  003DAE  ECFD  F036         	call	_Read_b_eep	;wreg free
  6287  003DB2  0100               	movlb	0	; () banked
  6288  003DB4  6FA4               	movwf	??_doActionOn& (0+255),b
  6289  003DB6  0E00               	movlw	0
  6290  003DB8  6E17               	movwf	?_Read_b_eep+1,c
  6291  003DBA  0E8D               	movlw	141
  6292  003DBC  6E16               	movwf	?_Read_b_eep,c
  6293  003DBE  ECFD  F036         	call	_Read_b_eep	;wreg free
  6294  003DC2  0100               	movlb	0	; () banked
  6295  003DC4  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6296  003DC6  0100               	movlb	0	; () banked
  6297  003DC8  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6298  003DCA  0100               	movlb	0	; () banked
  6299  003DCC  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6300  003DCE  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6301  003DD0  0100               	movlb	0	; () banked
  6302  003DD2  51A4               	movf	??_doActionOn& (0+255),w,b
  6303  003DD4  0100               	movlb	0	; () banked
  6304  003DD6  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6305  003DD8  0100               	movlb	0	; () banked
  6306  003DDA  0100               	movlb	0	; () banked
  6307  003DDC  6FC5               	movwf	(_channel_protection_timer+8)& (0+255),b
  6308  003DDE  0100               	movlb	0	; () banked
  6309  003DE0  0E00               	movlw	0
  6310  003DE2  0100               	movlb	0	; () banked
  6311  003DE4  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6312  003DE6  0100               	movlb	0	; () banked
  6313  003DE8  6FC6               	movwf	(_channel_protection_timer+9)& (0+255),b
  6314  003DEA  D10C               	goto	l776
  6315  003DEC                     l785:
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;main.c: 2228: LATCbits.LATC6 = 1;
  6319  003DEC  8C8B               	bsf	3979,6,c	;volatile
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;main.c: 2230: if (Read_b_eep(0x43 + 29) & 0x04) {
  6323  003DEE  0E00               	movlw	0
  6324  003DF0  6E17               	movwf	?_Read_b_eep+1,c
  6325  003DF2  0E60               	movlw	96
  6326  003DF4  6E16               	movwf	?_Read_b_eep,c
  6327  003DF6  ECFD  F036         	call	_Read_b_eep	;wreg free
  6328  003DFA  0100               	movlb	0	; () banked
  6329  003DFC  6FA4               	movwf	??_doActionOn& (0+255),b
  6330  003DFE  0100               	movlb	0	; () banked
  6331  003E00  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6332  003E02  D100               	goto	l776
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;main.c: 2231: channel_protection_timer[ 5 ] =
  6336                           ;main.c: 2232: Read_b_eep(0x43 + 46 + 30) * 256 +
  6337                           ;main.c: 2234: Read_b_eep(0x43 + 46 + 31);
  6338  003E04  0E00               	movlw	0
  6339  003E06  6E17               	movwf	?_Read_b_eep+1,c
  6340  003E08  0E90               	movlw	144
  6341  003E0A  6E16               	movwf	?_Read_b_eep,c
  6342  003E0C  ECFD  F036         	call	_Read_b_eep	;wreg free
  6343  003E10  0100               	movlb	0	; () banked
  6344  003E12  6FA4               	movwf	??_doActionOn& (0+255),b
  6345  003E14  0E00               	movlw	0
  6346  003E16  6E17               	movwf	?_Read_b_eep+1,c
  6347  003E18  0E8F               	movlw	143
  6348  003E1A  6E16               	movwf	?_Read_b_eep,c
  6349  003E1C  ECFD  F036         	call	_Read_b_eep	;wreg free
  6350  003E20  0100               	movlb	0	; () banked
  6351  003E22  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6352  003E24  0100               	movlb	0	; () banked
  6353  003E26  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6354  003E28  0100               	movlb	0	; () banked
  6355  003E2A  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6356  003E2C  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6357  003E2E  0100               	movlb	0	; () banked
  6358  003E30  51A4               	movf	??_doActionOn& (0+255),w,b
  6359  003E32  0100               	movlb	0	; () banked
  6360  003E34  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6361  003E36  0100               	movlb	0	; () banked
  6362  003E38  0100               	movlb	0	; () banked
  6363  003E3A  6FC7               	movwf	(_channel_protection_timer+10)& (0+255),b
  6364  003E3C  0100               	movlb	0	; () banked
  6365  003E3E  0E00               	movlw	0
  6366  003E40  0100               	movlb	0	; () banked
  6367  003E42  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6368  003E44  0100               	movlb	0	; () banked
  6369  003E46  6FC8               	movwf	(_channel_protection_timer+11)& (0+255),b
  6370  003E48  D0DD               	goto	l776
  6371  003E4A                     l787:
  6372                           
  6373                           ; BSR set to: 0
  6374                           ;main.c: 2240: LATCbits.LATC7 = 1;
  6375  003E4A  8E8B               	bsf	3979,7,c	;volatile
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;main.c: 2242: if ( Read_b_eep(0x43 + 30) & 0x04) {
  6379  003E4C  0E00               	movlw	0
  6380  003E4E  6E17               	movwf	?_Read_b_eep+1,c
  6381  003E50  0E61               	movlw	97
  6382  003E52  6E16               	movwf	?_Read_b_eep,c
  6383  003E54  ECFD  F036         	call	_Read_b_eep	;wreg free
  6384  003E58  0100               	movlb	0	; () banked
  6385  003E5A  6FA4               	movwf	??_doActionOn& (0+255),b
  6386  003E5C  0100               	movlb	0	; () banked
  6387  003E5E  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6388  003E60  D0D1               	goto	l776
  6389                           
  6390                           ; BSR set to: 0
  6391                           ;main.c: 2243: channel_protection_timer[ 6 ] =
  6392                           ;main.c: 2244: Read_b_eep(0x43 + 46 + 32) * 256 +
  6393                           ;main.c: 2246: Read_b_eep(0x43 + 46 + 33);
  6394  003E62  0E00               	movlw	0
  6395  003E64  6E17               	movwf	?_Read_b_eep+1,c
  6396  003E66  0E92               	movlw	146
  6397  003E68  6E16               	movwf	?_Read_b_eep,c
  6398  003E6A  ECFD  F036         	call	_Read_b_eep	;wreg free
  6399  003E6E  0100               	movlb	0	; () banked
  6400  003E70  6FA4               	movwf	??_doActionOn& (0+255),b
  6401  003E72  0E00               	movlw	0
  6402  003E74  6E17               	movwf	?_Read_b_eep+1,c
  6403  003E76  0E91               	movlw	145
  6404  003E78  6E16               	movwf	?_Read_b_eep,c
  6405  003E7A  ECFD  F036         	call	_Read_b_eep	;wreg free
  6406  003E7E  0100               	movlb	0	; () banked
  6407  003E80  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6408  003E82  0100               	movlb	0	; () banked
  6409  003E84  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6410  003E86  0100               	movlb	0	; () banked
  6411  003E88  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6412  003E8A  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6413  003E8C  0100               	movlb	0	; () banked
  6414  003E8E  51A4               	movf	??_doActionOn& (0+255),w,b
  6415  003E90  0100               	movlb	0	; () banked
  6416  003E92  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6417  003E94  0100               	movlb	0	; () banked
  6418  003E96  0100               	movlb	0	; () banked
  6419  003E98  6FC9               	movwf	(_channel_protection_timer+12)& (0+255),b
  6420  003E9A  0100               	movlb	0	; () banked
  6421  003E9C  0E00               	movlw	0
  6422  003E9E  0100               	movlb	0	; () banked
  6423  003EA0  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6424  003EA2  0100               	movlb	0	; () banked
  6425  003EA4  6FCA               	movwf	(_channel_protection_timer+13)& (0+255),b
  6426  003EA6  D0AE               	goto	l776
  6427  003EA8                     l789:
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;main.c: 2252: LATAbits.LATA2 = 1;
  6431  003EA8  8489               	bsf	3977,2,c	;volatile
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;main.c: 2254: if ( Read_b_eep(0x43 + 31) & 0x04) {
  6435  003EAA  0E00               	movlw	0
  6436  003EAC  6E17               	movwf	?_Read_b_eep+1,c
  6437  003EAE  0E62               	movlw	98
  6438  003EB0  6E16               	movwf	?_Read_b_eep,c
  6439  003EB2  ECFD  F036         	call	_Read_b_eep	;wreg free
  6440  003EB6  0100               	movlb	0	; () banked
  6441  003EB8  6FA4               	movwf	??_doActionOn& (0+255),b
  6442  003EBA  0100               	movlb	0	; () banked
  6443  003EBC  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6444  003EBE  D0A2               	goto	l776
  6445                           
  6446                           ; BSR set to: 0
  6447                           ;main.c: 2255: channel_protection_timer[ 7 ] =
  6448                           ;main.c: 2256: Read_b_eep(0x43 + 46 + 34) * 256 +
  6449                           ;main.c: 2258: Read_b_eep(0x43 + 46 + 35);
  6450  003EC0  0E00               	movlw	0
  6451  003EC2  6E17               	movwf	?_Read_b_eep+1,c
  6452  003EC4  0E94               	movlw	148
  6453  003EC6  6E16               	movwf	?_Read_b_eep,c
  6454  003EC8  ECFD  F036         	call	_Read_b_eep	;wreg free
  6455  003ECC  0100               	movlb	0	; () banked
  6456  003ECE  6FA4               	movwf	??_doActionOn& (0+255),b
  6457  003ED0  0E00               	movlw	0
  6458  003ED2  6E17               	movwf	?_Read_b_eep+1,c
  6459  003ED4  0E93               	movlw	147
  6460  003ED6  6E16               	movwf	?_Read_b_eep,c
  6461  003ED8  ECFD  F036         	call	_Read_b_eep	;wreg free
  6462  003EDC  0100               	movlb	0	; () banked
  6463  003EDE  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6464  003EE0  0100               	movlb	0	; () banked
  6465  003EE2  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6466  003EE4  0100               	movlb	0	; () banked
  6467  003EE6  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6468  003EE8  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6469  003EEA  0100               	movlb	0	; () banked
  6470  003EEC  51A4               	movf	??_doActionOn& (0+255),w,b
  6471  003EEE  0100               	movlb	0	; () banked
  6472  003EF0  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6473  003EF2  0100               	movlb	0	; () banked
  6474  003EF4  0100               	movlb	0	; () banked
  6475  003EF6  6FCB               	movwf	(_channel_protection_timer+14)& (0+255),b
  6476  003EF8  0100               	movlb	0	; () banked
  6477  003EFA  0E00               	movlw	0
  6478  003EFC  0100               	movlb	0	; () banked
  6479  003EFE  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6480  003F00  0100               	movlb	0	; () banked
  6481  003F02  6FCC               	movwf	(_channel_protection_timer+15)& (0+255),b
  6482  003F04  D07F               	goto	l776
  6483  003F06                     l791:
  6484                           
  6485                           ; BSR set to: 0
  6486                           ;main.c: 2264: LATAbits.LATA1 = 1;
  6487  003F06  8289               	bsf	3977,1,c	;volatile
  6488                           
  6489                           ; BSR set to: 0
  6490                           ;main.c: 2266: if ( Read_b_eep(0x43 + 32) & 0x04) {
  6491  003F08  0E00               	movlw	0
  6492  003F0A  6E17               	movwf	?_Read_b_eep+1,c
  6493  003F0C  0E63               	movlw	99
  6494  003F0E  6E16               	movwf	?_Read_b_eep,c
  6495  003F10  ECFD  F036         	call	_Read_b_eep	;wreg free
  6496  003F14  0100               	movlb	0	; () banked
  6497  003F16  6FA4               	movwf	??_doActionOn& (0+255),b
  6498  003F18  0100               	movlb	0	; () banked
  6499  003F1A  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6500  003F1C  D073               	goto	l776
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;main.c: 2267: channel_protection_timer[ 8 ] =
  6504                           ;main.c: 2268: Read_b_eep(0x43 + 46 + 36) * 256 +
  6505                           ;main.c: 2270: Read_b_eep(0x43 + 46 + 37);
  6506  003F1E  0E00               	movlw	0
  6507  003F20  6E17               	movwf	?_Read_b_eep+1,c
  6508  003F22  0E96               	movlw	150
  6509  003F24  6E16               	movwf	?_Read_b_eep,c
  6510  003F26  ECFD  F036         	call	_Read_b_eep	;wreg free
  6511  003F2A  0100               	movlb	0	; () banked
  6512  003F2C  6FA4               	movwf	??_doActionOn& (0+255),b
  6513  003F2E  0E00               	movlw	0
  6514  003F30  6E17               	movwf	?_Read_b_eep+1,c
  6515  003F32  0E95               	movlw	149
  6516  003F34  6E16               	movwf	?_Read_b_eep,c
  6517  003F36  ECFD  F036         	call	_Read_b_eep	;wreg free
  6518  003F3A  0100               	movlb	0	; () banked
  6519  003F3C  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6520  003F3E  0100               	movlb	0	; () banked
  6521  003F40  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6522  003F42  0100               	movlb	0	; () banked
  6523  003F44  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6524  003F46  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6525  003F48  0100               	movlb	0	; () banked
  6526  003F4A  51A4               	movf	??_doActionOn& (0+255),w,b
  6527  003F4C  0100               	movlb	0	; () banked
  6528  003F4E  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6529  003F50  0100               	movlb	0	; () banked
  6530  003F52  0100               	movlb	0	; () banked
  6531  003F54  6FCD               	movwf	(_channel_protection_timer+16)& (0+255),b
  6532  003F56  0100               	movlb	0	; () banked
  6533  003F58  0E00               	movlw	0
  6534  003F5A  0100               	movlb	0	; () banked
  6535  003F5C  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6536  003F5E  0100               	movlb	0	; () banked
  6537  003F60  6FCE               	movwf	(_channel_protection_timer+17)& (0+255),b
  6538  003F62  D050               	goto	l776
  6539  003F64                     l793:
  6540                           
  6541                           ; BSR set to: 0
  6542                           ;main.c: 2276: LATAbits.LATA2 = 1;
  6543  003F64  8489               	bsf	3977,2,c	;volatile
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;main.c: 2278: if ( Read_b_eep(0x43 + 33) & 0x04) {
  6547  003F66  0E00               	movlw	0
  6548  003F68  6E17               	movwf	?_Read_b_eep+1,c
  6549  003F6A  0E64               	movlw	100
  6550  003F6C  6E16               	movwf	?_Read_b_eep,c
  6551  003F6E  ECFD  F036         	call	_Read_b_eep	;wreg free
  6552  003F72  0100               	movlb	0	; () banked
  6553  003F74  6FA4               	movwf	??_doActionOn& (0+255),b
  6554  003F76  0100               	movlb	0	; () banked
  6555  003F78  A5A4               	btfss	??_doActionOn& (0+255),2,b
  6556  003F7A  D044               	goto	l776
  6557                           
  6558                           ; BSR set to: 0
  6559                           ;main.c: 2279: channel_protection_timer[ 9 ] =
  6560                           ;main.c: 2280: Read_b_eep(0x43 + 46 + 38) * 256 +
  6561                           ;main.c: 2282: Read_b_eep(0x43 + 46 + 39);
  6562  003F7C  0E00               	movlw	0
  6563  003F7E  6E17               	movwf	?_Read_b_eep+1,c
  6564  003F80  0E98               	movlw	152
  6565  003F82  6E16               	movwf	?_Read_b_eep,c
  6566  003F84  ECFD  F036         	call	_Read_b_eep	;wreg free
  6567  003F88  0100               	movlb	0	; () banked
  6568  003F8A  6FA4               	movwf	??_doActionOn& (0+255),b
  6569  003F8C  0E00               	movlw	0
  6570  003F8E  6E17               	movwf	?_Read_b_eep+1,c
  6571  003F90  0E97               	movlw	151
  6572  003F92  6E16               	movwf	?_Read_b_eep,c
  6573  003F94  ECFD  F036         	call	_Read_b_eep	;wreg free
  6574  003F98  0100               	movlb	0	; () banked
  6575  003F9A  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6576  003F9C  0100               	movlb	0	; () banked
  6577  003F9E  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6578  003FA0  0100               	movlb	0	; () banked
  6579  003FA2  6FA7               	movwf	(??_doActionOn+3)& (0+255),b
  6580  003FA4  6BA6               	clrf	(??_doActionOn+2)& (0+255),b
  6581  003FA6  0100               	movlb	0	; () banked
  6582  003FA8  51A4               	movf	??_doActionOn& (0+255),w,b
  6583  003FAA  0100               	movlb	0	; () banked
  6584  003FAC  25A6               	addwf	(??_doActionOn+2)& (0+255),w,b
  6585  003FAE  0100               	movlb	0	; () banked
  6586  003FB0  0100               	movlb	0	; () banked
  6587  003FB2  6FCF               	movwf	(_channel_protection_timer+18)& (0+255),b
  6588  003FB4  0100               	movlb	0	; () banked
  6589  003FB6  0E00               	movlw	0
  6590  003FB8  0100               	movlb	0	; () banked
  6591  003FBA  21A7               	addwfc	(??_doActionOn+3)& (0+255),w,b
  6592  003FBC  0100               	movlb	0	; () banked
  6593  003FBE  6FD0               	movwf	(_channel_protection_timer+19)& (0+255),b
  6594  003FC0  D021               	goto	l776
  6595  003FC2                     l10957:
  6596                           
  6597                           ; BSR set to: 0
  6598  003FC2  0100               	movlb	0	; () banked
  6599  003FC4  0100               	movlb	0	; () banked
  6600  003FC6  51A9               	movf	doActionOn@i& (0+255),w,b
  6601                           
  6602                           ; Switch size 1, requested type "space"
  6603                           ; Number of cases is 10, Range of values is 0 to 9
  6604                           ; switch strategies available:
  6605                           ; Name         Instructions Cycles
  6606                           ; simple_byte           31    16 (average)
  6607                           ;	Chosen strategy is simple_byte
  6608  003FC8  0A00               	xorlw	0	; case 0
  6609  003FCA  B4D8               	btfsc	status,2,c
  6610  003FCC  D624               	goto	l774
  6611  003FCE  0A01               	xorlw	1	; case 1
  6612  003FD0  B4D8               	btfsc	status,2,c
  6613  003FD2  D650               	goto	l777
  6614  003FD4  0A03               	xorlw	3	; case 2
  6615  003FD6  B4D8               	btfsc	status,2,c
  6616  003FD8  D67C               	goto	l779
  6617  003FDA  0A01               	xorlw	1	; case 3
  6618  003FDC  B4D8               	btfsc	status,2,c
  6619  003FDE  D6A8               	goto	l781
  6620  003FE0  0A07               	xorlw	7	; case 4
  6621  003FE2  B4D8               	btfsc	status,2,c
  6622  003FE4  D6D4               	goto	l783
  6623  003FE6  0A01               	xorlw	1	; case 5
  6624  003FE8  B4D8               	btfsc	status,2,c
  6625  003FEA  D700               	goto	l785
  6626  003FEC  0A03               	xorlw	3	; case 6
  6627  003FEE  B4D8               	btfsc	status,2,c
  6628  003FF0  D72C               	goto	l787
  6629  003FF2  0A01               	xorlw	1	; case 7
  6630  003FF4  B4D8               	btfsc	status,2,c
  6631  003FF6  D758               	goto	l789
  6632  003FF8  0A0F               	xorlw	15	; case 8
  6633  003FFA  B4D8               	btfsc	status,2,c
  6634  003FFC  D784               	goto	l791
  6635  003FFE  0A01               	xorlw	1	; case 9
  6636  004000  B4D8               	btfsc	status,2,c
  6637  004002  D7B0               	goto	l793
  6638  004004                     l776:
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;main.c: 2290: if ( val & 0x08 ) {
  6642  004004  0100               	movlb	0	; () banked
  6643  004006  0100               	movlb	0	; () banked
  6644  004008  A7A8               	btfss	doActionOn@val& (0+255),3,b
  6645  00400A  D010               	goto	l10961
  6646                           
  6647                           ; BSR set to: 0
  6648                           ;main.c: 2291: SendInformationEvent( i, 20, 3 );
  6649  00400C  C0A9  F030         	movff	doActionOn@i,?_SendInformationEvent
  6650  004010  0100               	movlb	0	; () banked
  6651  004012  6FA4               	movwf	??_doActionOn& (0+255),b
  6652  004014  0E14               	movlw	20
  6653  004016  6E31               	movwf	?_SendInformationEvent+1,c
  6654  004018  0100               	movlb	0	; () banked
  6655  00401A  51A4               	movf	??_doActionOn& (0+255),w,b
  6656  00401C  0100               	movlb	0	; () banked
  6657  00401E  6FA5               	movwf	(??_doActionOn+1)& (0+255),b
  6658  004020  0E03               	movlw	3
  6659  004022  6E32               	movwf	?_SendInformationEvent+2,c
  6660  004024  0100               	movlb	0	; () banked
  6661  004026  51A5               	movf	(??_doActionOn+1)& (0+255),w,b
  6662  004028  EC48  F034         	call	_SendInformationEvent	;wreg free
  6663  00402C                     l10961:
  6664  00402C  0100               	movlb	0	; () banked
  6665  00402E  0100               	movlb	0	; () banked
  6666  004030  2BA9               	incf	doActionOn@i& (0+255),f,b
  6667  004032                     L61:
  6668                           
  6669                           ; BSR set to: 0
  6670  004032  0E07               	movlw	7
  6671  004034  0100               	movlb	0	; () banked
  6672  004036  0100               	movlb	0	; () banked
  6673  004038  65A9               	cpfsgt	doActionOn@i& (0+255),b
  6674  00403A  D5B2               	goto	l10901
  6675                           
  6676                           ; BSR set to: 0
  6677                           
  6678                           ; BSR set to: 0
  6679  00403C  0012               	return	
  6680  00403E                     __end_of_doActionOn:
  6681                           	opt stack 0
  6682                           tblptru	equ	0xFF8
  6683                           prodh	equ	0xFF4
  6684                           prodl	equ	0xFF3
  6685                           postinc0	equ	0xFEE
  6686                           wreg	equ	0xFE8
  6687                           postinc2	equ	0xFDE
  6688                           postdec2	equ	0xFDD
  6689                           fsr2h	equ	0xFDA
  6690                           fsr2l	equ	0xFD9
  6691                           status	equ	0xFD8
  6692                           
  6693 ;; *************** function _doActionOff *****************
  6694 ;; Defined at:
  6695 ;;		line 2302 in file "../main.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;  dmflags         1   66[BANK0 ] unsigned char 
  6698 ;;  arg             1   67[BANK0 ] unsigned char 
  6699 ;; Auto vars:     Size  Location     Type
  6700 ;;  i               1   71[BANK0 ] unsigned char 
  6701 ;;  val             1   70[BANK0 ] unsigned char 
  6702 ;; Return value:  Size  Location     Type
  6703 ;;		None               void
  6704 ;; Registers used:
  6705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6711 ;;      Params:         0       2       0       0       0       0       0
  6712 ;;      Locals:         0       2       0       0       0       0       0
  6713 ;;      Temps:          0       2       0       0       0       0       0
  6714 ;;      Totals:         0       6       0       0       0       0       0
  6715 ;;Total ram usage:        6 bytes
  6716 ;; Hardware stack levels used:    1
  6717 ;; Hardware stack levels required when called:    7
  6718 ;; This function calls:
  6719 ;;		_Read_b_eep
  6720 ;;		_SendInformationEvent
  6721 ;; This function is called by:
  6722 ;;		_doApplicationOneSecondWork
  6723 ;;		_doDM
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text13
  6728  0061CA                     __ptext13:
  6729                           	opt stack 0
  6730  0061CA                     _doActionOff:
  6731                           	opt stack 21
  6732                           
  6733                           ;main.c: 2304: unsigned char i;
  6734                           ;main.c: 2305: unsigned char val;
  6735                           ;main.c: 2307: for ( i = 0; i < 8; i++ ) {
  6736                           
  6737                           ; BSR set to: 0
  6738                           ;incstack = 0
  6739                           ;incstack = 0
  6740  0061CA  0100               	movlb	0	; () banked
  6741  0061CC  6FA4               	movwf	??_doActionOff& (0+255),b
  6742  0061CE  0E00               	movlw	0
  6743  0061D0  0100               	movlb	0	; () banked
  6744  0061D2  0100               	movlb	0	; () banked
  6745  0061D4  6FA7               	movwf	doActionOff@i& (0+255),b
  6746  0061D6  0100               	movlb	0	; () banked
  6747  0061D8  51A4               	movf	??_doActionOff& (0+255),w,b
  6748  0061DA  D087               	goto	L62
  6749  0061DC                     l10115:
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;main.c: 2310: if ( !( arg & ( 1 << i ) ) ) continue;
  6753  0061DC  C0A7  F0A4         	movff	doActionOff@i,??_doActionOff
  6754  0061E0  0E01               	movlw	1
  6755  0061E2  0100               	movlb	0	; () banked
  6756  0061E4  6FA5               	movwf	(??_doActionOff+1)& (0+255),b
  6757  0061E6  0100               	movlb	0	; () banked
  6758  0061E8  2BA4               	incf	??_doActionOff& (0+255),f,b
  6759  0061EA  D003               	goto	u12124
  6760  0061EC                     u12125:
  6761  0061EC  0100               	movlb	0	; () banked
  6762  0061EE  90D8               	bcf	status,0,c
  6763  0061F0  37A5               	rlcf	(??_doActionOff+1)& (0+255),f,b
  6764  0061F2                     u12124:
  6765  0061F2  0100               	movlb	0	; () banked
  6766  0061F4  2FA4               	decfsz	??_doActionOff& (0+255),f,b
  6767  0061F6  D7FA               	goto	u12125
  6768  0061F8  0100               	movlb	0	; () banked
  6769  0061FA  51A5               	movf	(??_doActionOff+1)& (0+255),w,b
  6770  0061FC  0100               	movlb	0	; () banked
  6771  0061FE  0100               	movlb	0	; () banked
  6772  006200  15A3               	andwf	doActionOff@arg& (0+255),w,b
  6773  006202  0900               	iorlw	0
  6774  006204  B4D8               	btfsc	status,2,c
  6775  006206  D06E               	goto	l10135
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;main.c: 2313: if ( dmflags & 0x08 ) {
  6779                           
  6780                           ; BSR set to: 0
  6781  006208  0100               	movlb	0	; () banked
  6782  00620A  0100               	movlb	0	; () banked
  6783  00620C  A7A2               	btfss	doActionOff@dmflags& (0+255),3,b
  6784  00620E  D00F               	goto	l10123
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;main.c: 2314: if ( vscp_imsg.data[ 2 ] != Read_b_eep(0x43 + 3 + i) ) {
  6788  006210  0E46               	movlw	70
  6789  006212  0100               	movlb	0	; () banked
  6790  006214  0100               	movlb	0	; () banked
  6791  006216  25A7               	addwf	doActionOff@i& (0+255),w,b
  6792  006218  6E16               	movwf	?_Read_b_eep,c
  6793  00621A  6A17               	clrf	?_Read_b_eep+1,c
  6794  00621C  0E00               	movlw	0
  6795  00621E  2217               	addwfc	?_Read_b_eep+1,f,c
  6796  006220  ECFD  F036         	call	_Read_b_eep	;wreg free
  6797  006224  0100               	movlb	0	; () banked
  6798  006226  0100               	movlb	0	; () banked
  6799  006228  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  6800  00622A  A4D8               	btfss	status,2,c
  6801  00622C  D05B               	goto	l10135
  6802  00622E                     l10123:
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;main.c: 2318: }
  6806                           ;main.c: 2319: }
  6807                           ;main.c: 2321: val = Read_b_eep(0x43 + 24 + i);
  6808  00622E  0E5B               	movlw	91
  6809  006230  0100               	movlb	0	; () banked
  6810  006232  0100               	movlb	0	; () banked
  6811  006234  25A7               	addwf	doActionOff@i& (0+255),w,b
  6812  006236  6E16               	movwf	?_Read_b_eep,c
  6813  006238  6A17               	clrf	?_Read_b_eep+1,c
  6814  00623A  0E00               	movlw	0
  6815  00623C  2217               	addwfc	?_Read_b_eep+1,f,c
  6816  00623E  ECFD  F036         	call	_Read_b_eep	;wreg free
  6817  006242  0100               	movlb	0	; () banked
  6818  006244  0100               	movlb	0	; () banked
  6819  006246  6FA6               	movwf	doActionOff@val& (0+255),b
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;main.c: 2324: if ( !( val & 0x80 ) ) continue;
  6823  006248  0100               	movlb	0	; () banked
  6824  00624A  0100               	movlb	0	; () banked
  6825  00624C  AFA6               	btfss	doActionOff@val& (0+255),7,b
  6826  00624E  D04A               	goto	l10135
  6827  006250  D014               	goto	l10131
  6828  006252                     l807:
  6829                           
  6830                           ; BSR set to: 0
  6831                           ;main.c: 2329: LATBbits.LATB0 = 0;
  6832  006252  908A               	bcf	3978,0,c	;volatile
  6833                           
  6834                           ;main.c: 2330: break;
  6835  006254  D033               	goto	l808
  6836  006256                     l809:
  6837                           
  6838                           ; BSR set to: 0
  6839                           ;main.c: 2333: LATBbits.LATB1 = 0;
  6840  006256  928A               	bcf	3978,1,c	;volatile
  6841                           
  6842                           ;main.c: 2334: break;
  6843  006258  D031               	goto	l808
  6844  00625A                     l810:
  6845                           
  6846                           ; BSR set to: 0
  6847                           ;main.c: 2337: LATCbits.LATC3 = 0;
  6848  00625A  968B               	bcf	3979,3,c	;volatile
  6849                           
  6850                           ;main.c: 2338: break;
  6851  00625C  D02F               	goto	l808
  6852  00625E                     l811:
  6853                           
  6854                           ; BSR set to: 0
  6855                           ;main.c: 2341: LATCbits.LATC4 = 0;
  6856  00625E  988B               	bcf	3979,4,c	;volatile
  6857                           
  6858                           ;main.c: 2342: break;
  6859  006260  D02D               	goto	l808
  6860  006262                     l812:
  6861                           
  6862                           ; BSR set to: 0
  6863                           ;main.c: 2345: LATCbits.LATC5 = 0;
  6864  006262  9A8B               	bcf	3979,5,c	;volatile
  6865                           
  6866                           ;main.c: 2346: break;
  6867  006264  D02B               	goto	l808
  6868  006266                     l813:
  6869                           
  6870                           ; BSR set to: 0
  6871                           ;main.c: 2349: LATCbits.LATC6 = 0;
  6872  006266  9C8B               	bcf	3979,6,c	;volatile
  6873                           
  6874                           ;main.c: 2350: break;
  6875  006268  D029               	goto	l808
  6876  00626A                     l814:
  6877                           
  6878                           ; BSR set to: 0
  6879                           ;main.c: 2353: LATCbits.LATC7 = 0;
  6880  00626A  9E8B               	bcf	3979,7,c	;volatile
  6881                           
  6882                           ;main.c: 2354: break;
  6883  00626C  D027               	goto	l808
  6884  00626E                     l815:
  6885                           
  6886                           ; BSR set to: 0
  6887                           ;main.c: 2357: LATAbits.LATA2 = 0;
  6888  00626E  9489               	bcf	3977,2,c	;volatile
  6889                           
  6890                           ;main.c: 2358: break;
  6891  006270  D025               	goto	l808
  6892  006272                     l816:
  6893                           
  6894                           ; BSR set to: 0
  6895                           ;main.c: 2361: LATAbits.LATA1 = 0;
  6896  006272  9289               	bcf	3977,1,c	;volatile
  6897                           
  6898                           ;main.c: 2362: break;
  6899  006274  D023               	goto	l808
  6900  006276                     l817:
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;main.c: 2365: LATAbits.LATA0 = 0;
  6904  006276  9089               	bcf	3977,0,c	;volatile
  6905                           
  6906                           ;main.c: 2366: break;
  6907  006278  D021               	goto	l808
  6908  00627A                     l10131:
  6909                           
  6910                           ; BSR set to: 0
  6911  00627A  0100               	movlb	0	; () banked
  6912  00627C  0100               	movlb	0	; () banked
  6913  00627E  51A7               	movf	doActionOff@i& (0+255),w,b
  6914                           
  6915                           ; Switch size 1, requested type "space"
  6916                           ; Number of cases is 10, Range of values is 0 to 9
  6917                           ; switch strategies available:
  6918                           ; Name         Instructions Cycles
  6919                           ; simple_byte           31    16 (average)
  6920                           ;	Chosen strategy is simple_byte
  6921  006280  0A00               	xorlw	0	; case 0
  6922  006282  B4D8               	btfsc	status,2,c
  6923  006284  D7E6               	goto	l807
  6924  006286  0A01               	xorlw	1	; case 1
  6925  006288  B4D8               	btfsc	status,2,c
  6926  00628A  D7E5               	goto	l809
  6927  00628C  0A03               	xorlw	3	; case 2
  6928  00628E  B4D8               	btfsc	status,2,c
  6929  006290  D7E4               	goto	l810
  6930  006292  0A01               	xorlw	1	; case 3
  6931  006294  B4D8               	btfsc	status,2,c
  6932  006296  D7E3               	goto	l811
  6933  006298  0A07               	xorlw	7	; case 4
  6934  00629A  B4D8               	btfsc	status,2,c
  6935  00629C  D7E2               	goto	l812
  6936  00629E  0A01               	xorlw	1	; case 5
  6937  0062A0  B4D8               	btfsc	status,2,c
  6938  0062A2  D7E1               	goto	l813
  6939  0062A4  0A03               	xorlw	3	; case 6
  6940  0062A6  B4D8               	btfsc	status,2,c
  6941  0062A8  D7E0               	goto	l814
  6942  0062AA  0A01               	xorlw	1	; case 7
  6943  0062AC  B4D8               	btfsc	status,2,c
  6944  0062AE  D7DF               	goto	l815
  6945  0062B0  0A0F               	xorlw	15	; case 8
  6946  0062B2  B4D8               	btfsc	status,2,c
  6947  0062B4  D7DE               	goto	l816
  6948  0062B6  0A01               	xorlw	1	; case 9
  6949  0062B8  B4D8               	btfsc	status,2,c
  6950  0062BA  D7DD               	goto	l817
  6951  0062BC                     l808:
  6952                           
  6953                           ; BSR set to: 0
  6954                           ;main.c: 2370: if ( val & 0x10 ) {
  6955  0062BC  0100               	movlb	0	; () banked
  6956  0062BE  0100               	movlb	0	; () banked
  6957  0062C0  A9A6               	btfss	doActionOff@val& (0+255),4,b
  6958  0062C2  D010               	goto	l10135
  6959                           
  6960                           ; BSR set to: 0
  6961                           ;main.c: 2371: SendInformationEvent( i, 20, 4 );
  6962  0062C4  C0A7  F030         	movff	doActionOff@i,?_SendInformationEvent
  6963  0062C8  0100               	movlb	0	; () banked
  6964  0062CA  6FA4               	movwf	??_doActionOff& (0+255),b
  6965  0062CC  0E14               	movlw	20
  6966  0062CE  6E31               	movwf	?_SendInformationEvent+1,c
  6967  0062D0  0100               	movlb	0	; () banked
  6968  0062D2  51A4               	movf	??_doActionOff& (0+255),w,b
  6969  0062D4  0100               	movlb	0	; () banked
  6970  0062D6  6FA5               	movwf	(??_doActionOff+1)& (0+255),b
  6971  0062D8  0E04               	movlw	4
  6972  0062DA  6E32               	movwf	?_SendInformationEvent+2,c
  6973  0062DC  0100               	movlb	0	; () banked
  6974  0062DE  51A5               	movf	(??_doActionOff+1)& (0+255),w,b
  6975  0062E0  EC48  F034         	call	_SendInformationEvent	;wreg free
  6976  0062E4                     l10135:
  6977  0062E4  0100               	movlb	0	; () banked
  6978  0062E6  0100               	movlb	0	; () banked
  6979  0062E8  2BA7               	incf	doActionOff@i& (0+255),f,b
  6980  0062EA                     L62:
  6981                           
  6982                           ; BSR set to: 0
  6983  0062EA  0E07               	movlw	7
  6984  0062EC  0100               	movlb	0	; () banked
  6985  0062EE  0100               	movlb	0	; () banked
  6986  0062F0  65A7               	cpfsgt	doActionOff@i& (0+255),b
  6987  0062F2  D774               	goto	l10115
  6988                           
  6989                           ; BSR set to: 0
  6990                           
  6991                           ; BSR set to: 0
  6992  0062F4  0012               	return	
  6993  0062F6                     __end_of_doActionOff:
  6994                           	opt stack 0
  6995                           tblptru	equ	0xFF8
  6996                           prodh	equ	0xFF4
  6997                           prodl	equ	0xFF3
  6998                           postinc0	equ	0xFEE
  6999                           wreg	equ	0xFE8
  7000                           postinc2	equ	0xFDE
  7001                           postdec2	equ	0xFDD
  7002                           fsr2h	equ	0xFDA
  7003                           fsr2l	equ	0xFD9
  7004                           status	equ	0xFD8
  7005                           
  7006 ;; *************** function _vscp_handleProtocolEvent *****************
  7007 ;; Defined at:
  7008 ;;		line 797 in file "../../vscp_firmware/common/vscp_firmware.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;		None
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;  bytes           1    6[BANK1 ] unsigned char 
  7013 ;;  page_save       2    2[BANK1 ] unsigned short 
  7014 ;;  i               1   12[BANK1 ] unsigned char 
  7015 ;;  page_save       2    0[BANK1 ] unsigned short 
  7016 ;;  byte            1   16[BANK1 ] unsigned char 
  7017 ;;  bytes           1   14[BANK1 ] unsigned char 
  7018 ;;  cb              1   11[BANK1 ] unsigned char 
  7019 ;;  bytes_this_t    1   10[BANK1 ] unsigned char 
  7020 ;;  j               1   19[BANK1 ] unsigned char 
  7021 ;;  i               1   17[BANK1 ] unsigned char 
  7022 ;;  k               1   13[BANK1 ] unsigned char 
  7023 ;;  i               1   15[BANK1 ] unsigned char 
  7024 ;;  len             1    9[BANK1 ] unsigned char 
  7025 ;;  pos             1    8[BANK1 ] unsigned char 
  7026 ;;  i               1   18[BANK1 ] unsigned char 
  7027 ;;  len             1    7[BANK1 ] unsigned char 
  7028 ;;  pos             1    5[BANK1 ] unsigned char 
  7029 ;;  offset          1    4[BANK1 ] unsigned char 
  7030 ;; Return value:  Size  Location     Type
  7031 ;;		None               void
  7032 ;; Registers used:
  7033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  7034 ;; Tracked objects:
  7035 ;;		On entry : 0/0
  7036 ;;		On exit  : 0/0
  7037 ;;		Unchanged: 0/0
  7038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7039 ;;      Params:         0       0       0       0       0       0       0
  7040 ;;      Locals:         0       0      20       0       0       0       0
  7041 ;;      Temps:          0       9       0       0       0       0       0
  7042 ;;      Totals:         0       9      20       0       0       0       0
  7043 ;;Total ram usage:       29 bytes
  7044 ;; Hardware stack levels used:    1
  7045 ;; Hardware stack levels required when called:    9
  7046 ;; This function calls:
  7047 ;;		_vscp_init
  7048 ;;		_vscp_readAppReg
  7049 ;;		_vscp_writeAppReg
  7050 ;;		_vscp_sendEvent
  7051 ;;		_vscp_getGUID
  7052 ;;		_vscp_getMDF_URL
  7053 ;;		_vscp_goBootloaderMode
  7054 ;;		_vscp_getMatrixInfo
  7055 ;;		_vscp_handleHeartbeat
  7056 ;;		_vscp_handleSetNickname
  7057 ;;		_vscp_handleDropNickname
  7058 ;;		_vscp_newNodeOnline
  7059 ;;		_vscp_readRegister
  7060 ;;		_vscp_readStdReg
  7061 ;;		_vscp_writeRegister
  7062 ;;		_vscp_writeStdReg
  7063 ;;		___awmod
  7064 ;; This function is called by:
  7065 ;;		_main
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           	psect	text14
  7070  001D48                     __ptext14:
  7071                           	opt stack 0
  7072  001D48                     _vscp_handleProtocolEvent:
  7073                           	opt stack 20
  7074                           
  7075                           ;vscp_firmware.c: 799: if (0 == vscp_imsg.vscp_class) {
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;incstack = 0
  7079                           ;incstack = 0
  7080  001D48  0100               	movlb	0	; () banked
  7081  001D4A  0100               	movlb	0	; () banked
  7082  001D4C  51F4               	movf	(_vscp_imsg+3)& (0+255),w,b
  7083  001D4E  11F3               	iorwf	(_vscp_imsg+2)& (0+255),w,b
  7084  001D50  B4D8               	btfsc	status,2,c
  7085  001D52  EF55  F015         	goto	l9823
  7086  001D56  EF91  F015         	goto	l1377
  7087  001D5A                     l9399:
  7088                           
  7089                           ; BSR set to: 0
  7090                           ;vscp_firmware.c: 806: vscp_handleHeartbeat();
  7091  001D5A  ECB2  F034         	call	_vscp_handleHeartbeat	;wreg free
  7092                           
  7093                           ;vscp_firmware.c: 807: break;
  7094  001D5E  EF91  F015         	goto	l1377
  7095  001D62                     l9401:
  7096                           
  7097                           ;vscp_firmware.c: 811: vscp_newNodeOnline();
  7098  001D62  EC04  F035         	call	_vscp_newNodeOnline	;wreg free
  7099                           
  7100                           ;vscp_firmware.c: 812: break;
  7101  001D66  EF91  F015         	goto	l1377
  7102  001D6A                     l9403:
  7103                           
  7104                           ;vscp_firmware.c: 816: vscp_handleSetNickname();
  7105  001D6A  EC83  F035         	call	_vscp_handleSetNickname	;wreg free
  7106                           
  7107                           ;vscp_firmware.c: 817: break;
  7108  001D6E  EF91  F015         	goto	l1377
  7109  001D72                     l9405:
  7110                           
  7111                           ;vscp_firmware.c: 821: vscp_handleDropNickname();
  7112  001D72  ECDE  F034         	call	_vscp_handleDropNickname	;wreg free
  7113                           
  7114                           ;vscp_firmware.c: 822: break;
  7115  001D76  EF91  F015         	goto	l1377
  7116  001D7A                     l9407:
  7117                           
  7118                           ;vscp_firmware.c: 826: if ( ( 2 == (vscp_imsg.flags & 0x0f) ) &&
  7119                           ;vscp_firmware.c: 827: (vscp_nickname == vscp_imsg.data[ 0 ])) {
  7120  001D7A  0100               	movlb	0	; () banked
  7121  001D7C  0100               	movlb	0	; () banked
  7122  001D7E  51F1               	movf	_vscp_imsg& (0+255),w,b
  7123  001D80  0B0F               	andlw	15
  7124  001D82  0A02               	xorlw	2
  7125  001D84  A4D8               	btfss	status,2,c
  7126  001D86  EF91  F015         	goto	l1377
  7127                           
  7128                           ; BSR set to: 0
  7129  001D8A  0100               	movlb	0	; () banked
  7130  001D8C  0100               	movlb	0	; () banked
  7131  001D8E  51EC               	movf	_vscp_nickname& (0+255),w,b
  7132  001D90  0100               	movlb	0	; () banked
  7133  001D92  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  7134  001D96  62DF               	cpfseq	indf2,c
  7135  001D98  EF91  F015         	goto	l1377
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;vscp_firmware.c: 829: if (vscp_imsg.data[ 1 ] < 0x80) {
  7139  001D9C  0E80               	movlw	128
  7140  001D9E  0100               	movlb	0	; () banked
  7141  001DA0  0100               	movlb	0	; () banked
  7142  001DA2  61F8               	cpfslt	(_vscp_imsg+7)& (0+255),b
  7143  001DA4  D021               	goto	l9427
  7144                           
  7145                           ; BSR set to: 0
  7146                           ;vscp_firmware.c: 832: vscp_omsg.data[ 1 ] = vscp_readAppReg(vscp_imsg.data[ 1 ]);
  7147  001DA6  C0F8  F018         	movff	_vscp_imsg+7,?_vscp_readAppReg
  7148  001DAA  EC3F  F030         	call	_vscp_readAppReg	;wreg free
  7149  001DAE  6E44               	movwf	_vscp_omsg+6,c
  7150                           
  7151                           ;vscp_firmware.c: 835: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  7152  001DB0  C0F8  F043         	movff	_vscp_imsg+7,_vscp_omsg+5
  7153                           
  7154                           ;vscp_firmware.c: 837: vscp_omsg.priority = 0x03;
  7155  001DB4  0100               	movlb	0	; () banked
  7156  001DB6  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7157  001DB8  0E03               	movlw	3
  7158  001DBA  6E3F               	movwf	_vscp_omsg+1,c
  7159  001DBC  0100               	movlb	0	; () banked
  7160  001DBE  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7161                           
  7162                           ; BSR set to: 0
  7163                           ;vscp_firmware.c: 838: vscp_omsg.flags = 0x80 + 2;
  7164  001DC0  0100               	movlb	0	; () banked
  7165  001DC2  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7166  001DC4  0E82               	movlw	130
  7167  001DC6  6E3E               	movwf	_vscp_omsg,c
  7168  001DC8  0100               	movlb	0	; () banked
  7169  001DCA  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;vscp_firmware.c: 839: vscp_omsg.vscp_class = 0;
  7173  001DCC  0E00               	movlw	0
  7174  001DCE  6E41               	movwf	_vscp_omsg+3,c
  7175  001DD0  0E00               	movlw	0
  7176  001DD2  6E40               	movwf	_vscp_omsg+2,c
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;vscp_firmware.c: 840: vscp_omsg.vscp_type = 10;
  7180  001DD4  0100               	movlb	0	; () banked
  7181  001DD6  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7182  001DD8  0E0A               	movlw	10
  7183  001DDA  6E42               	movwf	_vscp_omsg+4,c
  7184  001DDC  0100               	movlb	0	; () banked
  7185  001DDE  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7186                           
  7187                           ; BSR set to: 0
  7188                           ;vscp_firmware.c: 843: vscp_sendEvent();
  7189  001DE0  EC46  F035         	call	_vscp_sendEvent	;wreg free
  7190                           
  7191                           ;vscp_firmware.c: 844: }
  7192  001DE4  EF91  F015         	goto	l1377
  7193  001DE8                     l9427:
  7194                           
  7195                           ;vscp_firmware.c: 845: else {
  7196                           ;vscp_firmware.c: 848: vscp_omsg.data[ 1 ] =
  7197                           ;vscp_firmware.c: 849: vscp_readStdReg(vscp_imsg.data[ 1 ]);
  7198  001DE8  C0F8  F01A         	movff	_vscp_imsg+7,?_vscp_readStdReg
  7199  001DEC  EC30  F028         	call	_vscp_readStdReg	;wreg free
  7200  001DF0  6E44               	movwf	_vscp_omsg+6,c
  7201                           
  7202                           ;vscp_firmware.c: 852: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  7203  001DF2  C0F8  F043         	movff	_vscp_imsg+7,_vscp_omsg+5
  7204                           
  7205                           ;vscp_firmware.c: 854: vscp_omsg.priority = 0x03;
  7206  001DF6  0100               	movlb	0	; () banked
  7207  001DF8  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7208  001DFA  0E03               	movlw	3
  7209  001DFC  6E3F               	movwf	_vscp_omsg+1,c
  7210  001DFE  0100               	movlb	0	; () banked
  7211  001E00  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7212                           
  7213                           ; BSR set to: 0
  7214                           ;vscp_firmware.c: 855: vscp_omsg.flags = 0x80 + 2;
  7215  001E02  0100               	movlb	0	; () banked
  7216  001E04  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7217  001E06  0E82               	movlw	130
  7218  001E08  6E3E               	movwf	_vscp_omsg,c
  7219  001E0A  0100               	movlb	0	; () banked
  7220  001E0C  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7221                           
  7222                           ; BSR set to: 0
  7223                           ;vscp_firmware.c: 856: vscp_omsg.vscp_class = 0;
  7224  001E0E  0E00               	movlw	0
  7225  001E10  6E41               	movwf	_vscp_omsg+3,c
  7226  001E12  0E00               	movlw	0
  7227  001E14  6E40               	movwf	_vscp_omsg+2,c
  7228                           
  7229                           ; BSR set to: 0
  7230                           ;vscp_firmware.c: 857: vscp_omsg.vscp_type = 10;
  7231  001E16  0100               	movlb	0	; () banked
  7232  001E18  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7233  001E1A  0E0A               	movlw	10
  7234  001E1C  6E42               	movwf	_vscp_omsg+4,c
  7235  001E1E  0100               	movlb	0	; () banked
  7236  001E20  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7237                           
  7238                           ; BSR set to: 0
  7239                           ;vscp_firmware.c: 860: vscp_sendEvent();
  7240  001E22  EC46  F035         	call	_vscp_sendEvent	;wreg free
  7241  001E26  EF91  F015         	goto	l1377
  7242  001E2A                     l9441:
  7243                           
  7244                           ;vscp_firmware.c: 867: if ((3 == (vscp_imsg.flags & 0x0f)) &&
  7245                           ;vscp_firmware.c: 868: (vscp_nickname == vscp_imsg.data[ 0 ])) {
  7246  001E2A  0100               	movlb	0	; () banked
  7247  001E2C  0100               	movlb	0	; () banked
  7248  001E2E  51F1               	movf	_vscp_imsg& (0+255),w,b
  7249  001E30  0B0F               	andlw	15
  7250  001E32  0A03               	xorlw	3
  7251  001E34  A4D8               	btfss	status,2,c
  7252  001E36  EF91  F015         	goto	l1377
  7253                           
  7254                           ; BSR set to: 0
  7255  001E3A  0100               	movlb	0	; () banked
  7256  001E3C  0100               	movlb	0	; () banked
  7257  001E3E  51EC               	movf	_vscp_nickname& (0+255),w,b
  7258  001E40  0100               	movlb	0	; () banked
  7259  001E42  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  7260  001E46  62DF               	cpfseq	indf2,c
  7261  001E48  EF91  F015         	goto	l1377
  7262                           
  7263                           ; BSR set to: 0
  7264                           ;vscp_firmware.c: 870: if (vscp_imsg.data[ 1 ] < 0x80) {
  7265  001E4C  0E80               	movlw	128
  7266  001E4E  0100               	movlb	0	; () banked
  7267  001E50  0100               	movlb	0	; () banked
  7268  001E52  61F8               	cpfslt	(_vscp_imsg+7)& (0+255),b
  7269  001E54  D023               	goto	l9461
  7270                           
  7271                           ; BSR set to: 0
  7272                           ;vscp_firmware.c: 873: vscp_omsg.data[ 1 ] =
  7273                           ;vscp_firmware.c: 874: vscp_writeAppReg(vscp_imsg.data[ 1 ], vscp_imsg.data[ 2 ]);
  7274  001E56  C0F8  F0A2         	movff	_vscp_imsg+7,?_vscp_writeAppReg
  7275  001E5A  C0F9  F0A3         	movff	_vscp_imsg+8,?_vscp_writeAppReg+1
  7276  001E5E  EC11  F003         	call	_vscp_writeAppReg	;wreg free
  7277  001E62  6E44               	movwf	_vscp_omsg+6,c
  7278                           
  7279                           ;vscp_firmware.c: 877: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  7280  001E64  C0F8  F043         	movff	_vscp_imsg+7,_vscp_omsg+5
  7281                           
  7282                           ;vscp_firmware.c: 879: vscp_omsg.priority = 0x03;
  7283  001E68  0100               	movlb	0	; () banked
  7284  001E6A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7285  001E6C  0E03               	movlw	3
  7286  001E6E  6E3F               	movwf	_vscp_omsg+1,c
  7287  001E70  0100               	movlb	0	; () banked
  7288  001E72  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;vscp_firmware.c: 880: vscp_omsg.flags = 0x80 + 2;
  7292  001E74  0100               	movlb	0	; () banked
  7293  001E76  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7294  001E78  0E82               	movlw	130
  7295  001E7A  6E3E               	movwf	_vscp_omsg,c
  7296  001E7C  0100               	movlb	0	; () banked
  7297  001E7E  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7298                           
  7299                           ; BSR set to: 0
  7300                           ;vscp_firmware.c: 881: vscp_omsg.vscp_class = 0;
  7301  001E80  0E00               	movlw	0
  7302  001E82  6E41               	movwf	_vscp_omsg+3,c
  7303  001E84  0E00               	movlw	0
  7304  001E86  6E40               	movwf	_vscp_omsg+2,c
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;vscp_firmware.c: 882: vscp_omsg.vscp_type = 10;
  7308  001E88  0100               	movlb	0	; () banked
  7309  001E8A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7310  001E8C  0E0A               	movlw	10
  7311  001E8E  6E42               	movwf	_vscp_omsg+4,c
  7312  001E90  0100               	movlb	0	; () banked
  7313  001E92  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7314                           
  7315                           ; BSR set to: 0
  7316                           ;vscp_firmware.c: 885: vscp_sendEvent();
  7317  001E94  EC46  F035         	call	_vscp_sendEvent	;wreg free
  7318                           
  7319                           ;vscp_firmware.c: 887: }
  7320  001E98  EF91  F015         	goto	l1377
  7321  001E9C                     l9461:
  7322                           
  7323                           ;vscp_firmware.c: 888: else {
  7324                           ;vscp_firmware.c: 891: vscp_omsg.data[ 1 ] =
  7325                           ;vscp_firmware.c: 892: vscp_writeStdReg(vscp_imsg.data[ 1 ], vscp_imsg.data[ 2 ]);
  7326  001E9C  C0F8  F01E         	movff	_vscp_imsg+7,?_vscp_writeStdReg
  7327  001EA0  C0F9  F01F         	movff	_vscp_imsg+8,?_vscp_writeStdReg+1
  7328  001EA4  ECA8  F02C         	call	_vscp_writeStdReg	;wreg free
  7329  001EA8  6E44               	movwf	_vscp_omsg+6,c
  7330                           
  7331                           ;vscp_firmware.c: 895: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  7332  001EAA  C0F8  F043         	movff	_vscp_imsg+7,_vscp_omsg+5
  7333                           
  7334                           ;vscp_firmware.c: 897: vscp_omsg.priority = 0x03;
  7335  001EAE  0100               	movlb	0	; () banked
  7336  001EB0  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7337  001EB2  0E03               	movlw	3
  7338  001EB4  6E3F               	movwf	_vscp_omsg+1,c
  7339  001EB6  0100               	movlb	0	; () banked
  7340  001EB8  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7341                           
  7342                           ; BSR set to: 0
  7343                           ;vscp_firmware.c: 898: vscp_omsg.flags = 0x80 + 2;
  7344  001EBA  0100               	movlb	0	; () banked
  7345  001EBC  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7346  001EBE  0E82               	movlw	130
  7347  001EC0  6E3E               	movwf	_vscp_omsg,c
  7348  001EC2  0100               	movlb	0	; () banked
  7349  001EC4  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;vscp_firmware.c: 899: vscp_omsg.vscp_class = 0;
  7353  001EC6  0E00               	movlw	0
  7354  001EC8  6E41               	movwf	_vscp_omsg+3,c
  7355  001ECA  0E00               	movlw	0
  7356  001ECC  6E40               	movwf	_vscp_omsg+2,c
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;vscp_firmware.c: 900: vscp_omsg.vscp_type = 10;
  7360  001ECE  0100               	movlb	0	; () banked
  7361  001ED0  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7362  001ED2  0E0A               	movlw	10
  7363  001ED4  6E42               	movwf	_vscp_omsg+4,c
  7364  001ED6  0100               	movlb	0	; () banked
  7365  001ED8  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7366                           
  7367                           ; BSR set to: 0
  7368                           ;vscp_firmware.c: 903: vscp_sendEvent();
  7369  001EDA  EC46  F035         	call	_vscp_sendEvent	;wreg free
  7370  001EDE  EF91  F015         	goto	l1377
  7371  001EE2                     l9475:
  7372                           
  7373                           ;vscp_firmware.c: 910: if ((vscp_nickname == vscp_imsg.data[ 0 ]) &&
  7374                           ;vscp_firmware.c: 912: (vscp_getGUID(0) == vscp_imsg.data[ 2 ]) &&
  7375                           ;vscp_firmware.c: 913: (vscp_getGUID(3) == vscp_imsg.data[ 3 ]) &&
  7376                           ;vscp_firmware.c: 914: (vscp_getGUID(5) == vscp_imsg.data[ 4 ]) &&
  7377                           ;vscp_firmware.c: 915: (vscp_getGUID(7) == vscp_imsg.data[ 5 ]) &&
  7378                           ;vscp_firmware.c: 916: (((vscp_page_select >> 8) & 0xff) == vscp_imsg.data[ 6 ]) &&
  7379                           ;vscp_firmware.c: 917: ((vscp_page_select & 0xff) == vscp_imsg.data[ 7 ])) {
  7380  001EE2  0100               	movlb	0	; () banked
  7381  001EE4  0100               	movlb	0	; () banked
  7382  001EE6  51EC               	movf	_vscp_nickname& (0+255),w,b
  7383  001EE8  0100               	movlb	0	; () banked
  7384  001EEA  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  7385  001EEE  62DF               	cpfseq	indf2,c
  7386  001EF0  EF91  F015         	goto	l1377
  7387                           
  7388                           ; BSR set to: 0
  7389  001EF4  0100               	movlb	0	; () banked
  7390  001EF6  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7391  001EF8  0E00               	movlw	0
  7392  001EFA  6E18               	movwf	?_vscp_getGUID,c
  7393  001EFC  0100               	movlb	0	; () banked
  7394  001EFE  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7395  001F00  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7396  001F04  0100               	movlb	0	; () banked
  7397  001F06  0100               	movlb	0	; () banked
  7398  001F08  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  7399  001F0A  A4D8               	btfss	status,2,c
  7400  001F0C  EF91  F015         	goto	l1377
  7401                           
  7402                           ; BSR set to: 0
  7403  001F10  0100               	movlb	0	; () banked
  7404  001F12  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7405  001F14  0E03               	movlw	3
  7406  001F16  6E18               	movwf	?_vscp_getGUID,c
  7407  001F18  0100               	movlb	0	; () banked
  7408  001F1A  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7409  001F1C  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7410  001F20  0100               	movlb	0	; () banked
  7411  001F22  0100               	movlb	0	; () banked
  7412  001F24  19FA               	xorwf	(_vscp_imsg+9)& (0+255),w,b
  7413  001F26  A4D8               	btfss	status,2,c
  7414  001F28  EF91  F015         	goto	l1377
  7415                           
  7416                           ; BSR set to: 0
  7417  001F2C  0100               	movlb	0	; () banked
  7418  001F2E  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7419  001F30  0E05               	movlw	5
  7420  001F32  6E18               	movwf	?_vscp_getGUID,c
  7421  001F34  0100               	movlb	0	; () banked
  7422  001F36  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7423  001F38  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7424  001F3C  0100               	movlb	0	; () banked
  7425  001F3E  0100               	movlb	0	; () banked
  7426  001F40  19FB               	xorwf	(_vscp_imsg+10)& (0+255),w,b
  7427  001F42  A4D8               	btfss	status,2,c
  7428  001F44  EF91  F015         	goto	l1377
  7429                           
  7430                           ; BSR set to: 0
  7431  001F48  0100               	movlb	0	; () banked
  7432  001F4A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7433  001F4C  0E07               	movlw	7
  7434  001F4E  6E18               	movwf	?_vscp_getGUID,c
  7435  001F50  0100               	movlb	0	; () banked
  7436  001F52  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7437  001F54  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7438  001F58  0100               	movlb	0	; () banked
  7439  001F5A  0100               	movlb	0	; () banked
  7440  001F5C  19FC               	xorwf	(_vscp_imsg+11)& (0+255),w,b
  7441  001F5E  A4D8               	btfss	status,2,c
  7442  001F60  EF91  F015         	goto	l1377
  7443                           
  7444                           ; BSR set to: 0
  7445  001F64  C037  F0AE         	movff	_vscp_page_select+1,??_vscp_handleProtocolEvent
  7446  001F68  C0AE  F0AF         	movff	??_vscp_handleProtocolEvent,??_vscp_handleProtocolEvent+1
  7447  001F6C  0100               	movlb	0	; () banked
  7448  001F6E  6BB0               	clrf	(??_vscp_handleProtocolEvent+2)& (0+255),b
  7449  001F70  0EFF               	movlw	255
  7450  001F72  0100               	movlb	0	; () banked
  7451  001F74  17AF               	andwf	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  7452  001F76  0E00               	movlw	0
  7453  001F78  17B0               	andwf	(??_vscp_handleProtocolEvent+2)& (0+255),f,b
  7454  001F7A  0100               	movlb	0	; () banked
  7455  001F7C  0100               	movlb	0	; () banked
  7456  001F7E  51FD               	movf	(_vscp_imsg+12)& (0+255),w,b
  7457  001F80  0100               	movlb	0	; () banked
  7458  001F82  19AF               	xorwf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  7459  001F84  11B0               	iorwf	(??_vscp_handleProtocolEvent+2)& (0+255),w,b
  7460  001F86  A4D8               	btfss	status,2,c
  7461  001F88  EF91  F015         	goto	l1377
  7462                           
  7463                           ; BSR set to: 0
  7464  001F8C  0EFF               	movlw	255
  7465  001F8E  1436               	andwf	_vscp_page_select,w,c
  7466  001F90  0100               	movlb	0	; () banked
  7467  001F92  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7468  001F94  0E00               	movlw	0
  7469  001F96  1437               	andwf	_vscp_page_select+1,w,c
  7470  001F98  0100               	movlb	0	; () banked
  7471  001F9A  6FAF               	movwf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  7472  001F9C  0100               	movlb	0	; () banked
  7473  001F9E  0100               	movlb	0	; () banked
  7474  001FA0  51FE               	movf	(_vscp_imsg+13)& (0+255),w,b
  7475  001FA2  0100               	movlb	0	; () banked
  7476  001FA4  19AE               	xorwf	??_vscp_handleProtocolEvent& (0+255),w,b
  7477  001FA6  11AF               	iorwf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  7478  001FA8  A4D8               	btfss	status,2,c
  7479  001FAA  EF91  F015         	goto	l1377
  7480                           
  7481                           ; BSR set to: 0
  7482                           ;vscp_firmware.c: 919: vscp_goBootloaderMode( vscp_imsg.data[ 1 ] );
  7483  001FAE  C0F8  F01B         	movff	_vscp_imsg+7,?_vscp_goBootloaderMode
  7484  001FB2  EC57  F036         	call	_vscp_goBootloaderMode	;wreg free
  7485  001FB6  EF91  F015         	goto	l1377
  7486  001FBA                     l9491:
  7487                           
  7488                           ;vscp_firmware.c: 928: if ((vscp_getGUID(0) == vscp_imsg.data[ 1 ]) &&
  7489                           ;vscp_firmware.c: 929: (vscp_getGUID(1) == vscp_imsg.data[ 2 ]) &&
  7490                           ;vscp_firmware.c: 930: (vscp_getGUID(2) == vscp_imsg.data[ 3 ]) &&
  7491                           ;vscp_firmware.c: 931: (vscp_getGUID(3) == vscp_imsg.data[ 4 ])) {
  7492  001FBA  0100               	movlb	0	; () banked
  7493  001FBC  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7494  001FBE  0E00               	movlw	0
  7495  001FC0  6E18               	movwf	?_vscp_getGUID,c
  7496  001FC2  0100               	movlb	0	; () banked
  7497  001FC4  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7498  001FC6  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7499  001FCA  0100               	movlb	0	; () banked
  7500  001FCC  0100               	movlb	0	; () banked
  7501  001FCE  19F8               	xorwf	(_vscp_imsg+7)& (0+255),w,b
  7502  001FD0  A4D8               	btfss	status,2,c
  7503  001FD2  D0ED               	goto	l9537
  7504                           
  7505                           ; BSR set to: 0
  7506  001FD4  0100               	movlb	0	; () banked
  7507  001FD6  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7508  001FD8  0E01               	movlw	1
  7509  001FDA  6E18               	movwf	?_vscp_getGUID,c
  7510  001FDC  0100               	movlb	0	; () banked
  7511  001FDE  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7512  001FE0  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7513  001FE4  0100               	movlb	0	; () banked
  7514  001FE6  0100               	movlb	0	; () banked
  7515  001FE8  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  7516  001FEA  A4D8               	btfss	status,2,c
  7517  001FEC  D0E0               	goto	l9537
  7518                           
  7519                           ; BSR set to: 0
  7520  001FEE  0100               	movlb	0	; () banked
  7521  001FF0  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7522  001FF2  0E02               	movlw	2
  7523  001FF4  6E18               	movwf	?_vscp_getGUID,c
  7524  001FF6  0100               	movlb	0	; () banked
  7525  001FF8  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7526  001FFA  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7527  001FFE  0100               	movlb	0	; () banked
  7528  002000  0100               	movlb	0	; () banked
  7529  002002  19FA               	xorwf	(_vscp_imsg+9)& (0+255),w,b
  7530  002004  A4D8               	btfss	status,2,c
  7531  002006  D0D3               	goto	l9537
  7532                           
  7533                           ; BSR set to: 0
  7534  002008  0100               	movlb	0	; () banked
  7535  00200A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7536  00200C  0E03               	movlw	3
  7537  00200E  6E18               	movwf	?_vscp_getGUID,c
  7538  002010  0100               	movlb	0	; () banked
  7539  002012  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7540  002014  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7541  002018  0100               	movlb	0	; () banked
  7542  00201A  0100               	movlb	0	; () banked
  7543  00201C  19FB               	xorwf	(_vscp_imsg+10)& (0+255),w,b
  7544  00201E  A4D8               	btfss	status,2,c
  7545  002020  D0C6               	goto	l9537
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;vscp_firmware.c: 932: vscp_guid_reset |= 0x10;
  7549  002022  883A               	bsf	_vscp_guid_reset,4,c
  7550  002024  D0C4               	goto	l9537
  7551  002026                     l9501:
  7552                           
  7553                           ; BSR set to: 0
  7554                           ;vscp_firmware.c: 937: if ((vscp_getGUID(4) == vscp_imsg.data[ 1 ]) &&
  7555                           ;vscp_firmware.c: 938: (vscp_getGUID(5) == vscp_imsg.data[ 2 ]) &&
  7556                           ;vscp_firmware.c: 939: (vscp_getGUID(6) == vscp_imsg.data[ 3 ]) &&
  7557                           ;vscp_firmware.c: 940: (vscp_getGUID(7) == vscp_imsg.data[ 4 ])) {
  7558  002026  0100               	movlb	0	; () banked
  7559  002028  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7560  00202A  0E04               	movlw	4
  7561  00202C  6E18               	movwf	?_vscp_getGUID,c
  7562  00202E  0100               	movlb	0	; () banked
  7563  002030  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7564  002032  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7565  002036  0100               	movlb	0	; () banked
  7566  002038  0100               	movlb	0	; () banked
  7567  00203A  19F8               	xorwf	(_vscp_imsg+7)& (0+255),w,b
  7568  00203C  A4D8               	btfss	status,2,c
  7569  00203E  D0B7               	goto	l9537
  7570                           
  7571                           ; BSR set to: 0
  7572  002040  0100               	movlb	0	; () banked
  7573  002042  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7574  002044  0E05               	movlw	5
  7575  002046  6E18               	movwf	?_vscp_getGUID,c
  7576  002048  0100               	movlb	0	; () banked
  7577  00204A  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7578  00204C  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7579  002050  0100               	movlb	0	; () banked
  7580  002052  0100               	movlb	0	; () banked
  7581  002054  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  7582  002056  A4D8               	btfss	status,2,c
  7583  002058  D0AA               	goto	l9537
  7584                           
  7585                           ; BSR set to: 0
  7586  00205A  0100               	movlb	0	; () banked
  7587  00205C  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7588  00205E  0E06               	movlw	6
  7589  002060  6E18               	movwf	?_vscp_getGUID,c
  7590  002062  0100               	movlb	0	; () banked
  7591  002064  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7592  002066  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7593  00206A  0100               	movlb	0	; () banked
  7594  00206C  0100               	movlb	0	; () banked
  7595  00206E  19FA               	xorwf	(_vscp_imsg+9)& (0+255),w,b
  7596  002070  A4D8               	btfss	status,2,c
  7597  002072  D09D               	goto	l9537
  7598                           
  7599                           ; BSR set to: 0
  7600  002074  0100               	movlb	0	; () banked
  7601  002076  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7602  002078  0E07               	movlw	7
  7603  00207A  6E18               	movwf	?_vscp_getGUID,c
  7604  00207C  0100               	movlb	0	; () banked
  7605  00207E  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7606  002080  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7607  002084  0100               	movlb	0	; () banked
  7608  002086  0100               	movlb	0	; () banked
  7609  002088  19FB               	xorwf	(_vscp_imsg+10)& (0+255),w,b
  7610  00208A  A4D8               	btfss	status,2,c
  7611  00208C  D090               	goto	l9537
  7612                           
  7613                           ; BSR set to: 0
  7614                           ;vscp_firmware.c: 941: vscp_guid_reset |= 0x20;
  7615  00208E  8A3A               	bsf	_vscp_guid_reset,5,c
  7616  002090  D08E               	goto	l9537
  7617  002092                     l9511:
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;vscp_firmware.c: 946: if ((vscp_getGUID(8) == vscp_imsg.data[ 1 ]) &&
  7621                           ;vscp_firmware.c: 947: (vscp_getGUID(9) == vscp_imsg.data[ 2 ]) &&
  7622                           ;vscp_firmware.c: 948: (vscp_getGUID(10) == vscp_imsg.data[ 3 ]) &&
  7623                           ;vscp_firmware.c: 949: (vscp_getGUID(11) == vscp_imsg.data[ 4 ])) {
  7624  002092  0100               	movlb	0	; () banked
  7625  002094  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7626  002096  0E08               	movlw	8
  7627  002098  6E18               	movwf	?_vscp_getGUID,c
  7628  00209A  0100               	movlb	0	; () banked
  7629  00209C  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7630  00209E  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7631  0020A2  0100               	movlb	0	; () banked
  7632  0020A4  0100               	movlb	0	; () banked
  7633  0020A6  19F8               	xorwf	(_vscp_imsg+7)& (0+255),w,b
  7634  0020A8  A4D8               	btfss	status,2,c
  7635  0020AA  D081               	goto	l9537
  7636                           
  7637                           ; BSR set to: 0
  7638  0020AC  0100               	movlb	0	; () banked
  7639  0020AE  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7640  0020B0  0E09               	movlw	9
  7641  0020B2  6E18               	movwf	?_vscp_getGUID,c
  7642  0020B4  0100               	movlb	0	; () banked
  7643  0020B6  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7644  0020B8  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7645  0020BC  0100               	movlb	0	; () banked
  7646  0020BE  0100               	movlb	0	; () banked
  7647  0020C0  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  7648  0020C2  A4D8               	btfss	status,2,c
  7649  0020C4  D074               	goto	l9537
  7650                           
  7651                           ; BSR set to: 0
  7652  0020C6  0100               	movlb	0	; () banked
  7653  0020C8  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7654  0020CA  0E0A               	movlw	10
  7655  0020CC  6E18               	movwf	?_vscp_getGUID,c
  7656  0020CE  0100               	movlb	0	; () banked
  7657  0020D0  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7658  0020D2  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7659  0020D6  0100               	movlb	0	; () banked
  7660  0020D8  0100               	movlb	0	; () banked
  7661  0020DA  19FA               	xorwf	(_vscp_imsg+9)& (0+255),w,b
  7662  0020DC  A4D8               	btfss	status,2,c
  7663  0020DE  D067               	goto	l9537
  7664                           
  7665                           ; BSR set to: 0
  7666  0020E0  0100               	movlb	0	; () banked
  7667  0020E2  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7668  0020E4  0E0B               	movlw	11
  7669  0020E6  6E18               	movwf	?_vscp_getGUID,c
  7670  0020E8  0100               	movlb	0	; () banked
  7671  0020EA  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7672  0020EC  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7673  0020F0  0100               	movlb	0	; () banked
  7674  0020F2  0100               	movlb	0	; () banked
  7675  0020F4  19FB               	xorwf	(_vscp_imsg+10)& (0+255),w,b
  7676  0020F6  A4D8               	btfss	status,2,c
  7677  0020F8  D05A               	goto	l9537
  7678                           
  7679                           ; BSR set to: 0
  7680                           ;vscp_firmware.c: 950: vscp_guid_reset |= 0x40;
  7681  0020FA  8C3A               	bsf	_vscp_guid_reset,6,c
  7682  0020FC  D058               	goto	l9537
  7683  0020FE                     l9521:
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;vscp_firmware.c: 955: if ((vscp_getGUID(12) == vscp_imsg.data[ 1 ]) &&
  7687                           ;vscp_firmware.c: 956: (vscp_getGUID(13) == vscp_imsg.data[ 2 ]) &&
  7688                           ;vscp_firmware.c: 957: (vscp_getGUID(14) == vscp_imsg.data[ 3 ]) &&
  7689                           ;vscp_firmware.c: 958: (vscp_getGUID(15) == vscp_imsg.data[ 4 ])) {
  7690  0020FE  0100               	movlb	0	; () banked
  7691  002100  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7692  002102  0E0C               	movlw	12
  7693  002104  6E18               	movwf	?_vscp_getGUID,c
  7694  002106  0100               	movlb	0	; () banked
  7695  002108  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7696  00210A  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7697  00210E  0100               	movlb	0	; () banked
  7698  002110  0100               	movlb	0	; () banked
  7699  002112  19F8               	xorwf	(_vscp_imsg+7)& (0+255),w,b
  7700  002114  A4D8               	btfss	status,2,c
  7701  002116  D04B               	goto	l9537
  7702                           
  7703                           ; BSR set to: 0
  7704  002118  0100               	movlb	0	; () banked
  7705  00211A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7706  00211C  0E0D               	movlw	13
  7707  00211E  6E18               	movwf	?_vscp_getGUID,c
  7708  002120  0100               	movlb	0	; () banked
  7709  002122  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7710  002124  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7711  002128  0100               	movlb	0	; () banked
  7712  00212A  0100               	movlb	0	; () banked
  7713  00212C  19F9               	xorwf	(_vscp_imsg+8)& (0+255),w,b
  7714  00212E  A4D8               	btfss	status,2,c
  7715  002130  D03E               	goto	l9537
  7716                           
  7717                           ; BSR set to: 0
  7718  002132  0100               	movlb	0	; () banked
  7719  002134  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7720  002136  0E0E               	movlw	14
  7721  002138  6E18               	movwf	?_vscp_getGUID,c
  7722  00213A  0100               	movlb	0	; () banked
  7723  00213C  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7724  00213E  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7725  002142  0100               	movlb	0	; () banked
  7726  002144  0100               	movlb	0	; () banked
  7727  002146  19FA               	xorwf	(_vscp_imsg+9)& (0+255),w,b
  7728  002148  A4D8               	btfss	status,2,c
  7729  00214A  D031               	goto	l9537
  7730                           
  7731                           ; BSR set to: 0
  7732  00214C  0100               	movlb	0	; () banked
  7733  00214E  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7734  002150  0E0F               	movlw	15
  7735  002152  6E18               	movwf	?_vscp_getGUID,c
  7736  002154  0100               	movlb	0	; () banked
  7737  002156  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7738  002158  ECEB  F036         	call	_vscp_getGUID	;wreg free
  7739  00215C  0100               	movlb	0	; () banked
  7740  00215E  0100               	movlb	0	; () banked
  7741  002160  19FB               	xorwf	(_vscp_imsg+10)& (0+255),w,b
  7742  002162  A4D8               	btfss	status,2,c
  7743  002164  D024               	goto	l9537
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;vscp_firmware.c: 959: vscp_guid_reset |= 0x80;
  7747  002166  8E3A               	bsf	_vscp_guid_reset,7,c
  7748  002168  D022               	goto	l9537
  7749  00216A                     l9531:
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;vscp_firmware.c: 964: vscp_guid_reset = 0;
  7753  00216A  0100               	movlb	0	; () banked
  7754  00216C  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7755  00216E  0E00               	movlw	0
  7756  002170  6E3A               	movwf	_vscp_guid_reset,c
  7757  002172  0100               	movlb	0	; () banked
  7758  002174  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7759                           
  7760                           ;vscp_firmware.c: 965: break;
  7761  002176  D01B               	goto	l9537
  7762  002178                     l9535:
  7763  002178  0100               	movlb	0	; () banked
  7764  00217A  0100               	movlb	0	; () banked
  7765  00217C  39F7               	swapf	(_vscp_imsg+6)& (0+255),w,b
  7766  00217E  0B0F               	andlw	15
  7767  002180  0100               	movlb	0	; () banked
  7768  002182  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7769  002184  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  7770                           
  7771                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7772                           ; Switch size 1, requested type "space"
  7773                           ; Number of cases is 1, Range of values is 0 to 0
  7774                           ; switch strategies available:
  7775                           ; Name         Instructions Cycles
  7776                           ; simple_byte            4     3 (average)
  7777                           ;	Chosen strategy is simple_byte
  7778  002186  0100               	movlb	0	; () banked
  7779  002188  51AF               	movf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  7780  00218A  0A00               	xorlw	0	; case 0
  7781  00218C  A4D8               	btfss	status,2,c
  7782  00218E  D7ED               	goto	l9531
  7783                           
  7784                           ; BSR set to: 0
  7785                           ; Switch size 1, requested type "space"
  7786                           ; Number of cases is 4, Range of values is 0 to 3
  7787                           ; switch strategies available:
  7788                           ; Name         Instructions Cycles
  7789                           ; simple_byte           13     7 (average)
  7790                           ;	Chosen strategy is simple_byte
  7791  002190  0100               	movlb	0	; () banked
  7792  002192  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7793  002194  0A00               	xorlw	0	; case 0
  7794  002196  B4D8               	btfsc	status,2,c
  7795  002198  D710               	goto	l9491
  7796  00219A  0A01               	xorlw	1	; case 1
  7797  00219C  B4D8               	btfsc	status,2,c
  7798  00219E  D743               	goto	l9501
  7799  0021A0  0A03               	xorlw	3	; case 2
  7800  0021A2  B4D8               	btfsc	status,2,c
  7801  0021A4  D776               	goto	l9511
  7802  0021A6  0A01               	xorlw	1	; case 3
  7803  0021A8  B4D8               	btfsc	status,2,c
  7804  0021AA  D7A9               	goto	l9521
  7805  0021AC  D7DE               	goto	l9531
  7806  0021AE                     l9537:
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;vscp_firmware.c: 968: if (0xf0 == (vscp_guid_reset & 0xf0)) {
  7810  0021AE  503A               	movf	_vscp_guid_reset,w,c
  7811  0021B0  0BF0               	andlw	240
  7812  0021B2  0AF0               	xorlw	240
  7813  0021B4  A4D8               	btfss	status,2,c
  7814  0021B6  EF91  F015         	goto	l1377
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;vscp_firmware.c: 970: vscp_init();
  7818  0021BA  EC05  F032         	call	_vscp_init	;wreg free
  7819  0021BE  EF91  F015         	goto	l1377
  7820  0021C2                     l9541:
  7821                           
  7822                           ;vscp_firmware.c: 976: if (vscp_nickname == vscp_imsg.data[ 0 ]) {
  7823  0021C2  0100               	movlb	0	; () banked
  7824  0021C4  0100               	movlb	0	; () banked
  7825  0021C6  51EC               	movf	_vscp_nickname& (0+255),w,b
  7826  0021C8  0100               	movlb	0	; () banked
  7827  0021CA  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  7828  0021CE  62DF               	cpfseq	indf2,c
  7829  0021D0  EF91  F015         	goto	l1377
  7830                           
  7831                           ; BSR set to: 0
  7832                           ;vscp_firmware.c: 978: uint8_t i;
  7833                           ;vscp_firmware.c: 979: uint8_t pos = 0;
  7834  0021D4  0100               	movlb	0	; () banked
  7835  0021D6  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7836  0021D8  0E00               	movlw	0
  7837  0021DA  0101               	movlb	1	; () banked
  7838  0021DC  0101               	movlb	1	; () banked
  7839  0021DE  6F05               	movwf	vscp_handleProtocolEvent@pos& (0+255),b
  7840  0021E0  0100               	movlb	0	; () banked
  7841  0021E2  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7842                           
  7843                           ; BSR set to: 0
  7844                           ;vscp_firmware.c: 980: uint8_t offset = vscp_imsg.data[ 1 ];
  7845  0021E4  C0F8  F104         	movff	_vscp_imsg+7,vscp_handleProtocolEvent@offset
  7846                           
  7847                           ; BSR set to: 0
  7848                           ;vscp_firmware.c: 981: uint8_t len = vscp_imsg.data[ 2 ];
  7849  0021E8  C0F9  F107         	movff	_vscp_imsg+8,vscp_handleProtocolEvent@len
  7850                           
  7851                           ;vscp_firmware.c: 983: for (i = 0; i < len; i++) {
  7852  0021EC  0100               	movlb	0	; () banked
  7853  0021EE  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7854  0021F0  0E00               	movlw	0
  7855  0021F2  0101               	movlb	1	; () banked
  7856  0021F4  0101               	movlb	1	; () banked
  7857  0021F6  6F12               	movwf	vscp_handleProtocolEvent@i& (0+255),b
  7858  0021F8  0100               	movlb	0	; () banked
  7859  0021FA  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7860  0021FC  D086               	goto	l9577
  7861  0021FE                     l9549:
  7862                           
  7863                           ;vscp_firmware.c: 984: vscp_omsg.data[ (i % 7) + 1 ] = vscp_readRegister(offset + i);
  7864  0021FE  0101               	movlb	1	; () banked
  7865  002200  C112  F016         	movff	vscp_handleProtocolEvent@i,?___awmod
  7866  002204  6A17               	clrf	?___awmod+1,c
  7867  002206  0E00               	movlw	0
  7868  002208  6E19               	movwf	?___awmod+3,c
  7869  00220A  0E07               	movlw	7
  7870  00220C  6E18               	movwf	?___awmod+2,c
  7871  00220E  EC0A  F034         	call	___awmod	;wreg free
  7872  002212  0E01               	movlw	1
  7873  002214  2616               	addwf	?___awmod,f,c
  7874  002216  0E00               	movlw	0
  7875  002218  2217               	addwfc	?___awmod+1,f,c
  7876  00221A  0E43               	movlw	low (_vscp_omsg+5)
  7877  00221C  2416               	addwf	?___awmod,w,c
  7878  00221E  6ED9               	movwf	fsr2l,c
  7879  002220  0E00               	movlw	high (_vscp_omsg+5)
  7880  002222  2017               	addwfc	?___awmod+1,w,c
  7881  002224  6EDA               	movwf	fsr2h,c
  7882  002226  0101               	movlb	1	; () banked
  7883  002228  0101               	movlb	1	; () banked
  7884  00222A  5104               	movf	vscp_handleProtocolEvent@offset& (0+255),w,b
  7885  00222C  0101               	movlb	1	; () banked
  7886  00222E  0101               	movlb	1	; () banked
  7887  002230  2512               	addwf	vscp_handleProtocolEvent@i& (0+255),w,b
  7888  002232  6E2B               	movwf	?_vscp_readRegister,c
  7889  002234  EC84  F036         	call	_vscp_readRegister	;wreg free
  7890  002238  6EDF               	movwf	indf2,c
  7891                           
  7892                           ;vscp_firmware.c: 986: if ( (i % 7) == 6 || i == (len - 1) ) {
  7893  00223A  0101               	movlb	1	; () banked
  7894  00223C  C112  F016         	movff	vscp_handleProtocolEvent@i,?___awmod
  7895  002240  6A17               	clrf	?___awmod+1,c
  7896  002242  0E00               	movlw	0
  7897  002244  6E19               	movwf	?___awmod+3,c
  7898  002246  0E07               	movlw	7
  7899  002248  6E18               	movwf	?___awmod+2,c
  7900  00224A  EC0A  F034         	call	___awmod	;wreg free
  7901  00224E  5016               	movf	?___awmod,w,c
  7902  002250  0A06               	xorlw	6
  7903  002252  1017               	iorwf	?___awmod+1,w,c
  7904  002254  B4D8               	btfsc	status,2,c
  7905  002256  D013               	goto	l9555
  7906  002258  0EFF               	movlw	255
  7907  00225A  0101               	movlb	1	; () banked
  7908  00225C  0101               	movlb	1	; () banked
  7909  00225E  2507               	addwf	vscp_handleProtocolEvent@len& (0+255),w,b
  7910  002260  0100               	movlb	0	; () banked
  7911  002262  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7912  002264  0100               	movlb	0	; () banked
  7913  002266  0100               	movlb	0	; () banked
  7914  002268  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  7915  00226A  0EFF               	movlw	255
  7916  00226C  23AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  7917  00226E  0101               	movlb	1	; () banked
  7918  002270  0101               	movlb	1	; () banked
  7919  002272  5112               	movf	vscp_handleProtocolEvent@i& (0+255),w,b
  7920  002274  0100               	movlb	0	; () banked
  7921  002276  19AE               	xorwf	??_vscp_handleProtocolEvent& (0+255),w,b
  7922  002278  11AF               	iorwf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  7923  00227A  A4D8               	btfss	status,2,c
  7924  00227C  D043               	goto	l9575
  7925  00227E                     l9555:
  7926                           
  7927                           ;vscp_firmware.c: 988: uint8_t bytes;
  7928                           ;vscp_firmware.c: 990: if ( ( i % 7 ) == 6 ) {
  7929  00227E  0101               	movlb	1	; () banked
  7930  002280  C112  F016         	movff	vscp_handleProtocolEvent@i,?___awmod
  7931  002284  6A17               	clrf	?___awmod+1,c
  7932  002286  0E00               	movlw	0
  7933  002288  6E19               	movwf	?___awmod+3,c
  7934  00228A  0E07               	movlw	7
  7935  00228C  6E18               	movwf	?___awmod+2,c
  7936  00228E  EC0A  F034         	call	___awmod	;wreg free
  7937  002292  5016               	movf	?___awmod,w,c
  7938  002294  0A06               	xorlw	6
  7939  002296  1017               	iorwf	?___awmod+1,w,c
  7940  002298  A4D8               	btfss	status,2,c
  7941  00229A  D009               	goto	l9559
  7942                           
  7943                           ;vscp_firmware.c: 991: bytes = 7;
  7944  00229C  0100               	movlb	0	; () banked
  7945  00229E  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7946  0022A0  0E07               	movlw	7
  7947  0022A2  0101               	movlb	1	; () banked
  7948  0022A4  0101               	movlb	1	; () banked
  7949  0022A6  6F06               	movwf	vscp_handleProtocolEvent@bytes& (0+255),b
  7950  0022A8  0100               	movlb	0	; () banked
  7951  0022AA  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7952                           
  7953                           ;vscp_firmware.c: 992: }
  7954  0022AC  D00F               	goto	l9561
  7955  0022AE                     l9559:
  7956                           
  7957                           ;vscp_firmware.c: 993: else {
  7958                           ;vscp_firmware.c: 994: bytes = ( i % 7 ) + 1;
  7959  0022AE  0101               	movlb	1	; () banked
  7960  0022B0  C112  F016         	movff	vscp_handleProtocolEvent@i,?___awmod
  7961  0022B4  6A17               	clrf	?___awmod+1,c
  7962  0022B6  0E00               	movlw	0
  7963  0022B8  6E19               	movwf	?___awmod+3,c
  7964  0022BA  0E07               	movlw	7
  7965  0022BC  6E18               	movwf	?___awmod+2,c
  7966  0022BE  EC0A  F034         	call	___awmod	;wreg free
  7967  0022C2  0100               	movlb	0	; () banked
  7968  0022C4  2916               	incf	?___awmod& (0+255),w,b
  7969  0022C6  0101               	movlb	1	; () banked
  7970  0022C8  0101               	movlb	1	; () banked
  7971  0022CA  6F06               	movwf	vscp_handleProtocolEvent@bytes& (0+255),b
  7972  0022CC                     l9561:
  7973                           
  7974                           ;vscp_firmware.c: 995: }
  7975                           ;vscp_firmware.c: 997: vscp_omsg.flags = 0x80 + bytes + 1;
  7976  0022CC  0101               	movlb	1	; () banked
  7977  0022CE  0101               	movlb	1	; () banked
  7978  0022D0  5106               	movf	vscp_handleProtocolEvent@bytes& (0+255),w,b
  7979  0022D2  0F81               	addlw	129
  7980  0022D4  6E3E               	movwf	_vscp_omsg,c
  7981                           
  7982                           ; BSR set to: 1
  7983                           ;vscp_firmware.c: 998: vscp_omsg.priority = 0x07;
  7984  0022D6  0100               	movlb	0	; () banked
  7985  0022D8  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  7986  0022DA  0E07               	movlw	7
  7987  0022DC  6E3F               	movwf	_vscp_omsg+1,c
  7988  0022DE  0100               	movlb	0	; () banked
  7989  0022E0  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;vscp_firmware.c: 999: vscp_omsg.vscp_class = 0;
  7993  0022E2  0E00               	movlw	0
  7994  0022E4  6E41               	movwf	_vscp_omsg+3,c
  7995  0022E6  0E00               	movlw	0
  7996  0022E8  6E40               	movwf	_vscp_omsg+2,c
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;vscp_firmware.c: 1000: vscp_omsg.vscp_type = 26;
  8000  0022EA  0100               	movlb	0	; () banked
  8001  0022EC  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8002  0022EE  0E1A               	movlw	26
  8003  0022F0  6E42               	movwf	_vscp_omsg+4,c
  8004  0022F2  0100               	movlb	0	; () banked
  8005  0022F4  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8006                           
  8007                           ; BSR set to: 0
  8008                           ;vscp_firmware.c: 1001: vscp_omsg.data[ 0 ] = pos;
  8009  0022F6  C105  F043         	movff	vscp_handleProtocolEvent@pos,_vscp_omsg+5
  8010                           
  8011                           ; BSR set to: 0
  8012                           ;vscp_firmware.c: 1004: vscp_sendEvent();
  8013  0022FA  EC46  F035         	call	_vscp_sendEvent	;wreg free
  8014                           
  8015                           ;vscp_firmware.c: 1005: pos++;
  8016  0022FE  0101               	movlb	1	; () banked
  8017  002300  0101               	movlb	1	; () banked
  8018  002302  2B05               	incf	vscp_handleProtocolEvent@pos& (0+255),f,b
  8019  002304                     l9575:
  8020  002304  0101               	movlb	1	; () banked
  8021  002306  0101               	movlb	1	; () banked
  8022  002308  2B12               	incf	vscp_handleProtocolEvent@i& (0+255),f,b
  8023  00230A                     l9577:
  8024  00230A  0101               	movlb	1	; () banked
  8025  00230C  0101               	movlb	1	; () banked
  8026  00230E  5107               	movf	vscp_handleProtocolEvent@len& (0+255),w,b
  8027  002310  0101               	movlb	1	; () banked
  8028  002312  0101               	movlb	1	; () banked
  8029  002314  5D12               	subwf	vscp_handleProtocolEvent@i& (0+255),w,b
  8030  002316  B0D8               	btfsc	status,0,c
  8031  002318  EF91  F015         	goto	l1377
  8032  00231C  D770               	goto	l9549
  8033  00231E                     l9579:
  8034                           
  8035                           ;vscp_firmware.c: 1013: if (vscp_nickname == vscp_imsg.data[ 0 ]) {
  8036  00231E  0100               	movlb	0	; () banked
  8037  002320  0100               	movlb	0	; () banked
  8038  002322  51EC               	movf	_vscp_nickname& (0+255),w,b
  8039  002324  0100               	movlb	0	; () banked
  8040  002326  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  8041  00232A  62DF               	cpfseq	indf2,c
  8042  00232C  D3FA               	goto	l1377
  8043                           
  8044                           ; BSR set to: 0
  8045                           ;vscp_firmware.c: 1014: uint8_t i;
  8046                           ;vscp_firmware.c: 1015: uint8_t pos = vscp_imsg.data[ 1 ];
  8047  00232E  C0F8  F108         	movff	_vscp_imsg+7,vscp_handleProtocolEvent@pos_1392
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;vscp_firmware.c: 1016: uint8_t len = (vscp_imsg.flags - 2) & 0x07;
  8051  002332  0100               	movlb	0	; () banked
  8052  002334  0100               	movlb	0	; () banked
  8053  002336  51F1               	movf	_vscp_imsg& (0+255),w,b
  8054  002338  0FFE               	addlw	254
  8055  00233A  0B07               	andlw	7
  8056  00233C  0101               	movlb	1	; () banked
  8057  00233E  0101               	movlb	1	; () banked
  8058  002340  6F09               	movwf	vscp_handleProtocolEvent@len_1393& (0+255),b
  8059                           
  8060                           ; BSR set to: 1
  8061                           ;vscp_firmware.c: 1018: for (i = 0; i < len; i++) {
  8062  002342  0100               	movlb	0	; () banked
  8063  002344  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8064  002346  0E00               	movlw	0
  8065  002348  0101               	movlb	1	; () banked
  8066  00234A  0101               	movlb	1	; () banked
  8067  00234C  6F0F               	movwf	vscp_handleProtocolEvent@i_1391& (0+255),b
  8068  00234E  0100               	movlb	0	; () banked
  8069  002350  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8070  002352  D044               	goto	l9593
  8071  002354                     l9587:
  8072                           
  8073                           ;vscp_firmware.c: 1020: vscp_writeRegister(pos + i, vscp_imsg.data[ 2 + i ]);
  8074  002354  0101               	movlb	1	; () banked
  8075  002356  0101               	movlb	1	; () banked
  8076  002358  5108               	movf	vscp_handleProtocolEvent@pos_1392& (0+255),w,b
  8077  00235A  0101               	movlb	1	; () banked
  8078  00235C  0101               	movlb	1	; () banked
  8079  00235E  250F               	addwf	vscp_handleProtocolEvent@i_1391& (0+255),w,b
  8080  002360  0100               	movlb	0	; () banked
  8081  002362  0100               	movlb	0	; () banked
  8082  002364  6FAC               	movwf	?_vscp_writeRegister& (0+255),b
  8083  002366  0101               	movlb	1	; () banked
  8084  002368  0101               	movlb	1	; () banked
  8085  00236A  510F               	movf	vscp_handleProtocolEvent@i_1391& (0+255),w,b
  8086  00236C  0100               	movlb	0	; () banked
  8087  00236E  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8088  002370  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  8089  002372  0E02               	movlw	2
  8090  002374  0100               	movlb	0	; () banked
  8091  002376  27AE               	addwf	??_vscp_handleProtocolEvent& (0+255),f,b
  8092  002378  0E00               	movlw	0
  8093  00237A  23AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  8094  00237C  0100               	movlb	0	; () banked
  8095  00237E  0EF7               	movlw	low (_vscp_imsg+6)
  8096  002380  0100               	movlb	0	; () banked
  8097  002382  25AE               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  8098  002384  6ED9               	movwf	fsr2l,c
  8099  002386  0100               	movlb	0	; () banked
  8100  002388  0E00               	movlw	high (_vscp_imsg+6)
  8101  00238A  0100               	movlb	0	; () banked
  8102  00238C  21AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  8103  00238E  6EDA               	movwf	fsr2h,c
  8104  002390  50DF               	movf	indf2,w,c
  8105  002392  0100               	movlb	0	; () banked
  8106  002394  0100               	movlb	0	; () banked
  8107  002396  6FAD               	movwf	(?_vscp_writeRegister+1)& (0+255),b
  8108  002398  EC22  F036         	call	_vscp_writeRegister	;wreg free
  8109                           
  8110                           ;vscp_firmware.c: 1021: vscp_omsg.data[ 1 + i ] = vscp_readRegister(pos + i);
  8111  00239C  0101               	movlb	1	; () banked
  8112  00239E  0101               	movlb	1	; () banked
  8113  0023A0  510F               	movf	vscp_handleProtocolEvent@i_1391& (0+255),w,b
  8114  0023A2  0100               	movlb	0	; () banked
  8115  0023A4  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8116  0023A6  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  8117  0023A8  0E01               	movlw	1
  8118  0023AA  0100               	movlb	0	; () banked
  8119  0023AC  27AE               	addwf	??_vscp_handleProtocolEvent& (0+255),f,b
  8120  0023AE  0E00               	movlw	0
  8121  0023B0  23AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  8122  0023B2  0E43               	movlw	low (_vscp_omsg+5)
  8123  0023B4  0100               	movlb	0	; () banked
  8124  0023B6  25AE               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  8125  0023B8  6ED9               	movwf	fsr2l,c
  8126  0023BA  0E00               	movlw	high (_vscp_omsg+5)
  8127  0023BC  0100               	movlb	0	; () banked
  8128  0023BE  21AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  8129  0023C0  6EDA               	movwf	fsr2h,c
  8130  0023C2  0101               	movlb	1	; () banked
  8131  0023C4  0101               	movlb	1	; () banked
  8132  0023C6  5108               	movf	vscp_handleProtocolEvent@pos_1392& (0+255),w,b
  8133  0023C8  0101               	movlb	1	; () banked
  8134  0023CA  0101               	movlb	1	; () banked
  8135  0023CC  250F               	addwf	vscp_handleProtocolEvent@i_1391& (0+255),w,b
  8136  0023CE  6E2B               	movwf	?_vscp_readRegister,c
  8137  0023D0  EC84  F036         	call	_vscp_readRegister	;wreg free
  8138  0023D4  6EDF               	movwf	indf2,c
  8139  0023D6  0101               	movlb	1	; () banked
  8140  0023D8  0101               	movlb	1	; () banked
  8141  0023DA  2B0F               	incf	vscp_handleProtocolEvent@i_1391& (0+255),f,b
  8142  0023DC                     l9593:
  8143  0023DC  0101               	movlb	1	; () banked
  8144  0023DE  0101               	movlb	1	; () banked
  8145  0023E0  5109               	movf	vscp_handleProtocolEvent@len_1393& (0+255),w,b
  8146  0023E2  0101               	movlb	1	; () banked
  8147  0023E4  0101               	movlb	1	; () banked
  8148  0023E6  5D0F               	subwf	vscp_handleProtocolEvent@i_1391& (0+255),w,b
  8149  0023E8  A0D8               	btfss	status,0,c
  8150  0023EA  D7B4               	goto	l9587
  8151                           
  8152                           ; BSR set to: 1
  8153                           ;vscp_firmware.c: 1022: }
  8154                           ;vscp_firmware.c: 1024: vscp_omsg.priority = 0x07;
  8155                           
  8156                           ; BSR set to: 1
  8157  0023EC  0100               	movlb	0	; () banked
  8158  0023EE  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8159  0023F0  0E07               	movlw	7
  8160  0023F2  6E3F               	movwf	_vscp_omsg+1,c
  8161  0023F4  0100               	movlb	0	; () banked
  8162  0023F6  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8163                           
  8164                           ; BSR set to: 0
  8165                           ;vscp_firmware.c: 1025: vscp_omsg.vscp_class = 0;
  8166  0023F8  0E00               	movlw	0
  8167  0023FA  6E41               	movwf	_vscp_omsg+3,c
  8168  0023FC  0E00               	movlw	0
  8169  0023FE  6E40               	movwf	_vscp_omsg+2,c
  8170                           
  8171                           ; BSR set to: 0
  8172                           ;vscp_firmware.c: 1026: vscp_omsg.vscp_type = 26;
  8173  002400  0100               	movlb	0	; () banked
  8174  002402  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8175  002404  0E1A               	movlw	26
  8176  002406  6E42               	movwf	_vscp_omsg+4,c
  8177  002408  0100               	movlb	0	; () banked
  8178  00240A  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;vscp_firmware.c: 1027: vscp_omsg.data[ 0 ] = 0;
  8182  00240C  0100               	movlb	0	; () banked
  8183  00240E  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8184  002410  0E00               	movlw	0
  8185  002412  6E43               	movwf	_vscp_omsg+5,c
  8186  002414  0100               	movlb	0	; () banked
  8187  002416  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8188                           
  8189                           ; BSR set to: 0
  8190                           ;vscp_firmware.c: 1028: vscp_omsg.flags = 0x80 + len + 1;
  8191  002418  0101               	movlb	1	; () banked
  8192  00241A  0101               	movlb	1	; () banked
  8193  00241C  5109               	movf	vscp_handleProtocolEvent@len_1393& (0+255),w,b
  8194  00241E  0F81               	addlw	129
  8195  002420  6E3E               	movwf	_vscp_omsg,c
  8196                           
  8197                           ; BSR set to: 1
  8198                           ;vscp_firmware.c: 1031: vscp_sendEvent();
  8199  002422  EC46  F035         	call	_vscp_sendEvent	;wreg free
  8200  002426  D37D               	goto	l1377
  8201  002428                     l9607:
  8202                           
  8203                           ;vscp_firmware.c: 1038: if (vscp_nickname == vscp_imsg.data[ 0 ]) {
  8204  002428  0100               	movlb	0	; () banked
  8205  00242A  0100               	movlb	0	; () banked
  8206  00242C  51EC               	movf	_vscp_nickname& (0+255),w,b
  8207  00242E  0100               	movlb	0	; () banked
  8208  002430  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  8209  002434  62DF               	cpfseq	indf2,c
  8210  002436  D375               	goto	l1377
  8211                           
  8212                           ; BSR set to: 0
  8213                           ;vscp_firmware.c: 1040: vscp_omsg.data[ 1 ] = vscp_writeAppReg(
  8214                           ;vscp_firmware.c: 1041: vscp_imsg.data[ 1 ],
  8215                           ;vscp_firmware.c: 1042: vscp_readAppReg(vscp_imsg.data[ 1 ]) + 1);
  8216  002438  C0F8  F0A2         	movff	_vscp_imsg+7,?_vscp_writeAppReg
  8217  00243C  C0F8  F018         	movff	_vscp_imsg+7,?_vscp_readAppReg
  8218  002440  EC3F  F030         	call	_vscp_readAppReg	;wreg free
  8219  002444  0100               	movlb	0	; () banked
  8220  002446  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8221  002448  0100               	movlb	0	; () banked
  8222  00244A  29AE               	incf	??_vscp_handleProtocolEvent& (0+255),w,b
  8223  00244C  0100               	movlb	0	; () banked
  8224  00244E  0100               	movlb	0	; () banked
  8225  002450  6FA3               	movwf	(?_vscp_writeAppReg+1)& (0+255),b
  8226  002452  EC11  F003         	call	_vscp_writeAppReg	;wreg free
  8227  002456  6E44               	movwf	_vscp_omsg+6,c
  8228                           
  8229                           ;vscp_firmware.c: 1044: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  8230  002458  C0F8  F043         	movff	_vscp_imsg+7,_vscp_omsg+5
  8231                           
  8232                           ;vscp_firmware.c: 1046: vscp_omsg.priority = 0x03;
  8233  00245C  0100               	movlb	0	; () banked
  8234  00245E  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8235  002460  0E03               	movlw	3
  8236  002462  6E3F               	movwf	_vscp_omsg+1,c
  8237  002464  0100               	movlb	0	; () banked
  8238  002466  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8239                           
  8240                           ; BSR set to: 0
  8241                           ;vscp_firmware.c: 1047: vscp_omsg.flags = 0x80 + 2;
  8242  002468  0100               	movlb	0	; () banked
  8243  00246A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8244  00246C  0E82               	movlw	130
  8245  00246E  6E3E               	movwf	_vscp_omsg,c
  8246  002470  0100               	movlb	0	; () banked
  8247  002472  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;vscp_firmware.c: 1048: vscp_omsg.vscp_class = 0;
  8251  002474  0E00               	movlw	0
  8252  002476  6E41               	movwf	_vscp_omsg+3,c
  8253  002478  0E00               	movlw	0
  8254  00247A  6E40               	movwf	_vscp_omsg+2,c
  8255                           
  8256                           ; BSR set to: 0
  8257                           ;vscp_firmware.c: 1049: vscp_omsg.vscp_type = 10;
  8258  00247C  0100               	movlb	0	; () banked
  8259  00247E  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8260  002480  0E0A               	movlw	10
  8261  002482  6E42               	movwf	_vscp_omsg+4,c
  8262  002484  0100               	movlb	0	; () banked
  8263  002486  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8264                           
  8265                           ; BSR set to: 0
  8266                           ;vscp_firmware.c: 1052: vscp_sendEvent();
  8267  002488  EC46  F035         	call	_vscp_sendEvent	;wreg free
  8268  00248C  D34A               	goto	l1377
  8269  00248E                     l9623:
  8270                           
  8271                           ;vscp_firmware.c: 1058: if (vscp_nickname == vscp_imsg.data[ 0 ]) {
  8272  00248E  0100               	movlb	0	; () banked
  8273  002490  0100               	movlb	0	; () banked
  8274  002492  51EC               	movf	_vscp_nickname& (0+255),w,b
  8275  002494  0100               	movlb	0	; () banked
  8276  002496  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  8277  00249A  62DF               	cpfseq	indf2,c
  8278  00249C  D342               	goto	l1377
  8279                           
  8280                           ; BSR set to: 0
  8281                           ;vscp_firmware.c: 1060: vscp_omsg.data[ 1 ] = vscp_writeAppReg(
  8282                           ;vscp_firmware.c: 1061: vscp_imsg.data[ 1 ],
  8283                           ;vscp_firmware.c: 1062: vscp_readAppReg(vscp_imsg.data[ 1 ]) - 1);
  8284  00249E  C0F8  F0A2         	movff	_vscp_imsg+7,?_vscp_writeAppReg
  8285  0024A2  C0F8  F018         	movff	_vscp_imsg+7,?_vscp_readAppReg
  8286  0024A6  EC3F  F030         	call	_vscp_readAppReg	;wreg free
  8287  0024AA  0100               	movlb	0	; () banked
  8288  0024AC  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8289  0024AE  0100               	movlb	0	; () banked
  8290  0024B0  05AE               	decf	??_vscp_handleProtocolEvent& (0+255),w,b
  8291  0024B2  0100               	movlb	0	; () banked
  8292  0024B4  0100               	movlb	0	; () banked
  8293  0024B6  6FA3               	movwf	(?_vscp_writeAppReg+1)& (0+255),b
  8294  0024B8  EC11  F003         	call	_vscp_writeAppReg	;wreg free
  8295  0024BC  6E44               	movwf	_vscp_omsg+6,c
  8296                           
  8297                           ;vscp_firmware.c: 1064: vscp_omsg.data[ 0 ] = vscp_imsg.data[ 1 ];
  8298  0024BE  C0F8  F043         	movff	_vscp_imsg+7,_vscp_omsg+5
  8299                           
  8300                           ;vscp_firmware.c: 1066: vscp_omsg.priority = 0x03;
  8301  0024C2  0100               	movlb	0	; () banked
  8302  0024C4  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8303  0024C6  0E03               	movlw	3
  8304  0024C8  6E3F               	movwf	_vscp_omsg+1,c
  8305  0024CA  0100               	movlb	0	; () banked
  8306  0024CC  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8307                           
  8308                           ; BSR set to: 0
  8309                           ;vscp_firmware.c: 1067: vscp_omsg.flags = 0x80 + 2;
  8310  0024CE  0100               	movlb	0	; () banked
  8311  0024D0  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8312  0024D2  0E82               	movlw	130
  8313  0024D4  6E3E               	movwf	_vscp_omsg,c
  8314  0024D6  0100               	movlb	0	; () banked
  8315  0024D8  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8316                           
  8317                           ; BSR set to: 0
  8318                           ;vscp_firmware.c: 1068: vscp_omsg.vscp_class = 0;
  8319  0024DA  0E00               	movlw	0
  8320  0024DC  6E41               	movwf	_vscp_omsg+3,c
  8321  0024DE  0E00               	movlw	0
  8322  0024E0  6E40               	movwf	_vscp_omsg+2,c
  8323                           
  8324                           ; BSR set to: 0
  8325                           ;vscp_firmware.c: 1069: vscp_omsg.vscp_type = 10;
  8326  0024E2  0100               	movlb	0	; () banked
  8327  0024E4  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8328  0024E6  0E0A               	movlw	10
  8329  0024E8  6E42               	movwf	_vscp_omsg+4,c
  8330  0024EA  0100               	movlb	0	; () banked
  8331  0024EC  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8332                           
  8333                           ; BSR set to: 0
  8334                           ;vscp_firmware.c: 1072: vscp_sendEvent();
  8335  0024EE  EC46  F035         	call	_vscp_sendEvent	;wreg free
  8336  0024F2  D317               	goto	l1377
  8337  0024F4                     l9639:
  8338                           
  8339                           ;vscp_firmware.c: 1078: if ((vscp_nickname == vscp_imsg.data[ 0 ]) ||
  8340                           ;vscp_firmware.c: 1079: (0xff == vscp_imsg.data[ 0 ])) {
  8341  0024F4  0100               	movlb	0	; () banked
  8342  0024F6  0100               	movlb	0	; () banked
  8343  0024F8  51F7               	movf	(_vscp_imsg+6)& (0+255),w,b
  8344  0024FA  0100               	movlb	0	; () banked
  8345  0024FC  0100               	movlb	0	; () banked
  8346  0024FE  19EC               	xorwf	_vscp_nickname& (0+255),w,b
  8347  002500  B4D8               	btfsc	status,2,c
  8348  002502  D005               	goto	l9643
  8349                           
  8350                           ; BSR set to: 0
  8351  002504  0100               	movlb	0	; () banked
  8352  002506  0100               	movlb	0	; () banked
  8353  002508  29F7               	incf	(_vscp_imsg+6)& (0+255),w,b
  8354  00250A  A4D8               	btfss	status,2,c
  8355  00250C  D30A               	goto	l1377
  8356  00250E                     l9643:
  8357                           
  8358                           ; BSR set to: 0
  8359                           ;vscp_firmware.c: 1081: uint8_t i, j, k = 0;
  8360  00250E  0100               	movlb	0	; () banked
  8361  002510  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8362  002512  0E00               	movlw	0
  8363  002514  0101               	movlb	1	; () banked
  8364  002516  0101               	movlb	1	; () banked
  8365  002518  6F0D               	movwf	vscp_handleProtocolEvent@k& (0+255),b
  8366  00251A  0100               	movlb	0	; () banked
  8367  00251C  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8368                           
  8369                           ;vscp_firmware.c: 1085: vscp_omsg.priority = 0x03;
  8370  00251E  0100               	movlb	0	; () banked
  8371  002520  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8372  002522  0E03               	movlw	3
  8373  002524  6E3F               	movwf	_vscp_omsg+1,c
  8374  002526  0100               	movlb	0	; () banked
  8375  002528  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8376                           
  8377                           ;vscp_firmware.c: 1086: vscp_omsg.flags = 0x80 + 8;
  8378  00252A  0100               	movlb	0	; () banked
  8379  00252C  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8380  00252E  0E88               	movlw	136
  8381  002530  6E3E               	movwf	_vscp_omsg,c
  8382  002532  0100               	movlb	0	; () banked
  8383  002534  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8384                           
  8385                           ; BSR set to: 0
  8386                           ;vscp_firmware.c: 1087: vscp_omsg.vscp_class = 0;
  8387  002536  0E00               	movlw	0
  8388  002538  6E41               	movwf	_vscp_omsg+3,c
  8389  00253A  0E00               	movlw	0
  8390  00253C  6E40               	movwf	_vscp_omsg+2,c
  8391                           
  8392                           ; BSR set to: 0
  8393                           ;vscp_firmware.c: 1088: vscp_omsg.vscp_type = 32;
  8394  00253E  0100               	movlb	0	; () banked
  8395  002540  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8396  002542  0E20               	movlw	32
  8397  002544  6E42               	movwf	_vscp_omsg+4,c
  8398  002546  0100               	movlb	0	; () banked
  8399  002548  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;vscp_firmware.c: 1090: for (i = 0; i < 3; i++)
  8403  00254A  0100               	movlb	0	; () banked
  8404  00254C  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8405  00254E  0E00               	movlw	0
  8406  002550  0101               	movlb	1	; () banked
  8407  002552  0101               	movlb	1	; () banked
  8408  002554  6F11               	movwf	vscp_handleProtocolEvent@i_1394& (0+255),b
  8409  002556  0100               	movlb	0	; () banked
  8410  002558  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8411  00255A  D03A               	goto	L65
  8412  00255C                     l1343:
  8413                           
  8414                           ; BSR set to: 1
  8415                           ;vscp_firmware.c: 1091: {
  8416                           ;vscp_firmware.c: 1092: vscp_omsg.data[0] = i;
  8417  00255C  C111  F043         	movff	vscp_handleProtocolEvent@i_1394,_vscp_omsg+5
  8418                           
  8419                           ; BSR set to: 1
  8420                           ;vscp_firmware.c: 1094: for (j = 1; j < 8; j++) {
  8421  002560  0100               	movlb	0	; () banked
  8422  002562  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8423  002564  0E01               	movlw	1
  8424  002566  0101               	movlb	1	; () banked
  8425  002568  0101               	movlb	1	; () banked
  8426  00256A  6F13               	movwf	vscp_handleProtocolEvent@j& (0+255),b
  8427  00256C  0100               	movlb	0	; () banked
  8428  00256E  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8429  002570  D01F               	goto	L66
  8430  002572                     l9659:
  8431                           
  8432                           ; BSR set to: 1
  8433                           ;vscp_firmware.c: 1095: vscp_omsg.data[j] = vscp_getGUID(15 - k++);
  8434  002572  0101               	movlb	1	; () banked
  8435  002574  0101               	movlb	1	; () banked
  8436  002576  5113               	movf	vscp_handleProtocolEvent@j& (0+255),w,b
  8437  002578  0D01               	mullw	1
  8438  00257A  0E43               	movlw	low (_vscp_omsg+5)
  8439  00257C  24F3               	addwf	prodl,w,c
  8440  00257E  6ED9               	movwf	fsr2l,c
  8441  002580  0E00               	movlw	high (_vscp_omsg+5)
  8442  002582  20F4               	addwfc	prodh,w,c
  8443  002584  6EDA               	movwf	fsr2h,c
  8444  002586  0101               	movlb	1	; () banked
  8445  002588  0101               	movlb	1	; () banked
  8446  00258A  510D               	movf	vscp_handleProtocolEvent@k& (0+255),w,b
  8447  00258C  0800               	sublw	0
  8448  00258E  0F0F               	addlw	15
  8449  002590  6E18               	movwf	?_vscp_getGUID,c
  8450  002592  ECEB  F036         	call	_vscp_getGUID	;wreg free
  8451  002596  6EDF               	movwf	indf2,c
  8452  002598  0101               	movlb	1	; () banked
  8453  00259A  0101               	movlb	1	; () banked
  8454  00259C  2B0D               	incf	vscp_handleProtocolEvent@k& (0+255),f,b
  8455                           
  8456                           ; BSR set to: 1
  8457                           ;vscp_firmware.c: 1096: if (k > 16)
  8458  00259E  0E10               	movlw	16
  8459  0025A0  0101               	movlb	1	; () banked
  8460  0025A2  0101               	movlb	1	; () banked
  8461  0025A4  650D               	cpfsgt	vscp_handleProtocolEvent@k& (0+255),b
  8462  0025A6  D001               	goto	l9667
  8463  0025A8  D008               	goto	l9671
  8464  0025AA                     l9667:
  8465                           
  8466                           ; BSR set to: 1
  8467  0025AA  0101               	movlb	1	; () banked
  8468  0025AC  0101               	movlb	1	; () banked
  8469  0025AE  2B13               	incf	vscp_handleProtocolEvent@j& (0+255),f,b
  8470  0025B0                     L66:
  8471                           
  8472                           ; BSR set to: 1
  8473  0025B0  0E07               	movlw	7
  8474  0025B2  0101               	movlb	1	; () banked
  8475  0025B4  0101               	movlb	1	; () banked
  8476  0025B6  6513               	cpfsgt	vscp_handleProtocolEvent@j& (0+255),b
  8477  0025B8  D7DC               	goto	l9659
  8478  0025BA                     l9671:
  8479                           
  8480                           ; BSR set to: 1
  8481                           ;vscp_firmware.c: 1098: }
  8482                           ;vscp_firmware.c: 1100: if (k > 16)
  8483  0025BA  0E10               	movlw	16
  8484  0025BC  0101               	movlb	1	; () banked
  8485  0025BE  0101               	movlb	1	; () banked
  8486  0025C0  650D               	cpfsgt	vscp_handleProtocolEvent@k& (0+255),b
  8487  0025C2  D001               	goto	l9675
  8488  0025C4  D00A               	goto	l9681
  8489  0025C6                     l9675:
  8490                           
  8491                           ; BSR set to: 1
  8492                           ;vscp_firmware.c: 1103: vscp_sendEvent();
  8493  0025C6  EC46  F035         	call	_vscp_sendEvent	;wreg free
  8494  0025CA  0101               	movlb	1	; () banked
  8495  0025CC  0101               	movlb	1	; () banked
  8496  0025CE  2B11               	incf	vscp_handleProtocolEvent@i_1394& (0+255),f,b
  8497  0025D0                     L65:
  8498                           
  8499                           ; BSR set to: 1
  8500  0025D0  0E02               	movlw	2
  8501  0025D2  0101               	movlb	1	; () banked
  8502  0025D4  0101               	movlb	1	; () banked
  8503  0025D6  6511               	cpfsgt	vscp_handleProtocolEvent@i_1394& (0+255),b
  8504  0025D8  D7C1               	goto	l1343
  8505  0025DA                     l9681:
  8506                           
  8507                           ; BSR set to: 1
  8508                           ;vscp_firmware.c: 1104: }
  8509                           ;vscp_firmware.c: 1106: for (j = 0; j < 5; j++)
  8510  0025DA  0100               	movlb	0	; () banked
  8511  0025DC  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8512  0025DE  0E00               	movlw	0
  8513  0025E0  0101               	movlb	1	; () banked
  8514  0025E2  0101               	movlb	1	; () banked
  8515  0025E4  6F13               	movwf	vscp_handleProtocolEvent@j& (0+255),b
  8516  0025E6  0100               	movlb	0	; () banked
  8517  0025E8  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8518  0025EA  D037               	goto	L67
  8519  0025EC                     l9687:
  8520                           
  8521                           ; BSR set to: 1
  8522                           ;vscp_firmware.c: 1107: {
  8523                           ;vscp_firmware.c: 1108: if (vscp_getMDF_URL(j) > 0)
  8524  0025EC  C113  F016         	movff	vscp_handleProtocolEvent@j,?_vscp_getMDF_URL
  8525  0025F0  EC91  F036         	call	_vscp_getMDF_URL	;wreg free
  8526  0025F4  0900               	iorlw	0
  8527  0025F6  B4D8               	btfsc	status,2,c
  8528  0025F8  D018               	goto	l9691
  8529                           
  8530                           ;vscp_firmware.c: 1109: vscp_omsg.data[3 + j] = vscp_getMDF_URL(j);
  8531  0025FA  0101               	movlb	1	; () banked
  8532  0025FC  0101               	movlb	1	; () banked
  8533  0025FE  5113               	movf	vscp_handleProtocolEvent@j& (0+255),w,b
  8534  002600  0100               	movlb	0	; () banked
  8535  002602  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8536  002604  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  8537  002606  0E03               	movlw	3
  8538  002608  0100               	movlb	0	; () banked
  8539  00260A  27AE               	addwf	??_vscp_handleProtocolEvent& (0+255),f,b
  8540  00260C  0E00               	movlw	0
  8541  00260E  23AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  8542  002610  0E43               	movlw	low (_vscp_omsg+5)
  8543  002612  0100               	movlb	0	; () banked
  8544  002614  25AE               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  8545  002616  6ED9               	movwf	fsr2l,c
  8546  002618  0E00               	movlw	high (_vscp_omsg+5)
  8547  00261A  0100               	movlb	0	; () banked
  8548  00261C  21AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  8549  00261E  6EDA               	movwf	fsr2h,c
  8550  002620  C113  F016         	movff	vscp_handleProtocolEvent@j,?_vscp_getMDF_URL
  8551  002624  EC91  F036         	call	_vscp_getMDF_URL	;wreg free
  8552  002628  D014               	goto	L63
  8553  00262A                     l9691:
  8554                           
  8555                           ;vscp_firmware.c: 1110: else
  8556                           ;vscp_firmware.c: 1111: vscp_omsg.data[3 + j] = 0;
  8557  00262A  0101               	movlb	1	; () banked
  8558  00262C  0101               	movlb	1	; () banked
  8559  00262E  5113               	movf	vscp_handleProtocolEvent@j& (0+255),w,b
  8560  002630  0100               	movlb	0	; () banked
  8561  002632  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8562  002634  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  8563  002636  0E03               	movlw	3
  8564  002638  0100               	movlb	0	; () banked
  8565  00263A  27AE               	addwf	??_vscp_handleProtocolEvent& (0+255),f,b
  8566  00263C  0E00               	movlw	0
  8567  00263E  23AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  8568  002640  0E43               	movlw	low (_vscp_omsg+5)
  8569  002642  0100               	movlb	0	; () banked
  8570  002644  25AE               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  8571  002646  6ED9               	movwf	fsr2l,c
  8572  002648  0E00               	movlw	high (_vscp_omsg+5)
  8573  00264A  0100               	movlb	0	; () banked
  8574  00264C  21AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  8575  00264E  6EDA               	movwf	fsr2h,c
  8576  002650  0E00               	movlw	0
  8577  002652                     L63:
  8578  002652  6EDF               	movwf	indf2,c
  8579                           
  8580                           ; BSR set to: 0
  8581  002654  0101               	movlb	1	; () banked
  8582  002656  0101               	movlb	1	; () banked
  8583  002658  2B13               	incf	vscp_handleProtocolEvent@j& (0+255),f,b
  8584  00265A                     L67:
  8585                           
  8586                           ; BSR set to: 1
  8587  00265A  0E04               	movlw	4
  8588  00265C  0101               	movlb	1	; () banked
  8589  00265E  0101               	movlb	1	; () banked
  8590  002660  6513               	cpfsgt	vscp_handleProtocolEvent@j& (0+255),b
  8591  002662  D7C4               	goto	l9687
  8592                           
  8593                           ; BSR set to: 1
  8594                           ;vscp_firmware.c: 1112: }
  8595                           ;vscp_firmware.c: 1114: vscp_sendEvent();
  8596                           
  8597                           ; BSR set to: 1
  8598  002664  EC46  F035         	call	_vscp_sendEvent	;wreg free
  8599                           
  8600                           ;vscp_firmware.c: 1116: k = 5;
  8601  002668  0100               	movlb	0	; () banked
  8602  00266A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8603  00266C  0E05               	movlw	5
  8604  00266E  0101               	movlb	1	; () banked
  8605  002670  0101               	movlb	1	; () banked
  8606  002672  6F0D               	movwf	vscp_handleProtocolEvent@k& (0+255),b
  8607  002674  0100               	movlb	0	; () banked
  8608  002676  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;vscp_firmware.c: 1117: for (i = 3; i < 7; i++)
  8612  002678  0100               	movlb	0	; () banked
  8613  00267A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8614  00267C  0E03               	movlw	3
  8615  00267E  0101               	movlb	1	; () banked
  8616  002680  0101               	movlb	1	; () banked
  8617  002682  6F11               	movwf	vscp_handleProtocolEvent@i_1394& (0+255),b
  8618  002684  0100               	movlb	0	; () banked
  8619  002686  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8620  002688  D02A               	goto	L68
  8621  00268A                     l1353:
  8622                           
  8623                           ; BSR set to: 1
  8624                           ;vscp_firmware.c: 1118: {
  8625                           ;vscp_firmware.c: 1119: vscp_omsg.data[0] = i;
  8626  00268A  C111  F043         	movff	vscp_handleProtocolEvent@i_1394,_vscp_omsg+5
  8627                           
  8628                           ; BSR set to: 1
  8629                           ;vscp_firmware.c: 1121: for (j = 1; j < 8; j++) {
  8630  00268E  0100               	movlb	0	; () banked
  8631  002690  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8632  002692  0E01               	movlw	1
  8633  002694  0101               	movlb	1	; () banked
  8634  002696  0101               	movlb	1	; () banked
  8635  002698  6F13               	movwf	vscp_handleProtocolEvent@j& (0+255),b
  8636  00269A  0100               	movlb	0	; () banked
  8637  00269C  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8638  00269E  D015               	goto	L69
  8639  0026A0                     l9713:
  8640                           
  8641                           ; BSR set to: 1
  8642                           ;vscp_firmware.c: 1122: vscp_omsg.data[j] = vscp_getMDF_URL(k++);
  8643  0026A0  0101               	movlb	1	; () banked
  8644  0026A2  0101               	movlb	1	; () banked
  8645  0026A4  5113               	movf	vscp_handleProtocolEvent@j& (0+255),w,b
  8646  0026A6  0D01               	mullw	1
  8647  0026A8  0E43               	movlw	low (_vscp_omsg+5)
  8648  0026AA  24F3               	addwf	prodl,w,c
  8649  0026AC  6ED9               	movwf	fsr2l,c
  8650  0026AE  0E00               	movlw	high (_vscp_omsg+5)
  8651  0026B0  20F4               	addwfc	prodh,w,c
  8652  0026B2  6EDA               	movwf	fsr2h,c
  8653  0026B4  C10D  F016         	movff	vscp_handleProtocolEvent@k,?_vscp_getMDF_URL
  8654  0026B8  EC91  F036         	call	_vscp_getMDF_URL	;wreg free
  8655  0026BC  6EDF               	movwf	indf2,c
  8656  0026BE  0101               	movlb	1	; () banked
  8657  0026C0  0101               	movlb	1	; () banked
  8658  0026C2  2B0D               	incf	vscp_handleProtocolEvent@k& (0+255),f,b
  8659                           
  8660                           ; BSR set to: 1
  8661  0026C4  0101               	movlb	1	; () banked
  8662  0026C6  0101               	movlb	1	; () banked
  8663  0026C8  2B13               	incf	vscp_handleProtocolEvent@j& (0+255),f,b
  8664  0026CA                     L69:
  8665                           
  8666                           ; BSR set to: 1
  8667  0026CA  0E07               	movlw	7
  8668  0026CC  0101               	movlb	1	; () banked
  8669  0026CE  0101               	movlb	1	; () banked
  8670  0026D0  6513               	cpfsgt	vscp_handleProtocolEvent@j& (0+255),b
  8671  0026D2  D7E6               	goto	l9713
  8672                           
  8673                           ; BSR set to: 1
  8674                           ;vscp_firmware.c: 1123: }
  8675                           ;vscp_firmware.c: 1124: vscp_sendEvent();
  8676                           
  8677                           ; BSR set to: 1
  8678  0026D4  EC46  F035         	call	_vscp_sendEvent	;wreg free
  8679  0026D8  0101               	movlb	1	; () banked
  8680  0026DA  0101               	movlb	1	; () banked
  8681  0026DC  2B11               	incf	vscp_handleProtocolEvent@i_1394& (0+255),f,b
  8682  0026DE                     L68:
  8683                           
  8684                           ; BSR set to: 1
  8685  0026DE  0E06               	movlw	6
  8686  0026E0  0101               	movlb	1	; () banked
  8687  0026E2  0101               	movlb	1	; () banked
  8688  0026E4  6511               	cpfsgt	vscp_handleProtocolEvent@i_1394& (0+255),b
  8689  0026E6  D7D1               	goto	l1353
  8690  0026E8  D21C               	goto	l1377
  8691  0026EA                     l9727:
  8692                           
  8693                           ;vscp_firmware.c: 1133: if (vscp_nickname == vscp_imsg.data[ 0 ]) {
  8694  0026EA  0100               	movlb	0	; () banked
  8695  0026EC  0100               	movlb	0	; () banked
  8696  0026EE  51EC               	movf	_vscp_nickname& (0+255),w,b
  8697  0026F0  0100               	movlb	0	; () banked
  8698  0026F2  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  8699  0026F6  62DF               	cpfseq	indf2,c
  8700  0026F8  D214               	goto	l1377
  8701                           
  8702                           ; BSR set to: 0
  8703                           ;vscp_firmware.c: 1135: vscp_omsg.priority = 0x03;
  8704  0026FA  0100               	movlb	0	; () banked
  8705  0026FC  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8706  0026FE  0E03               	movlw	3
  8707  002700  6E3F               	movwf	_vscp_omsg+1,c
  8708  002702  0100               	movlb	0	; () banked
  8709  002704  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8710                           
  8711                           ;vscp_firmware.c: 1136: vscp_omsg.flags = 0x80 + 7;
  8712  002706  0100               	movlb	0	; () banked
  8713  002708  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8714  00270A  0E87               	movlw	135
  8715  00270C  6E3E               	movwf	_vscp_omsg,c
  8716  00270E  0100               	movlb	0	; () banked
  8717  002710  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8718                           
  8719                           ; BSR set to: 0
  8720                           ;vscp_firmware.c: 1137: vscp_omsg.vscp_class = 0;
  8721  002712  0E00               	movlw	0
  8722  002714  6E41               	movwf	_vscp_omsg+3,c
  8723  002716  0E00               	movlw	0
  8724  002718  6E40               	movwf	_vscp_omsg+2,c
  8725                           
  8726                           ; BSR set to: 0
  8727                           ;vscp_firmware.c: 1138: vscp_omsg.vscp_type = 34;
  8728  00271A  0100               	movlb	0	; () banked
  8729  00271C  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8730  00271E  0E22               	movlw	34
  8731  002720  6E42               	movwf	_vscp_omsg+4,c
  8732  002722  0100               	movlb	0	; () banked
  8733  002724  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8734                           
  8735                           ; BSR set to: 0
  8736                           ;vscp_firmware.c: 1140: vscp_getMatrixInfo((char *) vscp_omsg.data);
  8737  002726  0E00               	movlw	high (_vscp_omsg+5)
  8738  002728  6E17               	movwf	?_vscp_getMatrixInfo+1,c
  8739  00272A  0E43               	movlw	low (_vscp_omsg+5)
  8740  00272C  6E16               	movwf	?_vscp_getMatrixInfo,c
  8741  00272E  EC9F  F035         	call	_vscp_getMatrixInfo	;wreg free
  8742                           
  8743                           ;vscp_firmware.c: 1143: vscp_sendEvent();
  8744  002732  EC46  F035         	call	_vscp_sendEvent	;wreg free
  8745  002736  D1F5               	goto	l1377
  8746  002738                     l9739:
  8747                           
  8748                           ;vscp_firmware.c: 1156: if ( vscp_nickname == vscp_imsg.data[0] ) {
  8749  002738  0100               	movlb	0	; () banked
  8750  00273A  0100               	movlb	0	; () banked
  8751  00273C  51EC               	movf	_vscp_nickname& (0+255),w,b
  8752  00273E  0100               	movlb	0	; () banked
  8753  002740  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  8754  002744  62DF               	cpfseq	indf2,c
  8755  002746  D1ED               	goto	l1377
  8756                           
  8757                           ; BSR set to: 0
  8758                           ;vscp_firmware.c: 1158: uint16_t page_save;
  8759                           ;vscp_firmware.c: 1159: uint8_t byte = 0, bytes = 0;
  8760  002748  0100               	movlb	0	; () banked
  8761  00274A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8762  00274C  0E00               	movlw	0
  8763  00274E  0101               	movlb	1	; () banked
  8764  002750  0101               	movlb	1	; () banked
  8765  002752  6F10               	movwf	vscp_handleProtocolEvent@byte& (0+255),b
  8766  002754  0100               	movlb	0	; () banked
  8767  002756  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8768  002758  0100               	movlb	0	; () banked
  8769  00275A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8770  00275C  0E00               	movlw	0
  8771  00275E  0101               	movlb	1	; () banked
  8772  002760  0101               	movlb	1	; () banked
  8773  002762  6F0E               	movwf	vscp_handleProtocolEvent@bytes_1399& (0+255),b
  8774  002764  0100               	movlb	0	; () banked
  8775  002766  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8776                           
  8777                           ; BSR set to: 0
  8778                           ;vscp_firmware.c: 1160: uint8_t bytes_this_time, cb;
  8779                           ;vscp_firmware.c: 1164: if ( ( vscp_imsg.flags & 0x0f) > 3 ) {
  8780  002768  C0F1  F0AE         	movff	_vscp_imsg,??_vscp_handleProtocolEvent
  8781  00276C  0E0F               	movlw	15
  8782  00276E  0100               	movlb	0	; () banked
  8783  002770  17AE               	andwf	??_vscp_handleProtocolEvent& (0+255),f,b
  8784  002772  0E04               	movlw	4
  8785  002774  0100               	movlb	0	; () banked
  8786  002776  5DAE               	subwf	??_vscp_handleProtocolEvent& (0+255),w,b
  8787  002778  A0D8               	btfss	status,0,c
  8788  00277A  D006               	goto	l9749
  8789                           
  8790                           ; BSR set to: 0
  8791                           ;vscp_firmware.c: 1167: bytes = vscp_imsg.data[4];
  8792  00277C  C0FB  F10E         	movff	_vscp_imsg+10,vscp_handleProtocolEvent@bytes_1399
  8793                           
  8794                           ;vscp_firmware.c: 1169: if ( 0 == bytes ) {
  8795  002780  0101               	movlb	1	; () banked
  8796  002782  0101               	movlb	1	; () banked
  8797  002784  670E               	tstfsz	vscp_handleProtocolEvent@bytes_1399& (0+255),b
  8798  002786  D008               	goto	l9751
  8799  002788                     l9749:
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;vscp_firmware.c: 1173: else {
  8803                           ;vscp_firmware.c: 1174: bytes = 1;
  8804  002788  0100               	movlb	0	; () banked
  8805  00278A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8806  00278C  0E01               	movlw	1
  8807  00278E  0101               	movlb	1	; () banked
  8808  002790  0101               	movlb	1	; () banked
  8809  002792  6F0E               	movwf	vscp_handleProtocolEvent@bytes_1399& (0+255),b
  8810  002794  0100               	movlb	0	; () banked
  8811  002796  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8812  002798                     l9751:
  8813                           
  8814                           ;vscp_firmware.c: 1175: }
  8815                           ;vscp_firmware.c: 1178: page_save = vscp_page_select;
  8816  002798  C036  F100         	movff	_vscp_page_select,vscp_handleProtocolEvent@page_save
  8817  00279C  C037  F101         	movff	_vscp_page_select+1,vscp_handleProtocolEvent@page_save+1
  8818                           
  8819                           ;vscp_firmware.c: 1183: vscp_page_select = ((vscp_imsg.data[1] << 8) | vscp_imsg.data[2]
      +                          );
  8820  0027A0  0100               	movlb	0	; () banked
  8821  0027A2  0100               	movlb	0	; () banked
  8822  0027A4  51F9               	movf	(_vscp_imsg+8)& (0+255),w,b
  8823  0027A6  0100               	movlb	0	; () banked
  8824  0027A8  C0F8  F0AE         	movff	_vscp_imsg+7,??_vscp_handleProtocolEvent
  8825  0027AC  0100               	movlb	0	; () banked
  8826  0027AE  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  8827  0027B0  C0AE  F0AF         	movff	??_vscp_handleProtocolEvent,??_vscp_handleProtocolEvent+1
  8828  0027B4  0100               	movlb	0	; () banked
  8829  0027B6  6BAE               	clrf	??_vscp_handleProtocolEvent& (0+255),b
  8830  0027B8  0100               	movlb	0	; () banked
  8831  0027BA  11AE               	iorwf	??_vscp_handleProtocolEvent& (0+255),w,b
  8832  0027BC  6E36               	movwf	_vscp_page_select,c
  8833  0027BE  0100               	movlb	0	; () banked
  8834  0027C0  51AF               	movf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  8835  0027C2  6E37               	movwf	_vscp_page_select+1,c
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;vscp_firmware.c: 1186: vscp_omsg.priority = 0x07;
  8839  0027C4  0100               	movlb	0	; () banked
  8840  0027C6  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8841  0027C8  0E07               	movlw	7
  8842  0027CA  6E3F               	movwf	_vscp_omsg+1,c
  8843  0027CC  0100               	movlb	0	; () banked
  8844  0027CE  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;vscp_firmware.c: 1187: vscp_omsg.vscp_class = 0;
  8848  0027D0  0E00               	movlw	0
  8849  0027D2  6E41               	movwf	_vscp_omsg+3,c
  8850  0027D4  0E00               	movlw	0
  8851  0027D6  6E40               	movwf	_vscp_omsg+2,c
  8852                           
  8853                           ; BSR set to: 0
  8854                           ;vscp_firmware.c: 1188: vscp_omsg.vscp_type = 39;
  8855  0027D8  0100               	movlb	0	; () banked
  8856  0027DA  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8857  0027DC  0E27               	movlw	39
  8858  0027DE  6E42               	movwf	_vscp_omsg+4,c
  8859  0027E0  0100               	movlb	0	; () banked
  8860  0027E2  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;vscp_firmware.c: 1189: vscp_omsg.data[0] = 0;
  8864  0027E4  0100               	movlb	0	; () banked
  8865  0027E6  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8866  0027E8  0E00               	movlw	0
  8867  0027EA  6E43               	movwf	_vscp_omsg+5,c
  8868  0027EC  0100               	movlb	0	; () banked
  8869  0027EE  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;vscp_firmware.c: 1190: vscp_omsg.data[1] = vscp_imsg.data[1];
  8873  0027F0  C0F8  F044         	movff	_vscp_imsg+7,_vscp_omsg+6
  8874                           
  8875                           ; BSR set to: 0
  8876                           ;vscp_firmware.c: 1191: vscp_omsg.data[2] = vscp_imsg.data[2];
  8877  0027F4  C0F9  F045         	movff	_vscp_imsg+8,_vscp_omsg+7
  8878  0027F8                     l9767:
  8879                           
  8880                           ;vscp_firmware.c: 1195: if ( ( bytes - byte ) >= 4 ) {
  8881  0027F8  0101               	movlb	1	; () banked
  8882  0027FA  0101               	movlb	1	; () banked
  8883  0027FC  5110               	movf	vscp_handleProtocolEvent@byte& (0+255),w,b
  8884  0027FE  0100               	movlb	0	; () banked
  8885  002800  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8886  002802  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  8887  002804  0100               	movlb	0	; () banked
  8888  002806  1FAE               	comf	??_vscp_handleProtocolEvent& (0+255),f,b
  8889  002808  1FAF               	comf	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  8890  00280A  4BAE               	infsnz	??_vscp_handleProtocolEvent& (0+255),f,b
  8891  00280C  2BAF               	incf	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  8892  00280E  0101               	movlb	1	; () banked
  8893  002810  0101               	movlb	1	; () banked
  8894  002812  510E               	movf	vscp_handleProtocolEvent@bytes_1399& (0+255),w,b
  8895  002814  0100               	movlb	0	; () banked
  8896  002816  25AE               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  8897  002818  0100               	movlb	0	; () banked
  8898  00281A  6FB0               	movwf	(??_vscp_handleProtocolEvent+2)& (0+255),b
  8899  00281C  0100               	movlb	0	; () banked
  8900  00281E  0100               	movlb	0	; () banked
  8901  002820  0E00               	movlw	0
  8902  002822  21AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  8903  002824  6FB1               	movwf	(??_vscp_handleProtocolEvent+3)& (0+255),b
  8904  002826  0100               	movlb	0	; () banked
  8905  002828  51B1               	movf	(??_vscp_handleProtocolEvent+3)& (0+255),w,b
  8906  00282A  0A80               	xorlw	128
  8907  00282C  0F80               	addlw	-128
  8908  00282E  0E04               	movlw	4
  8909  002830  B4D8               	btfsc	status,2,c
  8910  002832  5DB0               	subwf	(??_vscp_handleProtocolEvent+2)& (0+255),w,b
  8911  002834  A0D8               	btfss	status,0,c
  8912  002836  D009               	goto	l9771
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;vscp_firmware.c: 1196: bytes_this_time = 4;
  8916  002838  0100               	movlb	0	; () banked
  8917  00283A  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8918  00283C  0E04               	movlw	4
  8919  00283E  0101               	movlb	1	; () banked
  8920  002840  0101               	movlb	1	; () banked
  8921  002842  6F0A               	movwf	vscp_handleProtocolEvent@bytes_this_time& (0+255),b
  8922  002844  0100               	movlb	0	; () banked
  8923  002846  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8924                           
  8925                           ;vscp_firmware.c: 1197: }
  8926  002848  D00A               	goto	l1366
  8927  00284A                     l9771:
  8928                           
  8929                           ; BSR set to: 0
  8930                           ;vscp_firmware.c: 1198: else {
  8931                           ;vscp_firmware.c: 1199: bytes_this_time = (bytes - byte);
  8932  00284A  0101               	movlb	1	; () banked
  8933  00284C  0101               	movlb	1	; () banked
  8934  00284E  5110               	movf	vscp_handleProtocolEvent@byte& (0+255),w,b
  8935  002850  0800               	sublw	0
  8936  002852  0101               	movlb	1	; () banked
  8937  002854  0101               	movlb	1	; () banked
  8938  002856  250E               	addwf	vscp_handleProtocolEvent@bytes_1399& (0+255),w,b
  8939  002858  0101               	movlb	1	; () banked
  8940  00285A  0101               	movlb	1	; () banked
  8941  00285C  6F0A               	movwf	vscp_handleProtocolEvent@bytes_this_time& (0+255),b
  8942  00285E                     l1366:
  8943                           
  8944                           ;vscp_firmware.c: 1200: }
  8945                           ;vscp_firmware.c: 1203: vscp_omsg.flags = 0x80 + 4 + bytes_this_time;
  8946  00285E  0101               	movlb	1	; () banked
  8947  002860  0101               	movlb	1	; () banked
  8948  002862  510A               	movf	vscp_handleProtocolEvent@bytes_this_time& (0+255),w,b
  8949  002864  0F84               	addlw	132
  8950  002866  6E3E               	movwf	_vscp_omsg,c
  8951                           
  8952                           ;vscp_firmware.c: 1204: vscp_omsg.data[3] =
  8953                           ;vscp_firmware.c: 1205: vscp_imsg.data[3] + byte;
  8954  002868  0100               	movlb	0	; () banked
  8955  00286A  0100               	movlb	0	; () banked
  8956  00286C  51FA               	movf	(_vscp_imsg+9)& (0+255),w,b
  8957  00286E  0101               	movlb	1	; () banked
  8958  002870  0101               	movlb	1	; () banked
  8959  002872  2510               	addwf	vscp_handleProtocolEvent@byte& (0+255),w,b
  8960  002874  6E46               	movwf	_vscp_omsg+8,c
  8961                           
  8962                           ; BSR set to: 1
  8963                           ;vscp_firmware.c: 1208: for ( cb = 0; cb < bytes_this_time; cb++ ) {
  8964  002876  0100               	movlb	0	; () banked
  8965  002878  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8966  00287A  0E00               	movlw	0
  8967  00287C  0101               	movlb	1	; () banked
  8968  00287E  0101               	movlb	1	; () banked
  8969  002880  6F0B               	movwf	vscp_handleProtocolEvent@cb& (0+255),b
  8970  002882  0100               	movlb	0	; () banked
  8971  002884  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  8972  002886  D023               	goto	l9779
  8973  002888                     l9775:
  8974                           
  8975                           ;vscp_firmware.c: 1209: vscp_omsg.data[ (4 + cb) ] =
  8976                           ;vscp_firmware.c: 1210: vscp_readRegister( ( vscp_imsg.data[3] + byte + cb ) );
  8977  002888  0101               	movlb	1	; () banked
  8978  00288A  0101               	movlb	1	; () banked
  8979  00288C  510B               	movf	vscp_handleProtocolEvent@cb& (0+255),w,b
  8980  00288E  0100               	movlb	0	; () banked
  8981  002890  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  8982  002892  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  8983  002894  0E04               	movlw	4
  8984  002896  0100               	movlb	0	; () banked
  8985  002898  27AE               	addwf	??_vscp_handleProtocolEvent& (0+255),f,b
  8986  00289A  0E00               	movlw	0
  8987  00289C  23AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  8988  00289E  0E43               	movlw	low (_vscp_omsg+5)
  8989  0028A0  0100               	movlb	0	; () banked
  8990  0028A2  25AE               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  8991  0028A4  6ED9               	movwf	fsr2l,c
  8992  0028A6  0E00               	movlw	high (_vscp_omsg+5)
  8993  0028A8  0100               	movlb	0	; () banked
  8994  0028AA  21AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  8995  0028AC  6EDA               	movwf	fsr2h,c
  8996  0028AE  0100               	movlb	0	; () banked
  8997  0028B0  0100               	movlb	0	; () banked
  8998  0028B2  51FA               	movf	(_vscp_imsg+9)& (0+255),w,b
  8999  0028B4  0101               	movlb	1	; () banked
  9000  0028B6  0101               	movlb	1	; () banked
  9001  0028B8  2510               	addwf	vscp_handleProtocolEvent@byte& (0+255),w,b
  9002  0028BA  0101               	movlb	1	; () banked
  9003  0028BC  0101               	movlb	1	; () banked
  9004  0028BE  250B               	addwf	vscp_handleProtocolEvent@cb& (0+255),w,b
  9005  0028C0  6E2B               	movwf	?_vscp_readRegister,c
  9006  0028C2  EC84  F036         	call	_vscp_readRegister	;wreg free
  9007  0028C6  6EDF               	movwf	indf2,c
  9008  0028C8  0101               	movlb	1	; () banked
  9009  0028CA  0101               	movlb	1	; () banked
  9010  0028CC  2B0B               	incf	vscp_handleProtocolEvent@cb& (0+255),f,b
  9011  0028CE                     l9779:
  9012  0028CE  0101               	movlb	1	; () banked
  9013  0028D0  0101               	movlb	1	; () banked
  9014  0028D2  510A               	movf	vscp_handleProtocolEvent@bytes_this_time& (0+255),w,b
  9015  0028D4  0101               	movlb	1	; () banked
  9016  0028D6  0101               	movlb	1	; () banked
  9017  0028D8  5D0B               	subwf	vscp_handleProtocolEvent@cb& (0+255),w,b
  9018  0028DA  A0D8               	btfss	status,0,c
  9019  0028DC  D7D5               	goto	l9775
  9020                           
  9021                           ; BSR set to: 1
  9022                           ;vscp_firmware.c: 1211: }
  9023                           ;vscp_firmware.c: 1214: vscp_sendEvent();
  9024                           
  9025                           ; BSR set to: 1
  9026  0028DE  EC46  F035         	call	_vscp_sendEvent	;wreg free
  9027                           
  9028                           ;vscp_firmware.c: 1217: byte += bytes_this_time;
  9029  0028E2  0101               	movlb	1	; () banked
  9030  0028E4  0101               	movlb	1	; () banked
  9031  0028E6  510A               	movf	vscp_handleProtocolEvent@bytes_this_time& (0+255),w,b
  9032  0028E8  0101               	movlb	1	; () banked
  9033  0028EA  0101               	movlb	1	; () banked
  9034  0028EC  2710               	addwf	vscp_handleProtocolEvent@byte& (0+255),f,b
  9035                           
  9036                           ; BSR set to: 1
  9037                           ;vscp_firmware.c: 1220: vscp_omsg.data[0] += 1;
  9038  0028EE  2A43               	incf	_vscp_omsg+5,f,c
  9039                           
  9040                           ; BSR set to: 1
  9041                           ;vscp_firmware.c: 1222: } while (byte < bytes);
  9042  0028F0  0101               	movlb	1	; () banked
  9043  0028F2  0101               	movlb	1	; () banked
  9044  0028F4  510E               	movf	vscp_handleProtocolEvent@bytes_1399& (0+255),w,b
  9045  0028F6  0101               	movlb	1	; () banked
  9046  0028F8  0101               	movlb	1	; () banked
  9047  0028FA  5D10               	subwf	vscp_handleProtocolEvent@byte& (0+255),w,b
  9048  0028FC  A0D8               	btfss	status,0,c
  9049  0028FE  D77C               	goto	l9767
  9050                           
  9051                           ; BSR set to: 1
  9052                           ;vscp_firmware.c: 1225: vscp_page_select = page_save;
  9053  002900  C100  F036         	movff	vscp_handleProtocolEvent@page_save,_vscp_page_select
  9054  002904  C101  F037         	movff	vscp_handleProtocolEvent@page_save+1,_vscp_page_select+1
  9055  002908  D10C               	goto	l1377
  9056  00290A                     l9789:
  9057                           
  9058                           ;vscp_firmware.c: 1232: if ( vscp_nickname == vscp_imsg.data[ 0 ] ) {
  9059  00290A  0100               	movlb	0	; () banked
  9060  00290C  0100               	movlb	0	; () banked
  9061  00290E  51EC               	movf	_vscp_nickname& (0+255),w,b
  9062  002910  0100               	movlb	0	; () banked
  9063  002912  EE20  F0F7         	lfsr	2,_vscp_imsg+6
  9064  002916  62DF               	cpfseq	indf2,c
  9065  002918  D104               	goto	l1377
  9066                           
  9067                           ; BSR set to: 0
  9068                           ;vscp_firmware.c: 1234: uint8_t i;
  9069                           ;vscp_firmware.c: 1235: uint16_t page_save;
  9070                           ;vscp_firmware.c: 1238: page_save = vscp_page_select;
  9071  00291A  C036  F102         	movff	_vscp_page_select,vscp_handleProtocolEvent@page_save_1403
  9072  00291E  C037  F103         	movff	_vscp_page_select+1,vscp_handleProtocolEvent@page_save_1403+1
  9073                           
  9074                           ; BSR set to: 0
  9075                           ;vscp_firmware.c: 1242: vscp_page_select = (vscp_imsg.data[1] << 8) | vscp_imsg.data[2];
  9076  002922  0100               	movlb	0	; () banked
  9077  002924  0100               	movlb	0	; () banked
  9078  002926  51F9               	movf	(_vscp_imsg+8)& (0+255),w,b
  9079  002928  0100               	movlb	0	; () banked
  9080  00292A  C0F8  F0AE         	movff	_vscp_imsg+7,??_vscp_handleProtocolEvent
  9081  00292E  0100               	movlb	0	; () banked
  9082  002930  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  9083  002932  C0AE  F0AF         	movff	??_vscp_handleProtocolEvent,??_vscp_handleProtocolEvent+1
  9084  002936  0100               	movlb	0	; () banked
  9085  002938  6BAE               	clrf	??_vscp_handleProtocolEvent& (0+255),b
  9086  00293A  0100               	movlb	0	; () banked
  9087  00293C  11AE               	iorwf	??_vscp_handleProtocolEvent& (0+255),w,b
  9088  00293E  6E36               	movwf	_vscp_page_select,c
  9089  002940  0100               	movlb	0	; () banked
  9090  002942  51AF               	movf	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  9091  002944  6E37               	movwf	_vscp_page_select+1,c
  9092                           
  9093                           ; BSR set to: 0
  9094                           ;vscp_firmware.c: 1244: for (i = vscp_imsg.data[ 3 ];
  9095  002946  C0FA  F10C         	movff	_vscp_imsg+9,vscp_handleProtocolEvent@i_1402
  9096                           
  9097                           ;vscp_firmware.c: 1247: i < (vscp_imsg.data[ 3 ] + ((vscp_imsg.flags & 0x0f) - 4));
  9098                           ;vscp_firmware.c: 1248: i++) {
  9099  00294A  D059               	goto	l9801
  9100  00294C                     l9797:
  9101                           
  9102                           ; BSR set to: 0
  9103                           ;vscp_firmware.c: 1249: vscp_omsg.data[ 4 + (i - vscp_imsg.data[ 3 ]) ] =
  9104                           ;vscp_firmware.c: 1250: vscp_writeRegister(i, vscp_imsg.data[ 4 + (i - vscp_imsg.data[ 3
      +                           ]) ]);
  9105  00294C  C10C  F0AC         	movff	vscp_handleProtocolEvent@i_1402,?_vscp_writeRegister
  9106  002950  0100               	movlb	0	; () banked
  9107  002952  0100               	movlb	0	; () banked
  9108  002954  51FA               	movf	(_vscp_imsg+9)& (0+255),w,b
  9109  002956  0100               	movlb	0	; () banked
  9110  002958  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  9111  00295A  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  9112  00295C  0100               	movlb	0	; () banked
  9113  00295E  1FAE               	comf	??_vscp_handleProtocolEvent& (0+255),f,b
  9114  002960  1FAF               	comf	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  9115  002962  4BAE               	infsnz	??_vscp_handleProtocolEvent& (0+255),f,b
  9116  002964  2BAF               	incf	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  9117  002966  0101               	movlb	1	; () banked
  9118  002968  0101               	movlb	1	; () banked
  9119  00296A  510C               	movf	vscp_handleProtocolEvent@i_1402& (0+255),w,b
  9120  00296C  0100               	movlb	0	; () banked
  9121  00296E  25AE               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  9122  002970  0100               	movlb	0	; () banked
  9123  002972  6FB0               	movwf	(??_vscp_handleProtocolEvent+2)& (0+255),b
  9124  002974  0100               	movlb	0	; () banked
  9125  002976  0100               	movlb	0	; () banked
  9126  002978  0E00               	movlw	0
  9127  00297A  21AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  9128  00297C  6FB1               	movwf	(??_vscp_handleProtocolEvent+3)& (0+255),b
  9129  00297E  0E04               	movlw	4
  9130  002980  0100               	movlb	0	; () banked
  9131  002982  27B0               	addwf	(??_vscp_handleProtocolEvent+2)& (0+255),f,b
  9132  002984  0E00               	movlw	0
  9133  002986  23B1               	addwfc	(??_vscp_handleProtocolEvent+3)& (0+255),f,b
  9134  002988  0100               	movlb	0	; () banked
  9135  00298A  0EF7               	movlw	low (_vscp_imsg+6)
  9136  00298C  0100               	movlb	0	; () banked
  9137  00298E  25B0               	addwf	(??_vscp_handleProtocolEvent+2)& (0+255),w,b
  9138  002990  6ED9               	movwf	fsr2l,c
  9139  002992  0100               	movlb	0	; () banked
  9140  002994  0E00               	movlw	high (_vscp_imsg+6)
  9141  002996  0100               	movlb	0	; () banked
  9142  002998  21B1               	addwfc	(??_vscp_handleProtocolEvent+3)& (0+255),w,b
  9143  00299A  6EDA               	movwf	fsr2h,c
  9144  00299C  50DF               	movf	indf2,w,c
  9145  00299E  0100               	movlb	0	; () banked
  9146  0029A0  0100               	movlb	0	; () banked
  9147  0029A2  6FAD               	movwf	(?_vscp_writeRegister+1)& (0+255),b
  9148  0029A4  EC22  F036         	call	_vscp_writeRegister	;wreg free
  9149  0029A8  0100               	movlb	0	; () banked
  9150  0029AA  6FB2               	movwf	(??_vscp_handleProtocolEvent+4)& (0+255),b
  9151  0029AC  0100               	movlb	0	; () banked
  9152  0029AE  0100               	movlb	0	; () banked
  9153  0029B0  51FA               	movf	(_vscp_imsg+9)& (0+255),w,b
  9154  0029B2  0100               	movlb	0	; () banked
  9155  0029B4  6FB3               	movwf	(??_vscp_handleProtocolEvent+5)& (0+255),b
  9156  0029B6  6BB4               	clrf	(??_vscp_handleProtocolEvent+6)& (0+255),b
  9157  0029B8  0100               	movlb	0	; () banked
  9158  0029BA  1FB3               	comf	(??_vscp_handleProtocolEvent+5)& (0+255),f,b
  9159  0029BC  1FB4               	comf	(??_vscp_handleProtocolEvent+6)& (0+255),f,b
  9160  0029BE  4BB3               	infsnz	(??_vscp_handleProtocolEvent+5)& (0+255),f,b
  9161  0029C0  2BB4               	incf	(??_vscp_handleProtocolEvent+6)& (0+255),f,b
  9162  0029C2  0101               	movlb	1	; () banked
  9163  0029C4  0101               	movlb	1	; () banked
  9164  0029C6  510C               	movf	vscp_handleProtocolEvent@i_1402& (0+255),w,b
  9165  0029C8  0100               	movlb	0	; () banked
  9166  0029CA  25B3               	addwf	(??_vscp_handleProtocolEvent+5)& (0+255),w,b
  9167  0029CC  0100               	movlb	0	; () banked
  9168  0029CE  6FB5               	movwf	(??_vscp_handleProtocolEvent+7)& (0+255),b
  9169  0029D0  0100               	movlb	0	; () banked
  9170  0029D2  0100               	movlb	0	; () banked
  9171  0029D4  0E00               	movlw	0
  9172  0029D6  21B4               	addwfc	(??_vscp_handleProtocolEvent+6)& (0+255),w,b
  9173  0029D8  6FB6               	movwf	(??_vscp_handleProtocolEvent+8)& (0+255),b
  9174  0029DA  0E04               	movlw	4
  9175  0029DC  0100               	movlb	0	; () banked
  9176  0029DE  27B5               	addwf	(??_vscp_handleProtocolEvent+7)& (0+255),f,b
  9177  0029E0  0E00               	movlw	0
  9178  0029E2  23B6               	addwfc	(??_vscp_handleProtocolEvent+8)& (0+255),f,b
  9179  0029E4  0E43               	movlw	low (_vscp_omsg+5)
  9180  0029E6  0100               	movlb	0	; () banked
  9181  0029E8  25B5               	addwf	(??_vscp_handleProtocolEvent+7)& (0+255),w,b
  9182  0029EA  6ED9               	movwf	fsr2l,c
  9183  0029EC  0E00               	movlw	high (_vscp_omsg+5)
  9184  0029EE  0100               	movlb	0	; () banked
  9185  0029F0  21B6               	addwfc	(??_vscp_handleProtocolEvent+8)& (0+255),w,b
  9186  0029F2  6EDA               	movwf	fsr2h,c
  9187  0029F4  C0B2  FFDF         	movff	??_vscp_handleProtocolEvent+4,indf2
  9188                           
  9189                           ; BSR set to: 0
  9190  0029F8  0101               	movlb	1	; () banked
  9191  0029FA  0101               	movlb	1	; () banked
  9192  0029FC  2B0C               	incf	vscp_handleProtocolEvent@i_1402& (0+255),f,b
  9193  0029FE                     l9801:
  9194  0029FE  0100               	movlb	0	; () banked
  9195  002A00  0100               	movlb	0	; () banked
  9196  002A02  51F1               	movf	_vscp_imsg& (0+255),w,b
  9197  002A04  0B0F               	andlw	15
  9198  002A06  0100               	movlb	0	; () banked
  9199  002A08  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  9200  002A0A  6BAF               	clrf	(??_vscp_handleProtocolEvent+1)& (0+255),b
  9201  002A0C  0100               	movlb	0	; () banked
  9202  002A0E  0100               	movlb	0	; () banked
  9203  002A10  51FA               	movf	(_vscp_imsg+9)& (0+255),w,b
  9204  002A12  0100               	movlb	0	; () banked
  9205  002A14  27AE               	addwf	??_vscp_handleProtocolEvent& (0+255),f,b
  9206  002A16  0E00               	movlw	0
  9207  002A18  23AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),f,b
  9208  002A1A  0EFC               	movlw	252
  9209  002A1C  0100               	movlb	0	; () banked
  9210  002A1E  25AE               	addwf	??_vscp_handleProtocolEvent& (0+255),w,b
  9211  002A20  0100               	movlb	0	; () banked
  9212  002A22  6FB0               	movwf	(??_vscp_handleProtocolEvent+2)& (0+255),b
  9213  002A24  0EFF               	movlw	255
  9214  002A26  0100               	movlb	0	; () banked
  9215  002A28  21AF               	addwfc	(??_vscp_handleProtocolEvent+1)& (0+255),w,b
  9216  002A2A  0100               	movlb	0	; () banked
  9217  002A2C  6FB1               	movwf	(??_vscp_handleProtocolEvent+3)& (0+255),b
  9218  002A2E  0101               	movlb	1	; () banked
  9219  002A30  0101               	movlb	1	; () banked
  9220  002A32  510C               	movf	vscp_handleProtocolEvent@i_1402& (0+255),w,b
  9221  002A34  0100               	movlb	0	; () banked
  9222  002A36  6FB2               	movwf	(??_vscp_handleProtocolEvent+4)& (0+255),b
  9223  002A38  6BB3               	clrf	(??_vscp_handleProtocolEvent+5)& (0+255),b
  9224  002A3A  0100               	movlb	0	; () banked
  9225  002A3C  51B3               	movf	(??_vscp_handleProtocolEvent+5)& (0+255),w,b
  9226  002A3E  0A80               	xorlw	128
  9227  002A40  0100               	movlb	0	; () banked
  9228  002A42  6FB4               	movwf	(??_vscp_handleProtocolEvent+6)& (0+255),b
  9229  002A44  51B0               	movf	(??_vscp_handleProtocolEvent+2)& (0+255),w,b
  9230  002A46  0100               	movlb	0	; () banked
  9231  002A48  5DB2               	subwf	(??_vscp_handleProtocolEvent+4)& (0+255),w,b
  9232  002A4A  0100               	movlb	0	; () banked
  9233  002A4C  51B1               	movf	(??_vscp_handleProtocolEvent+3)& (0+255),w,b
  9234  002A4E  0A80               	xorlw	128
  9235  002A50  0100               	movlb	0	; () banked
  9236  002A52  59B4               	subwfb	(??_vscp_handleProtocolEvent+6)& (0+255),w,b
  9237  002A54  A0D8               	btfss	status,0,c
  9238  002A56  D77A               	goto	l9797
  9239                           
  9240                           ; BSR set to: 0
  9241                           ;vscp_firmware.c: 1251: }
  9242                           ;vscp_firmware.c: 1254: vscp_page_select = page_save;
  9243  002A58  C102  F036         	movff	vscp_handleProtocolEvent@page_save_1403,_vscp_page_select
  9244  002A5C  C103  F037         	movff	vscp_handleProtocolEvent@page_save_1403+1,_vscp_page_select+1
  9245                           
  9246                           ; BSR set to: 0
  9247                           ;vscp_firmware.c: 1256: vscp_omsg.priority = 0x07;
  9248  002A60  0100               	movlb	0	; () banked
  9249  002A62  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  9250  002A64  0E07               	movlw	7
  9251  002A66  6E3F               	movwf	_vscp_omsg+1,c
  9252  002A68  0100               	movlb	0	; () banked
  9253  002A6A  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;vscp_firmware.c: 1257: vscp_omsg.flags = 0x80 + 4 + ((vscp_imsg.flags & 0x0f) - 4);
  9257  002A6C  0100               	movlb	0	; () banked
  9258  002A6E  0100               	movlb	0	; () banked
  9259  002A70  51F1               	movf	_vscp_imsg& (0+255),w,b
  9260  002A72  0B0F               	andlw	15
  9261  002A74  0F80               	addlw	128
  9262  002A76  6E3E               	movwf	_vscp_omsg,c
  9263                           
  9264                           ; BSR set to: 0
  9265                           ;vscp_firmware.c: 1258: vscp_omsg.vscp_class = 0;
  9266  002A78  0E00               	movlw	0
  9267  002A7A  6E41               	movwf	_vscp_omsg+3,c
  9268  002A7C  0E00               	movlw	0
  9269  002A7E  6E40               	movwf	_vscp_omsg+2,c
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;vscp_firmware.c: 1259: vscp_omsg.vscp_type = 39;
  9273  002A80  0100               	movlb	0	; () banked
  9274  002A82  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  9275  002A84  0E27               	movlw	39
  9276  002A86  6E42               	movwf	_vscp_omsg+4,c
  9277  002A88  0100               	movlb	0	; () banked
  9278  002A8A  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  9279                           
  9280                           ; BSR set to: 0
  9281                           ;vscp_firmware.c: 1260: vscp_omsg.data[0] = 0;
  9282  002A8C  0100               	movlb	0	; () banked
  9283  002A8E  6FAE               	movwf	??_vscp_handleProtocolEvent& (0+255),b
  9284  002A90  0E00               	movlw	0
  9285  002A92  6E43               	movwf	_vscp_omsg+5,c
  9286  002A94  0100               	movlb	0	; () banked
  9287  002A96  51AE               	movf	??_vscp_handleProtocolEvent& (0+255),w,b
  9288                           
  9289                           ; BSR set to: 0
  9290                           ;vscp_firmware.c: 1261: vscp_omsg.data[1] = vscp_imsg.data[1];
  9291  002A98  C0F8  F044         	movff	_vscp_imsg+7,_vscp_omsg+6
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;vscp_firmware.c: 1262: vscp_omsg.data[2] = vscp_imsg.data[2];
  9295  002A9C  C0F9  F045         	movff	_vscp_imsg+8,_vscp_omsg+7
  9296                           
  9297                           ; BSR set to: 0
  9298                           ;vscp_firmware.c: 1263: vscp_omsg.data[3] = vscp_imsg.data[3];
  9299  002AA0  C0FA  F046         	movff	_vscp_imsg+9,_vscp_omsg+8
  9300                           
  9301                           ; BSR set to: 0
  9302                           ;vscp_firmware.c: 1266: vscp_sendEvent();
  9303  002AA4  EC46  F035         	call	_vscp_sendEvent	;wreg free
  9304  002AA8  D03C               	goto	l1377
  9305  002AAA                     l9823:
  9306  002AAA  0100               	movlb	0	; () banked
  9307  002AAC  0100               	movlb	0	; () banked
  9308  002AAE  51F5               	movf	(_vscp_imsg+4)& (0+255),w,b
  9309                           
  9310                           ; Switch size 1, requested type "space"
  9311                           ; Number of cases is 16, Range of values is 1 to 38
  9312                           ; switch strategies available:
  9313                           ; Name         Instructions Cycles
  9314                           ; simple_byte           49    25 (average)
  9315                           ;	Chosen strategy is simple_byte
  9316  002AB0  0A01               	xorlw	1	; case 1
  9317  002AB2  B4D8               	btfsc	status,2,c
  9318  002AB4  EFAD  F00E         	goto	l9399
  9319  002AB8  0A03               	xorlw	3	; case 2
  9320  002ABA  B4D8               	btfsc	status,2,c
  9321  002ABC  EFB1  F00E         	goto	l9401
  9322  002AC0  0A04               	xorlw	4	; case 6
  9323  002AC2  B4D8               	btfsc	status,2,c
  9324  002AC4  EFB5  F00E         	goto	l9403
  9325  002AC8  0A0E               	xorlw	14	; case 8
  9326  002ACA  B4D8               	btfsc	status,2,c
  9327  002ACC  EFB9  F00E         	goto	l9405
  9328  002AD0  0A01               	xorlw	1	; case 9
  9329  002AD2  B4D8               	btfsc	status,2,c
  9330  002AD4  EFBD  F00E         	goto	l9407
  9331  002AD8  0A02               	xorlw	2	; case 11
  9332  002ADA  B4D8               	btfsc	status,2,c
  9333  002ADC  EF15  F00F         	goto	l9441
  9334  002AE0  0A07               	xorlw	7	; case 12
  9335  002AE2  B4D8               	btfsc	status,2,c
  9336  002AE4  EF71  F00F         	goto	l9475
  9337  002AE8  0A1B               	xorlw	27	; case 23
  9338  002AEA  B4D8               	btfsc	status,2,c
  9339  002AEC  EFBC  F010         	goto	l9535
  9340  002AF0  0A0F               	xorlw	15	; case 24
  9341  002AF2  B4D8               	btfsc	status,2,c
  9342  002AF4  EFE1  F010         	goto	l9541
  9343  002AF8  0A01               	xorlw	1	; case 25
  9344  002AFA  B4D8               	btfsc	status,2,c
  9345  002AFC  D410               	goto	l9579
  9346  002AFE  0A04               	xorlw	4	; case 29
  9347  002B00  B4D8               	btfsc	status,2,c
  9348  002B02  D492               	goto	l9607
  9349  002B04  0A03               	xorlw	3	; case 30
  9350  002B06  B4D8               	btfsc	status,2,c
  9351  002B08  D4C2               	goto	l9623
  9352  002B0A  0A01               	xorlw	1	; case 31
  9353  002B0C  B4D8               	btfsc	status,2,c
  9354  002B0E  D4F2               	goto	l9639
  9355  002B10  0A3E               	xorlw	62	; case 33
  9356  002B12  B4D8               	btfsc	status,2,c
  9357  002B14  D5EA               	goto	l9727
  9358  002B16  0A04               	xorlw	4	; case 37
  9359  002B18  B4D8               	btfsc	status,2,c
  9360  002B1A  D60E               	goto	l9739
  9361  002B1C  0A03               	xorlw	3	; case 38
  9362  002B1E  B4D8               	btfsc	status,2,c
  9363  002B20  D6F4               	goto	l9789
  9364  002B22                     l1377:
  9365  002B22  0012               	return	
  9366  002B24                     __end_of_vscp_handleProtocolEvent:
  9367                           	opt stack 0
  9368                           tblptru	equ	0xFF8
  9369                           prodh	equ	0xFF4
  9370                           prodl	equ	0xFF3
  9371                           postinc0	equ	0xFEE
  9372                           wreg	equ	0xFE8
  9373                           indf2	equ	0xFDF
  9374                           postinc2	equ	0xFDE
  9375                           postdec2	equ	0xFDD
  9376                           fsr2h	equ	0xFDA
  9377                           fsr2l	equ	0xFD9
  9378                           status	equ	0xFD8
  9379                           
  9380 ;; *************** function ___awmod *****************
  9381 ;; Defined at:
  9382 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\common\awmod.c"
  9383 ;; Parameters:    Size  Location     Type
  9384 ;;  dividend        2   21[COMRAM] int 
  9385 ;;  divisor         2   23[COMRAM] int 
  9386 ;; Auto vars:     Size  Location     Type
  9387 ;;  sign            1   27[COMRAM] unsigned char 
  9388 ;;  counter         1   26[COMRAM] unsigned char 
  9389 ;; Return value:  Size  Location     Type
  9390 ;;                  2   21[COMRAM] int 
  9391 ;; Registers used:
  9392 ;;		wreg, status,2, status,0
  9393 ;; Tracked objects:
  9394 ;;		On entry : 0/0
  9395 ;;		On exit  : 0/0
  9396 ;;		Unchanged: 0/0
  9397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9398 ;;      Params:         4       0       0       0       0       0       0
  9399 ;;      Locals:         2       0       0       0       0       0       0
  9400 ;;      Temps:          1       0       0       0       0       0       0
  9401 ;;      Totals:         7       0       0       0       0       0       0
  9402 ;;Total ram usage:        7 bytes
  9403 ;; Hardware stack levels used:    1
  9404 ;; Hardware stack levels required when called:    2
  9405 ;; This function calls:
  9406 ;;		Nothing
  9407 ;; This function is called by:
  9408 ;;		_vscp_handleProtocolEvent
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text15
  9413  006814                     __ptext15:
  9414                           	opt stack 0
  9415  006814                     ___awmod:
  9416                           	opt stack 26
  9417                           
  9418                           ;incstack = 0
  9419                           ;incstack = 0
  9420  006814  6E1A               	movwf	??___awmod& (0+255),c
  9421  006816  0E00               	movlw	0
  9422  006818  6E1C               	movwf	___awmod@sign,c
  9423  00681A  501A               	movf	??___awmod& (0+255),w,c
  9424  00681C  AE17               	btfss	___awmod@dividend+1,7,c
  9425  00681E  D008               	goto	l11653
  9426  006820  6C16               	negf	___awmod@dividend,c
  9427  006822  1E17               	comf	___awmod@dividend+1,f,c
  9428  006824  B0D8               	btfsc	status,0,c
  9429  006826  2A17               	incf	___awmod@dividend+1,f,c
  9430  006828  6E1A               	movwf	??___awmod& (0+255),c
  9431  00682A  0E01               	movlw	1
  9432  00682C  6E1C               	movwf	___awmod@sign,c
  9433  00682E  501A               	movf	??___awmod& (0+255),w,c
  9434  006830                     l11653:
  9435  006830  AE19               	btfss	___awmod@divisor+1,7,c
  9436  006832  D004               	goto	l11657
  9437  006834  6C18               	negf	___awmod@divisor,c
  9438  006836  1E19               	comf	___awmod@divisor+1,f,c
  9439  006838  B0D8               	btfsc	status,0,c
  9440  00683A  2A19               	incf	___awmod@divisor+1,f,c
  9441  00683C                     l11657:
  9442  00683C  5019               	movf	___awmod@divisor+1,w,c
  9443  00683E  1018               	iorwf	___awmod@divisor,w,c
  9444  006840  B4D8               	btfsc	status,2,c
  9445  006842  D01A               	goto	l11673
  9446  006844  6E1A               	movwf	??___awmod& (0+255),c
  9447  006846  0E01               	movlw	1
  9448  006848  6E1B               	movwf	___awmod@counter,c
  9449  00684A  501A               	movf	??___awmod& (0+255),w,c
  9450  00684C  D004               	goto	l11663
  9451  00684E                     l11661:
  9452  00684E  90D8               	bcf	status,0,c
  9453  006850  3618               	rlcf	___awmod@divisor,f,c
  9454  006852  3619               	rlcf	___awmod@divisor+1,f,c
  9455  006854  2A1B               	incf	___awmod@counter,f,c
  9456  006856                     l11663:
  9457  006856  AE19               	btfss	___awmod@divisor+1,7,c
  9458  006858  D7FA               	goto	l11661
  9459  00685A                     l11665:
  9460  00685A  5018               	movf	___awmod@divisor,w,c
  9461  00685C  5C16               	subwf	___awmod@dividend,w,c
  9462  00685E  5019               	movf	___awmod@divisor+1,w,c
  9463  006860  5817               	subwfb	___awmod@dividend+1,w,c
  9464  006862  A0D8               	btfss	status,0,c
  9465  006864  D004               	goto	l11669
  9466  006866  5018               	movf	___awmod@divisor,w,c
  9467  006868  5E16               	subwf	___awmod@dividend,f,c
  9468  00686A  5019               	movf	___awmod@divisor+1,w,c
  9469  00686C  5A17               	subwfb	___awmod@dividend+1,f,c
  9470  00686E                     l11669:
  9471  00686E  90D8               	bcf	status,0,c
  9472  006870  3219               	rrcf	___awmod@divisor+1,f,c
  9473  006872  3218               	rrcf	___awmod@divisor,f,c
  9474  006874  2E1B               	decfsz	___awmod@counter,f,c
  9475  006876  D7F1               	goto	l11665
  9476  006878                     l11673:
  9477  006878  501C               	movf	___awmod@sign,w,c
  9478  00687A  B4D8               	btfsc	status,2,c
  9479  00687C  D004               	goto	l11677
  9480  00687E  6C16               	negf	___awmod@dividend,c
  9481  006880  1E17               	comf	___awmod@dividend+1,f,c
  9482  006882  B0D8               	btfsc	status,0,c
  9483  006884  2A17               	incf	___awmod@dividend+1,f,c
  9484  006886                     l11677:
  9485  006886  C016  F016         	movff	___awmod@dividend,?___awmod
  9486  00688A  C017  F017         	movff	___awmod@dividend+1,?___awmod+1
  9487  00688E  0012               	return	
  9488  006890                     __end_of___awmod:
  9489                           	opt stack 0
  9490                           tblptru	equ	0xFF8
  9491                           prodh	equ	0xFF4
  9492                           prodl	equ	0xFF3
  9493                           postinc0	equ	0xFEE
  9494                           wreg	equ	0xFE8
  9495                           indf2	equ	0xFDF
  9496                           postinc2	equ	0xFDE
  9497                           postdec2	equ	0xFDD
  9498                           fsr2h	equ	0xFDA
  9499                           fsr2l	equ	0xFD9
  9500                           status	equ	0xFD8
  9501                           
  9502 ;; *************** function _vscp_writeRegister *****************
  9503 ;; Defined at:
  9504 ;;		line 701 in file "../../vscp_firmware/common/vscp_firmware.c"
  9505 ;; Parameters:    Size  Location     Type
  9506 ;;  reg             1   76[BANK0 ] unsigned char 
  9507 ;;  value           1   77[BANK0 ] unsigned char 
  9508 ;; Auto vars:     Size  Location     Type
  9509 ;;		None
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  1    wreg      unsigned char 
  9512 ;; Registers used:
  9513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9519 ;;      Params:         0       2       0       0       0       0       0
  9520 ;;      Locals:         0       0       0       0       0       0       0
  9521 ;;      Temps:          0       0       0       0       0       0       0
  9522 ;;      Totals:         0       2       0       0       0       0       0
  9523 ;;Total ram usage:        2 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:    8
  9526 ;; This function calls:
  9527 ;;		_vscp_writeAppReg
  9528 ;;		_vscp_writeStdReg
  9529 ;; This function is called by:
  9530 ;;		_vscp_handleProtocolEvent
  9531 ;; This function uses a non-reentrant model
  9532 ;;
  9533                           
  9534                           	psect	text16
  9535  006C44                     __ptext16:
  9536                           	opt stack 0
  9537  006C44                     _vscp_writeRegister:
  9538                           	opt stack 20
  9539                           
  9540                           ;vscp_firmware.c: 702: if (reg >= 0x80) {
  9541                           
  9542                           ;incstack = 0
  9543                           ;incstack = 0
  9544  006C44  0E7F               	movlw	127
  9545  006C46  0100               	movlb	0	; () banked
  9546  006C48  0100               	movlb	0	; () banked
  9547  006C4A  65AC               	cpfsgt	vscp_writeRegister@reg& (0+255),b
  9548  006C4C  D007               	goto	l11573
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;vscp_firmware.c: 703: return vscp_writeStdReg(reg, value);
  9552  006C4E  C0AC  F01E         	movff	vscp_writeRegister@reg,?_vscp_writeStdReg
  9553  006C52  C0AD  F01F         	movff	vscp_writeRegister@value,?_vscp_writeStdReg+1
  9554  006C56  ECA8  F02C         	call	_vscp_writeStdReg	;wreg free
  9555  006C5A  D006               	goto	l1258
  9556  006C5C                     l11573:
  9557                           
  9558                           ;vscp_firmware.c: 705: else {
  9559                           ;vscp_firmware.c: 706: return vscp_writeAppReg(reg, value);
  9560  006C5C  C0AC  F0A2         	movff	vscp_writeRegister@reg,?_vscp_writeAppReg
  9561  006C60  C0AD  F0A3         	movff	vscp_writeRegister@value,?_vscp_writeAppReg+1
  9562  006C64  EC11  F003         	call	_vscp_writeAppReg	;wreg free
  9563  006C68                     l1258:
  9564  006C68  0012               	return	
  9565  006C6A                     __end_of_vscp_writeRegister:
  9566                           	opt stack 0
  9567                           tblptru	equ	0xFF8
  9568                           prodh	equ	0xFF4
  9569                           prodl	equ	0xFF3
  9570                           postinc0	equ	0xFEE
  9571                           wreg	equ	0xFE8
  9572                           indf2	equ	0xFDF
  9573                           postinc2	equ	0xFDE
  9574                           postdec2	equ	0xFDD
  9575                           fsr2h	equ	0xFDA
  9576                           fsr2l	equ	0xFD9
  9577                           status	equ	0xFD8
  9578                           
  9579 ;; *************** function _vscp_writeStdReg *****************
  9580 ;; Defined at:
  9581 ;;		line 715 in file "../../vscp_firmware/common/vscp_firmware.c"
  9582 ;; Parameters:    Size  Location     Type
  9583 ;;  reg             1   29[COMRAM] unsigned char 
  9584 ;;  value           1   30[COMRAM] unsigned char 
  9585 ;; Auto vars:     Size  Location     Type
  9586 ;;  rv              1   35[COMRAM] unsigned char 
  9587 ;; Return value:  Size  Location     Type
  9588 ;;                  1    wreg      unsigned char 
  9589 ;; Registers used:
  9590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9591 ;; Tracked objects:
  9592 ;;		On entry : 0/0
  9593 ;;		On exit  : 0/0
  9594 ;;		Unchanged: 0/0
  9595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9596 ;;      Params:         2       0       0       0       0       0       0
  9597 ;;      Locals:         1       0       0       0       0       0       0
  9598 ;;      Temps:          4       0       0       0       0       0       0
  9599 ;;      Totals:         7       0       0       0       0       0       0
  9600 ;;Total ram usage:        7 bytes
  9601 ;; Hardware stack levels used:    1
  9602 ;; Hardware stack levels required when called:    5
  9603 ;; This function calls:
  9604 ;;		_vscp_setGUID
  9605 ;;		_vscp_setManufacturerId
  9606 ;;		_vscp_getGUID
  9607 ;;		_vscp_getUserID
  9608 ;;		_vscp_setUserID
  9609 ;;		_vscp_getManufacturerId
  9610 ;;		_vscp_restoreDefaults
  9611 ;; This function is called by:
  9612 ;;		_vscp_writeRegister
  9613 ;;		_vscp_handleProtocolEvent
  9614 ;; This function uses a non-reentrant model
  9615 ;;
  9616                           
  9617                           	psect	text17
  9618  005950                     __ptext17:
  9619                           	opt stack 0
  9620  005950                     _vscp_writeStdReg:
  9621                           	opt stack 23
  9622                           
  9623                           ;vscp_firmware.c: 716: uint8_t rv = ~value;
  9624                           
  9625                           ;incstack = 0
  9626                           ;incstack = 0
  9627  005950  501F               	movf	vscp_writeStdReg@value,w,c
  9628  005952  0AFF               	xorlw	255
  9629  005954  6E24               	movwf	vscp_writeStdReg@rv,c
  9630                           
  9631                           ;vscp_firmware.c: 718: if ((reg > (0x82 + 1)) &&
  9632                           ;vscp_firmware.c: 719: (reg < 0x89)) {
  9633  005956  0E83               	movlw	131
  9634  005958  641E               	cpfsgt	vscp_writeStdReg@reg,c
  9635  00595A  D010               	goto	l11585
  9636  00595C  0E89               	movlw	137
  9637  00595E  601E               	cpfslt	vscp_writeStdReg@reg,c
  9638  005960  D00D               	goto	l11585
  9639                           
  9640                           ;vscp_firmware.c: 722: vscp_setUserID((reg - 0x84), value);
  9641  005962  501E               	movf	vscp_writeStdReg@reg,w,c
  9642  005964  0F7C               	addlw	124
  9643  005966  6E1B               	movwf	?_vscp_setUserID,c
  9644  005968  C01F  F01C         	movff	vscp_writeStdReg@value,?_vscp_setUserID+1
  9645  00596C  EC77  F036         	call	_vscp_setUserID	;wreg free
  9646                           
  9647                           ;vscp_firmware.c: 723: rv = vscp_getUserID((reg - 0x84));
  9648  005970  501E               	movf	vscp_writeStdReg@reg,w,c
  9649  005972  0F7C               	addlw	124
  9650  005974  6E18               	movwf	?_vscp_getUserID,c
  9651  005976  ECE2  F036         	call	_vscp_getUserID	;wreg free
  9652  00597A  D0A6               	goto	L75
  9653  00597C                     l11585:
  9654                           
  9655                           ;vscp_firmware.c: 726: else if (0x92 == reg) {
  9656  00597C  501E               	movf	vscp_writeStdReg@reg,w,c
  9657  00597E  0A92               	xorlw	146
  9658  005980  A4D8               	btfss	status,2,c
  9659  005982  D011               	goto	l11591
  9660                           
  9661                           ;vscp_firmware.c: 729: vscp_page_select = (vscp_page_select & 0xff) | ((uint16_t) value 
      +                          << 8);
  9662  005984  501F               	movf	vscp_writeStdReg@value,w,c
  9663  005986  6E21               	movwf	(??_vscp_writeStdReg+1)& (0+255),c
  9664  005988  6A20               	clrf	??_vscp_writeStdReg& (0+255),c
  9665  00598A  0EFF               	movlw	255
  9666  00598C  1436               	andwf	_vscp_page_select,w,c
  9667  00598E  6E22               	movwf	(??_vscp_writeStdReg+2)& (0+255),c
  9668  005990  0E00               	movlw	0
  9669  005992  1437               	andwf	_vscp_page_select+1,w,c
  9670  005994  6E23               	movwf	(??_vscp_writeStdReg+3)& (0+255),c
  9671  005996  5020               	movf	??_vscp_writeStdReg,w,c
  9672  005998  1022               	iorwf	??_vscp_writeStdReg+2,w,c
  9673  00599A  6E36               	movwf	_vscp_page_select,c
  9674  00599C  5021               	movf	??_vscp_writeStdReg+1,w,c
  9675  00599E  1023               	iorwf	??_vscp_writeStdReg+3,w,c
  9676  0059A0  6E37               	movwf	_vscp_page_select+1,c
  9677                           
  9678                           ;vscp_firmware.c: 730: rv = (vscp_page_select >> 8) & 0xff;
  9679  0059A2  5037               	movf	_vscp_page_select+1,w,c
  9680  0059A4  D091               	goto	L75
  9681  0059A6                     l11591:
  9682                           
  9683                           ;vscp_firmware.c: 732: else if (0x93 == reg) {
  9684  0059A6  501E               	movf	vscp_writeStdReg@reg,w,c
  9685  0059A8  0A93               	xorlw	147
  9686  0059AA  A4D8               	btfss	status,2,c
  9687  0059AC  D00E               	goto	l11597
  9688                           
  9689                           ;vscp_firmware.c: 735: vscp_page_select = (vscp_page_select & 0xff00) | value;
  9690  0059AE  0E00               	movlw	0
  9691  0059B0  1436               	andwf	_vscp_page_select,w,c
  9692  0059B2  6E20               	movwf	??_vscp_writeStdReg& (0+255),c
  9693  0059B4  0EFF               	movlw	255
  9694  0059B6  1437               	andwf	_vscp_page_select+1,w,c
  9695  0059B8  6E21               	movwf	(??_vscp_writeStdReg+1)& (0+255),c
  9696  0059BA  501F               	movf	vscp_writeStdReg@value,w,c
  9697  0059BC  1020               	iorwf	??_vscp_writeStdReg,w,c
  9698  0059BE  6E36               	movwf	_vscp_page_select,c
  9699  0059C0  5021               	movf	??_vscp_writeStdReg+1,w,c
  9700  0059C2  6E37               	movwf	_vscp_page_select+1,c
  9701                           
  9702                           ;vscp_firmware.c: 736: rv = (vscp_page_select & 0xff);
  9703  0059C4  C036  F024         	movff	_vscp_page_select,vscp_writeStdReg@rv
  9704                           
  9705                           ;vscp_firmware.c: 737: }
  9706  0059C8  D080               	goto	l11641
  9707  0059CA                     l11597:
  9708                           
  9709                           ;vscp_firmware.c: 742: else if ((reg > 0x88) && (reg < 0x91)) {
  9710  0059CA  0E88               	movlw	136
  9711  0059CC  641E               	cpfsgt	vscp_writeStdReg@reg,c
  9712  0059CE  D027               	goto	l11609
  9713  0059D0  0E91               	movlw	145
  9714  0059D2  601E               	cpfslt	vscp_writeStdReg@reg,c
  9715  0059D4  D024               	goto	l11609
  9716                           
  9717                           ;vscp_firmware.c: 744: if ((0xff != ((vscp_page_select >> 8) & 0xff)) ||
  9718                           ;vscp_firmware.c: 745: (0xff != (vscp_page_select & 0xff))) {
  9719  0059D6  C037  F020         	movff	_vscp_page_select+1,??_vscp_writeStdReg
  9720  0059DA  C020  F021         	movff	??_vscp_writeStdReg,??_vscp_writeStdReg+1
  9721  0059DE  6A22               	clrf	(??_vscp_writeStdReg+2)& (0+255),c
  9722  0059E0  0EFF               	movlw	255
  9723  0059E2  1621               	andwf	??_vscp_writeStdReg+1,f,c
  9724  0059E4  0E00               	movlw	0
  9725  0059E6  1622               	andwf	??_vscp_writeStdReg+2,f,c
  9726  0059E8  2821               	incf	??_vscp_writeStdReg+1,w,c
  9727  0059EA  1022               	iorwf	??_vscp_writeStdReg+2,w,c
  9728  0059EC  A4D8               	btfss	status,2,c
  9729  0059EE  D06A               	goto	l11639
  9730  0059F0  0EFF               	movlw	255
  9731  0059F2  1436               	andwf	_vscp_page_select,w,c
  9732  0059F4  6E20               	movwf	??_vscp_writeStdReg& (0+255),c
  9733  0059F6  0E00               	movlw	0
  9734  0059F8  1437               	andwf	_vscp_page_select+1,w,c
  9735  0059FA  6E21               	movwf	(??_vscp_writeStdReg+1)& (0+255),c
  9736  0059FC  2820               	incf	??_vscp_writeStdReg,w,c
  9737  0059FE  1021               	iorwf	??_vscp_writeStdReg+1,w,c
  9738  005A00  A4D8               	btfss	status,2,c
  9739  005A02  D060               	goto	l11639
  9740                           
  9741                           ;vscp_firmware.c: 749: else {
  9742                           ;vscp_firmware.c: 751: vscp_setManufacturerId(reg - 0x89, value);
  9743                           
  9744                           ;vscp_firmware.c: 748: }
  9745                           
  9746                           ;vscp_firmware.c: 747: rv = ~value;
  9747  005A04  501E               	movf	vscp_writeStdReg@reg,w,c
  9748  005A06  0F77               	addlw	119
  9749  005A08  6E1B               	movwf	?_vscp_setManufacturerId,c
  9750  005A0A  C01F  F01C         	movff	vscp_writeStdReg@value,?_vscp_setManufacturerId+1
  9751  005A0E  EC35  F036         	call	_vscp_setManufacturerId	;wreg free
  9752                           
  9753                           ;vscp_firmware.c: 752: rv = vscp_getManufacturerId(reg - 0x89);
  9754  005A12  501E               	movf	vscp_writeStdReg@reg,w,c
  9755  005A14  0F77               	addlw	119
  9756  005A16  6E18               	movwf	?_vscp_getManufacturerId,c
  9757  005A18  ECD9  F036         	call	_vscp_getManufacturerId	;wreg free
  9758  005A1C  D055               	goto	L75
  9759  005A1E                     l11609:
  9760                           
  9761                           ;vscp_firmware.c: 755: else if ((reg > (0xD0 - 1)) && (reg < 0xE0)) {
  9762  005A1E  0ECF               	movlw	207
  9763  005A20  641E               	cpfsgt	vscp_writeStdReg@reg,c
  9764  005A22  D027               	goto	l11621
  9765  005A24  0EE0               	movlw	224
  9766  005A26  601E               	cpfslt	vscp_writeStdReg@reg,c
  9767  005A28  D024               	goto	l11621
  9768                           
  9769                           ;vscp_firmware.c: 757: if ((0xff != ((vscp_page_select >> 8) & 0xff)) ||
  9770                           ;vscp_firmware.c: 758: (0xff != (vscp_page_select & 0xff))) {
  9771  005A2A  C037  F020         	movff	_vscp_page_select+1,??_vscp_writeStdReg
  9772  005A2E  C020  F021         	movff	??_vscp_writeStdReg,??_vscp_writeStdReg+1
  9773  005A32  6A22               	clrf	(??_vscp_writeStdReg+2)& (0+255),c
  9774  005A34  0EFF               	movlw	255
  9775  005A36  1621               	andwf	??_vscp_writeStdReg+1,f,c
  9776  005A38  0E00               	movlw	0
  9777  005A3A  1622               	andwf	??_vscp_writeStdReg+2,f,c
  9778  005A3C  2821               	incf	??_vscp_writeStdReg+1,w,c
  9779  005A3E  1022               	iorwf	??_vscp_writeStdReg+2,w,c
  9780  005A40  A4D8               	btfss	status,2,c
  9781  005A42  D040               	goto	l11639
  9782  005A44  0EFF               	movlw	255
  9783  005A46  1436               	andwf	_vscp_page_select,w,c
  9784  005A48  6E20               	movwf	??_vscp_writeStdReg& (0+255),c
  9785  005A4A  0E00               	movlw	0
  9786  005A4C  1437               	andwf	_vscp_page_select+1,w,c
  9787  005A4E  6E21               	movwf	(??_vscp_writeStdReg+1)& (0+255),c
  9788  005A50  2820               	incf	??_vscp_writeStdReg,w,c
  9789  005A52  1021               	iorwf	??_vscp_writeStdReg+1,w,c
  9790  005A54  A4D8               	btfss	status,2,c
  9791  005A56  D036               	goto	l11639
  9792                           
  9793                           ;vscp_firmware.c: 762: else {
  9794                           ;vscp_firmware.c: 763: vscp_setGUID(reg - 0xD0, value);
  9795                           
  9796                           ;vscp_firmware.c: 761: }
  9797                           
  9798                           ;vscp_firmware.c: 760: rv = ~value;
  9799  005A58  501E               	movf	vscp_writeStdReg@reg,w,c
  9800  005A5A  0F30               	addlw	48
  9801  005A5C  6E1B               	movwf	?_vscp_setGUID,c
  9802  005A5E  C01F  F01C         	movff	vscp_writeStdReg@value,?_vscp_setGUID+1
  9803  005A62  EC46  F036         	call	_vscp_setGUID	;wreg free
  9804                           
  9805                           ;vscp_firmware.c: 764: rv = vscp_getGUID(reg - 0xD0);
  9806  005A66  501E               	movf	vscp_writeStdReg@reg,w,c
  9807  005A68  0F30               	addlw	48
  9808  005A6A  6E18               	movwf	?_vscp_getGUID,c
  9809  005A6C  ECEB  F036         	call	_vscp_getGUID	;wreg free
  9810  005A70  D02B               	goto	L75
  9811  005A72                     l11621:
  9812                           
  9813                           ;vscp_firmware.c: 768: else if ( 0xA2 == reg ) {
  9814  005A72  501E               	movf	vscp_writeStdReg@reg,w,c
  9815  005A74  0AA2               	xorlw	162
  9816  005A76  A4D8               	btfss	status,2,c
  9817  005A78  D025               	goto	l11639
  9818                           
  9819                           ;vscp_firmware.c: 769: if ( 0x55 == value ) {
  9820  005A7A  501F               	movf	vscp_writeStdReg@value,w,c
  9821  005A7C  0A55               	xorlw	85
  9822  005A7E  A4D8               	btfss	status,2,c
  9823  005A80  D00A               	goto	l11629
  9824                           
  9825                           ;vscp_firmware.c: 770: vscp_configtimer = 0;
  9826  005A82  0E00               	movlw	0
  9827  005A84  0100               	movlb	0	; () banked
  9828  005A86  0100               	movlb	0	; () banked
  9829  005A88  6FDA               	movwf	(_vscp_configtimer+1)& (0+255),b	;volatile
  9830  005A8A  0E00               	movlw	0
  9831  005A8C  0100               	movlb	0	; () banked
  9832  005A8E  6FD9               	movwf	_vscp_configtimer& (0+255),b	;volatile
  9833                           
  9834                           ; BSR set to: 0
  9835                           ;vscp_firmware.c: 771: rv = 0x55;
  9836  005A90  6E20               	movwf	??_vscp_writeStdReg& (0+255),c
  9837  005A92  0E55               	movlw	85
  9838  005A94  D014               	goto	L77
  9839  005A96                     l11629:
  9840                           
  9841                           ;vscp_firmware.c: 773: else if ( 0xaa == value ) {
  9842  005A96  501F               	movf	vscp_writeStdReg@value,w,c
  9843  005A98  0AAA               	xorlw	170
  9844  005A9A  A4D8               	btfss	status,2,c
  9845  005A9C  D016               	goto	l11641
  9846                           
  9847                           ;vscp_firmware.c: 774: if ( vscp_configtimer < 1000 ) {
  9848  005A9E  0EE8               	movlw	232
  9849  005AA0  0100               	movlb	0	; () banked
  9850  005AA2  0100               	movlb	0	; () banked
  9851  005AA4  5DD9               	subwf	_vscp_configtimer& (0+255),w,b	;volatile
  9852  005AA6  0E03               	movlw	3
  9853  005AA8  0100               	movlb	0	; () banked
  9854  005AAA  59DA               	subwfb	(_vscp_configtimer+1)& (0+255),w,b	;volatile
  9855  005AAC  B0D8               	btfsc	status,0,c
  9856  005AAE  D005               	goto	l11637
  9857                           
  9858                           ; BSR set to: 0
  9859                           ;vscp_firmware.c: 775: vscp_restoreDefaults();
  9860  005AB0  EC30  F037         	call	_vscp_restoreDefaults	;wreg free
  9861                           
  9862                           ;vscp_firmware.c: 776: rv = 0xaa;
  9863  005AB4  6E20               	movwf	??_vscp_writeStdReg& (0+255),c
  9864  005AB6  0EAA               	movlw	170
  9865  005AB8  D002               	goto	L77
  9866  005ABA                     l11637:
  9867                           
  9868                           ;vscp_firmware.c: 778: else {
  9869                           ;vscp_firmware.c: 779: rv = 0;
  9870  005ABA  6E20               	movwf	??_vscp_writeStdReg& (0+255),c
  9871  005ABC  0E00               	movlw	0
  9872  005ABE                     L77:
  9873  005ABE  6E24               	movwf	vscp_writeStdReg@rv,c
  9874  005AC0  5020               	movf	??_vscp_writeStdReg& (0+255),w,c
  9875  005AC2  D003               	goto	l11641
  9876  005AC4                     l11639:
  9877                           
  9878                           ;vscp_firmware.c: 784: else {
  9879                           ;vscp_firmware.c: 786: rv = ~value;
  9880  005AC4  501F               	movf	vscp_writeStdReg@value,w,c
  9881  005AC6  0AFF               	xorlw	255
  9882  005AC8                     L75:
  9883  005AC8  6E24               	movwf	vscp_writeStdReg@rv,c
  9884  005ACA                     l11641:
  9885                           
  9886                           ;vscp_firmware.c: 787: }
  9887                           ;vscp_firmware.c: 789: return rv;
  9888  005ACA  5024               	movf	vscp_writeStdReg@rv,w,c
  9889  005ACC  0012               	return	
  9890  005ACE                     __end_of_vscp_writeStdReg:
  9891                           	opt stack 0
  9892                           tblptru	equ	0xFF8
  9893                           prodh	equ	0xFF4
  9894                           prodl	equ	0xFF3
  9895                           postinc0	equ	0xFEE
  9896                           wreg	equ	0xFE8
  9897                           indf2	equ	0xFDF
  9898                           postinc2	equ	0xFDE
  9899                           postdec2	equ	0xFDD
  9900                           fsr2h	equ	0xFDA
  9901                           fsr2l	equ	0xFD9
  9902                           status	equ	0xFD8
  9903                           
  9904 ;; *************** function _vscp_restoreDefaults *****************
  9905 ;; Defined at:
  9906 ;;		line 3038 in file "../main.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;		None
  9909 ;; Auto vars:     Size  Location     Type
  9910 ;;		None
  9911 ;; Return value:  Size  Location     Type
  9912 ;;		None               void
  9913 ;; Registers used:
  9914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9920 ;;      Params:         0       0       0       0       0       0       0
  9921 ;;      Locals:         0       0       0       0       0       0       0
  9922 ;;      Temps:          0       0       0       0       0       0       0
  9923 ;;      Totals:         0       0       0       0       0       0       0
  9924 ;;Total ram usage:        0 bytes
  9925 ;; Hardware stack levels used:    1
  9926 ;; Hardware stack levels required when called:    4
  9927 ;; This function calls:
  9928 ;;		_init_app_eeprom
  9929 ;;		_init_app_ram
  9930 ;; This function is called by:
  9931 ;;		_vscp_writeStdReg
  9932 ;; This function uses a non-reentrant model
  9933 ;;
  9934                           
  9935                           	psect	text18
  9936  006E60                     __ptext18:
  9937                           	opt stack 0
  9938  006E60                     _vscp_restoreDefaults:
  9939                           	opt stack 23
  9940                           
  9941                           ;main.c: 3039: init_app_eeprom();
  9942                           
  9943                           ;incstack = 0
  9944                           ;incstack = 0
  9945  006E60  ECF0  F02A         	call	_init_app_eeprom	;wreg free
  9946                           
  9947                           ;main.c: 3040: init_app_ram();
  9948  006E64  EC65  F022         	call	_init_app_ram	;wreg free
  9949  006E68  0012               	return	
  9950  006E6A                     __end_of_vscp_restoreDefaults:
  9951                           	opt stack 0
  9952                           tblptru	equ	0xFF8
  9953                           prodh	equ	0xFF4
  9954                           prodl	equ	0xFF3
  9955                           postinc0	equ	0xFEE
  9956                           wreg	equ	0xFE8
  9957                           indf2	equ	0xFDF
  9958                           postinc2	equ	0xFDE
  9959                           postdec2	equ	0xFDD
  9960                           fsr2h	equ	0xFDA
  9961                           fsr2l	equ	0xFD9
  9962                           status	equ	0xFD8
  9963                           
  9964 ;; *************** function _init_app_eeprom *****************
  9965 ;; Defined at:
  9966 ;;		line 518 in file "../main.c"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;		None
  9969 ;; Auto vars:     Size  Location     Type
  9970 ;;  i               1   28[COMRAM] unsigned char 
  9971 ;;  j               1   27[COMRAM] unsigned char 
  9972 ;; Return value:  Size  Location     Type
  9973 ;;		None               void
  9974 ;; Registers used:
  9975 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  9976 ;; Tracked objects:
  9977 ;;		On entry : 0/0
  9978 ;;		On exit  : 0/0
  9979 ;;		Unchanged: 0/0
  9980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9981 ;;      Params:         0       0       0       0       0       0       0
  9982 ;;      Locals:         2       0       0       0       0       0       0
  9983 ;;      Temps:          1       0       0       0       0       0       0
  9984 ;;      Totals:         3       0       0       0       0       0       0
  9985 ;;Total ram usage:        3 bytes
  9986 ;; Hardware stack levels used:    1
  9987 ;; Hardware stack levels required when called:    3
  9988 ;; This function calls:
  9989 ;;		_Busy_eep
  9990 ;;		_Write_b_eep
  9991 ;; This function is called by:
  9992 ;;		_main
  9993 ;;		_vscp_restoreDefaults
  9994 ;; This function uses a non-reentrant model
  9995 ;;
  9996                           
  9997                           	psect	text19
  9998  0055E0                     __ptext19:
  9999                           	opt stack 0
 10000  0055E0                     _init_app_eeprom:
 10001                           	opt stack 23
 10002                           
 10003                           ;main.c: 519: unsigned char i, j;
 10004                           ;main.c: 521: (Busy_eep(), Write_b_eep(0x43 + 0,0));
 10005                           
 10006                           ;incstack = 0
 10007                           ;incstack = 0
 10008  0055E0  EC35  F037         	call	_Busy_eep	;wreg free
 10009  0055E4  0E00               	movlw	0
 10010  0055E6  6E17               	movwf	?_Write_b_eep+1,c
 10011  0055E8  0E43               	movlw	67
 10012  0055EA  6E16               	movwf	?_Write_b_eep,c
 10013  0055EC  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10014  0055EE  0E00               	movlw	0
 10015  0055F0  6E18               	movwf	?_Write_b_eep+2,c
 10016  0055F2  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10017  0055F4  EC65  F035         	call	_Write_b_eep	;wreg free
 10018                           
 10019                           ;main.c: 522: (Busy_eep(), Write_b_eep(0x43 + 1,0));
 10020  0055F8  EC35  F037         	call	_Busy_eep	;wreg free
 10021  0055FC  0E00               	movlw	0
 10022  0055FE  6E17               	movwf	?_Write_b_eep+1,c
 10023  005600  0E44               	movlw	68
 10024  005602  6E16               	movwf	?_Write_b_eep,c
 10025  005604  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10026  005606  0E00               	movlw	0
 10027  005608  6E18               	movwf	?_Write_b_eep+2,c
 10028  00560A  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10029  00560C  EC65  F035         	call	_Write_b_eep	;wreg free
 10030                           
 10031                           ;main.c: 524: for ( i=0; i<10; i++ ) {
 10032  005610  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10033  005612  0E00               	movlw	0
 10034  005614  6E1D               	movwf	init_app_eeprom@i,c
 10035  005616  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10036  005618  D00F               	goto	L78
 10037  00561A                     l9105:
 10038                           
 10039                           ;main.c: 525: (Busy_eep(), Write_b_eep(0x43 + 2 + i,0));
 10040  00561A  EC35  F037         	call	_Busy_eep	;wreg free
 10041  00561E  0E45               	movlw	69
 10042  005620  241D               	addwf	init_app_eeprom@i,w,c
 10043  005622  6E16               	movwf	?_Write_b_eep,c
 10044  005624  6A17               	clrf	?_Write_b_eep+1,c
 10045  005626  0E00               	movlw	0
 10046  005628  2217               	addwfc	?_Write_b_eep+1,f,c
 10047  00562A  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10048  00562C  0E00               	movlw	0
 10049  00562E  6E18               	movwf	?_Write_b_eep+2,c
 10050  005630  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10051  005632  EC65  F035         	call	_Write_b_eep	;wreg free
 10052  005636  2A1D               	incf	init_app_eeprom@i,f,c
 10053  005638                     L78:
 10054  005638  0E09               	movlw	9
 10055  00563A  641D               	cpfsgt	init_app_eeprom@i,c
 10056  00563C  D7EE               	goto	l9105
 10057                           
 10058                           ;main.c: 526: }
 10059                           ;main.c: 528: (Busy_eep(), Write_b_eep(0x43 + 12,0x03));
 10060  00563E  EC35  F037         	call	_Busy_eep	;wreg free
 10061  005642  0E00               	movlw	0
 10062  005644  6E17               	movwf	?_Write_b_eep+1,c
 10063  005646  0E4F               	movlw	79
 10064  005648  6E16               	movwf	?_Write_b_eep,c
 10065  00564A  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10066  00564C  0E03               	movlw	3
 10067  00564E  6E18               	movwf	?_Write_b_eep+2,c
 10068  005650  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10069  005652  EC65  F035         	call	_Write_b_eep	;wreg free
 10070                           
 10071                           ;main.c: 529: (Busy_eep(), Write_b_eep(0x43 + 12,0xFF));
 10072  005656  EC35  F037         	call	_Busy_eep	;wreg free
 10073  00565A  0E00               	movlw	0
 10074  00565C  6E17               	movwf	?_Write_b_eep+1,c
 10075  00565E  0E4F               	movlw	79
 10076  005660  6E16               	movwf	?_Write_b_eep,c
 10077  005662  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10078  005664  0EFF               	movlw	255
 10079  005666  6E18               	movwf	?_Write_b_eep+2,c
 10080  005668  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10081  00566A  EC65  F035         	call	_Write_b_eep	;wreg free
 10082                           
 10083                           ;main.c: 531: for ( i=0; i<10; i++ ) {
 10084  00566E  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10085  005670  0E00               	movlw	0
 10086  005672  6E1D               	movwf	init_app_eeprom@i,c
 10087  005674  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10088  005676  D00F               	goto	L79
 10089  005678                     l9123:
 10090                           
 10091                           ;main.c: 532: (Busy_eep(), Write_b_eep(0x43 + 24 + i,0x08 | 0x10 | 0x80));
 10092  005678  EC35  F037         	call	_Busy_eep	;wreg free
 10093  00567C  0E5B               	movlw	91
 10094  00567E  241D               	addwf	init_app_eeprom@i,w,c
 10095  005680  6E16               	movwf	?_Write_b_eep,c
 10096  005682  6A17               	clrf	?_Write_b_eep+1,c
 10097  005684  0E00               	movlw	0
 10098  005686  2217               	addwfc	?_Write_b_eep+1,f,c
 10099  005688  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10100  00568A  0E98               	movlw	152
 10101  00568C  6E18               	movwf	?_Write_b_eep+2,c
 10102  00568E  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10103  005690  EC65  F035         	call	_Write_b_eep	;wreg free
 10104  005694  2A1D               	incf	init_app_eeprom@i,f,c
 10105  005696                     L79:
 10106  005696  0E09               	movlw	9
 10107  005698  641D               	cpfsgt	init_app_eeprom@i,c
 10108  00569A  D7EE               	goto	l9123
 10109                           
 10110                           ;main.c: 536: }
 10111                           ;main.c: 538: for ( i=0; i<10; i++ ) {
 10112  00569C  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10113  00569E  0E00               	movlw	0
 10114  0056A0  6E1D               	movwf	init_app_eeprom@i,c
 10115  0056A2  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10116  0056A4  D00F               	goto	L80
 10117  0056A6                     l9135:
 10118                           
 10119                           ;main.c: 539: (Busy_eep(), Write_b_eep(0x43 + 34 + i,0x01 | 0x02 | 0x80));
 10120  0056A6  EC35  F037         	call	_Busy_eep	;wreg free
 10121  0056AA  0E65               	movlw	101
 10122  0056AC  241D               	addwf	init_app_eeprom@i,w,c
 10123  0056AE  6E16               	movwf	?_Write_b_eep,c
 10124  0056B0  6A17               	clrf	?_Write_b_eep+1,c
 10125  0056B2  0E00               	movlw	0
 10126  0056B4  2217               	addwfc	?_Write_b_eep+1,f,c
 10127  0056B6  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10128  0056B8  0E83               	movlw	131
 10129  0056BA  6E18               	movwf	?_Write_b_eep+2,c
 10130  0056BC  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10131  0056BE  EC65  F035         	call	_Write_b_eep	;wreg free
 10132  0056C2  2A1D               	incf	init_app_eeprom@i,f,c
 10133  0056C4                     L80:
 10134  0056C4  0E09               	movlw	9
 10135  0056C6  641D               	cpfsgt	init_app_eeprom@i,c
 10136  0056C8  D7EE               	goto	l9135
 10137                           
 10138                           ;main.c: 543: }
 10139                           ;main.c: 545: (Busy_eep(), Write_b_eep(0x43 + 44,0));
 10140  0056CA  EC35  F037         	call	_Busy_eep	;wreg free
 10141  0056CE  0E00               	movlw	0
 10142  0056D0  6E17               	movwf	?_Write_b_eep+1,c
 10143  0056D2  0E6F               	movlw	111
 10144  0056D4  6E16               	movwf	?_Write_b_eep,c
 10145  0056D6  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10146  0056D8  0E00               	movlw	0
 10147  0056DA  6E18               	movwf	?_Write_b_eep+2,c
 10148  0056DC  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10149  0056DE  EC65  F035         	call	_Write_b_eep	;wreg free
 10150                           
 10151                           ;main.c: 547: (Busy_eep(), Write_b_eep(0x43 + 45,0));
 10152  0056E2  EC35  F037         	call	_Busy_eep	;wreg free
 10153  0056E6  0E00               	movlw	0
 10154  0056E8  6E17               	movwf	?_Write_b_eep+1,c
 10155  0056EA  0E70               	movlw	112
 10156  0056EC  6E16               	movwf	?_Write_b_eep,c
 10157  0056EE  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10158  0056F0  0E00               	movlw	0
 10159  0056F2  6E18               	movwf	?_Write_b_eep+2,c
 10160  0056F4  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10161  0056F6  EC65  F035         	call	_Write_b_eep	;wreg free
 10162                           
 10163                           ;main.c: 549: for ( i=0; i<20; i++ ) {
 10164  0056FA  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10165  0056FC  0E00               	movlw	0
 10166  0056FE  6E1D               	movwf	init_app_eeprom@i,c
 10167  005700  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10168  005702  D00F               	goto	L81
 10169  005704                     l9153:
 10170                           
 10171                           ;main.c: 550: (Busy_eep(), Write_b_eep(0x43 + 46 + 0 + i,0));
 10172  005704  EC35  F037         	call	_Busy_eep	;wreg free
 10173  005708  0E71               	movlw	113
 10174  00570A  241D               	addwf	init_app_eeprom@i,w,c
 10175  00570C  6E16               	movwf	?_Write_b_eep,c
 10176  00570E  6A17               	clrf	?_Write_b_eep+1,c
 10177  005710  0E00               	movlw	0
 10178  005712  2217               	addwfc	?_Write_b_eep+1,f,c
 10179  005714  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10180  005716  0E00               	movlw	0
 10181  005718  6E18               	movwf	?_Write_b_eep+2,c
 10182  00571A  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10183  00571C  EC65  F035         	call	_Write_b_eep	;wreg free
 10184  005720  2A1D               	incf	init_app_eeprom@i,f,c
 10185  005722                     L81:
 10186  005722  0E13               	movlw	19
 10187  005724  641D               	cpfsgt	init_app_eeprom@i,c
 10188  005726  D7EE               	goto	l9153
 10189                           
 10190                           ;main.c: 553: }
 10191                           ;main.c: 555: for ( i=0; i<20; i++ ) {
 10192  005728  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10193  00572A  0E00               	movlw	0
 10194  00572C  6E1D               	movwf	init_app_eeprom@i,c
 10195  00572E  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10196  005730  D00F               	goto	L82
 10197  005732                     l9165:
 10198                           
 10199                           ;main.c: 556: (Busy_eep(), Write_b_eep(0x43 + 46 + 20 + i,0));
 10200  005732  EC35  F037         	call	_Busy_eep	;wreg free
 10201  005736  0E85               	movlw	133
 10202  005738  241D               	addwf	init_app_eeprom@i,w,c
 10203  00573A  6E16               	movwf	?_Write_b_eep,c
 10204  00573C  6A17               	clrf	?_Write_b_eep+1,c
 10205  00573E  0E00               	movlw	0
 10206  005740  2217               	addwfc	?_Write_b_eep+1,f,c
 10207  005742  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10208  005744  0E00               	movlw	0
 10209  005746  6E18               	movwf	?_Write_b_eep+2,c
 10210  005748  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10211  00574A  EC65  F035         	call	_Write_b_eep	;wreg free
 10212  00574E  2A1D               	incf	init_app_eeprom@i,f,c
 10213  005750                     L82:
 10214  005750  0E13               	movlw	19
 10215  005752  641D               	cpfsgt	init_app_eeprom@i,c
 10216  005754  D7EE               	goto	l9165
 10217                           
 10218                           ;main.c: 559: }
 10219                           ;main.c: 564: for ( i = 0; i < 8; i++ ) {
 10220  005756  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10221  005758  0E00               	movlw	0
 10222  00575A  6E1D               	movwf	init_app_eeprom@i,c
 10223  00575C  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10224  00575E  D01E               	goto	L83
 10225  005760                     l9177:
 10226                           
 10227                           ;main.c: 565: for ( j = 0; j < 8; j++ ) {
 10228  005760  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10229  005762  0E00               	movlw	0
 10230  005764  6E1C               	movwf	init_app_eeprom@j,c
 10231  005766  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10232  005768  D015               	goto	L84
 10233  00576A                     l9183:
 10234                           
 10235                           ;main.c: 566: (Busy_eep(), Write_b_eep(0x43 + 46 + 40 + 0 + i * 8 + j,0));
 10236  00576A  EC35  F037         	call	_Busy_eep	;wreg free
 10237  00576E  501D               	movf	init_app_eeprom@i,w,c
 10238  005770  0D08               	mullw	8
 10239  005772  501C               	movf	init_app_eeprom@j,w,c
 10240  005774  26F3               	addwf	prodl,f,c
 10241  005776  0E00               	movlw	0
 10242  005778  22F4               	addwfc	prodh,f,c
 10243  00577A  0E99               	movlw	153
 10244  00577C  24F3               	addwf	prodl,w,c
 10245  00577E  6E16               	movwf	?_Write_b_eep,c
 10246  005780  0E00               	movlw	0
 10247  005782  20F4               	addwfc	prodh,w,c
 10248  005784  6E17               	movwf	?_Write_b_eep+1,c
 10249  005786  6E1B               	movwf	??_init_app_eeprom& (0+255),c
 10250  005788  0E00               	movlw	0
 10251  00578A  6E18               	movwf	?_Write_b_eep+2,c
 10252  00578C  501B               	movf	??_init_app_eeprom& (0+255),w,c
 10253  00578E  EC65  F035         	call	_Write_b_eep	;wreg free
 10254  005792  2A1C               	incf	init_app_eeprom@j,f,c
 10255  005794                     L84:
 10256  005794  0E07               	movlw	7
 10257  005796  641C               	cpfsgt	init_app_eeprom@j,c
 10258  005798  D7E8               	goto	l9183
 10259  00579A  2A1D               	incf	init_app_eeprom@i,f,c
 10260  00579C                     L83:
 10261  00579C  0E07               	movlw	7
 10262  00579E  641D               	cpfsgt	init_app_eeprom@i,c
 10263  0057A0  D7DF               	goto	l9177
 10264  0057A2  0012               	return	
 10265  0057A4                     __end_of_init_app_eeprom:
 10266                           	opt stack 0
 10267                           tblptru	equ	0xFF8
 10268                           prodh	equ	0xFF4
 10269                           prodl	equ	0xFF3
 10270                           postinc0	equ	0xFEE
 10271                           wreg	equ	0xFE8
 10272                           indf2	equ	0xFDF
 10273                           postinc2	equ	0xFDE
 10274                           postdec2	equ	0xFDD
 10275                           fsr2h	equ	0xFDA
 10276                           fsr2l	equ	0xFD9
 10277                           status	equ	0xFD8
 10278                           
 10279 ;; *************** function _vscp_setUserID *****************
 10280 ;; Defined at:
 10281 ;;		line 2853 in file "../main.c"
 10282 ;; Parameters:    Size  Location     Type
 10283 ;;  idx             1   26[COMRAM] unsigned char 
 10284 ;;  data            1   27[COMRAM] unsigned char 
 10285 ;; Auto vars:     Size  Location     Type
 10286 ;;		None
 10287 ;; Return value:  Size  Location     Type
 10288 ;;		None               void
 10289 ;; Registers used:
 10290 ;;		wreg, status,2, status,0, cstack
 10291 ;; Tracked objects:
 10292 ;;		On entry : 0/0
 10293 ;;		On exit  : 0/0
 10294 ;;		Unchanged: 0/0
 10295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10296 ;;      Params:         2       0       0       0       0       0       0
 10297 ;;      Locals:         0       0       0       0       0       0       0
 10298 ;;      Temps:          0       0       0       0       0       0       0
 10299 ;;      Totals:         2       0       0       0       0       0       0
 10300 ;;Total ram usage:        2 bytes
 10301 ;; Hardware stack levels used:    1
 10302 ;; Hardware stack levels required when called:    3
 10303 ;; This function calls:
 10304 ;;		_Busy_eep
 10305 ;;		_Write_b_eep
 10306 ;; This function is called by:
 10307 ;;		_vscp_writeStdReg
 10308 ;; This function uses a non-reentrant model
 10309 ;;
 10310                           
 10311                           	psect	text20
 10312  006CEE                     __ptext20:
 10313                           	opt stack 0
 10314  006CEE                     _vscp_setUserID:
 10315                           	opt stack 24
 10316                           
 10317                           ;main.c: 2854: (Busy_eep(), Write_b_eep(idx + 0x06,data));
 10318                           
 10319                           ;incstack = 0
 10320                           ;incstack = 0
 10321  006CEE  EC35  F037         	call	_Busy_eep	;wreg free
 10322  006CF2  0E06               	movlw	6
 10323  006CF4  241B               	addwf	vscp_setUserID@idx,w,c
 10324  006CF6  6E16               	movwf	?_Write_b_eep,c
 10325  006CF8  6A17               	clrf	?_Write_b_eep+1,c
 10326  006CFA  0E00               	movlw	0
 10327  006CFC  2217               	addwfc	?_Write_b_eep+1,f,c
 10328  006CFE  C01C  F018         	movff	vscp_setUserID@data,?_Write_b_eep+2
 10329  006D02  EC65  F035         	call	_Write_b_eep	;wreg free
 10330  006D06  0012               	return	
 10331  006D08                     __end_of_vscp_setUserID:
 10332                           	opt stack 0
 10333                           tblptru	equ	0xFF8
 10334                           prodh	equ	0xFF4
 10335                           prodl	equ	0xFF3
 10336                           postinc0	equ	0xFEE
 10337                           wreg	equ	0xFE8
 10338                           indf2	equ	0xFDF
 10339                           postinc2	equ	0xFDE
 10340                           postdec2	equ	0xFDD
 10341                           fsr2h	equ	0xFDA
 10342                           fsr2l	equ	0xFD9
 10343                           status	equ	0xFD8
 10344                           
 10345 ;; *************** function _vscp_setManufacturerId *****************
 10346 ;; Defined at:
 10347 ;;		line 930 in file "../main.c"
 10348 ;; Parameters:    Size  Location     Type
 10349 ;;  idx             1   26[COMRAM] unsigned char 
 10350 ;;  data            1   27[COMRAM] unsigned char 
 10351 ;; Auto vars:     Size  Location     Type
 10352 ;;		None
 10353 ;; Return value:  Size  Location     Type
 10354 ;;		None               void
 10355 ;; Registers used:
 10356 ;;		wreg, status,2, status,0, cstack
 10357 ;; Tracked objects:
 10358 ;;		On entry : 0/0
 10359 ;;		On exit  : 0/0
 10360 ;;		Unchanged: 0/0
 10361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10362 ;;      Params:         2       0       0       0       0       0       0
 10363 ;;      Locals:         0       0       0       0       0       0       0
 10364 ;;      Temps:          0       0       0       0       0       0       0
 10365 ;;      Totals:         2       0       0       0       0       0       0
 10366 ;;Total ram usage:        2 bytes
 10367 ;; Hardware stack levels used:    1
 10368 ;; Hardware stack levels required when called:    3
 10369 ;; This function calls:
 10370 ;;		_Busy_eep
 10371 ;;		_Write_b_eep
 10372 ;; This function is called by:
 10373 ;;		_vscp_writeStdReg
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377                           	psect	text21
 10378  006C6A                     __ptext21:
 10379                           	opt stack 0
 10380  006C6A                     _vscp_setManufacturerId:
 10381                           	opt stack 24
 10382                           
 10383                           ;main.c: 931: if ( idx>7 ) return;
 10384                           
 10385                           ;incstack = 0
 10386                           ;incstack = 0
 10387  006C6A  0E07               	movlw	7
 10388  006C6C  641B               	cpfsgt	vscp_setManufacturerId@idx,c
 10389  006C6E  D001               	goto	l10151
 10390  006C70  D00C               	goto	l542
 10391  006C72                     l10151:
 10392                           
 10393                           ;main.c: 932: (Busy_eep(), Write_b_eep(0x0B + idx,data));
 10394  006C72  EC35  F037         	call	_Busy_eep	;wreg free
 10395  006C76  0E0B               	movlw	11
 10396  006C78  241B               	addwf	vscp_setManufacturerId@idx,w,c
 10397  006C7A  6E16               	movwf	?_Write_b_eep,c
 10398  006C7C  6A17               	clrf	?_Write_b_eep+1,c
 10399  006C7E  0E00               	movlw	0
 10400  006C80  2217               	addwfc	?_Write_b_eep+1,f,c
 10401  006C82  C01C  F018         	movff	vscp_setManufacturerId@data,?_Write_b_eep+2
 10402  006C86  EC65  F035         	call	_Write_b_eep	;wreg free
 10403  006C8A                     l542:
 10404  006C8A  0012               	return	
 10405  006C8C                     __end_of_vscp_setManufacturerId:
 10406                           	opt stack 0
 10407                           tblptru	equ	0xFF8
 10408                           prodh	equ	0xFF4
 10409                           prodl	equ	0xFF3
 10410                           postinc0	equ	0xFEE
 10411                           wreg	equ	0xFE8
 10412                           indf2	equ	0xFDF
 10413                           postinc2	equ	0xFDE
 10414                           postdec2	equ	0xFDD
 10415                           fsr2h	equ	0xFDA
 10416                           fsr2l	equ	0xFD9
 10417                           status	equ	0xFD8
 10418                           
 10419 ;; *************** function _vscp_setGUID *****************
 10420 ;; Defined at:
 10421 ;;		line 918 in file "../main.c"
 10422 ;; Parameters:    Size  Location     Type
 10423 ;;  idx             1   26[COMRAM] unsigned char 
 10424 ;;  data            1   27[COMRAM] unsigned char 
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;		None
 10427 ;; Return value:  Size  Location     Type
 10428 ;;		None               void
 10429 ;; Registers used:
 10430 ;;		wreg, status,2, status,0, cstack
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10436 ;;      Params:         2       0       0       0       0       0       0
 10437 ;;      Locals:         0       0       0       0       0       0       0
 10438 ;;      Temps:          0       0       0       0       0       0       0
 10439 ;;      Totals:         2       0       0       0       0       0       0
 10440 ;;Total ram usage:        2 bytes
 10441 ;; Hardware stack levels used:    1
 10442 ;; Hardware stack levels required when called:    3
 10443 ;; This function calls:
 10444 ;;		_Busy_eep
 10445 ;;		_Write_b_eep
 10446 ;; This function is called by:
 10447 ;;		_vscp_writeStdReg
 10448 ;; This function uses a non-reentrant model
 10449 ;;
 10450                           
 10451                           	psect	text22
 10452  006C8C                     __ptext22:
 10453                           	opt stack 0
 10454  006C8C                     _vscp_setGUID:
 10455                           	opt stack 24
 10456                           
 10457                           ;main.c: 919: if ( idx>15 ) return;
 10458                           
 10459                           ;incstack = 0
 10460                           ;incstack = 0
 10461  006C8C  0E0F               	movlw	15
 10462  006C8E  641B               	cpfsgt	vscp_setGUID@idx,c
 10463  006C90  D001               	goto	l10143
 10464  006C92  D00C               	goto	l538
 10465  006C94                     l10143:
 10466                           
 10467                           ;main.c: 920: (Busy_eep(), Write_b_eep(0x13 + idx,data));
 10468  006C94  EC35  F037         	call	_Busy_eep	;wreg free
 10469  006C98  0E13               	movlw	19
 10470  006C9A  241B               	addwf	vscp_setGUID@idx,w,c
 10471  006C9C  6E16               	movwf	?_Write_b_eep,c
 10472  006C9E  6A17               	clrf	?_Write_b_eep+1,c
 10473  006CA0  0E00               	movlw	0
 10474  006CA2  2217               	addwfc	?_Write_b_eep+1,f,c
 10475  006CA4  C01C  F018         	movff	vscp_setGUID@data,?_Write_b_eep+2
 10476  006CA8  EC65  F035         	call	_Write_b_eep	;wreg free
 10477  006CAC                     l538:
 10478  006CAC  0012               	return	
 10479  006CAE                     __end_of_vscp_setGUID:
 10480                           	opt stack 0
 10481                           tblptru	equ	0xFF8
 10482                           prodh	equ	0xFF4
 10483                           prodl	equ	0xFF3
 10484                           postinc0	equ	0xFEE
 10485                           wreg	equ	0xFE8
 10486                           indf2	equ	0xFDF
 10487                           postinc2	equ	0xFDE
 10488                           postdec2	equ	0xFDD
 10489                           fsr2h	equ	0xFDA
 10490                           fsr2l	equ	0xFD9
 10491                           status	equ	0xFD8
 10492                           
 10493 ;; *************** function _vscp_writeAppReg *****************
 10494 ;; Defined at:
 10495 ;;		line 1116 in file "../main.c"
 10496 ;; Parameters:    Size  Location     Type
 10497 ;;  reg             1   66[BANK0 ] unsigned char 
 10498 ;;  val             1   67[BANK0 ] unsigned char 
 10499 ;; Auto vars:     Size  Location     Type
 10500 ;;  val             1   72[BANK0 ] unsigned char 
 10501 ;;  rv              1   75[BANK0 ] unsigned char 
 10502 ;;  bOn             1   74[BANK0 ] enum E15660
 10503 ;;  bInfoEvent      1   73[BANK0 ] enum E15660
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  1    wreg      unsigned char 
 10506 ;; Registers used:
 10507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10513 ;;      Params:         0       2       0       0       0       0       0
 10514 ;;      Locals:         0       4       0       0       0       0       0
 10515 ;;      Temps:          0       4       0       0       0       0       0
 10516 ;;      Totals:         0      10       0       0       0       0       0
 10517 ;;Total ram usage:       10 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; Hardware stack levels required when called:    7
 10520 ;; This function calls:
 10521 ;;		_Busy_eep
 10522 ;;		_Write_b_eep
 10523 ;;		_Read_b_eep
 10524 ;;		_SendInformationEvent
 10525 ;;		_calculateSetFilterMask
 10526 ;; This function is called by:
 10527 ;;		_vscp_writeRegister
 10528 ;;		_vscp_handleProtocolEvent
 10529 ;; This function uses a non-reentrant model
 10530 ;;
 10531                           
 10532                           	psect	text23
 10533  000622                     __ptext23:
 10534                           	opt stack 0
 10535  000622                     _vscp_writeAppReg:
 10536                           	opt stack 20
 10537                           
 10538                           ;main.c: 1117: uint8_t rv;
 10539                           ;main.c: 1118: BOOL bInfoEvent = 0;
 10540                           
 10541                           ;incstack = 0
 10542                           ;incstack = 0
 10543  000622  0100               	movlb	0	; () banked
 10544  000624  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10545  000626  0E00               	movlw	0
 10546  000628  0100               	movlb	0	; () banked
 10547  00062A  0100               	movlb	0	; () banked
 10548  00062C  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 10549  00062E  0100               	movlb	0	; () banked
 10550  000630  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 10551                           
 10552                           ;main.c: 1119: BOOL bOn = 0;
 10553  000632  0100               	movlb	0	; () banked
 10554  000634  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10555  000636  0E00               	movlw	0
 10556  000638  0100               	movlb	0	; () banked
 10557  00063A  0100               	movlb	0	; () banked
 10558  00063C  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 10559  00063E  0100               	movlb	0	; () banked
 10560  000640  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 10561                           
 10562                           ; BSR set to: 0
 10563                           ;main.c: 1121: rv = ~val;
 10564  000642  0100               	movlb	0	; () banked
 10565  000644  0100               	movlb	0	; () banked
 10566  000646  51A3               	movf	vscp_writeAppReg@val& (0+255),w,b
 10567  000648  0AFF               	xorlw	255
 10568  00064A  0100               	movlb	0	; () banked
 10569  00064C  0100               	movlb	0	; () banked
 10570  00064E  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 10571                           
 10572                           ; BSR set to: 0
 10573                           ;main.c: 1124: if ( 0 == vscp_page_select ) {
 10574  000650  5037               	movf	_vscp_page_select+1,w,c
 10575  000652  1036               	iorwf	_vscp_page_select,w,c
 10576  000654  A4D8               	btfss	status,2,c
 10577  000656  EFE8  F00A         	goto	l10705
 10578                           
 10579                           ; BSR set to: 0
 10580                           ;main.c: 1127: if ( reg == 0 ) {
 10581  00065A  0100               	movlb	0	; () banked
 10582  00065C  0100               	movlb	0	; () banked
 10583  00065E  67A2               	tstfsz	vscp_writeAppReg@reg& (0+255),b
 10584  000660  D012               	goto	l10255
 10585                           
 10586                           ; BSR set to: 0
 10587                           ;main.c: 1128: (Busy_eep(), Write_b_eep(0x43 + 0,val));
 10588  000662  EC35  F037         	call	_Busy_eep	;wreg free
 10589  000666  0E00               	movlw	0
 10590  000668  6E17               	movwf	?_Write_b_eep+1,c
 10591  00066A  0E43               	movlw	67
 10592  00066C  6E16               	movwf	?_Write_b_eep,c
 10593  00066E  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 10594  000672  EC65  F035         	call	_Write_b_eep	;wreg free
 10595                           
 10596                           ;main.c: 1129: rv = Read_b_eep(0x43 + 0);
 10597  000676  0E00               	movlw	0
 10598  000678  6E17               	movwf	?_Read_b_eep+1,c
 10599  00067A  0E43               	movlw	67
 10600  00067C  6E16               	movwf	?_Read_b_eep,c
 10601  00067E  ECFD  F036         	call	_Read_b_eep	;wreg free
 10602  000682  EF57  F00E         	goto	L108
 10603  000686                     l10255:
 10604                           
 10605                           ; BSR set to: 0
 10606                           ;main.c: 1131: else if ( reg == 1 ) {
 10607  000686  0100               	movlb	0	; () banked
 10608  000688  0100               	movlb	0	; () banked
 10609  00068A  05A2               	decf	vscp_writeAppReg@reg& (0+255),w,b
 10610  00068C  A4D8               	btfss	status,2,c
 10611  00068E  D012               	goto	l10263
 10612                           
 10613                           ; BSR set to: 0
 10614                           ;main.c: 1133: (Busy_eep(), Write_b_eep(0x43 + 1,val));
 10615  000690  EC35  F037         	call	_Busy_eep	;wreg free
 10616  000694  0E00               	movlw	0
 10617  000696  6E17               	movwf	?_Write_b_eep+1,c
 10618  000698  0E44               	movlw	68
 10619  00069A  6E16               	movwf	?_Write_b_eep,c
 10620  00069C  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 10621  0006A0  EC65  F035         	call	_Write_b_eep	;wreg free
 10622                           
 10623                           ;main.c: 1134: rv = Read_b_eep(0x43 + 1);
 10624  0006A4  0E00               	movlw	0
 10625  0006A6  6E17               	movwf	?_Read_b_eep+1,c
 10626  0006A8  0E44               	movlw	68
 10627  0006AA  6E16               	movwf	?_Read_b_eep,c
 10628  0006AC  ECFD  F036         	call	_Read_b_eep	;wreg free
 10629  0006B0  EF57  F00E         	goto	L108
 10630  0006B4                     l10263:
 10631                           
 10632                           ; BSR set to: 0
 10633                           ;main.c: 1137: else if ( ( reg >= 2 ) &&
 10634                           ;main.c: 1138: ( reg <= 11 ) ) {
 10635  0006B4  0E01               	movlw	1
 10636  0006B6  0100               	movlb	0	; () banked
 10637  0006B8  0100               	movlb	0	; () banked
 10638  0006BA  65A2               	cpfsgt	vscp_writeAppReg@reg& (0+255),b
 10639  0006BC  D01F               	goto	l10273
 10640                           
 10641                           ; BSR set to: 0
 10642  0006BE  0E0C               	movlw	12
 10643  0006C0  0100               	movlb	0	; () banked
 10644  0006C2  0100               	movlb	0	; () banked
 10645  0006C4  61A2               	cpfslt	vscp_writeAppReg@reg& (0+255),b
 10646  0006C6  D01A               	goto	l10273
 10647                           
 10648                           ; BSR set to: 0
 10649                           ;main.c: 1139: (Busy_eep(), Write_b_eep(0x43 + 2 + ( reg - 2 ),val));
 10650  0006C8  EC35  F037         	call	_Busy_eep	;wreg free
 10651  0006CC  0E43               	movlw	67
 10652  0006CE  0100               	movlb	0	; () banked
 10653  0006D0  0100               	movlb	0	; () banked
 10654  0006D2  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 10655  0006D4  6E16               	movwf	?_Write_b_eep,c
 10656  0006D6  6A17               	clrf	?_Write_b_eep+1,c
 10657  0006D8  0E00               	movlw	0
 10658  0006DA  2217               	addwfc	?_Write_b_eep+1,f,c
 10659  0006DC  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 10660  0006E0  EC65  F035         	call	_Write_b_eep	;wreg free
 10661                           
 10662                           ;main.c: 1142: rv = Read_b_eep(0x43 + 2 + ( reg - 2 ));
 10663  0006E4  0E43               	movlw	67
 10664  0006E6  0100               	movlb	0	; () banked
 10665  0006E8  0100               	movlb	0	; () banked
 10666  0006EA  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 10667  0006EC  6E16               	movwf	?_Read_b_eep,c
 10668  0006EE  6A17               	clrf	?_Read_b_eep+1,c
 10669  0006F0  0E00               	movlw	0
 10670  0006F2  2217               	addwfc	?_Read_b_eep+1,f,c
 10671  0006F4  ECFD  F036         	call	_Read_b_eep	;wreg free
 10672  0006F8  EF57  F00E         	goto	L108
 10673  0006FC                     l10273:
 10674                           
 10675                           ; BSR set to: 0
 10676                           ;main.c: 1147: else if ( (reg >= 14) && (reg <= 23) ) {
 10677  0006FC  0E0D               	movlw	13
 10678  0006FE  0100               	movlb	0	; () banked
 10679  000700  0100               	movlb	0	; () banked
 10680  000702  65A2               	cpfsgt	vscp_writeAppReg@reg& (0+255),b
 10681  000704  D345               	goto	l10485
 10682                           
 10683                           ; BSR set to: 0
 10684  000706  0E18               	movlw	24
 10685  000708  0100               	movlb	0	; () banked
 10686  00070A  0100               	movlb	0	; () banked
 10687  00070C  61A2               	cpfslt	vscp_writeAppReg@reg& (0+255),b
 10688  00070E  D340               	goto	l10485
 10689                           
 10690                           ; BSR set to: 0
 10691                           ;main.c: 1150: if ( Read_b_eep(0x43 + 24 + ( reg - 14 )) &
 10692                           ;main.c: 1153: 0x80 ) {
 10693  000710  0E4D               	movlw	77
 10694  000712  0100               	movlb	0	; () banked
 10695  000714  0100               	movlb	0	; () banked
 10696  000716  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 10697  000718  6E16               	movwf	?_Read_b_eep,c
 10698  00071A  6A17               	clrf	?_Read_b_eep+1,c
 10699  00071C  0E00               	movlw	0
 10700  00071E  2217               	addwfc	?_Read_b_eep+1,f,c
 10701  000720  ECFD  F036         	call	_Read_b_eep	;wreg free
 10702  000724  0100               	movlb	0	; () banked
 10703  000726  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10704  000728  0100               	movlb	0	; () banked
 10705  00072A  BFA4               	btfsc	??_vscp_writeAppReg& (0+255),7,b
 10706  00072C  D30E               	goto	l10483
 10707  00072E  EF5A  F00E         	goto	l10785
 10708  000732                     l10281:
 10709                           
 10710                           ; BSR set to: 0
 10711                           ;main.c: 1160: bInfoEvent = 1;
 10712  000732  0100               	movlb	0	; () banked
 10713  000734  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10714  000736  0E01               	movlw	1
 10715  000738  0100               	movlb	0	; () banked
 10716  00073A  0100               	movlb	0	; () banked
 10717  00073C  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 10718  00073E  0100               	movlb	0	; () banked
 10719  000740  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 10720                           
 10721                           ; BSR set to: 0
 10722                           ;main.c: 1162: if ( 1 == val ) {
 10723  000742  0100               	movlb	0	; () banked
 10724  000744  0100               	movlb	0	; () banked
 10725  000746  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 10726  000748  A4D8               	btfss	status,2,c
 10727  00074A  D02B               	goto	l609
 10728                           
 10729                           ; BSR set to: 0
 10730                           ;main.c: 1164: LATBbits.LATB0 = 1;
 10731  00074C  808A               	bsf	3978,0,c	;volatile
 10732                           
 10733                           ; BSR set to: 0
 10734                           ;main.c: 1165: rv = LATBbits.LATB0;
 10735  00074E  0E00               	movlw	0
 10736  000750  B08A               	btfsc	3978,0,c	;volatile
 10737  000752  0E01               	movlw	1
 10738  000754  0100               	movlb	0	; () banked
 10739  000756  0100               	movlb	0	; () banked
 10740  000758  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 10741                           
 10742                           ; BSR set to: 0
 10743                           ;main.c: 1166: bOn = 1;
 10744  00075A  0100               	movlb	0	; () banked
 10745  00075C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10746  00075E  0E01               	movlw	1
 10747  000760  0100               	movlb	0	; () banked
 10748  000762  0100               	movlb	0	; () banked
 10749  000764  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 10750  000766  0100               	movlb	0	; () banked
 10751  000768  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 10752                           
 10753                           ; BSR set to: 0
 10754                           ;main.c: 1169: if ( Read_b_eep(0x43 + 24) & 0x04 ) {
 10755  00076A  0E00               	movlw	0
 10756  00076C  6E17               	movwf	?_Read_b_eep+1,c
 10757  00076E  0E5B               	movlw	91
 10758  000770  6E16               	movwf	?_Read_b_eep,c
 10759  000772  ECFD  F036         	call	_Read_b_eep	;wreg free
 10760  000776  0100               	movlb	0	; () banked
 10761  000778  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10762  00077A  0100               	movlb	0	; () banked
 10763  00077C  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 10764  00077E  EF5A  F00E         	goto	l10785
 10765                           
 10766                           ; BSR set to: 0
 10767                           ;main.c: 1170: channel_protection_timer[ 0 ] =
 10768                           ;main.c: 1171: Read_b_eep(0x43 + 46 + 20) * 256 +
 10769                           ;main.c: 1173: Read_b_eep(0x43 + 46 + 21);
 10770  000782  0E00               	movlw	0
 10771  000784  6E17               	movwf	?_Read_b_eep+1,c
 10772  000786  0E86               	movlw	134
 10773  000788  6E16               	movwf	?_Read_b_eep,c
 10774  00078A  ECFD  F036         	call	_Read_b_eep	;wreg free
 10775  00078E  0100               	movlb	0	; () banked
 10776  000790  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10777  000792  0E00               	movlw	0
 10778  000794  6E17               	movwf	?_Read_b_eep+1,c
 10779  000796  0E85               	movlw	133
 10780  000798  6E16               	movwf	?_Read_b_eep,c
 10781  00079A  ECFD  F036         	call	_Read_b_eep	;wreg free
 10782  00079E  EFC1  F00C         	goto	L98
 10783  0007A2                     l609:
 10784                           
 10785                           ; BSR set to: 0
 10786                           ;main.c: 1178: else if (0 == val) {
 10787  0007A2  0100               	movlb	0	; () banked
 10788  0007A4  0100               	movlb	0	; () banked
 10789  0007A6  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 10790  0007A8  EF5A  F00E         	goto	l10785
 10791                           
 10792                           ; BSR set to: 0
 10793                           ;main.c: 1179: LATBbits.LATB0 = 0;
 10794  0007AC  908A               	bcf	3978,0,c	;volatile
 10795                           
 10796                           ; BSR set to: 0
 10797                           ;main.c: 1180: rv = LATBbits.LATB0;
 10798  0007AE  0E00               	movlw	0
 10799  0007B0  B08A               	btfsc	3978,0,c	;volatile
 10800  0007B2  0E01               	movlw	1
 10801  0007B4  0100               	movlb	0	; () banked
 10802  0007B6  0100               	movlb	0	; () banked
 10803  0007B8  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 10804                           
 10805                           ; BSR set to: 0
 10806                           ;main.c: 1181: bOn = 0;
 10807  0007BA  0100               	movlb	0	; () banked
 10808  0007BC  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10809  0007BE  0E00               	movlw	0
 10810  0007C0  0100               	movlb	0	; () banked
 10811  0007C2  0100               	movlb	0	; () banked
 10812  0007C4  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 10813  0007C6  0100               	movlb	0	; () banked
 10814  0007C8  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 10815  0007CA  EF5A  F00E         	goto	l10785
 10816  0007CE                     l10301:
 10817                           
 10818                           ; BSR set to: 0
 10819                           ;main.c: 1188: bInfoEvent = 1;
 10820  0007CE  0100               	movlb	0	; () banked
 10821  0007D0  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10822  0007D2  0E01               	movlw	1
 10823  0007D4  0100               	movlb	0	; () banked
 10824  0007D6  0100               	movlb	0	; () banked
 10825  0007D8  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 10826  0007DA  0100               	movlb	0	; () banked
 10827  0007DC  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 10828                           
 10829                           ; BSR set to: 0
 10830                           ;main.c: 1190: if (1 == val) {
 10831  0007DE  0100               	movlb	0	; () banked
 10832  0007E0  0100               	movlb	0	; () banked
 10833  0007E2  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 10834  0007E4  A4D8               	btfss	status,2,c
 10835  0007E6  D02B               	goto	l615
 10836                           
 10837                           ; BSR set to: 0
 10838                           ;main.c: 1192: LATBbits.LATB1 = 1;
 10839  0007E8  828A               	bsf	3978,1,c	;volatile
 10840                           
 10841                           ; BSR set to: 0
 10842                           ;main.c: 1193: rv = LATBbits.LATB1;
 10843  0007EA  0E00               	movlw	0
 10844  0007EC  B28A               	btfsc	3978,1,c	;volatile
 10845  0007EE  0E01               	movlw	1
 10846  0007F0  0100               	movlb	0	; () banked
 10847  0007F2  0100               	movlb	0	; () banked
 10848  0007F4  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 10849                           
 10850                           ; BSR set to: 0
 10851                           ;main.c: 1194: bOn = 1;
 10852  0007F6  0100               	movlb	0	; () banked
 10853  0007F8  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10854  0007FA  0E01               	movlw	1
 10855  0007FC  0100               	movlb	0	; () banked
 10856  0007FE  0100               	movlb	0	; () banked
 10857  000800  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 10858  000802  0100               	movlb	0	; () banked
 10859  000804  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 10860                           
 10861                           ; BSR set to: 0
 10862                           ;main.c: 1196: if (Read_b_eep(0x43 + 25) & 0x04) {
 10863  000806  0E00               	movlw	0
 10864  000808  6E17               	movwf	?_Read_b_eep+1,c
 10865  00080A  0E5C               	movlw	92
 10866  00080C  6E16               	movwf	?_Read_b_eep,c
 10867  00080E  ECFD  F036         	call	_Read_b_eep	;wreg free
 10868  000812  0100               	movlb	0	; () banked
 10869  000814  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10870  000816  0100               	movlb	0	; () banked
 10871  000818  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 10872  00081A  EF5A  F00E         	goto	l10785
 10873                           
 10874                           ; BSR set to: 0
 10875                           ;main.c: 1197: channel_protection_timer[ 1 ] =
 10876                           ;main.c: 1198: Read_b_eep(0x43 + 46 + 22) * 256 +
 10877                           ;main.c: 1200: Read_b_eep(0x43 + 46 + 23);
 10878  00081E  0E00               	movlw	0
 10879  000820  6E17               	movwf	?_Read_b_eep+1,c
 10880  000822  0E88               	movlw	136
 10881  000824  6E16               	movwf	?_Read_b_eep,c
 10882  000826  ECFD  F036         	call	_Read_b_eep	;wreg free
 10883  00082A  0100               	movlb	0	; () banked
 10884  00082C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10885  00082E  0E00               	movlw	0
 10886  000830  6E17               	movwf	?_Read_b_eep+1,c
 10887  000832  0E87               	movlw	135
 10888  000834  6E16               	movwf	?_Read_b_eep,c
 10889  000836  ECFD  F036         	call	_Read_b_eep	;wreg free
 10890  00083A  EFE4  F00C         	goto	L99
 10891  00083E                     l615:
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;main.c: 1205: else if (0 == val) {
 10895  00083E  0100               	movlb	0	; () banked
 10896  000840  0100               	movlb	0	; () banked
 10897  000842  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 10898  000844  EF5A  F00E         	goto	l10785
 10899                           
 10900                           ; BSR set to: 0
 10901                           ;main.c: 1206: LATBbits.LATB1 = 0;
 10902  000848  928A               	bcf	3978,1,c	;volatile
 10903                           
 10904                           ; BSR set to: 0
 10905                           ;main.c: 1207: rv = LATBbits.LATB1;
 10906  00084A  0E00               	movlw	0
 10907  00084C  B28A               	btfsc	3978,1,c	;volatile
 10908  00084E  0E01               	movlw	1
 10909  000850  0100               	movlb	0	; () banked
 10910  000852  0100               	movlb	0	; () banked
 10911  000854  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 10912                           
 10913                           ; BSR set to: 0
 10914                           ;main.c: 1208: bOn = 0;
 10915  000856  0100               	movlb	0	; () banked
 10916  000858  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10917  00085A  0E00               	movlw	0
 10918  00085C  0100               	movlb	0	; () banked
 10919  00085E  0100               	movlb	0	; () banked
 10920  000860  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 10921  000862  0100               	movlb	0	; () banked
 10922  000864  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 10923  000866  EF5A  F00E         	goto	l10785
 10924  00086A                     l10321:
 10925                           
 10926                           ; BSR set to: 0
 10927                           ;main.c: 1215: bInfoEvent = 1;
 10928  00086A  0100               	movlb	0	; () banked
 10929  00086C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10930  00086E  0E01               	movlw	1
 10931  000870  0100               	movlb	0	; () banked
 10932  000872  0100               	movlb	0	; () banked
 10933  000874  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 10934  000876  0100               	movlb	0	; () banked
 10935  000878  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 10936                           
 10937                           ; BSR set to: 0
 10938                           ;main.c: 1217: if (1 == val) {
 10939  00087A  0100               	movlb	0	; () banked
 10940  00087C  0100               	movlb	0	; () banked
 10941  00087E  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 10942  000880  A4D8               	btfss	status,2,c
 10943  000882  D02B               	goto	l620
 10944                           
 10945                           ; BSR set to: 0
 10946                           ;main.c: 1219: LATCbits.LATC3 = 1;
 10947  000884  868B               	bsf	3979,3,c	;volatile
 10948                           
 10949                           ; BSR set to: 0
 10950                           ;main.c: 1220: rv = LATCbits.LATC3;
 10951  000886  0E00               	movlw	0
 10952  000888  B68B               	btfsc	3979,3,c	;volatile
 10953  00088A  0E01               	movlw	1
 10954  00088C  0100               	movlb	0	; () banked
 10955  00088E  0100               	movlb	0	; () banked
 10956  000890  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 10957                           
 10958                           ; BSR set to: 0
 10959                           ;main.c: 1221: bOn = 1;
 10960  000892  0100               	movlb	0	; () banked
 10961  000894  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10962  000896  0E01               	movlw	1
 10963  000898  0100               	movlb	0	; () banked
 10964  00089A  0100               	movlb	0	; () banked
 10965  00089C  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 10966  00089E  0100               	movlb	0	; () banked
 10967  0008A0  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 10968                           
 10969                           ; BSR set to: 0
 10970                           ;main.c: 1223: if ( Read_b_eep(0x43 + 26) & 0x04) {
 10971  0008A2  0E00               	movlw	0
 10972  0008A4  6E17               	movwf	?_Read_b_eep+1,c
 10973  0008A6  0E5D               	movlw	93
 10974  0008A8  6E16               	movwf	?_Read_b_eep,c
 10975  0008AA  ECFD  F036         	call	_Read_b_eep	;wreg free
 10976  0008AE  0100               	movlb	0	; () banked
 10977  0008B0  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10978  0008B2  0100               	movlb	0	; () banked
 10979  0008B4  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 10980  0008B6  EF5A  F00E         	goto	l10785
 10981                           
 10982                           ; BSR set to: 0
 10983                           ;main.c: 1224: channel_protection_timer[ 2 ] =
 10984                           ;main.c: 1225: Read_b_eep(0x43 + 46 + 24) * 256 +
 10985                           ;main.c: 1227: Read_b_eep(0x43 + 46 + 25);
 10986  0008BA  0E00               	movlw	0
 10987  0008BC  6E17               	movwf	?_Read_b_eep+1,c
 10988  0008BE  0E8A               	movlw	138
 10989  0008C0  6E16               	movwf	?_Read_b_eep,c
 10990  0008C2  ECFD  F036         	call	_Read_b_eep	;wreg free
 10991  0008C6  0100               	movlb	0	; () banked
 10992  0008C8  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 10993  0008CA  0E00               	movlw	0
 10994  0008CC  6E17               	movwf	?_Read_b_eep+1,c
 10995  0008CE  0E89               	movlw	137
 10996  0008D0  6E16               	movwf	?_Read_b_eep,c
 10997  0008D2  ECFD  F036         	call	_Read_b_eep	;wreg free
 10998  0008D6  EF07  F00D         	goto	L100
 10999  0008DA                     l620:
 11000                           
 11001                           ; BSR set to: 0
 11002                           ;main.c: 1232: else if (0 == val) {
 11003  0008DA  0100               	movlb	0	; () banked
 11004  0008DC  0100               	movlb	0	; () banked
 11005  0008DE  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 11006  0008E0  EF5A  F00E         	goto	l10785
 11007                           
 11008                           ; BSR set to: 0
 11009                           ;main.c: 1233: LATCbits.LATC3 = 0;
 11010  0008E4  968B               	bcf	3979,3,c	;volatile
 11011                           
 11012                           ; BSR set to: 0
 11013                           ;main.c: 1234: rv = LATCbits.LATC3;
 11014  0008E6  0E00               	movlw	0
 11015  0008E8  B68B               	btfsc	3979,3,c	;volatile
 11016  0008EA  0E01               	movlw	1
 11017  0008EC  0100               	movlb	0	; () banked
 11018  0008EE  0100               	movlb	0	; () banked
 11019  0008F0  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11020                           
 11021                           ; BSR set to: 0
 11022                           ;main.c: 1235: bOn = 0;
 11023  0008F2  0100               	movlb	0	; () banked
 11024  0008F4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11025  0008F6  0E00               	movlw	0
 11026  0008F8  0100               	movlb	0	; () banked
 11027  0008FA  0100               	movlb	0	; () banked
 11028  0008FC  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11029  0008FE  0100               	movlb	0	; () banked
 11030  000900  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11031  000902  EF5A  F00E         	goto	l10785
 11032  000906                     l10341:
 11033                           
 11034                           ; BSR set to: 0
 11035                           ;main.c: 1243: bInfoEvent = 1;
 11036  000906  0100               	movlb	0	; () banked
 11037  000908  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11038  00090A  0E01               	movlw	1
 11039  00090C  0100               	movlb	0	; () banked
 11040  00090E  0100               	movlb	0	; () banked
 11041  000910  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 11042  000912  0100               	movlb	0	; () banked
 11043  000914  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11044                           
 11045                           ; BSR set to: 0
 11046                           ;main.c: 1245: if (1 == val) {
 11047  000916  0100               	movlb	0	; () banked
 11048  000918  0100               	movlb	0	; () banked
 11049  00091A  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 11050  00091C  A4D8               	btfss	status,2,c
 11051  00091E  D02B               	goto	l625
 11052                           
 11053                           ; BSR set to: 0
 11054                           ;main.c: 1247: LATCbits.LATC4 = 1;
 11055  000920  888B               	bsf	3979,4,c	;volatile
 11056                           
 11057                           ; BSR set to: 0
 11058                           ;main.c: 1248: rv = LATCbits.LATC4;
 11059  000922  0E00               	movlw	0
 11060  000924  B88B               	btfsc	3979,4,c	;volatile
 11061  000926  0E01               	movlw	1
 11062  000928  0100               	movlb	0	; () banked
 11063  00092A  0100               	movlb	0	; () banked
 11064  00092C  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11065                           
 11066                           ; BSR set to: 0
 11067                           ;main.c: 1249: bOn = 1;
 11068  00092E  0100               	movlb	0	; () banked
 11069  000930  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11070  000932  0E01               	movlw	1
 11071  000934  0100               	movlb	0	; () banked
 11072  000936  0100               	movlb	0	; () banked
 11073  000938  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11074  00093A  0100               	movlb	0	; () banked
 11075  00093C  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11076                           
 11077                           ; BSR set to: 0
 11078                           ;main.c: 1251: if (Read_b_eep(0x43 + 27) & 0x04) {
 11079  00093E  0E00               	movlw	0
 11080  000940  6E17               	movwf	?_Read_b_eep+1,c
 11081  000942  0E5E               	movlw	94
 11082  000944  6E16               	movwf	?_Read_b_eep,c
 11083  000946  ECFD  F036         	call	_Read_b_eep	;wreg free
 11084  00094A  0100               	movlb	0	; () banked
 11085  00094C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11086  00094E  0100               	movlb	0	; () banked
 11087  000950  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 11088  000952  EF5A  F00E         	goto	l10785
 11089                           
 11090                           ; BSR set to: 0
 11091                           ;main.c: 1252: channel_protection_timer[ 3 ] =
 11092                           ;main.c: 1253: Read_b_eep(0x43 + 46 + 26) * 256 +
 11093                           ;main.c: 1255: Read_b_eep(0x43 + 46 + 27);
 11094  000956  0E00               	movlw	0
 11095  000958  6E17               	movwf	?_Read_b_eep+1,c
 11096  00095A  0E8C               	movlw	140
 11097  00095C  6E16               	movwf	?_Read_b_eep,c
 11098  00095E  ECFD  F036         	call	_Read_b_eep	;wreg free
 11099  000962  0100               	movlb	0	; () banked
 11100  000964  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11101  000966  0E00               	movlw	0
 11102  000968  6E17               	movwf	?_Read_b_eep+1,c
 11103  00096A  0E8B               	movlw	139
 11104  00096C  6E16               	movwf	?_Read_b_eep,c
 11105  00096E  ECFD  F036         	call	_Read_b_eep	;wreg free
 11106  000972  EF2A  F00D         	goto	L101
 11107  000976                     l625:
 11108                           
 11109                           ; BSR set to: 0
 11110                           ;main.c: 1260: else if (0 == val) {
 11111  000976  0100               	movlb	0	; () banked
 11112  000978  0100               	movlb	0	; () banked
 11113  00097A  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 11114  00097C  EF5A  F00E         	goto	l10785
 11115                           
 11116                           ; BSR set to: 0
 11117                           ;main.c: 1261: LATCbits.LATC4 = 0;
 11118  000980  988B               	bcf	3979,4,c	;volatile
 11119                           
 11120                           ; BSR set to: 0
 11121                           ;main.c: 1262: rv = LATCbits.LATC4;
 11122  000982  0E00               	movlw	0
 11123  000984  B88B               	btfsc	3979,4,c	;volatile
 11124  000986  0E01               	movlw	1
 11125  000988  0100               	movlb	0	; () banked
 11126  00098A  0100               	movlb	0	; () banked
 11127  00098C  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11128                           
 11129                           ; BSR set to: 0
 11130                           ;main.c: 1263: bOn = 0;
 11131  00098E  0100               	movlb	0	; () banked
 11132  000990  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11133  000992  0E00               	movlw	0
 11134  000994  0100               	movlb	0	; () banked
 11135  000996  0100               	movlb	0	; () banked
 11136  000998  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11137  00099A  0100               	movlb	0	; () banked
 11138  00099C  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11139  00099E  EF5A  F00E         	goto	l10785
 11140  0009A2                     l10361:
 11141                           
 11142                           ; BSR set to: 0
 11143                           ;main.c: 1271: bInfoEvent = 1;
 11144  0009A2  0100               	movlb	0	; () banked
 11145  0009A4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11146  0009A6  0E01               	movlw	1
 11147  0009A8  0100               	movlb	0	; () banked
 11148  0009AA  0100               	movlb	0	; () banked
 11149  0009AC  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 11150  0009AE  0100               	movlb	0	; () banked
 11151  0009B0  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11152                           
 11153                           ; BSR set to: 0
 11154                           ;main.c: 1273: if (1 == val) {
 11155  0009B2  0100               	movlb	0	; () banked
 11156  0009B4  0100               	movlb	0	; () banked
 11157  0009B6  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 11158  0009B8  A4D8               	btfss	status,2,c
 11159  0009BA  D02B               	goto	l630
 11160                           
 11161                           ; BSR set to: 0
 11162                           ;main.c: 1275: LATCbits.LATC5 = 1;
 11163  0009BC  8A8B               	bsf	3979,5,c	;volatile
 11164                           
 11165                           ; BSR set to: 0
 11166                           ;main.c: 1276: rv = LATCbits.LATC5;
 11167  0009BE  0E00               	movlw	0
 11168  0009C0  BA8B               	btfsc	3979,5,c	;volatile
 11169  0009C2  0E01               	movlw	1
 11170  0009C4  0100               	movlb	0	; () banked
 11171  0009C6  0100               	movlb	0	; () banked
 11172  0009C8  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11173                           
 11174                           ; BSR set to: 0
 11175                           ;main.c: 1277: bOn = 1;
 11176  0009CA  0100               	movlb	0	; () banked
 11177  0009CC  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11178  0009CE  0E01               	movlw	1
 11179  0009D0  0100               	movlb	0	; () banked
 11180  0009D2  0100               	movlb	0	; () banked
 11181  0009D4  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11182  0009D6  0100               	movlb	0	; () banked
 11183  0009D8  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11184                           
 11185                           ; BSR set to: 0
 11186                           ;main.c: 1279: if (Read_b_eep(0x43 + 28) & 0x04) {
 11187  0009DA  0E00               	movlw	0
 11188  0009DC  6E17               	movwf	?_Read_b_eep+1,c
 11189  0009DE  0E5F               	movlw	95
 11190  0009E0  6E16               	movwf	?_Read_b_eep,c
 11191  0009E2  ECFD  F036         	call	_Read_b_eep	;wreg free
 11192  0009E6  0100               	movlb	0	; () banked
 11193  0009E8  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11194  0009EA  0100               	movlb	0	; () banked
 11195  0009EC  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 11196  0009EE  EF5A  F00E         	goto	l10785
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;main.c: 1280: channel_protection_timer[ 4 ] =
 11200                           ;main.c: 1281: Read_b_eep(0x43 + 46 + 28) * 256 +
 11201                           ;main.c: 1283: Read_b_eep(0x43 + 46 + 29);
 11202  0009F2  0E00               	movlw	0
 11203  0009F4  6E17               	movwf	?_Read_b_eep+1,c
 11204  0009F6  0E8E               	movlw	142
 11205  0009F8  6E16               	movwf	?_Read_b_eep,c
 11206  0009FA  ECFD  F036         	call	_Read_b_eep	;wreg free
 11207  0009FE  0100               	movlb	0	; () banked
 11208  000A00  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11209  000A02  0E00               	movlw	0
 11210  000A04  6E17               	movwf	?_Read_b_eep+1,c
 11211  000A06  0E8D               	movlw	141
 11212  000A08  6E16               	movwf	?_Read_b_eep,c
 11213  000A0A  ECFD  F036         	call	_Read_b_eep	;wreg free
 11214  000A0E  EF4D  F00D         	goto	L102
 11215  000A12                     l630:
 11216                           
 11217                           ; BSR set to: 0
 11218                           ;main.c: 1288: else if (0 == val) {
 11219  000A12  0100               	movlb	0	; () banked
 11220  000A14  0100               	movlb	0	; () banked
 11221  000A16  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 11222  000A18  EF5A  F00E         	goto	l10785
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;main.c: 1289: LATCbits.LATC5 = 0;
 11226  000A1C  9A8B               	bcf	3979,5,c	;volatile
 11227                           
 11228                           ; BSR set to: 0
 11229                           ;main.c: 1290: rv = LATCbits.LATC5;
 11230  000A1E  0E00               	movlw	0
 11231  000A20  BA8B               	btfsc	3979,5,c	;volatile
 11232  000A22  0E01               	movlw	1
 11233  000A24  0100               	movlb	0	; () banked
 11234  000A26  0100               	movlb	0	; () banked
 11235  000A28  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11236                           
 11237                           ; BSR set to: 0
 11238                           ;main.c: 1291: bOn = 0;
 11239  000A2A  0100               	movlb	0	; () banked
 11240  000A2C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11241  000A2E  0E00               	movlw	0
 11242  000A30  0100               	movlb	0	; () banked
 11243  000A32  0100               	movlb	0	; () banked
 11244  000A34  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11245  000A36  0100               	movlb	0	; () banked
 11246  000A38  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11247  000A3A  EF5A  F00E         	goto	l10785
 11248  000A3E                     l10381:
 11249                           
 11250                           ; BSR set to: 0
 11251                           ;main.c: 1299: bInfoEvent = 1;
 11252  000A3E  0100               	movlb	0	; () banked
 11253  000A40  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11254  000A42  0E01               	movlw	1
 11255  000A44  0100               	movlb	0	; () banked
 11256  000A46  0100               	movlb	0	; () banked
 11257  000A48  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 11258  000A4A  0100               	movlb	0	; () banked
 11259  000A4C  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11260                           
 11261                           ; BSR set to: 0
 11262                           ;main.c: 1301: if (1 == val) {
 11263  000A4E  0100               	movlb	0	; () banked
 11264  000A50  0100               	movlb	0	; () banked
 11265  000A52  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 11266  000A54  A4D8               	btfss	status,2,c
 11267  000A56  D02B               	goto	l635
 11268                           
 11269                           ; BSR set to: 0
 11270                           ;main.c: 1303: LATCbits.LATC6 = 1;
 11271  000A58  8C8B               	bsf	3979,6,c	;volatile
 11272                           
 11273                           ; BSR set to: 0
 11274                           ;main.c: 1304: rv = LATCbits.LATC6;
 11275  000A5A  0E00               	movlw	0
 11276  000A5C  BC8B               	btfsc	3979,6,c	;volatile
 11277  000A5E  0E01               	movlw	1
 11278  000A60  0100               	movlb	0	; () banked
 11279  000A62  0100               	movlb	0	; () banked
 11280  000A64  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11281                           
 11282                           ; BSR set to: 0
 11283                           ;main.c: 1305: bOn = 1;
 11284  000A66  0100               	movlb	0	; () banked
 11285  000A68  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11286  000A6A  0E01               	movlw	1
 11287  000A6C  0100               	movlb	0	; () banked
 11288  000A6E  0100               	movlb	0	; () banked
 11289  000A70  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11290  000A72  0100               	movlb	0	; () banked
 11291  000A74  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11292                           
 11293                           ; BSR set to: 0
 11294                           ;main.c: 1307: if (Read_b_eep(0x43 + 29) & 0x04) {
 11295  000A76  0E00               	movlw	0
 11296  000A78  6E17               	movwf	?_Read_b_eep+1,c
 11297  000A7A  0E60               	movlw	96
 11298  000A7C  6E16               	movwf	?_Read_b_eep,c
 11299  000A7E  ECFD  F036         	call	_Read_b_eep	;wreg free
 11300  000A82  0100               	movlb	0	; () banked
 11301  000A84  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11302  000A86  0100               	movlb	0	; () banked
 11303  000A88  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 11304  000A8A  EF5A  F00E         	goto	l10785
 11305                           
 11306                           ; BSR set to: 0
 11307                           ;main.c: 1308: channel_protection_timer[ 5 ] =
 11308                           ;main.c: 1309: Read_b_eep(0x43 + 46 + 30) * 256 +
 11309                           ;main.c: 1311: Read_b_eep(0x43 + 46 + 31);
 11310  000A8E  0E00               	movlw	0
 11311  000A90  6E17               	movwf	?_Read_b_eep+1,c
 11312  000A92  0E90               	movlw	144
 11313  000A94  6E16               	movwf	?_Read_b_eep,c
 11314  000A96  ECFD  F036         	call	_Read_b_eep	;wreg free
 11315  000A9A  0100               	movlb	0	; () banked
 11316  000A9C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11317  000A9E  0E00               	movlw	0
 11318  000AA0  6E17               	movwf	?_Read_b_eep+1,c
 11319  000AA2  0E8F               	movlw	143
 11320  000AA4  6E16               	movwf	?_Read_b_eep,c
 11321  000AA6  ECFD  F036         	call	_Read_b_eep	;wreg free
 11322  000AAA  EF70  F00D         	goto	L103
 11323  000AAE                     l635:
 11324                           
 11325                           ; BSR set to: 0
 11326                           ;main.c: 1316: else if (0 == val) {
 11327  000AAE  0100               	movlb	0	; () banked
 11328  000AB0  0100               	movlb	0	; () banked
 11329  000AB2  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 11330  000AB4  EF5A  F00E         	goto	l10785
 11331                           
 11332                           ; BSR set to: 0
 11333                           ;main.c: 1317: LATCbits.LATC6 = 0;
 11334  000AB8  9C8B               	bcf	3979,6,c	;volatile
 11335                           
 11336                           ; BSR set to: 0
 11337                           ;main.c: 1318: rv = LATCbits.LATC6;
 11338  000ABA  0E00               	movlw	0
 11339  000ABC  BC8B               	btfsc	3979,6,c	;volatile
 11340  000ABE  0E01               	movlw	1
 11341  000AC0  0100               	movlb	0	; () banked
 11342  000AC2  0100               	movlb	0	; () banked
 11343  000AC4  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11344                           
 11345                           ; BSR set to: 0
 11346                           ;main.c: 1319: bOn = 0;
 11347  000AC6  0100               	movlb	0	; () banked
 11348  000AC8  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11349  000ACA  0E00               	movlw	0
 11350  000ACC  0100               	movlb	0	; () banked
 11351  000ACE  0100               	movlb	0	; () banked
 11352  000AD0  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11353  000AD2  0100               	movlb	0	; () banked
 11354  000AD4  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11355  000AD6  EF5A  F00E         	goto	l10785
 11356  000ADA                     l10401:
 11357                           
 11358                           ; BSR set to: 0
 11359                           ;main.c: 1326: bInfoEvent = 1;
 11360  000ADA  0100               	movlb	0	; () banked
 11361  000ADC  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11362  000ADE  0E01               	movlw	1
 11363  000AE0  0100               	movlb	0	; () banked
 11364  000AE2  0100               	movlb	0	; () banked
 11365  000AE4  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 11366  000AE6  0100               	movlb	0	; () banked
 11367  000AE8  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11368                           
 11369                           ; BSR set to: 0
 11370                           ;main.c: 1328: if (1 == val) {
 11371  000AEA  0100               	movlb	0	; () banked
 11372  000AEC  0100               	movlb	0	; () banked
 11373  000AEE  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 11374  000AF0  A4D8               	btfss	status,2,c
 11375  000AF2  D02B               	goto	l640
 11376                           
 11377                           ; BSR set to: 0
 11378                           ;main.c: 1330: LATCbits.LATC7 = 1;
 11379  000AF4  8E8B               	bsf	3979,7,c	;volatile
 11380                           
 11381                           ; BSR set to: 0
 11382                           ;main.c: 1331: rv = LATCbits.LATC7;
 11383  000AF6  0E00               	movlw	0
 11384  000AF8  BE8B               	btfsc	3979,7,c	;volatile
 11385  000AFA  0E01               	movlw	1
 11386  000AFC  0100               	movlb	0	; () banked
 11387  000AFE  0100               	movlb	0	; () banked
 11388  000B00  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11389                           
 11390                           ; BSR set to: 0
 11391                           ;main.c: 1332: bOn = 1;
 11392  000B02  0100               	movlb	0	; () banked
 11393  000B04  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11394  000B06  0E01               	movlw	1
 11395  000B08  0100               	movlb	0	; () banked
 11396  000B0A  0100               	movlb	0	; () banked
 11397  000B0C  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11398  000B0E  0100               	movlb	0	; () banked
 11399  000B10  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11400                           
 11401                           ; BSR set to: 0
 11402                           ;main.c: 1334: if (Read_b_eep(0x43 + 30) & 0x04) {
 11403  000B12  0E00               	movlw	0
 11404  000B14  6E17               	movwf	?_Read_b_eep+1,c
 11405  000B16  0E61               	movlw	97
 11406  000B18  6E16               	movwf	?_Read_b_eep,c
 11407  000B1A  ECFD  F036         	call	_Read_b_eep	;wreg free
 11408  000B1E  0100               	movlb	0	; () banked
 11409  000B20  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11410  000B22  0100               	movlb	0	; () banked
 11411  000B24  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 11412  000B26  EF5A  F00E         	goto	l10785
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;main.c: 1335: channel_protection_timer[ 6 ] =
 11416                           ;main.c: 1336: Read_b_eep(0x43 + 46 + 32) * 256 +
 11417                           ;main.c: 1338: Read_b_eep(0x43 + 46 + 33);
 11418  000B2A  0E00               	movlw	0
 11419  000B2C  6E17               	movwf	?_Read_b_eep+1,c
 11420  000B2E  0E92               	movlw	146
 11421  000B30  6E16               	movwf	?_Read_b_eep,c
 11422  000B32  ECFD  F036         	call	_Read_b_eep	;wreg free
 11423  000B36  0100               	movlb	0	; () banked
 11424  000B38  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11425  000B3A  0E00               	movlw	0
 11426  000B3C  6E17               	movwf	?_Read_b_eep+1,c
 11427  000B3E  0E91               	movlw	145
 11428  000B40  6E16               	movwf	?_Read_b_eep,c
 11429  000B42  ECFD  F036         	call	_Read_b_eep	;wreg free
 11430  000B46  EF93  F00D         	goto	L104
 11431  000B4A                     l640:
 11432                           
 11433                           ; BSR set to: 0
 11434                           ;main.c: 1343: else if (0 == val) {
 11435  000B4A  0100               	movlb	0	; () banked
 11436  000B4C  0100               	movlb	0	; () banked
 11437  000B4E  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 11438  000B50  EF5A  F00E         	goto	l10785
 11439                           
 11440                           ; BSR set to: 0
 11441                           ;main.c: 1344: LATCbits.LATC7 = 0;
 11442  000B54  9E8B               	bcf	3979,7,c	;volatile
 11443                           
 11444                           ; BSR set to: 0
 11445                           ;main.c: 1345: rv = LATCbits.LATC7;
 11446  000B56  0E00               	movlw	0
 11447  000B58  BE8B               	btfsc	3979,7,c	;volatile
 11448  000B5A  0E01               	movlw	1
 11449  000B5C  0100               	movlb	0	; () banked
 11450  000B5E  0100               	movlb	0	; () banked
 11451  000B60  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11452                           
 11453                           ; BSR set to: 0
 11454                           ;main.c: 1346: bOn = 0;
 11455  000B62  0100               	movlb	0	; () banked
 11456  000B64  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11457  000B66  0E00               	movlw	0
 11458  000B68  0100               	movlb	0	; () banked
 11459  000B6A  0100               	movlb	0	; () banked
 11460  000B6C  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11461  000B6E  0100               	movlb	0	; () banked
 11462  000B70  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11463  000B72  EF5A  F00E         	goto	l10785
 11464  000B76                     l10421:
 11465                           
 11466                           ; BSR set to: 0
 11467                           ;main.c: 1353: bInfoEvent = 1;
 11468  000B76  0100               	movlb	0	; () banked
 11469  000B78  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11470  000B7A  0E01               	movlw	1
 11471  000B7C  0100               	movlb	0	; () banked
 11472  000B7E  0100               	movlb	0	; () banked
 11473  000B80  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 11474  000B82  0100               	movlb	0	; () banked
 11475  000B84  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11476                           
 11477                           ; BSR set to: 0
 11478                           ;main.c: 1355: if (1 == val) {
 11479  000B86  0100               	movlb	0	; () banked
 11480  000B88  0100               	movlb	0	; () banked
 11481  000B8A  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 11482  000B8C  A4D8               	btfss	status,2,c
 11483  000B8E  D02B               	goto	l645
 11484                           
 11485                           ; BSR set to: 0
 11486                           ;main.c: 1357: LATAbits.LATA2 = 1;
 11487  000B90  8489               	bsf	3977,2,c	;volatile
 11488                           
 11489                           ; BSR set to: 0
 11490                           ;main.c: 1358: rv = LATAbits.LATA2;
 11491  000B92  0E00               	movlw	0
 11492  000B94  B489               	btfsc	3977,2,c	;volatile
 11493  000B96  0E01               	movlw	1
 11494  000B98  0100               	movlb	0	; () banked
 11495  000B9A  0100               	movlb	0	; () banked
 11496  000B9C  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11497                           
 11498                           ; BSR set to: 0
 11499                           ;main.c: 1359: bOn = 1;
 11500  000B9E  0100               	movlb	0	; () banked
 11501  000BA0  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11502  000BA2  0E01               	movlw	1
 11503  000BA4  0100               	movlb	0	; () banked
 11504  000BA6  0100               	movlb	0	; () banked
 11505  000BA8  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11506  000BAA  0100               	movlb	0	; () banked
 11507  000BAC  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11508                           
 11509                           ; BSR set to: 0
 11510                           ;main.c: 1361: if (Read_b_eep(0x43 + 31) & 0x04) {
 11511  000BAE  0E00               	movlw	0
 11512  000BB0  6E17               	movwf	?_Read_b_eep+1,c
 11513  000BB2  0E62               	movlw	98
 11514  000BB4  6E16               	movwf	?_Read_b_eep,c
 11515  000BB6  ECFD  F036         	call	_Read_b_eep	;wreg free
 11516  000BBA  0100               	movlb	0	; () banked
 11517  000BBC  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11518  000BBE  0100               	movlb	0	; () banked
 11519  000BC0  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 11520  000BC2  EF5A  F00E         	goto	l10785
 11521                           
 11522                           ; BSR set to: 0
 11523                           ;main.c: 1362: channel_protection_timer[ 7 ] =
 11524                           ;main.c: 1363: Read_b_eep(0x43 + 46 + 34) * 256 +
 11525                           ;main.c: 1365: Read_b_eep(0x43 + 46 + 35);
 11526  000BC6  0E00               	movlw	0
 11527  000BC8  6E17               	movwf	?_Read_b_eep+1,c
 11528  000BCA  0E94               	movlw	148
 11529  000BCC  6E16               	movwf	?_Read_b_eep,c
 11530  000BCE  ECFD  F036         	call	_Read_b_eep	;wreg free
 11531  000BD2  0100               	movlb	0	; () banked
 11532  000BD4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11533  000BD6  0E00               	movlw	0
 11534  000BD8  6E17               	movwf	?_Read_b_eep+1,c
 11535  000BDA  0E93               	movlw	147
 11536  000BDC  6E16               	movwf	?_Read_b_eep,c
 11537  000BDE  ECFD  F036         	call	_Read_b_eep	;wreg free
 11538  000BE2  EFB6  F00D         	goto	L105
 11539  000BE6                     l645:
 11540                           
 11541                           ; BSR set to: 0
 11542                           ;main.c: 1370: else if (0 == val) {
 11543  000BE6  0100               	movlb	0	; () banked
 11544  000BE8  0100               	movlb	0	; () banked
 11545  000BEA  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 11546  000BEC  EF5A  F00E         	goto	l10785
 11547                           
 11548                           ; BSR set to: 0
 11549                           ;main.c: 1371: LATAbits.LATA2 = 0;
 11550  000BF0  9489               	bcf	3977,2,c	;volatile
 11551                           
 11552                           ; BSR set to: 0
 11553                           ;main.c: 1372: rv = LATAbits.LATA2;
 11554  000BF2  0E00               	movlw	0
 11555  000BF4  B489               	btfsc	3977,2,c	;volatile
 11556  000BF6  0E01               	movlw	1
 11557  000BF8  0100               	movlb	0	; () banked
 11558  000BFA  0100               	movlb	0	; () banked
 11559  000BFC  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11560                           
 11561                           ; BSR set to: 0
 11562                           ;main.c: 1373: bOn = 0;
 11563  000BFE  0100               	movlb	0	; () banked
 11564  000C00  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11565  000C02  0E00               	movlw	0
 11566  000C04  0100               	movlb	0	; () banked
 11567  000C06  0100               	movlb	0	; () banked
 11568  000C08  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11569  000C0A  0100               	movlb	0	; () banked
 11570  000C0C  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11571  000C0E  EF5A  F00E         	goto	l10785
 11572  000C12                     l10441:
 11573                           
 11574                           ; BSR set to: 0
 11575                           ;main.c: 1380: bInfoEvent = 1;
 11576  000C12  0100               	movlb	0	; () banked
 11577  000C14  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11578  000C16  0E01               	movlw	1
 11579  000C18  0100               	movlb	0	; () banked
 11580  000C1A  0100               	movlb	0	; () banked
 11581  000C1C  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 11582  000C1E  0100               	movlb	0	; () banked
 11583  000C20  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;main.c: 1382: if (1 == val) {
 11587  000C22  0100               	movlb	0	; () banked
 11588  000C24  0100               	movlb	0	; () banked
 11589  000C26  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 11590  000C28  A4D8               	btfss	status,2,c
 11591  000C2A  D02B               	goto	l650
 11592                           
 11593                           ; BSR set to: 0
 11594                           ;main.c: 1384: LATAbits.LATA1 = 1;
 11595  000C2C  8289               	bsf	3977,1,c	;volatile
 11596                           
 11597                           ; BSR set to: 0
 11598                           ;main.c: 1385: rv = LATAbits.LATA1;
 11599  000C2E  0E00               	movlw	0
 11600  000C30  B289               	btfsc	3977,1,c	;volatile
 11601  000C32  0E01               	movlw	1
 11602  000C34  0100               	movlb	0	; () banked
 11603  000C36  0100               	movlb	0	; () banked
 11604  000C38  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;main.c: 1386: bOn = 1;
 11608  000C3A  0100               	movlb	0	; () banked
 11609  000C3C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11610  000C3E  0E01               	movlw	1
 11611  000C40  0100               	movlb	0	; () banked
 11612  000C42  0100               	movlb	0	; () banked
 11613  000C44  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11614  000C46  0100               	movlb	0	; () banked
 11615  000C48  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11616                           
 11617                           ; BSR set to: 0
 11618                           ;main.c: 1388: if ( Read_b_eep(0x43 + 32) & 0x04 ) {
 11619  000C4A  0E00               	movlw	0
 11620  000C4C  6E17               	movwf	?_Read_b_eep+1,c
 11621  000C4E  0E63               	movlw	99
 11622  000C50  6E16               	movwf	?_Read_b_eep,c
 11623  000C52  ECFD  F036         	call	_Read_b_eep	;wreg free
 11624  000C56  0100               	movlb	0	; () banked
 11625  000C58  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11626  000C5A  0100               	movlb	0	; () banked
 11627  000C5C  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 11628  000C5E  EF5A  F00E         	goto	l10785
 11629                           
 11630                           ; BSR set to: 0
 11631                           ;main.c: 1389: channel_protection_timer[ 8 ] =
 11632                           ;main.c: 1390: Read_b_eep(0x43 + 46 + 36) * 256 +
 11633                           ;main.c: 1392: Read_b_eep(0x43 + 46 + 37);
 11634  000C62  0E00               	movlw	0
 11635  000C64  6E17               	movwf	?_Read_b_eep+1,c
 11636  000C66  0E96               	movlw	150
 11637  000C68  6E16               	movwf	?_Read_b_eep,c
 11638  000C6A  ECFD  F036         	call	_Read_b_eep	;wreg free
 11639  000C6E  0100               	movlb	0	; () banked
 11640  000C70  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11641  000C72  0E00               	movlw	0
 11642  000C74  6E17               	movwf	?_Read_b_eep+1,c
 11643  000C76  0E95               	movlw	149
 11644  000C78  6E16               	movwf	?_Read_b_eep,c
 11645  000C7A  ECFD  F036         	call	_Read_b_eep	;wreg free
 11646  000C7E  EFD9  F00D         	goto	L106
 11647  000C82                     l650:
 11648                           
 11649                           ; BSR set to: 0
 11650                           ;main.c: 1397: else if ( 0 == val ) {
 11651  000C82  0100               	movlb	0	; () banked
 11652  000C84  0100               	movlb	0	; () banked
 11653  000C86  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 11654  000C88  EF5A  F00E         	goto	l10785
 11655                           
 11656                           ; BSR set to: 0
 11657                           ;main.c: 1398: LATAbits.LATA1 = 0;
 11658  000C8C  9289               	bcf	3977,1,c	;volatile
 11659                           
 11660                           ; BSR set to: 0
 11661                           ;main.c: 1399: rv = LATAbits.LATA1;
 11662  000C8E  0E00               	movlw	0
 11663  000C90  B289               	btfsc	3977,1,c	;volatile
 11664  000C92  0E01               	movlw	1
 11665  000C94  0100               	movlb	0	; () banked
 11666  000C96  0100               	movlb	0	; () banked
 11667  000C98  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11668                           
 11669                           ; BSR set to: 0
 11670                           ;main.c: 1400: bOn = 0;
 11671  000C9A  0100               	movlb	0	; () banked
 11672  000C9C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11673  000C9E  0E00               	movlw	0
 11674  000CA0  0100               	movlb	0	; () banked
 11675  000CA2  0100               	movlb	0	; () banked
 11676  000CA4  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11677  000CA6  0100               	movlb	0	; () banked
 11678  000CA8  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11679  000CAA  EF5A  F00E         	goto	l10785
 11680  000CAE                     l10461:
 11681                           
 11682                           ; BSR set to: 0
 11683                           ;main.c: 1407: bInfoEvent = 1;
 11684  000CAE  0100               	movlb	0	; () banked
 11685  000CB0  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11686  000CB2  0E01               	movlw	1
 11687  000CB4  0100               	movlb	0	; () banked
 11688  000CB6  0100               	movlb	0	; () banked
 11689  000CB8  6FA9               	movwf	vscp_writeAppReg@bInfoEvent& (0+255),b
 11690  000CBA  0100               	movlb	0	; () banked
 11691  000CBC  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11692                           
 11693                           ; BSR set to: 0
 11694                           ;main.c: 1409: if ( 1 == val ) {
 11695  000CBE  0100               	movlb	0	; () banked
 11696  000CC0  0100               	movlb	0	; () banked
 11697  000CC2  05A3               	decf	vscp_writeAppReg@val& (0+255),w,b
 11698  000CC4  A4D8               	btfss	status,2,c
 11699  000CC6  D02B               	goto	l655
 11700                           
 11701                           ; BSR set to: 0
 11702                           ;main.c: 1411: LATAbits.LATA0 = 1;
 11703  000CC8  8089               	bsf	3977,0,c	;volatile
 11704                           
 11705                           ; BSR set to: 0
 11706                           ;main.c: 1412: rv = LATAbits.LATA0;
 11707  000CCA  0E00               	movlw	0
 11708  000CCC  B089               	btfsc	3977,0,c	;volatile
 11709  000CCE  0E01               	movlw	1
 11710  000CD0  0100               	movlb	0	; () banked
 11711  000CD2  0100               	movlb	0	; () banked
 11712  000CD4  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11713                           
 11714                           ; BSR set to: 0
 11715                           ;main.c: 1413: bOn = 1;
 11716  000CD6  0100               	movlb	0	; () banked
 11717  000CD8  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11718  000CDA  0E01               	movlw	1
 11719  000CDC  0100               	movlb	0	; () banked
 11720  000CDE  0100               	movlb	0	; () banked
 11721  000CE0  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11722  000CE2  0100               	movlb	0	; () banked
 11723  000CE4  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11724                           
 11725                           ; BSR set to: 0
 11726                           ;main.c: 1415: if ( Read_b_eep(0x43 + 33) & 0x04 ) {
 11727  000CE6  0E00               	movlw	0
 11728  000CE8  6E17               	movwf	?_Read_b_eep+1,c
 11729  000CEA  0E64               	movlw	100
 11730  000CEC  6E16               	movwf	?_Read_b_eep,c
 11731  000CEE  ECFD  F036         	call	_Read_b_eep	;wreg free
 11732  000CF2  0100               	movlb	0	; () banked
 11733  000CF4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11734  000CF6  0100               	movlb	0	; () banked
 11735  000CF8  A5A4               	btfss	??_vscp_writeAppReg& (0+255),2,b
 11736  000CFA  EF5A  F00E         	goto	l10785
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;main.c: 1416: channel_protection_timer[ 9 ] =
 11740                           ;main.c: 1417: Read_b_eep(0x43 + 46 + 38) * 256 +
 11741                           ;main.c: 1419: Read_b_eep(0x43 + 46 + 39);
 11742  000CFE  0E00               	movlw	0
 11743  000D00  6E17               	movwf	?_Read_b_eep+1,c
 11744  000D02  0E98               	movlw	152
 11745  000D04  6E16               	movwf	?_Read_b_eep,c
 11746  000D06  ECFD  F036         	call	_Read_b_eep	;wreg free
 11747  000D0A  0100               	movlb	0	; () banked
 11748  000D0C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11749  000D0E  0E00               	movlw	0
 11750  000D10  6E17               	movwf	?_Read_b_eep+1,c
 11751  000D12  0E97               	movlw	151
 11752  000D14  6E16               	movwf	?_Read_b_eep,c
 11753  000D16  ECFD  F036         	call	_Read_b_eep	;wreg free
 11754  000D1A  EFFC  F00D         	goto	L107
 11755  000D1E                     l655:
 11756                           
 11757                           ; BSR set to: 0
 11758                           ;main.c: 1424: else if ( 0 == val ) {
 11759  000D1E  0100               	movlb	0	; () banked
 11760  000D20  0100               	movlb	0	; () banked
 11761  000D22  67A3               	tstfsz	vscp_writeAppReg@val& (0+255),b
 11762  000D24  EF5A  F00E         	goto	l10785
 11763                           
 11764                           ; BSR set to: 0
 11765                           ;main.c: 1425: LATAbits.LATA0 = 0;
 11766  000D28  9089               	bcf	3977,0,c	;volatile
 11767                           
 11768                           ; BSR set to: 0
 11769                           ;main.c: 1426: rv = LATAbits.LATA0;
 11770  000D2A  0E00               	movlw	0
 11771  000D2C  B089               	btfsc	3977,0,c	;volatile
 11772  000D2E  0E01               	movlw	1
 11773  000D30  0100               	movlb	0	; () banked
 11774  000D32  0100               	movlb	0	; () banked
 11775  000D34  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11776                           
 11777                           ; BSR set to: 0
 11778                           ;main.c: 1427: bOn = 0;
 11779  000D36  0100               	movlb	0	; () banked
 11780  000D38  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11781  000D3A  0E00               	movlw	0
 11782  000D3C  0100               	movlb	0	; () banked
 11783  000D3E  0100               	movlb	0	; () banked
 11784  000D40  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11785  000D42  0100               	movlb	0	; () banked
 11786  000D44  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11787  000D46  EF5A  F00E         	goto	l10785
 11788  000D4A                     l10483:
 11789                           
 11790                           ; BSR set to: 0
 11791  000D4A  0100               	movlb	0	; () banked
 11792  000D4C  0100               	movlb	0	; () banked
 11793  000D4E  51A2               	movf	vscp_writeAppReg@reg& (0+255),w,b
 11794                           
 11795                           ; Switch size 1, requested type "space"
 11796                           ; Number of cases is 10, Range of values is 14 to 23
 11797                           ; switch strategies available:
 11798                           ; Name         Instructions Cycles
 11799                           ; simple_byte           31    16 (average)
 11800                           ;	Chosen strategy is simple_byte
 11801  000D50  0A0E               	xorlw	14	; case 14
 11802  000D52  B4D8               	btfsc	status,2,c
 11803  000D54  D4EE               	goto	l10281
 11804  000D56  0A01               	xorlw	1	; case 15
 11805  000D58  B4D8               	btfsc	status,2,c
 11806  000D5A  D539               	goto	l10301
 11807  000D5C  0A1F               	xorlw	31	; case 16
 11808  000D5E  B4D8               	btfsc	status,2,c
 11809  000D60  D584               	goto	l10321
 11810  000D62  0A01               	xorlw	1	; case 17
 11811  000D64  B4D8               	btfsc	status,2,c
 11812  000D66  D5CF               	goto	l10341
 11813  000D68  0A03               	xorlw	3	; case 18
 11814  000D6A  B4D8               	btfsc	status,2,c
 11815  000D6C  D61A               	goto	l10361
 11816  000D6E  0A01               	xorlw	1	; case 19
 11817  000D70  B4D8               	btfsc	status,2,c
 11818  000D72  D665               	goto	l10381
 11819  000D74  0A07               	xorlw	7	; case 20
 11820  000D76  B4D8               	btfsc	status,2,c
 11821  000D78  D6B0               	goto	l10401
 11822  000D7A  0A01               	xorlw	1	; case 21
 11823  000D7C  B4D8               	btfsc	status,2,c
 11824  000D7E  D6FB               	goto	l10421
 11825  000D80  0A03               	xorlw	3	; case 22
 11826  000D82  B4D8               	btfsc	status,2,c
 11827  000D84  D746               	goto	l10441
 11828  000D86  0A01               	xorlw	1	; case 23
 11829  000D88  B4D8               	btfsc	status,2,c
 11830  000D8A  D791               	goto	l10461
 11831  000D8C  EF5A  F00E         	goto	l10785
 11832  000D90                     l10485:
 11833                           
 11834                           ; BSR set to: 0
 11835                           ;main.c: 1436: else if ( (reg >= 24 ) &&
 11836                           ;main.c: 1437: (reg <= 33) ) {
 11837  000D90  0E17               	movlw	23
 11838  000D92  0100               	movlb	0	; () banked
 11839  000D94  0100               	movlb	0	; () banked
 11840  000D96  65A2               	cpfsgt	vscp_writeAppReg@reg& (0+255),b
 11841  000D98  D3F8               	goto	l10695
 11842                           
 11843                           ; BSR set to: 0
 11844  000D9A  0E22               	movlw	34
 11845  000D9C  0100               	movlb	0	; () banked
 11846  000D9E  0100               	movlb	0	; () banked
 11847  000DA0  61A2               	cpfslt	vscp_writeAppReg@reg& (0+255),b
 11848  000DA2  D3F3               	goto	l10695
 11849  000DA4  D3D0               	goto	l10693
 11850  000DA6                     l10491:
 11851                           
 11852                           ; BSR set to: 0
 11853                           ;main.c: 1443: (Busy_eep(), Write_b_eep(0x43 + reg,val));
 11854  000DA6  EC35  F037         	call	_Busy_eep	;wreg free
 11855  000DAA  0E43               	movlw	67
 11856  000DAC  0100               	movlb	0	; () banked
 11857  000DAE  0100               	movlb	0	; () banked
 11858  000DB0  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 11859  000DB2  6E16               	movwf	?_Write_b_eep,c
 11860  000DB4  6A17               	clrf	?_Write_b_eep+1,c
 11861  000DB6  0E00               	movlw	0
 11862  000DB8  2217               	addwfc	?_Write_b_eep+1,f,c
 11863  000DBA  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 11864  000DBE  EC65  F035         	call	_Write_b_eep	;wreg free
 11865                           
 11866                           ;main.c: 1444: rv = Read_b_eep(0x43 + reg);
 11867  000DC2  0E43               	movlw	67
 11868  000DC4  0100               	movlb	0	; () banked
 11869  000DC6  0100               	movlb	0	; () banked
 11870  000DC8  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 11871  000DCA  6E16               	movwf	?_Read_b_eep,c
 11872  000DCC  6A17               	clrf	?_Read_b_eep+1,c
 11873  000DCE  0E00               	movlw	0
 11874  000DD0  2217               	addwfc	?_Read_b_eep+1,f,c
 11875  000DD2  ECFD  F036         	call	_Read_b_eep	;wreg free
 11876  000DD6  0100               	movlb	0	; () banked
 11877  000DD8  0100               	movlb	0	; () banked
 11878  000DDA  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11879                           
 11880                           ; BSR set to: 0
 11881                           ;main.c: 1446: if ( val & 0x01 ) {
 11882  000DDC  0100               	movlb	0	; () banked
 11883  000DDE  0100               	movlb	0	; () banked
 11884  000DE0  A1A3               	btfss	vscp_writeAppReg@val& (0+255),0,b
 11885  000DE2  D02E               	goto	l10507
 11886                           
 11887                           ; BSR set to: 0
 11888                           ;main.c: 1448: LATBbits.LATB0 = 0;
 11889  000DE4  908A               	bcf	3978,0,c	;volatile
 11890                           
 11891                           ; BSR set to: 0
 11892                           ;main.c: 1449: bOn = 0;
 11893  000DE6  0100               	movlb	0	; () banked
 11894  000DE8  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11895  000DEA  0E00               	movlw	0
 11896  000DEC  0100               	movlb	0	; () banked
 11897  000DEE  0100               	movlb	0	; () banked
 11898  000DF0  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 11899  000DF2  0100               	movlb	0	; () banked
 11900  000DF4  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11901                           
 11902                           ; BSR set to: 0
 11903                           ;main.c: 1451: channel_pulse_flags |= 0x01;
 11904  000DF6  0100               	movlb	0	; () banked
 11905  000DF8  0100               	movlb	0	; () banked
 11906  000DFA  81D5               	bsf	_channel_pulse_flags& (0+255),0,b
 11907                           
 11908                           ; BSR set to: 0
 11909                           ;main.c: 1452: channel_pulse_timer[ 0 ] =
 11910                           ;main.c: 1453: Read_b_eep(0x43 + 46 + 0) * 256 +
 11911                           ;main.c: 1455: Read_b_eep(0x43 + 46 + 0);
 11912  000DFC  0E00               	movlw	0
 11913  000DFE  6E17               	movwf	?_Read_b_eep+1,c
 11914  000E00  0E71               	movlw	113
 11915  000E02  6E16               	movwf	?_Read_b_eep,c
 11916  000E04  ECFD  F036         	call	_Read_b_eep	;wreg free
 11917  000E08  0100               	movlb	0	; () banked
 11918  000E0A  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11919  000E0C  0E00               	movlw	0
 11920  000E0E  6E17               	movwf	?_Read_b_eep+1,c
 11921  000E10  0E71               	movlw	113
 11922  000E12  6E16               	movwf	?_Read_b_eep,c
 11923  000E14  ECFD  F036         	call	_Read_b_eep	;wreg free
 11924  000E18  0100               	movlb	0	; () banked
 11925  000E1A  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 11926  000E1C  0100               	movlb	0	; () banked
 11927  000E1E  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 11928  000E20  0100               	movlb	0	; () banked
 11929  000E22  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 11930  000E24  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 11931  000E26  0100               	movlb	0	; () banked
 11932  000E28  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 11933  000E2A  0100               	movlb	0	; () banked
 11934  000E2C  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 11935  000E2E  0101               	movlb	1	; () banked
 11936  000E30  0101               	movlb	1	; () banked
 11937  000E32  6F26               	movwf	_channel_pulse_timer& (0+255),b
 11938  000E34  0100               	movlb	0	; () banked
 11939  000E36  0E00               	movlw	0
 11940  000E38  0100               	movlb	0	; () banked
 11941  000E3A  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 11942  000E3C  0101               	movlb	1	; () banked
 11943  000E3E  6F27               	movwf	(_channel_pulse_timer+1)& (0+255),b
 11944  000E40                     l10507:
 11945                           
 11946                           ;main.c: 1457: }
 11947                           ;main.c: 1459: if ( val & 0x04 ) {
 11948  000E40  0100               	movlb	0	; () banked
 11949  000E42  0100               	movlb	0	; () banked
 11950  000E44  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 11951  000E46  EF5A  F00E         	goto	l10785
 11952                           
 11953                           ; BSR set to: 0
 11954                           ;main.c: 1460: channel_protection_timer[ 0 ] =
 11955                           ;main.c: 1461: Read_b_eep(0x43 + 46 + 20) * 256 +
 11956                           ;main.c: 1463: Read_b_eep(0x43 + 46 + 21);
 11957  000E4A  0E00               	movlw	0
 11958  000E4C  6E17               	movwf	?_Read_b_eep+1,c
 11959  000E4E  0E86               	movlw	134
 11960  000E50  6E16               	movwf	?_Read_b_eep,c
 11961  000E52  ECFD  F036         	call	_Read_b_eep	;wreg free
 11962  000E56  0100               	movlb	0	; () banked
 11963  000E58  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 11964  000E5A  0E00               	movlw	0
 11965  000E5C  6E17               	movwf	?_Read_b_eep+1,c
 11966  000E5E  0E85               	movlw	133
 11967  000E60  6E16               	movwf	?_Read_b_eep,c
 11968  000E62  ECFD  F036         	call	_Read_b_eep	;wreg free
 11969  000E66  EFC1  F00C         	goto	L98
 11970  000E6A                     l10511:
 11971                           
 11972                           ; BSR set to: 0
 11973                           ;main.c: 1470: (Busy_eep(), Write_b_eep(0x43 + reg,val));
 11974  000E6A  EC35  F037         	call	_Busy_eep	;wreg free
 11975  000E6E  0E43               	movlw	67
 11976  000E70  0100               	movlb	0	; () banked
 11977  000E72  0100               	movlb	0	; () banked
 11978  000E74  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 11979  000E76  6E16               	movwf	?_Write_b_eep,c
 11980  000E78  6A17               	clrf	?_Write_b_eep+1,c
 11981  000E7A  0E00               	movlw	0
 11982  000E7C  2217               	addwfc	?_Write_b_eep+1,f,c
 11983  000E7E  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 11984  000E82  EC65  F035         	call	_Write_b_eep	;wreg free
 11985                           
 11986                           ;main.c: 1471: rv = Read_b_eep(0x43 + reg);
 11987  000E86  0E43               	movlw	67
 11988  000E88  0100               	movlb	0	; () banked
 11989  000E8A  0100               	movlb	0	; () banked
 11990  000E8C  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 11991  000E8E  6E16               	movwf	?_Read_b_eep,c
 11992  000E90  6A17               	clrf	?_Read_b_eep+1,c
 11993  000E92  0E00               	movlw	0
 11994  000E94  2217               	addwfc	?_Read_b_eep+1,f,c
 11995  000E96  ECFD  F036         	call	_Read_b_eep	;wreg free
 11996  000E9A  0100               	movlb	0	; () banked
 11997  000E9C  0100               	movlb	0	; () banked
 11998  000E9E  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 11999                           
 12000                           ; BSR set to: 0
 12001                           ;main.c: 1473: if ( val & 0x02 ) {
 12002  000EA0  0100               	movlb	0	; () banked
 12003  000EA2  0100               	movlb	0	; () banked
 12004  000EA4  A3A3               	btfss	vscp_writeAppReg@val& (0+255),1,b
 12005  000EA6  D02E               	goto	l10527
 12006                           
 12007                           ; BSR set to: 0
 12008                           ;main.c: 1475: LATBbits.LATB1 = 0;
 12009  000EA8  928A               	bcf	3978,1,c	;volatile
 12010                           
 12011                           ; BSR set to: 0
 12012                           ;main.c: 1476: bOn = 0;
 12013  000EAA  0100               	movlb	0	; () banked
 12014  000EAC  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12015  000EAE  0E00               	movlw	0
 12016  000EB0  0100               	movlb	0	; () banked
 12017  000EB2  0100               	movlb	0	; () banked
 12018  000EB4  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12019  000EB6  0100               	movlb	0	; () banked
 12020  000EB8  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12021                           
 12022                           ; BSR set to: 0
 12023                           ;main.c: 1478: channel_pulse_flags |= 0x02;
 12024  000EBA  0100               	movlb	0	; () banked
 12025  000EBC  0100               	movlb	0	; () banked
 12026  000EBE  83D5               	bsf	_channel_pulse_flags& (0+255),1,b
 12027                           
 12028                           ; BSR set to: 0
 12029                           ;main.c: 1479: channel_pulse_timer[ 1 ] =
 12030                           ;main.c: 1480: Read_b_eep(0x43 + 46 + 0) * 256 +
 12031                           ;main.c: 1482: Read_b_eep(0x43 + 46 + 1);
 12032  000EC0  0E00               	movlw	0
 12033  000EC2  6E17               	movwf	?_Read_b_eep+1,c
 12034  000EC4  0E72               	movlw	114
 12035  000EC6  6E16               	movwf	?_Read_b_eep,c
 12036  000EC8  ECFD  F036         	call	_Read_b_eep	;wreg free
 12037  000ECC  0100               	movlb	0	; () banked
 12038  000ECE  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12039  000ED0  0E00               	movlw	0
 12040  000ED2  6E17               	movwf	?_Read_b_eep+1,c
 12041  000ED4  0E71               	movlw	113
 12042  000ED6  6E16               	movwf	?_Read_b_eep,c
 12043  000ED8  ECFD  F036         	call	_Read_b_eep	;wreg free
 12044  000EDC  0100               	movlb	0	; () banked
 12045  000EDE  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 12046  000EE0  0100               	movlb	0	; () banked
 12047  000EE2  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 12048  000EE4  0100               	movlb	0	; () banked
 12049  000EE6  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 12050  000EE8  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 12051  000EEA  0100               	movlb	0	; () banked
 12052  000EEC  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12053  000EEE  0100               	movlb	0	; () banked
 12054  000EF0  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 12055  000EF2  0101               	movlb	1	; () banked
 12056  000EF4  0101               	movlb	1	; () banked
 12057  000EF6  6F28               	movwf	(_channel_pulse_timer+2)& (0+255),b
 12058  000EF8  0100               	movlb	0	; () banked
 12059  000EFA  0E00               	movlw	0
 12060  000EFC  0100               	movlb	0	; () banked
 12061  000EFE  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 12062  000F00  0101               	movlb	1	; () banked
 12063  000F02  6F29               	movwf	(_channel_pulse_timer+3)& (0+255),b
 12064  000F04                     l10527:
 12065                           
 12066                           ;main.c: 1484: }
 12067                           ;main.c: 1486: if ( val & 0x04 ) {
 12068  000F04  0100               	movlb	0	; () banked
 12069  000F06  0100               	movlb	0	; () banked
 12070  000F08  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 12071  000F0A  EF5A  F00E         	goto	l10785
 12072                           
 12073                           ; BSR set to: 0
 12074                           ;main.c: 1487: channel_protection_timer[ 1 ] =
 12075                           ;main.c: 1488: Read_b_eep(0x43 + 46 + 20) * 256 +
 12076                           ;main.c: 1490: Read_b_eep(0x43 + 46 + 21);
 12077  000F0E  0E00               	movlw	0
 12078  000F10  6E17               	movwf	?_Read_b_eep+1,c
 12079  000F12  0E86               	movlw	134
 12080  000F14  6E16               	movwf	?_Read_b_eep,c
 12081  000F16  ECFD  F036         	call	_Read_b_eep	;wreg free
 12082  000F1A  0100               	movlb	0	; () banked
 12083  000F1C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12084  000F1E  0E00               	movlw	0
 12085  000F20  6E17               	movwf	?_Read_b_eep+1,c
 12086  000F22  0E85               	movlw	133
 12087  000F24  6E16               	movwf	?_Read_b_eep,c
 12088  000F26  ECFD  F036         	call	_Read_b_eep	;wreg free
 12089  000F2A  EFE4  F00C         	goto	L99
 12090  000F2E                     l10531:
 12091                           
 12092                           ; BSR set to: 0
 12093                           ;main.c: 1497: (Busy_eep(), Write_b_eep(0x43 + reg,val));
 12094  000F2E  EC35  F037         	call	_Busy_eep	;wreg free
 12095  000F32  0E43               	movlw	67
 12096  000F34  0100               	movlb	0	; () banked
 12097  000F36  0100               	movlb	0	; () banked
 12098  000F38  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12099  000F3A  6E16               	movwf	?_Write_b_eep,c
 12100  000F3C  6A17               	clrf	?_Write_b_eep+1,c
 12101  000F3E  0E00               	movlw	0
 12102  000F40  2217               	addwfc	?_Write_b_eep+1,f,c
 12103  000F42  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 12104  000F46  EC65  F035         	call	_Write_b_eep	;wreg free
 12105                           
 12106                           ;main.c: 1498: rv = Read_b_eep(0x43 + reg);
 12107  000F4A  0E43               	movlw	67
 12108  000F4C  0100               	movlb	0	; () banked
 12109  000F4E  0100               	movlb	0	; () banked
 12110  000F50  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12111  000F52  6E16               	movwf	?_Read_b_eep,c
 12112  000F54  6A17               	clrf	?_Read_b_eep+1,c
 12113  000F56  0E00               	movlw	0
 12114  000F58  2217               	addwfc	?_Read_b_eep+1,f,c
 12115  000F5A  ECFD  F036         	call	_Read_b_eep	;wreg free
 12116  000F5E  0100               	movlb	0	; () banked
 12117  000F60  0100               	movlb	0	; () banked
 12118  000F62  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 12119                           
 12120                           ; BSR set to: 0
 12121                           ;main.c: 1500: if ( val & 0x01 ) {
 12122  000F64  0100               	movlb	0	; () banked
 12123  000F66  0100               	movlb	0	; () banked
 12124  000F68  A1A3               	btfss	vscp_writeAppReg@val& (0+255),0,b
 12125  000F6A  D02E               	goto	l10547
 12126                           
 12127                           ; BSR set to: 0
 12128                           ;main.c: 1502: LATCbits.LATC3 = 0;
 12129  000F6C  968B               	bcf	3979,3,c	;volatile
 12130                           
 12131                           ; BSR set to: 0
 12132                           ;main.c: 1503: bOn = 0;
 12133  000F6E  0100               	movlb	0	; () banked
 12134  000F70  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12135  000F72  0E00               	movlw	0
 12136  000F74  0100               	movlb	0	; () banked
 12137  000F76  0100               	movlb	0	; () banked
 12138  000F78  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12139  000F7A  0100               	movlb	0	; () banked
 12140  000F7C  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12141                           
 12142                           ; BSR set to: 0
 12143                           ;main.c: 1505: channel_pulse_flags |= 0x04;
 12144  000F7E  0100               	movlb	0	; () banked
 12145  000F80  0100               	movlb	0	; () banked
 12146  000F82  85D5               	bsf	_channel_pulse_flags& (0+255),2,b
 12147                           
 12148                           ; BSR set to: 0
 12149                           ;main.c: 1506: channel_pulse_timer[ 2 ] =
 12150                           ;main.c: 1507: Read_b_eep(0x43 + 46 + 4) * 256 +
 12151                           ;main.c: 1509: Read_b_eep(0x43 + 46 + 5);
 12152  000F84  0E00               	movlw	0
 12153  000F86  6E17               	movwf	?_Read_b_eep+1,c
 12154  000F88  0E76               	movlw	118
 12155  000F8A  6E16               	movwf	?_Read_b_eep,c
 12156  000F8C  ECFD  F036         	call	_Read_b_eep	;wreg free
 12157  000F90  0100               	movlb	0	; () banked
 12158  000F92  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12159  000F94  0E00               	movlw	0
 12160  000F96  6E17               	movwf	?_Read_b_eep+1,c
 12161  000F98  0E75               	movlw	117
 12162  000F9A  6E16               	movwf	?_Read_b_eep,c
 12163  000F9C  ECFD  F036         	call	_Read_b_eep	;wreg free
 12164  000FA0  0100               	movlb	0	; () banked
 12165  000FA2  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 12166  000FA4  0100               	movlb	0	; () banked
 12167  000FA6  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 12168  000FA8  0100               	movlb	0	; () banked
 12169  000FAA  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 12170  000FAC  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 12171  000FAE  0100               	movlb	0	; () banked
 12172  000FB0  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12173  000FB2  0100               	movlb	0	; () banked
 12174  000FB4  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 12175  000FB6  0101               	movlb	1	; () banked
 12176  000FB8  0101               	movlb	1	; () banked
 12177  000FBA  6F2A               	movwf	(_channel_pulse_timer+4)& (0+255),b
 12178  000FBC  0100               	movlb	0	; () banked
 12179  000FBE  0E00               	movlw	0
 12180  000FC0  0100               	movlb	0	; () banked
 12181  000FC2  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 12182  000FC4  0101               	movlb	1	; () banked
 12183  000FC6  6F2B               	movwf	(_channel_pulse_timer+5)& (0+255),b
 12184  000FC8                     l10547:
 12185                           
 12186                           ;main.c: 1511: }
 12187                           ;main.c: 1513: if ( val & 0x04 ) {
 12188  000FC8  0100               	movlb	0	; () banked
 12189  000FCA  0100               	movlb	0	; () banked
 12190  000FCC  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 12191  000FCE  EF5A  F00E         	goto	l10785
 12192                           
 12193                           ; BSR set to: 0
 12194                           ;main.c: 1514: channel_protection_timer[ 2 ] =
 12195                           ;main.c: 1515: Read_b_eep(0x43 + 46 + 24) * 256 +
 12196                           ;main.c: 1517: Read_b_eep(0x43 + 46 + 25);
 12197  000FD2  0E00               	movlw	0
 12198  000FD4  6E17               	movwf	?_Read_b_eep+1,c
 12199  000FD6  0E8A               	movlw	138
 12200  000FD8  6E16               	movwf	?_Read_b_eep,c
 12201  000FDA  ECFD  F036         	call	_Read_b_eep	;wreg free
 12202  000FDE  0100               	movlb	0	; () banked
 12203  000FE0  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12204  000FE2  0E00               	movlw	0
 12205  000FE4  6E17               	movwf	?_Read_b_eep+1,c
 12206  000FE6  0E89               	movlw	137
 12207  000FE8  6E16               	movwf	?_Read_b_eep,c
 12208  000FEA  ECFD  F036         	call	_Read_b_eep	;wreg free
 12209  000FEE  EF07  F00D         	goto	L100
 12210  000FF2                     l10551:
 12211                           
 12212                           ; BSR set to: 0
 12213                           ;main.c: 1524: (Busy_eep(), Write_b_eep(0x43 + reg,val));
 12214  000FF2  EC35  F037         	call	_Busy_eep	;wreg free
 12215  000FF6  0E43               	movlw	67
 12216  000FF8  0100               	movlb	0	; () banked
 12217  000FFA  0100               	movlb	0	; () banked
 12218  000FFC  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12219  000FFE  6E16               	movwf	?_Write_b_eep,c
 12220  001000  6A17               	clrf	?_Write_b_eep+1,c
 12221  001002  0E00               	movlw	0
 12222  001004  2217               	addwfc	?_Write_b_eep+1,f,c
 12223  001006  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 12224  00100A  EC65  F035         	call	_Write_b_eep	;wreg free
 12225                           
 12226                           ;main.c: 1525: rv = Read_b_eep(0x43 + reg);
 12227  00100E  0E43               	movlw	67
 12228  001010  0100               	movlb	0	; () banked
 12229  001012  0100               	movlb	0	; () banked
 12230  001014  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12231  001016  6E16               	movwf	?_Read_b_eep,c
 12232  001018  6A17               	clrf	?_Read_b_eep+1,c
 12233  00101A  0E00               	movlw	0
 12234  00101C  2217               	addwfc	?_Read_b_eep+1,f,c
 12235  00101E  ECFD  F036         	call	_Read_b_eep	;wreg free
 12236  001022  0100               	movlb	0	; () banked
 12237  001024  0100               	movlb	0	; () banked
 12238  001026  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 12239                           
 12240                           ; BSR set to: 0
 12241                           ;main.c: 1527: if ( val & 0x01 ) {
 12242  001028  0100               	movlb	0	; () banked
 12243  00102A  0100               	movlb	0	; () banked
 12244  00102C  A1A3               	btfss	vscp_writeAppReg@val& (0+255),0,b
 12245  00102E  D02E               	goto	l10567
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;main.c: 1529: LATCbits.LATC4 = 0;
 12249  001030  988B               	bcf	3979,4,c	;volatile
 12250                           
 12251                           ; BSR set to: 0
 12252                           ;main.c: 1530: bOn = 0;
 12253  001032  0100               	movlb	0	; () banked
 12254  001034  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12255  001036  0E00               	movlw	0
 12256  001038  0100               	movlb	0	; () banked
 12257  00103A  0100               	movlb	0	; () banked
 12258  00103C  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12259  00103E  0100               	movlb	0	; () banked
 12260  001040  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12261                           
 12262                           ; BSR set to: 0
 12263                           ;main.c: 1532: channel_pulse_flags |= 0x08;
 12264  001042  0100               	movlb	0	; () banked
 12265  001044  0100               	movlb	0	; () banked
 12266  001046  87D5               	bsf	_channel_pulse_flags& (0+255),3,b
 12267                           
 12268                           ; BSR set to: 0
 12269                           ;main.c: 1533: channel_pulse_timer[ 3 ] =
 12270                           ;main.c: 1534: Read_b_eep(0x43 + 46 + 6) * 256 +
 12271                           ;main.c: 1536: Read_b_eep(0x43 + 46 + 7);
 12272  001048  0E00               	movlw	0
 12273  00104A  6E17               	movwf	?_Read_b_eep+1,c
 12274  00104C  0E78               	movlw	120
 12275  00104E  6E16               	movwf	?_Read_b_eep,c
 12276  001050  ECFD  F036         	call	_Read_b_eep	;wreg free
 12277  001054  0100               	movlb	0	; () banked
 12278  001056  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12279  001058  0E00               	movlw	0
 12280  00105A  6E17               	movwf	?_Read_b_eep+1,c
 12281  00105C  0E77               	movlw	119
 12282  00105E  6E16               	movwf	?_Read_b_eep,c
 12283  001060  ECFD  F036         	call	_Read_b_eep	;wreg free
 12284  001064  0100               	movlb	0	; () banked
 12285  001066  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 12286  001068  0100               	movlb	0	; () banked
 12287  00106A  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 12288  00106C  0100               	movlb	0	; () banked
 12289  00106E  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 12290  001070  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 12291  001072  0100               	movlb	0	; () banked
 12292  001074  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12293  001076  0100               	movlb	0	; () banked
 12294  001078  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 12295  00107A  0101               	movlb	1	; () banked
 12296  00107C  0101               	movlb	1	; () banked
 12297  00107E  6F2C               	movwf	(_channel_pulse_timer+6)& (0+255),b
 12298  001080  0100               	movlb	0	; () banked
 12299  001082  0E00               	movlw	0
 12300  001084  0100               	movlb	0	; () banked
 12301  001086  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 12302  001088  0101               	movlb	1	; () banked
 12303  00108A  6F2D               	movwf	(_channel_pulse_timer+7)& (0+255),b
 12304  00108C                     l10567:
 12305                           
 12306                           ;main.c: 1538: }
 12307                           ;main.c: 1540: if ( val & 0x04 ) {
 12308  00108C  0100               	movlb	0	; () banked
 12309  00108E  0100               	movlb	0	; () banked
 12310  001090  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 12311  001092  EF5A  F00E         	goto	l10785
 12312                           
 12313                           ; BSR set to: 0
 12314                           ;main.c: 1541: channel_protection_timer[ 3 ] =
 12315                           ;main.c: 1542: Read_b_eep(0x43 + 46 + 26) * 256 +
 12316                           ;main.c: 1544: Read_b_eep(0x43 + 46 + 27);
 12317  001096  0E00               	movlw	0
 12318  001098  6E17               	movwf	?_Read_b_eep+1,c
 12319  00109A  0E8C               	movlw	140
 12320  00109C  6E16               	movwf	?_Read_b_eep,c
 12321  00109E  ECFD  F036         	call	_Read_b_eep	;wreg free
 12322  0010A2  0100               	movlb	0	; () banked
 12323  0010A4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12324  0010A6  0E00               	movlw	0
 12325  0010A8  6E17               	movwf	?_Read_b_eep+1,c
 12326  0010AA  0E8B               	movlw	139
 12327  0010AC  6E16               	movwf	?_Read_b_eep,c
 12328  0010AE  ECFD  F036         	call	_Read_b_eep	;wreg free
 12329  0010B2  EF2A  F00D         	goto	L101
 12330  0010B6                     l10571:
 12331                           
 12332                           ; BSR set to: 0
 12333                           ;main.c: 1551: (Busy_eep(), Write_b_eep(0x43 + reg,val));
 12334  0010B6  EC35  F037         	call	_Busy_eep	;wreg free
 12335  0010BA  0E43               	movlw	67
 12336  0010BC  0100               	movlb	0	; () banked
 12337  0010BE  0100               	movlb	0	; () banked
 12338  0010C0  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12339  0010C2  6E16               	movwf	?_Write_b_eep,c
 12340  0010C4  6A17               	clrf	?_Write_b_eep+1,c
 12341  0010C6  0E00               	movlw	0
 12342  0010C8  2217               	addwfc	?_Write_b_eep+1,f,c
 12343  0010CA  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 12344  0010CE  EC65  F035         	call	_Write_b_eep	;wreg free
 12345                           
 12346                           ;main.c: 1552: rv = Read_b_eep(0x43 + reg);
 12347  0010D2  0E43               	movlw	67
 12348  0010D4  0100               	movlb	0	; () banked
 12349  0010D6  0100               	movlb	0	; () banked
 12350  0010D8  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12351  0010DA  6E16               	movwf	?_Read_b_eep,c
 12352  0010DC  6A17               	clrf	?_Read_b_eep+1,c
 12353  0010DE  0E00               	movlw	0
 12354  0010E0  2217               	addwfc	?_Read_b_eep+1,f,c
 12355  0010E2  ECFD  F036         	call	_Read_b_eep	;wreg free
 12356  0010E6  0100               	movlb	0	; () banked
 12357  0010E8  0100               	movlb	0	; () banked
 12358  0010EA  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 12359                           
 12360                           ; BSR set to: 0
 12361                           ;main.c: 1554: if ( val & 0x04 ) {
 12362  0010EC  0100               	movlb	0	; () banked
 12363  0010EE  0100               	movlb	0	; () banked
 12364  0010F0  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 12365  0010F2  D02E               	goto	l10587
 12366                           
 12367                           ; BSR set to: 0
 12368                           ;main.c: 1556: LATCbits.LATC5 = 0;
 12369  0010F4  9A8B               	bcf	3979,5,c	;volatile
 12370                           
 12371                           ; BSR set to: 0
 12372                           ;main.c: 1557: bOn = 0;
 12373  0010F6  0100               	movlb	0	; () banked
 12374  0010F8  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12375  0010FA  0E00               	movlw	0
 12376  0010FC  0100               	movlb	0	; () banked
 12377  0010FE  0100               	movlb	0	; () banked
 12378  001100  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12379  001102  0100               	movlb	0	; () banked
 12380  001104  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12381                           
 12382                           ; BSR set to: 0
 12383                           ;main.c: 1559: channel_pulse_flags |= 0x10;
 12384  001106  0100               	movlb	0	; () banked
 12385  001108  0100               	movlb	0	; () banked
 12386  00110A  89D5               	bsf	_channel_pulse_flags& (0+255),4,b
 12387                           
 12388                           ; BSR set to: 0
 12389                           ;main.c: 1560: channel_pulse_timer[ 4 ] =
 12390                           ;main.c: 1561: Read_b_eep(0x43 + 46 + 8) * 256 +
 12391                           ;main.c: 1563: Read_b_eep(0x43 + 46 + 9);
 12392  00110C  0E00               	movlw	0
 12393  00110E  6E17               	movwf	?_Read_b_eep+1,c
 12394  001110  0E7A               	movlw	122
 12395  001112  6E16               	movwf	?_Read_b_eep,c
 12396  001114  ECFD  F036         	call	_Read_b_eep	;wreg free
 12397  001118  0100               	movlb	0	; () banked
 12398  00111A  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12399  00111C  0E00               	movlw	0
 12400  00111E  6E17               	movwf	?_Read_b_eep+1,c
 12401  001120  0E79               	movlw	121
 12402  001122  6E16               	movwf	?_Read_b_eep,c
 12403  001124  ECFD  F036         	call	_Read_b_eep	;wreg free
 12404  001128  0100               	movlb	0	; () banked
 12405  00112A  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 12406  00112C  0100               	movlb	0	; () banked
 12407  00112E  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 12408  001130  0100               	movlb	0	; () banked
 12409  001132  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 12410  001134  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 12411  001136  0100               	movlb	0	; () banked
 12412  001138  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12413  00113A  0100               	movlb	0	; () banked
 12414  00113C  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 12415  00113E  0101               	movlb	1	; () banked
 12416  001140  0101               	movlb	1	; () banked
 12417  001142  6F2E               	movwf	(_channel_pulse_timer+8)& (0+255),b
 12418  001144  0100               	movlb	0	; () banked
 12419  001146  0E00               	movlw	0
 12420  001148  0100               	movlb	0	; () banked
 12421  00114A  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 12422  00114C  0101               	movlb	1	; () banked
 12423  00114E  6F2F               	movwf	(_channel_pulse_timer+9)& (0+255),b
 12424  001150                     l10587:
 12425                           
 12426                           ;main.c: 1565: }
 12427                           ;main.c: 1567: if ( val & 0x04 ) {
 12428  001150  0100               	movlb	0	; () banked
 12429  001152  0100               	movlb	0	; () banked
 12430  001154  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 12431  001156  EF5A  F00E         	goto	l10785
 12432                           
 12433                           ; BSR set to: 0
 12434                           ;main.c: 1568: channel_protection_timer[ 4 ] =
 12435                           ;main.c: 1569: Read_b_eep(0x43 + 46 + 28) * 256 +
 12436                           ;main.c: 1571: Read_b_eep(0x43 + 46 + 29);
 12437  00115A  0E00               	movlw	0
 12438  00115C  6E17               	movwf	?_Read_b_eep+1,c
 12439  00115E  0E8E               	movlw	142
 12440  001160  6E16               	movwf	?_Read_b_eep,c
 12441  001162  ECFD  F036         	call	_Read_b_eep	;wreg free
 12442  001166  0100               	movlb	0	; () banked
 12443  001168  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12444  00116A  0E00               	movlw	0
 12445  00116C  6E17               	movwf	?_Read_b_eep+1,c
 12446  00116E  0E8D               	movlw	141
 12447  001170  6E16               	movwf	?_Read_b_eep,c
 12448  001172  ECFD  F036         	call	_Read_b_eep	;wreg free
 12449  001176  EF4D  F00D         	goto	L102
 12450  00117A                     l10591:
 12451                           
 12452                           ; BSR set to: 0
 12453                           ;main.c: 1578: (Busy_eep(), Write_b_eep(0x43 + reg,val));
 12454  00117A  EC35  F037         	call	_Busy_eep	;wreg free
 12455  00117E  0E43               	movlw	67
 12456  001180  0100               	movlb	0	; () banked
 12457  001182  0100               	movlb	0	; () banked
 12458  001184  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12459  001186  6E16               	movwf	?_Write_b_eep,c
 12460  001188  6A17               	clrf	?_Write_b_eep+1,c
 12461  00118A  0E00               	movlw	0
 12462  00118C  2217               	addwfc	?_Write_b_eep+1,f,c
 12463  00118E  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 12464  001192  EC65  F035         	call	_Write_b_eep	;wreg free
 12465                           
 12466                           ;main.c: 1579: rv = Read_b_eep(0x43 + reg);
 12467  001196  0E43               	movlw	67
 12468  001198  0100               	movlb	0	; () banked
 12469  00119A  0100               	movlb	0	; () banked
 12470  00119C  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12471  00119E  6E16               	movwf	?_Read_b_eep,c
 12472  0011A0  6A17               	clrf	?_Read_b_eep+1,c
 12473  0011A2  0E00               	movlw	0
 12474  0011A4  2217               	addwfc	?_Read_b_eep+1,f,c
 12475  0011A6  ECFD  F036         	call	_Read_b_eep	;wreg free
 12476  0011AA  0100               	movlb	0	; () banked
 12477  0011AC  0100               	movlb	0	; () banked
 12478  0011AE  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 12479                           
 12480                           ; BSR set to: 0
 12481                           ;main.c: 1581: if ( val & 0x01 ) {
 12482  0011B0  0100               	movlb	0	; () banked
 12483  0011B2  0100               	movlb	0	; () banked
 12484  0011B4  A1A3               	btfss	vscp_writeAppReg@val& (0+255),0,b
 12485  0011B6  D02E               	goto	l10607
 12486                           
 12487                           ; BSR set to: 0
 12488                           ;main.c: 1583: LATCbits.LATC6 = 0;
 12489  0011B8  9C8B               	bcf	3979,6,c	;volatile
 12490                           
 12491                           ; BSR set to: 0
 12492                           ;main.c: 1584: bOn = 0;
 12493  0011BA  0100               	movlb	0	; () banked
 12494  0011BC  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12495  0011BE  0E00               	movlw	0
 12496  0011C0  0100               	movlb	0	; () banked
 12497  0011C2  0100               	movlb	0	; () banked
 12498  0011C4  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12499  0011C6  0100               	movlb	0	; () banked
 12500  0011C8  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12501                           
 12502                           ; BSR set to: 0
 12503                           ;main.c: 1586: channel_pulse_flags |= 0x20;
 12504  0011CA  0100               	movlb	0	; () banked
 12505  0011CC  0100               	movlb	0	; () banked
 12506  0011CE  8BD5               	bsf	_channel_pulse_flags& (0+255),5,b
 12507                           
 12508                           ; BSR set to: 0
 12509                           ;main.c: 1587: channel_pulse_timer[ 5 ] =
 12510                           ;main.c: 1588: Read_b_eep(0x43 + 46 + 10) * 256 +
 12511                           ;main.c: 1590: Read_b_eep(0x43 + 46 + 11);
 12512  0011D0  0E00               	movlw	0
 12513  0011D2  6E17               	movwf	?_Read_b_eep+1,c
 12514  0011D4  0E7C               	movlw	124
 12515  0011D6  6E16               	movwf	?_Read_b_eep,c
 12516  0011D8  ECFD  F036         	call	_Read_b_eep	;wreg free
 12517  0011DC  0100               	movlb	0	; () banked
 12518  0011DE  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12519  0011E0  0E00               	movlw	0
 12520  0011E2  6E17               	movwf	?_Read_b_eep+1,c
 12521  0011E4  0E7B               	movlw	123
 12522  0011E6  6E16               	movwf	?_Read_b_eep,c
 12523  0011E8  ECFD  F036         	call	_Read_b_eep	;wreg free
 12524  0011EC  0100               	movlb	0	; () banked
 12525  0011EE  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 12526  0011F0  0100               	movlb	0	; () banked
 12527  0011F2  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 12528  0011F4  0100               	movlb	0	; () banked
 12529  0011F6  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 12530  0011F8  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 12531  0011FA  0100               	movlb	0	; () banked
 12532  0011FC  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12533  0011FE  0100               	movlb	0	; () banked
 12534  001200  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 12535  001202  0101               	movlb	1	; () banked
 12536  001204  0101               	movlb	1	; () banked
 12537  001206  6F30               	movwf	(_channel_pulse_timer+10)& (0+255),b
 12538  001208  0100               	movlb	0	; () banked
 12539  00120A  0E00               	movlw	0
 12540  00120C  0100               	movlb	0	; () banked
 12541  00120E  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 12542  001210  0101               	movlb	1	; () banked
 12543  001212  6F31               	movwf	(_channel_pulse_timer+11)& (0+255),b
 12544  001214                     l10607:
 12545                           
 12546                           ;main.c: 1592: }
 12547                           ;main.c: 1594: if ( val & 0x04 ) {
 12548  001214  0100               	movlb	0	; () banked
 12549  001216  0100               	movlb	0	; () banked
 12550  001218  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 12551  00121A  EF5A  F00E         	goto	l10785
 12552                           
 12553                           ; BSR set to: 0
 12554                           ;main.c: 1595: channel_protection_timer[ 5 ] =
 12555                           ;main.c: 1596: Read_b_eep(0x43 + 46 + 30) * 256 +
 12556                           ;main.c: 1598: Read_b_eep(0x43 + 46 + 31);
 12557  00121E  0E00               	movlw	0
 12558  001220  6E17               	movwf	?_Read_b_eep+1,c
 12559  001222  0E90               	movlw	144
 12560  001224  6E16               	movwf	?_Read_b_eep,c
 12561  001226  ECFD  F036         	call	_Read_b_eep	;wreg free
 12562  00122A  0100               	movlb	0	; () banked
 12563  00122C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12564  00122E  0E00               	movlw	0
 12565  001230  6E17               	movwf	?_Read_b_eep+1,c
 12566  001232  0E8F               	movlw	143
 12567  001234  6E16               	movwf	?_Read_b_eep,c
 12568  001236  ECFD  F036         	call	_Read_b_eep	;wreg free
 12569  00123A  EF70  F00D         	goto	L103
 12570  00123E                     l10611:
 12571                           
 12572                           ; BSR set to: 0
 12573                           ;main.c: 1605: (Busy_eep(), Write_b_eep(0x43 + reg,val));
 12574  00123E  EC35  F037         	call	_Busy_eep	;wreg free
 12575  001242  0E43               	movlw	67
 12576  001244  0100               	movlb	0	; () banked
 12577  001246  0100               	movlb	0	; () banked
 12578  001248  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12579  00124A  6E16               	movwf	?_Write_b_eep,c
 12580  00124C  6A17               	clrf	?_Write_b_eep+1,c
 12581  00124E  0E00               	movlw	0
 12582  001250  2217               	addwfc	?_Write_b_eep+1,f,c
 12583  001252  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 12584  001256  EC65  F035         	call	_Write_b_eep	;wreg free
 12585                           
 12586                           ;main.c: 1606: rv = Read_b_eep(0x43 + reg);
 12587  00125A  0E43               	movlw	67
 12588  00125C  0100               	movlb	0	; () banked
 12589  00125E  0100               	movlb	0	; () banked
 12590  001260  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12591  001262  6E16               	movwf	?_Read_b_eep,c
 12592  001264  6A17               	clrf	?_Read_b_eep+1,c
 12593  001266  0E00               	movlw	0
 12594  001268  2217               	addwfc	?_Read_b_eep+1,f,c
 12595  00126A  ECFD  F036         	call	_Read_b_eep	;wreg free
 12596  00126E  0100               	movlb	0	; () banked
 12597  001270  0100               	movlb	0	; () banked
 12598  001272  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 12599                           
 12600                           ; BSR set to: 0
 12601                           ;main.c: 1608: if ( val & 0x01 ) {
 12602  001274  0100               	movlb	0	; () banked
 12603  001276  0100               	movlb	0	; () banked
 12604  001278  A1A3               	btfss	vscp_writeAppReg@val& (0+255),0,b
 12605  00127A  D02E               	goto	l10627
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;main.c: 1610: LATCbits.LATC7 = 0;
 12609  00127C  9E8B               	bcf	3979,7,c	;volatile
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;main.c: 1611: bOn = 0;
 12613  00127E  0100               	movlb	0	; () banked
 12614  001280  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12615  001282  0E00               	movlw	0
 12616  001284  0100               	movlb	0	; () banked
 12617  001286  0100               	movlb	0	; () banked
 12618  001288  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12619  00128A  0100               	movlb	0	; () banked
 12620  00128C  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;main.c: 1613: channel_pulse_flags |= 0x40;
 12624  00128E  0100               	movlb	0	; () banked
 12625  001290  0100               	movlb	0	; () banked
 12626  001292  8DD5               	bsf	_channel_pulse_flags& (0+255),6,b
 12627                           
 12628                           ; BSR set to: 0
 12629                           ;main.c: 1614: channel_pulse_timer[ 6 ] =
 12630                           ;main.c: 1615: Read_b_eep(0x43 + 46 + 12) * 256 +
 12631                           ;main.c: 1617: Read_b_eep(0x43 + 46 + 13);
 12632  001294  0E00               	movlw	0
 12633  001296  6E17               	movwf	?_Read_b_eep+1,c
 12634  001298  0E7E               	movlw	126
 12635  00129A  6E16               	movwf	?_Read_b_eep,c
 12636  00129C  ECFD  F036         	call	_Read_b_eep	;wreg free
 12637  0012A0  0100               	movlb	0	; () banked
 12638  0012A2  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12639  0012A4  0E00               	movlw	0
 12640  0012A6  6E17               	movwf	?_Read_b_eep+1,c
 12641  0012A8  0E7D               	movlw	125
 12642  0012AA  6E16               	movwf	?_Read_b_eep,c
 12643  0012AC  ECFD  F036         	call	_Read_b_eep	;wreg free
 12644  0012B0  0100               	movlb	0	; () banked
 12645  0012B2  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 12646  0012B4  0100               	movlb	0	; () banked
 12647  0012B6  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 12648  0012B8  0100               	movlb	0	; () banked
 12649  0012BA  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 12650  0012BC  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 12651  0012BE  0100               	movlb	0	; () banked
 12652  0012C0  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12653  0012C2  0100               	movlb	0	; () banked
 12654  0012C4  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 12655  0012C6  0101               	movlb	1	; () banked
 12656  0012C8  0101               	movlb	1	; () banked
 12657  0012CA  6F32               	movwf	(_channel_pulse_timer+12)& (0+255),b
 12658  0012CC  0100               	movlb	0	; () banked
 12659  0012CE  0E00               	movlw	0
 12660  0012D0  0100               	movlb	0	; () banked
 12661  0012D2  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 12662  0012D4  0101               	movlb	1	; () banked
 12663  0012D6  6F33               	movwf	(_channel_pulse_timer+13)& (0+255),b
 12664  0012D8                     l10627:
 12665                           
 12666                           ;main.c: 1619: }
 12667                           ;main.c: 1621: if ( val & 0x04 ) {
 12668  0012D8  0100               	movlb	0	; () banked
 12669  0012DA  0100               	movlb	0	; () banked
 12670  0012DC  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 12671  0012DE  EF5A  F00E         	goto	l10785
 12672                           
 12673                           ; BSR set to: 0
 12674                           ;main.c: 1622: channel_protection_timer[ 6 ] =
 12675                           ;main.c: 1623: Read_b_eep(0x43 + 46 + 32) * 256 +
 12676                           ;main.c: 1625: Read_b_eep(0x43 + 46 + 33);
 12677  0012E2  0E00               	movlw	0
 12678  0012E4  6E17               	movwf	?_Read_b_eep+1,c
 12679  0012E6  0E92               	movlw	146
 12680  0012E8  6E16               	movwf	?_Read_b_eep,c
 12681  0012EA  ECFD  F036         	call	_Read_b_eep	;wreg free
 12682  0012EE  0100               	movlb	0	; () banked
 12683  0012F0  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12684  0012F2  0E00               	movlw	0
 12685  0012F4  6E17               	movwf	?_Read_b_eep+1,c
 12686  0012F6  0E91               	movlw	145
 12687  0012F8  6E16               	movwf	?_Read_b_eep,c
 12688  0012FA  ECFD  F036         	call	_Read_b_eep	;wreg free
 12689  0012FE  EF93  F00D         	goto	L104
 12690  001302                     l10631:
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;main.c: 1632: (Busy_eep(), Write_b_eep(0x43 + reg,val));
 12694  001302  EC35  F037         	call	_Busy_eep	;wreg free
 12695  001306  0E43               	movlw	67
 12696  001308  0100               	movlb	0	; () banked
 12697  00130A  0100               	movlb	0	; () banked
 12698  00130C  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12699  00130E  6E16               	movwf	?_Write_b_eep,c
 12700  001310  6A17               	clrf	?_Write_b_eep+1,c
 12701  001312  0E00               	movlw	0
 12702  001314  2217               	addwfc	?_Write_b_eep+1,f,c
 12703  001316  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 12704  00131A  EC65  F035         	call	_Write_b_eep	;wreg free
 12705                           
 12706                           ;main.c: 1633: rv = Read_b_eep(0x43 + reg);
 12707  00131E  0E43               	movlw	67
 12708  001320  0100               	movlb	0	; () banked
 12709  001322  0100               	movlb	0	; () banked
 12710  001324  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12711  001326  6E16               	movwf	?_Read_b_eep,c
 12712  001328  6A17               	clrf	?_Read_b_eep+1,c
 12713  00132A  0E00               	movlw	0
 12714  00132C  2217               	addwfc	?_Read_b_eep+1,f,c
 12715  00132E  ECFD  F036         	call	_Read_b_eep	;wreg free
 12716  001332  0100               	movlb	0	; () banked
 12717  001334  0100               	movlb	0	; () banked
 12718  001336  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 12719                           
 12720                           ; BSR set to: 0
 12721                           ;main.c: 1635: if ( val & 0x01 ) {
 12722  001338  0100               	movlb	0	; () banked
 12723  00133A  0100               	movlb	0	; () banked
 12724  00133C  A1A3               	btfss	vscp_writeAppReg@val& (0+255),0,b
 12725  00133E  D02E               	goto	l10647
 12726                           
 12727                           ; BSR set to: 0
 12728                           ;main.c: 1637: LATAbits.LATA2 = 0;
 12729  001340  9489               	bcf	3977,2,c	;volatile
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;main.c: 1638: bOn = 0;
 12733  001342  0100               	movlb	0	; () banked
 12734  001344  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12735  001346  0E00               	movlw	0
 12736  001348  0100               	movlb	0	; () banked
 12737  00134A  0100               	movlb	0	; () banked
 12738  00134C  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12739  00134E  0100               	movlb	0	; () banked
 12740  001350  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12741                           
 12742                           ; BSR set to: 0
 12743                           ;main.c: 1640: channel_pulse_flags |= 0x40;
 12744  001352  0100               	movlb	0	; () banked
 12745  001354  0100               	movlb	0	; () banked
 12746  001356  8DD5               	bsf	_channel_pulse_flags& (0+255),6,b
 12747                           
 12748                           ; BSR set to: 0
 12749                           ;main.c: 1641: channel_pulse_timer[ 7 ] =
 12750                           ;main.c: 1642: Read_b_eep(0x43 + 46 + 14) * 256 +
 12751                           ;main.c: 1644: Read_b_eep(0x43 + 46 + 15);
 12752  001358  0E00               	movlw	0
 12753  00135A  6E17               	movwf	?_Read_b_eep+1,c
 12754  00135C  0E80               	movlw	128
 12755  00135E  6E16               	movwf	?_Read_b_eep,c
 12756  001360  ECFD  F036         	call	_Read_b_eep	;wreg free
 12757  001364  0100               	movlb	0	; () banked
 12758  001366  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12759  001368  0E00               	movlw	0
 12760  00136A  6E17               	movwf	?_Read_b_eep+1,c
 12761  00136C  0E7F               	movlw	127
 12762  00136E  6E16               	movwf	?_Read_b_eep,c
 12763  001370  ECFD  F036         	call	_Read_b_eep	;wreg free
 12764  001374  0100               	movlb	0	; () banked
 12765  001376  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 12766  001378  0100               	movlb	0	; () banked
 12767  00137A  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 12768  00137C  0100               	movlb	0	; () banked
 12769  00137E  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 12770  001380  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 12771  001382  0100               	movlb	0	; () banked
 12772  001384  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12773  001386  0100               	movlb	0	; () banked
 12774  001388  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 12775  00138A  0101               	movlb	1	; () banked
 12776  00138C  0101               	movlb	1	; () banked
 12777  00138E  6F34               	movwf	(_channel_pulse_timer+14)& (0+255),b
 12778  001390  0100               	movlb	0	; () banked
 12779  001392  0E00               	movlw	0
 12780  001394  0100               	movlb	0	; () banked
 12781  001396  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 12782  001398  0101               	movlb	1	; () banked
 12783  00139A  6F35               	movwf	(_channel_pulse_timer+15)& (0+255),b
 12784  00139C                     l10647:
 12785                           
 12786                           ;main.c: 1646: }
 12787                           ;main.c: 1648: if ( val & 0x04 ) {
 12788  00139C  0100               	movlb	0	; () banked
 12789  00139E  0100               	movlb	0	; () banked
 12790  0013A0  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 12791  0013A2  EF5A  F00E         	goto	l10785
 12792                           
 12793                           ; BSR set to: 0
 12794                           ;main.c: 1649: channel_protection_timer[ 7 ] =
 12795                           ;main.c: 1650: Read_b_eep(0x43 + 46 + 34) * 256 +
 12796                           ;main.c: 1652: Read_b_eep(0x43 + 46 + 35);
 12797  0013A6  0E00               	movlw	0
 12798  0013A8  6E17               	movwf	?_Read_b_eep+1,c
 12799  0013AA  0E94               	movlw	148
 12800  0013AC  6E16               	movwf	?_Read_b_eep,c
 12801  0013AE  ECFD  F036         	call	_Read_b_eep	;wreg free
 12802  0013B2  0100               	movlb	0	; () banked
 12803  0013B4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12804  0013B6  0E00               	movlw	0
 12805  0013B8  6E17               	movwf	?_Read_b_eep+1,c
 12806  0013BA  0E93               	movlw	147
 12807  0013BC  6E16               	movwf	?_Read_b_eep,c
 12808  0013BE  ECFD  F036         	call	_Read_b_eep	;wreg free
 12809  0013C2  D3D4               	goto	L105
 12810  0013C4                     l10651:
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;main.c: 1659: (Busy_eep(), Write_b_eep(0x43 + reg,val));
 12814  0013C4  EC35  F037         	call	_Busy_eep	;wreg free
 12815  0013C8  0E43               	movlw	67
 12816  0013CA  0100               	movlb	0	; () banked
 12817  0013CC  0100               	movlb	0	; () banked
 12818  0013CE  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12819  0013D0  6E16               	movwf	?_Write_b_eep,c
 12820  0013D2  6A17               	clrf	?_Write_b_eep+1,c
 12821  0013D4  0E00               	movlw	0
 12822  0013D6  2217               	addwfc	?_Write_b_eep+1,f,c
 12823  0013D8  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 12824  0013DC  EC65  F035         	call	_Write_b_eep	;wreg free
 12825                           
 12826                           ;main.c: 1660: rv = Read_b_eep(0x43 + reg);
 12827  0013E0  0E43               	movlw	67
 12828  0013E2  0100               	movlb	0	; () banked
 12829  0013E4  0100               	movlb	0	; () banked
 12830  0013E6  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12831  0013E8  6E16               	movwf	?_Read_b_eep,c
 12832  0013EA  6A17               	clrf	?_Read_b_eep+1,c
 12833  0013EC  0E00               	movlw	0
 12834  0013EE  2217               	addwfc	?_Read_b_eep+1,f,c
 12835  0013F0  ECFD  F036         	call	_Read_b_eep	;wreg free
 12836  0013F4  0100               	movlb	0	; () banked
 12837  0013F6  0100               	movlb	0	; () banked
 12838  0013F8  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 12839                           
 12840                           ; BSR set to: 0
 12841                           ;main.c: 1662: if ( val & 0x01 ) {
 12842  0013FA  0100               	movlb	0	; () banked
 12843  0013FC  0100               	movlb	0	; () banked
 12844  0013FE  A1A3               	btfss	vscp_writeAppReg@val& (0+255),0,b
 12845  001400  D02E               	goto	l10667
 12846                           
 12847                           ; BSR set to: 0
 12848                           ;main.c: 1664: LATAbits.LATA1 = 0;
 12849  001402  9289               	bcf	3977,1,c	;volatile
 12850                           
 12851                           ; BSR set to: 0
 12852                           ;main.c: 1665: bOn = 0;
 12853  001404  0100               	movlb	0	; () banked
 12854  001406  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12855  001408  0E00               	movlw	0
 12856  00140A  0100               	movlb	0	; () banked
 12857  00140C  0100               	movlb	0	; () banked
 12858  00140E  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12859  001410  0100               	movlb	0	; () banked
 12860  001412  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12861                           
 12862                           ; BSR set to: 0
 12863                           ;main.c: 1667: channel_pulse_flags |= 0x40;
 12864  001414  0100               	movlb	0	; () banked
 12865  001416  0100               	movlb	0	; () banked
 12866  001418  8DD5               	bsf	_channel_pulse_flags& (0+255),6,b
 12867                           
 12868                           ; BSR set to: 0
 12869                           ;main.c: 1668: channel_pulse_timer[ 8 ] =
 12870                           ;main.c: 1669: Read_b_eep(0x43 + 46 + 16) * 256 +
 12871                           ;main.c: 1671: Read_b_eep(0x43 + 46 + 17);
 12872  00141A  0E00               	movlw	0
 12873  00141C  6E17               	movwf	?_Read_b_eep+1,c
 12874  00141E  0E82               	movlw	130
 12875  001420  6E16               	movwf	?_Read_b_eep,c
 12876  001422  ECFD  F036         	call	_Read_b_eep	;wreg free
 12877  001426  0100               	movlb	0	; () banked
 12878  001428  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12879  00142A  0E00               	movlw	0
 12880  00142C  6E17               	movwf	?_Read_b_eep+1,c
 12881  00142E  0E81               	movlw	129
 12882  001430  6E16               	movwf	?_Read_b_eep,c
 12883  001432  ECFD  F036         	call	_Read_b_eep	;wreg free
 12884  001436  0100               	movlb	0	; () banked
 12885  001438  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 12886  00143A  0100               	movlb	0	; () banked
 12887  00143C  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 12888  00143E  0100               	movlb	0	; () banked
 12889  001440  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 12890  001442  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 12891  001444  0100               	movlb	0	; () banked
 12892  001446  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12893  001448  0100               	movlb	0	; () banked
 12894  00144A  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 12895  00144C  0101               	movlb	1	; () banked
 12896  00144E  0101               	movlb	1	; () banked
 12897  001450  6F36               	movwf	(_channel_pulse_timer+16)& (0+255),b
 12898  001452  0100               	movlb	0	; () banked
 12899  001454  0E00               	movlw	0
 12900  001456  0100               	movlb	0	; () banked
 12901  001458  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 12902  00145A  0101               	movlb	1	; () banked
 12903  00145C  6F37               	movwf	(_channel_pulse_timer+17)& (0+255),b
 12904  00145E                     l10667:
 12905                           
 12906                           ;main.c: 1673: }
 12907                           ;main.c: 1675: if ( val & 0x04 ) {
 12908  00145E  0100               	movlb	0	; () banked
 12909  001460  0100               	movlb	0	; () banked
 12910  001462  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 12911  001464  EF5A  F00E         	goto	l10785
 12912                           
 12913                           ; BSR set to: 0
 12914                           ;main.c: 1676: channel_protection_timer[ 8 ] =
 12915                           ;main.c: 1677: Read_b_eep(0x43 + 46 + 36) * 256 +
 12916                           ;main.c: 1679: Read_b_eep(0x43 + 46 + 37);
 12917  001468  0E00               	movlw	0
 12918  00146A  6E17               	movwf	?_Read_b_eep+1,c
 12919  00146C  0E96               	movlw	150
 12920  00146E  6E16               	movwf	?_Read_b_eep,c
 12921  001470  ECFD  F036         	call	_Read_b_eep	;wreg free
 12922  001474  0100               	movlb	0	; () banked
 12923  001476  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12924  001478  0E00               	movlw	0
 12925  00147A  6E17               	movwf	?_Read_b_eep+1,c
 12926  00147C  0E95               	movlw	149
 12927  00147E  6E16               	movwf	?_Read_b_eep,c
 12928  001480  ECFD  F036         	call	_Read_b_eep	;wreg free
 12929  001484  D396               	goto	L106
 12930  001486                     l10671:
 12931                           
 12932                           ; BSR set to: 0
 12933                           ;main.c: 1686: (Busy_eep(), Write_b_eep(0x43 + reg,val));
 12934  001486  EC35  F037         	call	_Busy_eep	;wreg free
 12935  00148A  0E43               	movlw	67
 12936  00148C  0100               	movlb	0	; () banked
 12937  00148E  0100               	movlb	0	; () banked
 12938  001490  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12939  001492  6E16               	movwf	?_Write_b_eep,c
 12940  001494  6A17               	clrf	?_Write_b_eep+1,c
 12941  001496  0E00               	movlw	0
 12942  001498  2217               	addwfc	?_Write_b_eep+1,f,c
 12943  00149A  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 12944  00149E  EC65  F035         	call	_Write_b_eep	;wreg free
 12945                           
 12946                           ;main.c: 1687: rv = Read_b_eep(0x43 + reg);
 12947  0014A2  0E43               	movlw	67
 12948  0014A4  0100               	movlb	0	; () banked
 12949  0014A6  0100               	movlb	0	; () banked
 12950  0014A8  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 12951  0014AA  6E16               	movwf	?_Read_b_eep,c
 12952  0014AC  6A17               	clrf	?_Read_b_eep+1,c
 12953  0014AE  0E00               	movlw	0
 12954  0014B0  2217               	addwfc	?_Read_b_eep+1,f,c
 12955  0014B2  ECFD  F036         	call	_Read_b_eep	;wreg free
 12956  0014B6  0100               	movlb	0	; () banked
 12957  0014B8  0100               	movlb	0	; () banked
 12958  0014BA  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;main.c: 1689: if ( val & 0x01 ) {
 12962  0014BC  0100               	movlb	0	; () banked
 12963  0014BE  0100               	movlb	0	; () banked
 12964  0014C0  A1A3               	btfss	vscp_writeAppReg@val& (0+255),0,b
 12965  0014C2  D02E               	goto	l10687
 12966                           
 12967                           ; BSR set to: 0
 12968                           ;main.c: 1691: LATAbits.LATA0 = 0;
 12969  0014C4  9089               	bcf	3977,0,c	;volatile
 12970                           
 12971                           ; BSR set to: 0
 12972                           ;main.c: 1692: bOn = 0;
 12973  0014C6  0100               	movlb	0	; () banked
 12974  0014C8  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12975  0014CA  0E00               	movlw	0
 12976  0014CC  0100               	movlb	0	; () banked
 12977  0014CE  0100               	movlb	0	; () banked
 12978  0014D0  6FAA               	movwf	vscp_writeAppReg@bOn& (0+255),b
 12979  0014D2  0100               	movlb	0	; () banked
 12980  0014D4  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 12981                           
 12982                           ; BSR set to: 0
 12983                           ;main.c: 1694: channel_pulse_flags |= 0x40;
 12984  0014D6  0100               	movlb	0	; () banked
 12985  0014D8  0100               	movlb	0	; () banked
 12986  0014DA  8DD5               	bsf	_channel_pulse_flags& (0+255),6,b
 12987                           
 12988                           ; BSR set to: 0
 12989                           ;main.c: 1695: channel_pulse_timer[ 9 ] =
 12990                           ;main.c: 1696: Read_b_eep(0x43 + 46 + 18) * 256 +
 12991                           ;main.c: 1698: Read_b_eep(0x43 + 46 + 19);
 12992  0014DC  0E00               	movlw	0
 12993  0014DE  6E17               	movwf	?_Read_b_eep+1,c
 12994  0014E0  0E84               	movlw	132
 12995  0014E2  6E16               	movwf	?_Read_b_eep,c
 12996  0014E4  ECFD  F036         	call	_Read_b_eep	;wreg free
 12997  0014E8  0100               	movlb	0	; () banked
 12998  0014EA  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 12999  0014EC  0E00               	movlw	0
 13000  0014EE  6E17               	movwf	?_Read_b_eep+1,c
 13001  0014F0  0E83               	movlw	131
 13002  0014F2  6E16               	movwf	?_Read_b_eep,c
 13003  0014F4  ECFD  F036         	call	_Read_b_eep	;wreg free
 13004  0014F8  0100               	movlb	0	; () banked
 13005  0014FA  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13006  0014FC  0100               	movlb	0	; () banked
 13007  0014FE  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13008  001500  0100               	movlb	0	; () banked
 13009  001502  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13010  001504  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13011  001506  0100               	movlb	0	; () banked
 13012  001508  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13013  00150A  0100               	movlb	0	; () banked
 13014  00150C  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13015  00150E  0101               	movlb	1	; () banked
 13016  001510  0101               	movlb	1	; () banked
 13017  001512  6F38               	movwf	(_channel_pulse_timer+18)& (0+255),b
 13018  001514  0100               	movlb	0	; () banked
 13019  001516  0E00               	movlw	0
 13020  001518  0100               	movlb	0	; () banked
 13021  00151A  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13022  00151C  0101               	movlb	1	; () banked
 13023  00151E  6F39               	movwf	(_channel_pulse_timer+19)& (0+255),b
 13024  001520                     l10687:
 13025                           
 13026                           ;main.c: 1700: }
 13027                           ;main.c: 1702: if ( val & 0x04 ) {
 13028  001520  0100               	movlb	0	; () banked
 13029  001522  0100               	movlb	0	; () banked
 13030  001524  A5A3               	btfss	vscp_writeAppReg@val& (0+255),2,b
 13031  001526  D3C6               	goto	l10785
 13032                           
 13033                           ; BSR set to: 0
 13034                           ;main.c: 1703: channel_protection_timer[ 9 ] =
 13035                           ;main.c: 1704: Read_b_eep(0x43 + 46 + 38) * 256 +
 13036                           ;main.c: 1706: Read_b_eep(0x43 + 46 + 39);
 13037  001528  0E00               	movlw	0
 13038  00152A  6E17               	movwf	?_Read_b_eep+1,c
 13039  00152C  0E98               	movlw	152
 13040  00152E  6E16               	movwf	?_Read_b_eep,c
 13041  001530  ECFD  F036         	call	_Read_b_eep	;wreg free
 13042  001534  0100               	movlb	0	; () banked
 13043  001536  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13044  001538  0E00               	movlw	0
 13045  00153A  6E17               	movwf	?_Read_b_eep+1,c
 13046  00153C  0E97               	movlw	151
 13047  00153E  6E16               	movwf	?_Read_b_eep,c
 13048  001540  ECFD  F036         	call	_Read_b_eep	;wreg free
 13049  001544  D359               	goto	L107
 13050  001546                     l10693:
 13051                           
 13052                           ; BSR set to: 0
 13053  001546  0100               	movlb	0	; () banked
 13054  001548  0100               	movlb	0	; () banked
 13055  00154A  51A2               	movf	vscp_writeAppReg@reg& (0+255),w,b
 13056                           
 13057                           ; Switch size 1, requested type "space"
 13058                           ; Number of cases is 10, Range of values is 24 to 33
 13059                           ; switch strategies available:
 13060                           ; Name         Instructions Cycles
 13061                           ; simple_byte           31    16 (average)
 13062                           ;	Chosen strategy is simple_byte
 13063  00154C  0A18               	xorlw	24	; case 24
 13064  00154E  B4D8               	btfsc	status,2,c
 13065  001550  D42A               	goto	l10491
 13066  001552  0A01               	xorlw	1	; case 25
 13067  001554  B4D8               	btfsc	status,2,c
 13068  001556  D489               	goto	l10511
 13069  001558  0A03               	xorlw	3	; case 26
 13070  00155A  B4D8               	btfsc	status,2,c
 13071  00155C  D4E8               	goto	l10531
 13072  00155E  0A01               	xorlw	1	; case 27
 13073  001560  B4D8               	btfsc	status,2,c
 13074  001562  D547               	goto	l10551
 13075  001564  0A07               	xorlw	7	; case 28
 13076  001566  B4D8               	btfsc	status,2,c
 13077  001568  D5A6               	goto	l10571
 13078  00156A  0A01               	xorlw	1	; case 29
 13079  00156C  B4D8               	btfsc	status,2,c
 13080  00156E  D605               	goto	l10591
 13081  001570  0A03               	xorlw	3	; case 30
 13082  001572  B4D8               	btfsc	status,2,c
 13083  001574  D664               	goto	l10611
 13084  001576  0A01               	xorlw	1	; case 31
 13085  001578  B4D8               	btfsc	status,2,c
 13086  00157A  D6C3               	goto	l10631
 13087  00157C  0A3F               	xorlw	63	; case 32
 13088  00157E  B4D8               	btfsc	status,2,c
 13089  001580  D721               	goto	l10651
 13090  001582  0A01               	xorlw	1	; case 33
 13091  001584  B4D8               	btfsc	status,2,c
 13092  001586  D77F               	goto	l10671
 13093  001588  D395               	goto	l10785
 13094  00158A                     l10695:
 13095                           
 13096                           ; BSR set to: 0
 13097                           ;main.c: 1714: else if ( ( reg <= 44 ) &&
 13098                           ;main.c: 1715: ( reg <= 45 ) ) {
 13099  00158A  0E2D               	movlw	45
 13100  00158C  0100               	movlb	0	; () banked
 13101  00158E  0100               	movlb	0	; () banked
 13102  001590  61A2               	cpfslt	vscp_writeAppReg@reg& (0+255),b
 13103  001592  D390               	goto	l10785
 13104                           
 13105                           ; BSR set to: 0
 13106  001594  0E2E               	movlw	46
 13107  001596  0100               	movlb	0	; () banked
 13108  001598  0100               	movlb	0	; () banked
 13109  00159A  61A2               	cpfslt	vscp_writeAppReg@reg& (0+255),b
 13110  00159C  D38B               	goto	l10785
 13111                           
 13112                           ; BSR set to: 0
 13113                           ;main.c: 1716: (Busy_eep(), Write_b_eep(0x43 + 44 + ( reg - 44 ),val));
 13114  00159E  EC35  F037         	call	_Busy_eep	;wreg free
 13115  0015A2  0E43               	movlw	67
 13116  0015A4  0100               	movlb	0	; () banked
 13117  0015A6  0100               	movlb	0	; () banked
 13118  0015A8  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13119  0015AA  6E16               	movwf	?_Write_b_eep,c
 13120  0015AC  6A17               	clrf	?_Write_b_eep+1,c
 13121  0015AE  0E00               	movlw	0
 13122  0015B0  2217               	addwfc	?_Write_b_eep+1,f,c
 13123  0015B2  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 13124  0015B6  EC65  F035         	call	_Write_b_eep	;wreg free
 13125                           
 13126                           ;main.c: 1719: rv = Read_b_eep(0x43 + 44 + reg - 44);
 13127  0015BA  0E43               	movlw	67
 13128  0015BC  0100               	movlb	0	; () banked
 13129  0015BE  0100               	movlb	0	; () banked
 13130  0015C0  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13131  0015C2  6E16               	movwf	?_Read_b_eep,c
 13132  0015C4  6A17               	clrf	?_Read_b_eep+1,c
 13133  0015C6  0E00               	movlw	0
 13134  0015C8  2217               	addwfc	?_Read_b_eep+1,f,c
 13135  0015CA  ECFD  F036         	call	_Read_b_eep	;wreg free
 13136  0015CE  D36F               	goto	L108
 13137  0015D0                     l10705:
 13138                           
 13139                           ; BSR set to: 0
 13140                           ;main.c: 1726: else if ( 1 == vscp_page_select ) {
 13141  0015D0  0436               	decf	_vscp_page_select,w,c
 13142  0015D2  1037               	iorwf	_vscp_page_select+1,w,c
 13143  0015D4  A4D8               	btfss	status,2,c
 13144  0015D6  D347               	goto	l10773
 13145                           
 13146                           ; BSR set to: 0
 13147                           ;main.c: 1729: if ( (reg >= 0 ) &&
 13148                           ;main.c: 1730: (reg <= 19 ) ) {
 13149  0015D8  0E14               	movlw	20
 13150  0015DA  0100               	movlb	0	; () banked
 13151  0015DC  0100               	movlb	0	; () banked
 13152  0015DE  61A2               	cpfslt	vscp_writeAppReg@reg& (0+255),b
 13153  0015E0  D19C               	goto	l10739
 13154                           
 13155                           ; BSR set to: 0
 13156                           ;main.c: 1733: (Busy_eep(), Write_b_eep(0x43 + 46 + reg,val));
 13157  0015E2  EC35  F037         	call	_Busy_eep	;wreg free
 13158  0015E6  0E71               	movlw	113
 13159  0015E8  0100               	movlb	0	; () banked
 13160  0015EA  0100               	movlb	0	; () banked
 13161  0015EC  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13162  0015EE  6E16               	movwf	?_Write_b_eep,c
 13163  0015F0  6A17               	clrf	?_Write_b_eep+1,c
 13164  0015F2  0E00               	movlw	0
 13165  0015F4  2217               	addwfc	?_Write_b_eep+1,f,c
 13166  0015F6  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 13167  0015FA  EC65  F035         	call	_Write_b_eep	;wreg free
 13168                           
 13169                           ;main.c: 1734: rv = Read_b_eep(0x43 + 46 + reg);
 13170  0015FE  0E71               	movlw	113
 13171  001600  0100               	movlb	0	; () banked
 13172  001602  0100               	movlb	0	; () banked
 13173  001604  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13174  001606  6E16               	movwf	?_Read_b_eep,c
 13175  001608  6A17               	clrf	?_Read_b_eep+1,c
 13176  00160A  0E00               	movlw	0
 13177  00160C  2217               	addwfc	?_Read_b_eep+1,f,c
 13178  00160E  ECFD  F036         	call	_Read_b_eep	;wreg free
 13179  001612  0100               	movlb	0	; () banked
 13180  001614  0100               	movlb	0	; () banked
 13181  001616  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 13182                           
 13183                           ;main.c: 1738: switch ( reg ) {
 13184  001618  D15E               	goto	l10737
 13185  00161A                     l10715:
 13186                           
 13187                           ; BSR set to: 0
 13188                           ;main.c: 1741: channel_pulse_timer[ 0 ] =
 13189                           ;main.c: 1742: Read_b_eep(0x43 + 46 + 0) * 256 +
 13190                           ;main.c: 1744: Read_b_eep(0x43 + 46 + 1);
 13191  00161A  0E00               	movlw	0
 13192  00161C  6E17               	movwf	?_Read_b_eep+1,c
 13193  00161E  0E72               	movlw	114
 13194  001620  6E16               	movwf	?_Read_b_eep,c
 13195  001622  ECFD  F036         	call	_Read_b_eep	;wreg free
 13196  001626  0100               	movlb	0	; () banked
 13197  001628  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13198  00162A  0E00               	movlw	0
 13199  00162C  6E17               	movwf	?_Read_b_eep+1,c
 13200  00162E  0E71               	movlw	113
 13201  001630  6E16               	movwf	?_Read_b_eep,c
 13202  001632  ECFD  F036         	call	_Read_b_eep	;wreg free
 13203  001636  0100               	movlb	0	; () banked
 13204  001638  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13205  00163A  0100               	movlb	0	; () banked
 13206  00163C  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13207  00163E  0100               	movlb	0	; () banked
 13208  001640  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13209  001642  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13210  001644  0100               	movlb	0	; () banked
 13211  001646  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13212  001648  0100               	movlb	0	; () banked
 13213  00164A  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13214  00164C  0101               	movlb	1	; () banked
 13215  00164E  0101               	movlb	1	; () banked
 13216  001650  6F26               	movwf	_channel_pulse_timer& (0+255),b
 13217  001652  0100               	movlb	0	; () banked
 13218  001654  0E00               	movlw	0
 13219  001656  0100               	movlb	0	; () banked
 13220  001658  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13221  00165A  0101               	movlb	1	; () banked
 13222  00165C  6F27               	movwf	(_channel_pulse_timer+1)& (0+255),b
 13223                           
 13224                           ;main.c: 1746: break;
 13225  00165E  D32A               	goto	l10785
 13226  001660                     l10717:
 13227                           
 13228                           ;main.c: 1749: channel_pulse_timer[ 1 ] =
 13229                           ;main.c: 1750: Read_b_eep(0x43 + 46 + 2) * 256 +
 13230                           ;main.c: 1752: Read_b_eep(0x43 + 46 + 3);
 13231  001660  0E00               	movlw	0
 13232  001662  6E17               	movwf	?_Read_b_eep+1,c
 13233  001664  0E74               	movlw	116
 13234  001666  6E16               	movwf	?_Read_b_eep,c
 13235  001668  ECFD  F036         	call	_Read_b_eep	;wreg free
 13236  00166C  0100               	movlb	0	; () banked
 13237  00166E  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13238  001670  0E00               	movlw	0
 13239  001672  6E17               	movwf	?_Read_b_eep+1,c
 13240  001674  0E73               	movlw	115
 13241  001676  6E16               	movwf	?_Read_b_eep,c
 13242  001678  ECFD  F036         	call	_Read_b_eep	;wreg free
 13243  00167C  0100               	movlb	0	; () banked
 13244  00167E  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13245  001680  0100               	movlb	0	; () banked
 13246  001682  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13247  001684  0100               	movlb	0	; () banked
 13248  001686  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13249  001688  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13250  00168A  0100               	movlb	0	; () banked
 13251  00168C  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13252  00168E  0100               	movlb	0	; () banked
 13253  001690  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13254  001692  0101               	movlb	1	; () banked
 13255  001694  0101               	movlb	1	; () banked
 13256  001696  6F28               	movwf	(_channel_pulse_timer+2)& (0+255),b
 13257  001698  0100               	movlb	0	; () banked
 13258  00169A  0E00               	movlw	0
 13259  00169C  0100               	movlb	0	; () banked
 13260  00169E  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13261  0016A0  0101               	movlb	1	; () banked
 13262  0016A2  6F29               	movwf	(_channel_pulse_timer+3)& (0+255),b
 13263                           
 13264                           ;main.c: 1754: break;
 13265  0016A4  D307               	goto	l10785
 13266  0016A6                     l10719:
 13267                           
 13268                           ;main.c: 1757: channel_pulse_timer[ 2 ] =
 13269                           ;main.c: 1758: Read_b_eep(0x43 + 46 + 4) * 256 +
 13270                           ;main.c: 1760: Read_b_eep(0x43 + 46 + 5);
 13271  0016A6  0E00               	movlw	0
 13272  0016A8  6E17               	movwf	?_Read_b_eep+1,c
 13273  0016AA  0E76               	movlw	118
 13274  0016AC  6E16               	movwf	?_Read_b_eep,c
 13275  0016AE  ECFD  F036         	call	_Read_b_eep	;wreg free
 13276  0016B2  0100               	movlb	0	; () banked
 13277  0016B4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13278  0016B6  0E00               	movlw	0
 13279  0016B8  6E17               	movwf	?_Read_b_eep+1,c
 13280  0016BA  0E75               	movlw	117
 13281  0016BC  6E16               	movwf	?_Read_b_eep,c
 13282  0016BE  ECFD  F036         	call	_Read_b_eep	;wreg free
 13283  0016C2  0100               	movlb	0	; () banked
 13284  0016C4  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13285  0016C6  0100               	movlb	0	; () banked
 13286  0016C8  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13287  0016CA  0100               	movlb	0	; () banked
 13288  0016CC  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13289  0016CE  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13290  0016D0  0100               	movlb	0	; () banked
 13291  0016D2  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13292  0016D4  0100               	movlb	0	; () banked
 13293  0016D6  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13294  0016D8  0101               	movlb	1	; () banked
 13295  0016DA  0101               	movlb	1	; () banked
 13296  0016DC  6F2A               	movwf	(_channel_pulse_timer+4)& (0+255),b
 13297  0016DE  0100               	movlb	0	; () banked
 13298  0016E0  0E00               	movlw	0
 13299  0016E2  0100               	movlb	0	; () banked
 13300  0016E4  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13301  0016E6  0101               	movlb	1	; () banked
 13302  0016E8  6F2B               	movwf	(_channel_pulse_timer+5)& (0+255),b
 13303                           
 13304                           ;main.c: 1762: break;
 13305  0016EA  D2E4               	goto	l10785
 13306  0016EC                     l10721:
 13307                           
 13308                           ;main.c: 1765: channel_pulse_timer[ 3 ] =
 13309                           ;main.c: 1766: Read_b_eep(0x43 + 46 + 6) * 256 +
 13310                           ;main.c: 1768: Read_b_eep(0x43 + 46 + 7);
 13311  0016EC  0E00               	movlw	0
 13312  0016EE  6E17               	movwf	?_Read_b_eep+1,c
 13313  0016F0  0E78               	movlw	120
 13314  0016F2  6E16               	movwf	?_Read_b_eep,c
 13315  0016F4  ECFD  F036         	call	_Read_b_eep	;wreg free
 13316  0016F8  0100               	movlb	0	; () banked
 13317  0016FA  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13318  0016FC  0E00               	movlw	0
 13319  0016FE  6E17               	movwf	?_Read_b_eep+1,c
 13320  001700  0E77               	movlw	119
 13321  001702  6E16               	movwf	?_Read_b_eep,c
 13322  001704  ECFD  F036         	call	_Read_b_eep	;wreg free
 13323  001708  0100               	movlb	0	; () banked
 13324  00170A  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13325  00170C  0100               	movlb	0	; () banked
 13326  00170E  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13327  001710  0100               	movlb	0	; () banked
 13328  001712  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13329  001714  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13330  001716  0100               	movlb	0	; () banked
 13331  001718  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13332  00171A  0100               	movlb	0	; () banked
 13333  00171C  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13334  00171E  0101               	movlb	1	; () banked
 13335  001720  0101               	movlb	1	; () banked
 13336  001722  6F2C               	movwf	(_channel_pulse_timer+6)& (0+255),b
 13337  001724  0100               	movlb	0	; () banked
 13338  001726  0E00               	movlw	0
 13339  001728  0100               	movlb	0	; () banked
 13340  00172A  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13341  00172C  0101               	movlb	1	; () banked
 13342  00172E  6F2D               	movwf	(_channel_pulse_timer+7)& (0+255),b
 13343                           
 13344                           ;main.c: 1770: break;
 13345  001730  D2C1               	goto	l10785
 13346  001732                     l10723:
 13347                           
 13348                           ;main.c: 1773: channel_pulse_timer[ 4 ] =
 13349                           ;main.c: 1774: Read_b_eep(0x43 + 46 + 8) * 256 +
 13350                           ;main.c: 1776: Read_b_eep(0x43 + 46 + 9);
 13351  001732  0E00               	movlw	0
 13352  001734  6E17               	movwf	?_Read_b_eep+1,c
 13353  001736  0E7A               	movlw	122
 13354  001738  6E16               	movwf	?_Read_b_eep,c
 13355  00173A  ECFD  F036         	call	_Read_b_eep	;wreg free
 13356  00173E  0100               	movlb	0	; () banked
 13357  001740  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13358  001742  0E00               	movlw	0
 13359  001744  6E17               	movwf	?_Read_b_eep+1,c
 13360  001746  0E79               	movlw	121
 13361  001748  6E16               	movwf	?_Read_b_eep,c
 13362  00174A  ECFD  F036         	call	_Read_b_eep	;wreg free
 13363  00174E  0100               	movlb	0	; () banked
 13364  001750  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13365  001752  0100               	movlb	0	; () banked
 13366  001754  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13367  001756  0100               	movlb	0	; () banked
 13368  001758  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13369  00175A  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13370  00175C  0100               	movlb	0	; () banked
 13371  00175E  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13372  001760  0100               	movlb	0	; () banked
 13373  001762  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13374  001764  0101               	movlb	1	; () banked
 13375  001766  0101               	movlb	1	; () banked
 13376  001768  6F2E               	movwf	(_channel_pulse_timer+8)& (0+255),b
 13377  00176A  0100               	movlb	0	; () banked
 13378  00176C  0E00               	movlw	0
 13379  00176E  0100               	movlb	0	; () banked
 13380  001770  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13381  001772  0101               	movlb	1	; () banked
 13382  001774  6F2F               	movwf	(_channel_pulse_timer+9)& (0+255),b
 13383                           
 13384                           ;main.c: 1778: break;
 13385  001776  D29E               	goto	l10785
 13386  001778                     l10725:
 13387                           
 13388                           ;main.c: 1781: channel_pulse_timer[ 5 ] =
 13389                           ;main.c: 1782: Read_b_eep(0x43 + 46 + 10) * 256 +
 13390                           ;main.c: 1784: Read_b_eep(0x43 + 46 + 11);
 13391  001778  0E00               	movlw	0
 13392  00177A  6E17               	movwf	?_Read_b_eep+1,c
 13393  00177C  0E7C               	movlw	124
 13394  00177E  6E16               	movwf	?_Read_b_eep,c
 13395  001780  ECFD  F036         	call	_Read_b_eep	;wreg free
 13396  001784  0100               	movlb	0	; () banked
 13397  001786  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13398  001788  0E00               	movlw	0
 13399  00178A  6E17               	movwf	?_Read_b_eep+1,c
 13400  00178C  0E7B               	movlw	123
 13401  00178E  6E16               	movwf	?_Read_b_eep,c
 13402  001790  ECFD  F036         	call	_Read_b_eep	;wreg free
 13403  001794  0100               	movlb	0	; () banked
 13404  001796  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13405  001798  0100               	movlb	0	; () banked
 13406  00179A  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13407  00179C  0100               	movlb	0	; () banked
 13408  00179E  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13409  0017A0  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13410  0017A2  0100               	movlb	0	; () banked
 13411  0017A4  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13412  0017A6  0100               	movlb	0	; () banked
 13413  0017A8  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13414  0017AA  0101               	movlb	1	; () banked
 13415  0017AC  0101               	movlb	1	; () banked
 13416  0017AE  6F30               	movwf	(_channel_pulse_timer+10)& (0+255),b
 13417  0017B0  0100               	movlb	0	; () banked
 13418  0017B2  0E00               	movlw	0
 13419  0017B4  0100               	movlb	0	; () banked
 13420  0017B6  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13421  0017B8  0101               	movlb	1	; () banked
 13422  0017BA  6F31               	movwf	(_channel_pulse_timer+11)& (0+255),b
 13423                           
 13424                           ;main.c: 1786: break;
 13425  0017BC  D27B               	goto	l10785
 13426  0017BE                     l10727:
 13427                           
 13428                           ;main.c: 1789: channel_pulse_timer[ 6 ] =
 13429                           ;main.c: 1790: Read_b_eep(0x43 + 46 + 12) * 256 +
 13430                           ;main.c: 1792: Read_b_eep(0x43 + 46 + 13);
 13431  0017BE  0E00               	movlw	0
 13432  0017C0  6E17               	movwf	?_Read_b_eep+1,c
 13433  0017C2  0E7E               	movlw	126
 13434  0017C4  6E16               	movwf	?_Read_b_eep,c
 13435  0017C6  ECFD  F036         	call	_Read_b_eep	;wreg free
 13436  0017CA  0100               	movlb	0	; () banked
 13437  0017CC  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13438  0017CE  0E00               	movlw	0
 13439  0017D0  6E17               	movwf	?_Read_b_eep+1,c
 13440  0017D2  0E7D               	movlw	125
 13441  0017D4  6E16               	movwf	?_Read_b_eep,c
 13442  0017D6  ECFD  F036         	call	_Read_b_eep	;wreg free
 13443  0017DA  0100               	movlb	0	; () banked
 13444  0017DC  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13445  0017DE  0100               	movlb	0	; () banked
 13446  0017E0  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13447  0017E2  0100               	movlb	0	; () banked
 13448  0017E4  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13449  0017E6  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13450  0017E8  0100               	movlb	0	; () banked
 13451  0017EA  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13452  0017EC  0100               	movlb	0	; () banked
 13453  0017EE  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13454  0017F0  0101               	movlb	1	; () banked
 13455  0017F2  0101               	movlb	1	; () banked
 13456  0017F4  6F32               	movwf	(_channel_pulse_timer+12)& (0+255),b
 13457  0017F6  0100               	movlb	0	; () banked
 13458  0017F8  0E00               	movlw	0
 13459  0017FA  0100               	movlb	0	; () banked
 13460  0017FC  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13461  0017FE  0101               	movlb	1	; () banked
 13462  001800  6F33               	movwf	(_channel_pulse_timer+13)& (0+255),b
 13463                           
 13464                           ;main.c: 1794: break;
 13465  001802  D258               	goto	l10785
 13466  001804                     l10729:
 13467                           
 13468                           ;main.c: 1797: channel_pulse_timer[ 7 ] =
 13469                           ;main.c: 1798: Read_b_eep(0x43 + 46 + 14) * 256 +
 13470                           ;main.c: 1800: Read_b_eep(0x43 + 46 + 15);
 13471  001804  0E00               	movlw	0
 13472  001806  6E17               	movwf	?_Read_b_eep+1,c
 13473  001808  0E80               	movlw	128
 13474  00180A  6E16               	movwf	?_Read_b_eep,c
 13475  00180C  ECFD  F036         	call	_Read_b_eep	;wreg free
 13476  001810  0100               	movlb	0	; () banked
 13477  001812  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13478  001814  0E00               	movlw	0
 13479  001816  6E17               	movwf	?_Read_b_eep+1,c
 13480  001818  0E7F               	movlw	127
 13481  00181A  6E16               	movwf	?_Read_b_eep,c
 13482  00181C  ECFD  F036         	call	_Read_b_eep	;wreg free
 13483  001820  0100               	movlb	0	; () banked
 13484  001822  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13485  001824  0100               	movlb	0	; () banked
 13486  001826  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13487  001828  0100               	movlb	0	; () banked
 13488  00182A  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13489  00182C  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13490  00182E  0100               	movlb	0	; () banked
 13491  001830  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13492  001832  0100               	movlb	0	; () banked
 13493  001834  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13494  001836  0101               	movlb	1	; () banked
 13495  001838  0101               	movlb	1	; () banked
 13496  00183A  6F34               	movwf	(_channel_pulse_timer+14)& (0+255),b
 13497  00183C  0100               	movlb	0	; () banked
 13498  00183E  0E00               	movlw	0
 13499  001840  0100               	movlb	0	; () banked
 13500  001842  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13501  001844  0101               	movlb	1	; () banked
 13502  001846  6F35               	movwf	(_channel_pulse_timer+15)& (0+255),b
 13503                           
 13504                           ;main.c: 1802: break;
 13505  001848  D235               	goto	l10785
 13506  00184A                     l10731:
 13507                           
 13508                           ;main.c: 1805: channel_pulse_timer[ 8 ] =
 13509                           ;main.c: 1806: Read_b_eep(0x43 + 46 + 16) * 256 +
 13510                           ;main.c: 1808: Read_b_eep(0x43 + 46 + 17);
 13511  00184A  0E00               	movlw	0
 13512  00184C  6E17               	movwf	?_Read_b_eep+1,c
 13513  00184E  0E82               	movlw	130
 13514  001850  6E16               	movwf	?_Read_b_eep,c
 13515  001852  ECFD  F036         	call	_Read_b_eep	;wreg free
 13516  001856  0100               	movlb	0	; () banked
 13517  001858  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13518  00185A  0E00               	movlw	0
 13519  00185C  6E17               	movwf	?_Read_b_eep+1,c
 13520  00185E  0E81               	movlw	129
 13521  001860  6E16               	movwf	?_Read_b_eep,c
 13522  001862  ECFD  F036         	call	_Read_b_eep	;wreg free
 13523  001866  0100               	movlb	0	; () banked
 13524  001868  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13525  00186A  0100               	movlb	0	; () banked
 13526  00186C  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13527  00186E  0100               	movlb	0	; () banked
 13528  001870  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13529  001872  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13530  001874  0100               	movlb	0	; () banked
 13531  001876  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13532  001878  0100               	movlb	0	; () banked
 13533  00187A  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13534  00187C  0101               	movlb	1	; () banked
 13535  00187E  0101               	movlb	1	; () banked
 13536  001880  6F36               	movwf	(_channel_pulse_timer+16)& (0+255),b
 13537  001882  0100               	movlb	0	; () banked
 13538  001884  0E00               	movlw	0
 13539  001886  0100               	movlb	0	; () banked
 13540  001888  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13541  00188A  0101               	movlb	1	; () banked
 13542  00188C  6F37               	movwf	(_channel_pulse_timer+17)& (0+255),b
 13543                           
 13544                           ;main.c: 1810: break;
 13545  00188E  D212               	goto	l10785
 13546  001890                     l10733:
 13547                           
 13548                           ;main.c: 1813: channel_pulse_timer[ 9 ] =
 13549                           ;main.c: 1814: Read_b_eep(0x43 + 46 + 18) * 256 +
 13550                           ;main.c: 1816: Read_b_eep(0x43 + 46 + 19);
 13551  001890  0E00               	movlw	0
 13552  001892  6E17               	movwf	?_Read_b_eep+1,c
 13553  001894  0E84               	movlw	132
 13554  001896  6E16               	movwf	?_Read_b_eep,c
 13555  001898  ECFD  F036         	call	_Read_b_eep	;wreg free
 13556  00189C  0100               	movlb	0	; () banked
 13557  00189E  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13558  0018A0  0E00               	movlw	0
 13559  0018A2  6E17               	movwf	?_Read_b_eep+1,c
 13560  0018A4  0E83               	movlw	131
 13561  0018A6  6E16               	movwf	?_Read_b_eep,c
 13562  0018A8  ECFD  F036         	call	_Read_b_eep	;wreg free
 13563  0018AC  0100               	movlb	0	; () banked
 13564  0018AE  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13565  0018B0  0100               	movlb	0	; () banked
 13566  0018B2  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13567  0018B4  0100               	movlb	0	; () banked
 13568  0018B6  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13569  0018B8  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13570  0018BA  0100               	movlb	0	; () banked
 13571  0018BC  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13572  0018BE  0100               	movlb	0	; () banked
 13573  0018C0  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13574  0018C2  0101               	movlb	1	; () banked
 13575  0018C4  0101               	movlb	1	; () banked
 13576  0018C6  6F38               	movwf	(_channel_pulse_timer+18)& (0+255),b
 13577  0018C8  0100               	movlb	0	; () banked
 13578  0018CA  0E00               	movlw	0
 13579  0018CC  0100               	movlb	0	; () banked
 13580  0018CE  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13581  0018D0  0101               	movlb	1	; () banked
 13582  0018D2  6F39               	movwf	(_channel_pulse_timer+19)& (0+255),b
 13583                           
 13584                           ;main.c: 1818: break;
 13585  0018D4  D1EF               	goto	l10785
 13586  0018D6                     l10737:
 13587  0018D6  0100               	movlb	0	; () banked
 13588  0018D8  0100               	movlb	0	; () banked
 13589  0018DA  51A2               	movf	vscp_writeAppReg@reg& (0+255),w,b
 13590                           
 13591                           ; Switch size 1, requested type "space"
 13592                           ; Number of cases is 10, Range of values is 1 to 19
 13593                           ; switch strategies available:
 13594                           ; Name         Instructions Cycles
 13595                           ; simple_byte           31    16 (average)
 13596                           ;	Chosen strategy is simple_byte
 13597  0018DC  0A01               	xorlw	1	; case 1
 13598  0018DE  B4D8               	btfsc	status,2,c
 13599  0018E0  D69C               	goto	l10715
 13600  0018E2  0A02               	xorlw	2	; case 3
 13601  0018E4  B4D8               	btfsc	status,2,c
 13602  0018E6  D6BC               	goto	l10717
 13603  0018E8  0A06               	xorlw	6	; case 5
 13604  0018EA  B4D8               	btfsc	status,2,c
 13605  0018EC  D6DC               	goto	l10719
 13606  0018EE  0A02               	xorlw	2	; case 7
 13607  0018F0  B4D8               	btfsc	status,2,c
 13608  0018F2  D6FC               	goto	l10721
 13609  0018F4  0A0E               	xorlw	14	; case 9
 13610  0018F6  B4D8               	btfsc	status,2,c
 13611  0018F8  D71C               	goto	l10723
 13612  0018FA  0A02               	xorlw	2	; case 11
 13613  0018FC  B4D8               	btfsc	status,2,c
 13614  0018FE  D73C               	goto	l10725
 13615  001900  0A06               	xorlw	6	; case 13
 13616  001902  B4D8               	btfsc	status,2,c
 13617  001904  D75C               	goto	l10727
 13618  001906  0A02               	xorlw	2	; case 15
 13619  001908  B4D8               	btfsc	status,2,c
 13620  00190A  D77C               	goto	l10729
 13621  00190C  0A1E               	xorlw	30	; case 17
 13622  00190E  B4D8               	btfsc	status,2,c
 13623  001910  D79C               	goto	l10731
 13624  001912  0A02               	xorlw	2	; case 19
 13625  001914  B4D8               	btfsc	status,2,c
 13626  001916  D7BC               	goto	l10733
 13627  001918  D1CD               	goto	l10785
 13628  00191A                     l10739:
 13629                           
 13630                           ; BSR set to: 0
 13631                           ;main.c: 1826: else if ( ( reg >= 20 ) &&
 13632                           ;main.c: 1827: ( reg <= 39 ) ) {
 13633  00191A  0E13               	movlw	19
 13634  00191C  0100               	movlb	0	; () banked
 13635  00191E  0100               	movlb	0	; () banked
 13636  001920  65A2               	cpfsgt	vscp_writeAppReg@reg& (0+255),b
 13637  001922  D1C8               	goto	l10785
 13638                           
 13639                           ; BSR set to: 0
 13640  001924  0E28               	movlw	40
 13641  001926  0100               	movlb	0	; () banked
 13642  001928  0100               	movlb	0	; () banked
 13643  00192A  61A2               	cpfslt	vscp_writeAppReg@reg& (0+255),b
 13644  00192C  D1C3               	goto	l10785
 13645                           
 13646                           ; BSR set to: 0
 13647                           ;main.c: 1830: (Busy_eep(), Write_b_eep(0x43 + 46 + reg,val));
 13648  00192E  EC35  F037         	call	_Busy_eep	;wreg free
 13649  001932  0E71               	movlw	113
 13650  001934  0100               	movlb	0	; () banked
 13651  001936  0100               	movlb	0	; () banked
 13652  001938  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13653  00193A  6E16               	movwf	?_Write_b_eep,c
 13654  00193C  6A17               	clrf	?_Write_b_eep+1,c
 13655  00193E  0E00               	movlw	0
 13656  001940  2217               	addwfc	?_Write_b_eep+1,f,c
 13657  001942  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 13658  001946  EC65  F035         	call	_Write_b_eep	;wreg free
 13659                           
 13660                           ;main.c: 1831: rv = Read_b_eep(0x43 + 46 + reg);
 13661  00194A  0E71               	movlw	113
 13662  00194C  0100               	movlb	0	; () banked
 13663  00194E  0100               	movlb	0	; () banked
 13664  001950  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 13665  001952  6E16               	movwf	?_Read_b_eep,c
 13666  001954  6A17               	clrf	?_Read_b_eep+1,c
 13667  001956  0E00               	movlw	0
 13668  001958  2217               	addwfc	?_Read_b_eep+1,f,c
 13669  00195A  ECFD  F036         	call	_Read_b_eep	;wreg free
 13670  00195E  0100               	movlb	0	; () banked
 13671  001960  0100               	movlb	0	; () banked
 13672  001962  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 13673                           
 13674                           ;main.c: 1833: switch ( reg ) {
 13675  001964  D15E               	goto	l10771
 13676  001966                     l10749:
 13677                           
 13678                           ; BSR set to: 0
 13679                           ;main.c: 1836: channel_protection_timer[ 0 ] =
 13680                           ;main.c: 1837: Read_b_eep(0x43 + 46 + 20) * 256 +
 13681                           ;main.c: 1839: Read_b_eep(0x43 + 46 + 21);
 13682  001966  0E00               	movlw	0
 13683  001968  6E17               	movwf	?_Read_b_eep+1,c
 13684  00196A  0E86               	movlw	134
 13685  00196C  6E16               	movwf	?_Read_b_eep,c
 13686  00196E  ECFD  F036         	call	_Read_b_eep	;wreg free
 13687  001972  0100               	movlb	0	; () banked
 13688  001974  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13689  001976  0E00               	movlw	0
 13690  001978  6E17               	movwf	?_Read_b_eep+1,c
 13691  00197A  0E85               	movlw	133
 13692  00197C  6E16               	movwf	?_Read_b_eep,c
 13693  00197E  ECFD  F036         	call	_Read_b_eep	;wreg free
 13694  001982                     L98:
 13695  001982  0100               	movlb	0	; () banked
 13696  001984  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13697  001986  0100               	movlb	0	; () banked
 13698  001988  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13699  00198A  0100               	movlb	0	; () banked
 13700  00198C  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13701  00198E  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13702  001990  0100               	movlb	0	; () banked
 13703  001992  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13704  001994  0100               	movlb	0	; () banked
 13705  001996  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13706  001998  0100               	movlb	0	; () banked
 13707  00199A  0100               	movlb	0	; () banked
 13708  00199C  6FBD               	movwf	_channel_protection_timer& (0+255),b
 13709  00199E  0100               	movlb	0	; () banked
 13710  0019A0  0E00               	movlw	0
 13711  0019A2  0100               	movlb	0	; () banked
 13712  0019A4  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13713  0019A6  0100               	movlb	0	; () banked
 13714  0019A8  6FBE               	movwf	(_channel_protection_timer+1)& (0+255),b
 13715                           
 13716                           ;main.c: 1841: break;
 13717  0019AA  D184               	goto	l10785
 13718  0019AC                     l10751:
 13719                           
 13720                           ; BSR set to: 0
 13721                           ;main.c: 1844: channel_protection_timer[ 1 ] =
 13722                           ;main.c: 1845: Read_b_eep(0x43 + 46 + 22) * 256 +
 13723                           ;main.c: 1847: Read_b_eep(0x43 + 46 + 23);
 13724  0019AC  0E00               	movlw	0
 13725  0019AE  6E17               	movwf	?_Read_b_eep+1,c
 13726  0019B0  0E88               	movlw	136
 13727  0019B2  6E16               	movwf	?_Read_b_eep,c
 13728  0019B4  ECFD  F036         	call	_Read_b_eep	;wreg free
 13729  0019B8  0100               	movlb	0	; () banked
 13730  0019BA  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13731  0019BC  0E00               	movlw	0
 13732  0019BE  6E17               	movwf	?_Read_b_eep+1,c
 13733  0019C0  0E87               	movlw	135
 13734  0019C2  6E16               	movwf	?_Read_b_eep,c
 13735  0019C4  ECFD  F036         	call	_Read_b_eep	;wreg free
 13736  0019C8                     L99:
 13737  0019C8  0100               	movlb	0	; () banked
 13738  0019CA  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13739  0019CC  0100               	movlb	0	; () banked
 13740  0019CE  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13741  0019D0  0100               	movlb	0	; () banked
 13742  0019D2  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13743  0019D4  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13744  0019D6  0100               	movlb	0	; () banked
 13745  0019D8  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13746  0019DA  0100               	movlb	0	; () banked
 13747  0019DC  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13748  0019DE  0100               	movlb	0	; () banked
 13749  0019E0  0100               	movlb	0	; () banked
 13750  0019E2  6FBF               	movwf	(_channel_protection_timer+2)& (0+255),b
 13751  0019E4  0100               	movlb	0	; () banked
 13752  0019E6  0E00               	movlw	0
 13753  0019E8  0100               	movlb	0	; () banked
 13754  0019EA  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13755  0019EC  0100               	movlb	0	; () banked
 13756  0019EE  6FC0               	movwf	(_channel_protection_timer+3)& (0+255),b
 13757                           
 13758                           ;main.c: 1849: break;
 13759  0019F0  D161               	goto	l10785
 13760  0019F2                     l10753:
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;main.c: 1852: channel_protection_timer[ 2 ] =
 13764                           ;main.c: 1853: Read_b_eep(0x43 + 46 + 24) * 256 +
 13765                           ;main.c: 1855: Read_b_eep(0x43 + 46 + 25);
 13766  0019F2  0E00               	movlw	0
 13767  0019F4  6E17               	movwf	?_Read_b_eep+1,c
 13768  0019F6  0E8A               	movlw	138
 13769  0019F8  6E16               	movwf	?_Read_b_eep,c
 13770  0019FA  ECFD  F036         	call	_Read_b_eep	;wreg free
 13771  0019FE  0100               	movlb	0	; () banked
 13772  001A00  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13773  001A02  0E00               	movlw	0
 13774  001A04  6E17               	movwf	?_Read_b_eep+1,c
 13775  001A06  0E89               	movlw	137
 13776  001A08  6E16               	movwf	?_Read_b_eep,c
 13777  001A0A  ECFD  F036         	call	_Read_b_eep	;wreg free
 13778  001A0E                     L100:
 13779  001A0E  0100               	movlb	0	; () banked
 13780  001A10  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13781  001A12  0100               	movlb	0	; () banked
 13782  001A14  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13783  001A16  0100               	movlb	0	; () banked
 13784  001A18  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13785  001A1A  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13786  001A1C  0100               	movlb	0	; () banked
 13787  001A1E  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13788  001A20  0100               	movlb	0	; () banked
 13789  001A22  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13790  001A24  0100               	movlb	0	; () banked
 13791  001A26  0100               	movlb	0	; () banked
 13792  001A28  6FC1               	movwf	(_channel_protection_timer+4)& (0+255),b
 13793  001A2A  0100               	movlb	0	; () banked
 13794  001A2C  0E00               	movlw	0
 13795  001A2E  0100               	movlb	0	; () banked
 13796  001A30  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13797  001A32  0100               	movlb	0	; () banked
 13798  001A34  6FC2               	movwf	(_channel_protection_timer+5)& (0+255),b
 13799                           
 13800                           ;main.c: 1857: break;
 13801  001A36  D13E               	goto	l10785
 13802  001A38                     l10755:
 13803                           
 13804                           ; BSR set to: 0
 13805                           ;main.c: 1860: channel_protection_timer[ 3 ] =
 13806                           ;main.c: 1861: Read_b_eep(0x43 + 46 + 26) * 256 +
 13807                           ;main.c: 1863: Read_b_eep(0x43 + 46 + 27);
 13808  001A38  0E00               	movlw	0
 13809  001A3A  6E17               	movwf	?_Read_b_eep+1,c
 13810  001A3C  0E8C               	movlw	140
 13811  001A3E  6E16               	movwf	?_Read_b_eep,c
 13812  001A40  ECFD  F036         	call	_Read_b_eep	;wreg free
 13813  001A44  0100               	movlb	0	; () banked
 13814  001A46  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13815  001A48  0E00               	movlw	0
 13816  001A4A  6E17               	movwf	?_Read_b_eep+1,c
 13817  001A4C  0E8B               	movlw	139
 13818  001A4E  6E16               	movwf	?_Read_b_eep,c
 13819  001A50  ECFD  F036         	call	_Read_b_eep	;wreg free
 13820  001A54                     L101:
 13821  001A54  0100               	movlb	0	; () banked
 13822  001A56  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13823  001A58  0100               	movlb	0	; () banked
 13824  001A5A  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13825  001A5C  0100               	movlb	0	; () banked
 13826  001A5E  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13827  001A60  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13828  001A62  0100               	movlb	0	; () banked
 13829  001A64  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13830  001A66  0100               	movlb	0	; () banked
 13831  001A68  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13832  001A6A  0100               	movlb	0	; () banked
 13833  001A6C  0100               	movlb	0	; () banked
 13834  001A6E  6FC3               	movwf	(_channel_protection_timer+6)& (0+255),b
 13835  001A70  0100               	movlb	0	; () banked
 13836  001A72  0E00               	movlw	0
 13837  001A74  0100               	movlb	0	; () banked
 13838  001A76  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13839  001A78  0100               	movlb	0	; () banked
 13840  001A7A  6FC4               	movwf	(_channel_protection_timer+7)& (0+255),b
 13841                           
 13842                           ;main.c: 1865: break;
 13843  001A7C  D11B               	goto	l10785
 13844  001A7E                     l10757:
 13845                           
 13846                           ; BSR set to: 0
 13847                           ;main.c: 1868: channel_protection_timer[ 4 ] =
 13848                           ;main.c: 1869: Read_b_eep(0x43 + 46 + 28) * 256 +
 13849                           ;main.c: 1871: Read_b_eep(0x43 + 46 + 29);
 13850  001A7E  0E00               	movlw	0
 13851  001A80  6E17               	movwf	?_Read_b_eep+1,c
 13852  001A82  0E8E               	movlw	142
 13853  001A84  6E16               	movwf	?_Read_b_eep,c
 13854  001A86  ECFD  F036         	call	_Read_b_eep	;wreg free
 13855  001A8A  0100               	movlb	0	; () banked
 13856  001A8C  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13857  001A8E  0E00               	movlw	0
 13858  001A90  6E17               	movwf	?_Read_b_eep+1,c
 13859  001A92  0E8D               	movlw	141
 13860  001A94  6E16               	movwf	?_Read_b_eep,c
 13861  001A96  ECFD  F036         	call	_Read_b_eep	;wreg free
 13862  001A9A                     L102:
 13863  001A9A  0100               	movlb	0	; () banked
 13864  001A9C  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13865  001A9E  0100               	movlb	0	; () banked
 13866  001AA0  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13867  001AA2  0100               	movlb	0	; () banked
 13868  001AA4  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13869  001AA6  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13870  001AA8  0100               	movlb	0	; () banked
 13871  001AAA  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13872  001AAC  0100               	movlb	0	; () banked
 13873  001AAE  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13874  001AB0  0100               	movlb	0	; () banked
 13875  001AB2  0100               	movlb	0	; () banked
 13876  001AB4  6FC5               	movwf	(_channel_protection_timer+8)& (0+255),b
 13877  001AB6  0100               	movlb	0	; () banked
 13878  001AB8  0E00               	movlw	0
 13879  001ABA  0100               	movlb	0	; () banked
 13880  001ABC  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13881  001ABE  0100               	movlb	0	; () banked
 13882  001AC0  6FC6               	movwf	(_channel_protection_timer+9)& (0+255),b
 13883                           
 13884                           ;main.c: 1873: break;
 13885  001AC2  D0F8               	goto	l10785
 13886  001AC4                     l10759:
 13887                           
 13888                           ; BSR set to: 0
 13889                           ;main.c: 1876: channel_protection_timer[ 5 ] =
 13890                           ;main.c: 1877: Read_b_eep(0x43 + 46 + 30) * 256 +
 13891                           ;main.c: 1879: Read_b_eep(0x43 + 46 + 31);
 13892  001AC4  0E00               	movlw	0
 13893  001AC6  6E17               	movwf	?_Read_b_eep+1,c
 13894  001AC8  0E90               	movlw	144
 13895  001ACA  6E16               	movwf	?_Read_b_eep,c
 13896  001ACC  ECFD  F036         	call	_Read_b_eep	;wreg free
 13897  001AD0  0100               	movlb	0	; () banked
 13898  001AD2  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13899  001AD4  0E00               	movlw	0
 13900  001AD6  6E17               	movwf	?_Read_b_eep+1,c
 13901  001AD8  0E8F               	movlw	143
 13902  001ADA  6E16               	movwf	?_Read_b_eep,c
 13903  001ADC  ECFD  F036         	call	_Read_b_eep	;wreg free
 13904  001AE0                     L103:
 13905  001AE0  0100               	movlb	0	; () banked
 13906  001AE2  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13907  001AE4  0100               	movlb	0	; () banked
 13908  001AE6  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13909  001AE8  0100               	movlb	0	; () banked
 13910  001AEA  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13911  001AEC  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13912  001AEE  0100               	movlb	0	; () banked
 13913  001AF0  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13914  001AF2  0100               	movlb	0	; () banked
 13915  001AF4  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13916  001AF6  0100               	movlb	0	; () banked
 13917  001AF8  0100               	movlb	0	; () banked
 13918  001AFA  6FC7               	movwf	(_channel_protection_timer+10)& (0+255),b
 13919  001AFC  0100               	movlb	0	; () banked
 13920  001AFE  0E00               	movlw	0
 13921  001B00  0100               	movlb	0	; () banked
 13922  001B02  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13923  001B04  0100               	movlb	0	; () banked
 13924  001B06  6FC8               	movwf	(_channel_protection_timer+11)& (0+255),b
 13925                           
 13926                           ;main.c: 1881: break;
 13927  001B08  D0D5               	goto	l10785
 13928  001B0A                     l10761:
 13929                           
 13930                           ; BSR set to: 0
 13931                           ;main.c: 1884: channel_protection_timer[ 6 ] =
 13932                           ;main.c: 1885: Read_b_eep(0x43 + 46 + 32) * 256 +
 13933                           ;main.c: 1887: Read_b_eep(0x43 + 46 + 33);
 13934  001B0A  0E00               	movlw	0
 13935  001B0C  6E17               	movwf	?_Read_b_eep+1,c
 13936  001B0E  0E92               	movlw	146
 13937  001B10  6E16               	movwf	?_Read_b_eep,c
 13938  001B12  ECFD  F036         	call	_Read_b_eep	;wreg free
 13939  001B16  0100               	movlb	0	; () banked
 13940  001B18  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13941  001B1A  0E00               	movlw	0
 13942  001B1C  6E17               	movwf	?_Read_b_eep+1,c
 13943  001B1E  0E91               	movlw	145
 13944  001B20  6E16               	movwf	?_Read_b_eep,c
 13945  001B22  ECFD  F036         	call	_Read_b_eep	;wreg free
 13946  001B26                     L104:
 13947  001B26  0100               	movlb	0	; () banked
 13948  001B28  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13949  001B2A  0100               	movlb	0	; () banked
 13950  001B2C  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13951  001B2E  0100               	movlb	0	; () banked
 13952  001B30  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13953  001B32  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13954  001B34  0100               	movlb	0	; () banked
 13955  001B36  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13956  001B38  0100               	movlb	0	; () banked
 13957  001B3A  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 13958  001B3C  0100               	movlb	0	; () banked
 13959  001B3E  0100               	movlb	0	; () banked
 13960  001B40  6FC9               	movwf	(_channel_protection_timer+12)& (0+255),b
 13961  001B42  0100               	movlb	0	; () banked
 13962  001B44  0E00               	movlw	0
 13963  001B46  0100               	movlb	0	; () banked
 13964  001B48  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 13965  001B4A  0100               	movlb	0	; () banked
 13966  001B4C  6FCA               	movwf	(_channel_protection_timer+13)& (0+255),b
 13967                           
 13968                           ;main.c: 1889: break;
 13969  001B4E  D0B2               	goto	l10785
 13970  001B50                     l10763:
 13971                           
 13972                           ; BSR set to: 0
 13973                           ;main.c: 1892: channel_protection_timer[ 7 ] =
 13974                           ;main.c: 1893: Read_b_eep(0x43 + 46 + 34) * 256 +
 13975                           ;main.c: 1895: Read_b_eep(0x43 + 46 + 35);
 13976  001B50  0E00               	movlw	0
 13977  001B52  6E17               	movwf	?_Read_b_eep+1,c
 13978  001B54  0E94               	movlw	148
 13979  001B56  6E16               	movwf	?_Read_b_eep,c
 13980  001B58  ECFD  F036         	call	_Read_b_eep	;wreg free
 13981  001B5C  0100               	movlb	0	; () banked
 13982  001B5E  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 13983  001B60  0E00               	movlw	0
 13984  001B62  6E17               	movwf	?_Read_b_eep+1,c
 13985  001B64  0E93               	movlw	147
 13986  001B66  6E16               	movwf	?_Read_b_eep,c
 13987  001B68  ECFD  F036         	call	_Read_b_eep	;wreg free
 13988  001B6C                     L105:
 13989  001B6C  0100               	movlb	0	; () banked
 13990  001B6E  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 13991  001B70  0100               	movlb	0	; () banked
 13992  001B72  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 13993  001B74  0100               	movlb	0	; () banked
 13994  001B76  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 13995  001B78  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 13996  001B7A  0100               	movlb	0	; () banked
 13997  001B7C  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 13998  001B7E  0100               	movlb	0	; () banked
 13999  001B80  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14000  001B82  0100               	movlb	0	; () banked
 14001  001B84  0100               	movlb	0	; () banked
 14002  001B86  6FCB               	movwf	(_channel_protection_timer+14)& (0+255),b
 14003  001B88  0100               	movlb	0	; () banked
 14004  001B8A  0E00               	movlw	0
 14005  001B8C  0100               	movlb	0	; () banked
 14006  001B8E  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14007  001B90  0100               	movlb	0	; () banked
 14008  001B92  6FCC               	movwf	(_channel_protection_timer+15)& (0+255),b
 14009                           
 14010                           ;main.c: 1897: break;
 14011  001B94  D08F               	goto	l10785
 14012  001B96                     l10765:
 14013                           
 14014                           ; BSR set to: 0
 14015                           ;main.c: 1900: channel_protection_timer[ 8 ] =
 14016                           ;main.c: 1901: Read_b_eep(0x43 + 46 + 36) * 256 +
 14017                           ;main.c: 1903: Read_b_eep(0x43 + 46 + 37);
 14018  001B96  0E00               	movlw	0
 14019  001B98  6E17               	movwf	?_Read_b_eep+1,c
 14020  001B9A  0E96               	movlw	150
 14021  001B9C  6E16               	movwf	?_Read_b_eep,c
 14022  001B9E  ECFD  F036         	call	_Read_b_eep	;wreg free
 14023  001BA2  0100               	movlb	0	; () banked
 14024  001BA4  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14025  001BA6  0E00               	movlw	0
 14026  001BA8  6E17               	movwf	?_Read_b_eep+1,c
 14027  001BAA  0E95               	movlw	149
 14028  001BAC  6E16               	movwf	?_Read_b_eep,c
 14029  001BAE  ECFD  F036         	call	_Read_b_eep	;wreg free
 14030  001BB2                     L106:
 14031  001BB2  0100               	movlb	0	; () banked
 14032  001BB4  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14033  001BB6  0100               	movlb	0	; () banked
 14034  001BB8  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14035  001BBA  0100               	movlb	0	; () banked
 14036  001BBC  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14037  001BBE  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14038  001BC0  0100               	movlb	0	; () banked
 14039  001BC2  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14040  001BC4  0100               	movlb	0	; () banked
 14041  001BC6  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14042  001BC8  0100               	movlb	0	; () banked
 14043  001BCA  0100               	movlb	0	; () banked
 14044  001BCC  6FCD               	movwf	(_channel_protection_timer+16)& (0+255),b
 14045  001BCE  0100               	movlb	0	; () banked
 14046  001BD0  0E00               	movlw	0
 14047  001BD2  0100               	movlb	0	; () banked
 14048  001BD4  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14049  001BD6  0100               	movlb	0	; () banked
 14050  001BD8  6FCE               	movwf	(_channel_protection_timer+17)& (0+255),b
 14051                           
 14052                           ;main.c: 1905: break;
 14053  001BDA  D06C               	goto	l10785
 14054  001BDC                     l10767:
 14055                           
 14056                           ; BSR set to: 0
 14057                           ;main.c: 1908: channel_protection_timer[ 9 ] =
 14058                           ;main.c: 1909: Read_b_eep(0x43 + 46 + 38) * 256 +
 14059                           ;main.c: 1911: Read_b_eep(0x43 + 46 + 39);
 14060  001BDC  0E00               	movlw	0
 14061  001BDE  6E17               	movwf	?_Read_b_eep+1,c
 14062  001BE0  0E98               	movlw	152
 14063  001BE2  6E16               	movwf	?_Read_b_eep,c
 14064  001BE4  ECFD  F036         	call	_Read_b_eep	;wreg free
 14065  001BE8  0100               	movlb	0	; () banked
 14066  001BEA  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14067  001BEC  0E00               	movlw	0
 14068  001BEE  6E17               	movwf	?_Read_b_eep+1,c
 14069  001BF0  0E97               	movlw	151
 14070  001BF2  6E16               	movwf	?_Read_b_eep,c
 14071  001BF4  ECFD  F036         	call	_Read_b_eep	;wreg free
 14072  001BF8                     L107:
 14073  001BF8  0100               	movlb	0	; () banked
 14074  001BFA  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14075  001BFC  0100               	movlb	0	; () banked
 14076  001BFE  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14077  001C00  0100               	movlb	0	; () banked
 14078  001C02  6FA7               	movwf	(??_vscp_writeAppReg+3)& (0+255),b
 14079  001C04  6BA6               	clrf	(??_vscp_writeAppReg+2)& (0+255),b
 14080  001C06  0100               	movlb	0	; () banked
 14081  001C08  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14082  001C0A  0100               	movlb	0	; () banked
 14083  001C0C  25A6               	addwf	(??_vscp_writeAppReg+2)& (0+255),w,b
 14084  001C0E  0100               	movlb	0	; () banked
 14085  001C10  0100               	movlb	0	; () banked
 14086  001C12  6FCF               	movwf	(_channel_protection_timer+18)& (0+255),b
 14087  001C14  0100               	movlb	0	; () banked
 14088  001C16  0E00               	movlw	0
 14089  001C18  0100               	movlb	0	; () banked
 14090  001C1A  21A7               	addwfc	(??_vscp_writeAppReg+3)& (0+255),w,b
 14091  001C1C  0100               	movlb	0	; () banked
 14092  001C1E  6FD0               	movwf	(_channel_protection_timer+19)& (0+255),b
 14093                           
 14094                           ;main.c: 1913: break;
 14095  001C20  D049               	goto	l10785
 14096  001C22                     l10771:
 14097                           
 14098                           ; BSR set to: 0
 14099  001C22  0100               	movlb	0	; () banked
 14100  001C24  0100               	movlb	0	; () banked
 14101  001C26  51A2               	movf	vscp_writeAppReg@reg& (0+255),w,b
 14102                           
 14103                           ; Switch size 1, requested type "space"
 14104                           ; Number of cases is 10, Range of values is 21 to 39
 14105                           ; switch strategies available:
 14106                           ; Name         Instructions Cycles
 14107                           ; simple_byte           31    16 (average)
 14108                           ;	Chosen strategy is simple_byte
 14109  001C28  0A15               	xorlw	21	; case 21
 14110  001C2A  B4D8               	btfsc	status,2,c
 14111  001C2C  D69C               	goto	l10749
 14112  001C2E  0A02               	xorlw	2	; case 23
 14113  001C30  B4D8               	btfsc	status,2,c
 14114  001C32  D6BC               	goto	l10751
 14115  001C34  0A0E               	xorlw	14	; case 25
 14116  001C36  B4D8               	btfsc	status,2,c
 14117  001C38  D6DC               	goto	l10753
 14118  001C3A  0A02               	xorlw	2	; case 27
 14119  001C3C  B4D8               	btfsc	status,2,c
 14120  001C3E  D6FC               	goto	l10755
 14121  001C40  0A06               	xorlw	6	; case 29
 14122  001C42  B4D8               	btfsc	status,2,c
 14123  001C44  D71C               	goto	l10757
 14124  001C46  0A02               	xorlw	2	; case 31
 14125  001C48  B4D8               	btfsc	status,2,c
 14126  001C4A  D73C               	goto	l10759
 14127  001C4C  0A3E               	xorlw	62	; case 33
 14128  001C4E  B4D8               	btfsc	status,2,c
 14129  001C50  D75C               	goto	l10761
 14130  001C52  0A02               	xorlw	2	; case 35
 14131  001C54  B4D8               	btfsc	status,2,c
 14132  001C56  D77C               	goto	l10763
 14133  001C58  0A06               	xorlw	6	; case 37
 14134  001C5A  B4D8               	btfsc	status,2,c
 14135  001C5C  D79C               	goto	l10765
 14136  001C5E  0A02               	xorlw	2	; case 39
 14137  001C60  B4D8               	btfsc	status,2,c
 14138  001C62  D7BC               	goto	l10767
 14139  001C64  D027               	goto	l10785
 14140  001C66                     l10773:
 14141                           
 14142                           ; BSR set to: 0
 14143                           ;main.c: 1924: else if ( 2 == vscp_page_select ) {
 14144  001C66  5036               	movf	_vscp_page_select,w,c
 14145  001C68  0A02               	xorlw	2
 14146  001C6A  1037               	iorwf	_vscp_page_select+1,w,c
 14147  001C6C  A4D8               	btfss	status,2,c
 14148  001C6E  D022               	goto	l10785
 14149                           
 14150                           ; BSR set to: 0
 14151                           ;main.c: 1926: if ( reg < (0 + 8 * 8) ) {
 14152  001C70  0E40               	movlw	64
 14153  001C72  0100               	movlb	0	; () banked
 14154  001C74  0100               	movlb	0	; () banked
 14155  001C76  61A2               	cpfslt	vscp_writeAppReg@reg& (0+255),b
 14156  001C78  D01D               	goto	l10785
 14157                           
 14158                           ; BSR set to: 0
 14159                           ;main.c: 1927: (Busy_eep(), Write_b_eep(0x43 + 46 + 40 + reg,val));
 14160  001C7A  EC35  F037         	call	_Busy_eep	;wreg free
 14161  001C7E  0E99               	movlw	153
 14162  001C80  0100               	movlb	0	; () banked
 14163  001C82  0100               	movlb	0	; () banked
 14164  001C84  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 14165  001C86  6E16               	movwf	?_Write_b_eep,c
 14166  001C88  6A17               	clrf	?_Write_b_eep+1,c
 14167  001C8A  0E00               	movlw	0
 14168  001C8C  2217               	addwfc	?_Write_b_eep+1,f,c
 14169  001C8E  C0A3  F018         	movff	vscp_writeAppReg@val,?_Write_b_eep+2
 14170  001C92  EC65  F035         	call	_Write_b_eep	;wreg free
 14171                           
 14172                           ;main.c: 1928: calculateSetFilterMask();
 14173  001C96  EC5E  F01A         	call	_calculateSetFilterMask	;wreg free
 14174                           
 14175                           ;main.c: 1929: rv = Read_b_eep(0x43 + 46 + 40 + reg);
 14176  001C9A  0E99               	movlw	153
 14177  001C9C  0100               	movlb	0	; () banked
 14178  001C9E  0100               	movlb	0	; () banked
 14179  001CA0  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 14180  001CA2  6E16               	movwf	?_Read_b_eep,c
 14181  001CA4  6A17               	clrf	?_Read_b_eep+1,c
 14182  001CA6  0E00               	movlw	0
 14183  001CA8  2217               	addwfc	?_Read_b_eep+1,f,c
 14184  001CAA  ECFD  F036         	call	_Read_b_eep	;wreg free
 14185  001CAE                     L108:
 14186  001CAE  0100               	movlb	0	; () banked
 14187  001CB0  0100               	movlb	0	; () banked
 14188  001CB2  6FAB               	movwf	vscp_writeAppReg@rv& (0+255),b
 14189  001CB4                     l10785:
 14190                           
 14191                           ;main.c: 1930: }
 14192                           ;main.c: 1932: }
 14193                           ;main.c: 1938: if ( bInfoEvent ) {
 14194  001CB4  0100               	movlb	0	; () banked
 14195  001CB6  0100               	movlb	0	; () banked
 14196  001CB8  51A9               	movf	vscp_writeAppReg@bInfoEvent& (0+255),w,b
 14197  001CBA  B4D8               	btfsc	status,2,c
 14198  001CBC  D041               	goto	l10797
 14199                           
 14200                           ; BSR set to: 0
 14201                           ;main.c: 1940: unsigned char val;
 14202                           ;main.c: 1941: val = Read_b_eep(0x43 + 14 + (reg - 14));
 14203  001CBE  0E43               	movlw	67
 14204  001CC0  0100               	movlb	0	; () banked
 14205  001CC2  0100               	movlb	0	; () banked
 14206  001CC4  25A2               	addwf	vscp_writeAppReg@reg& (0+255),w,b
 14207  001CC6  6E16               	movwf	?_Read_b_eep,c
 14208  001CC8  6A17               	clrf	?_Read_b_eep+1,c
 14209  001CCA  0E00               	movlw	0
 14210  001CCC  2217               	addwfc	?_Read_b_eep+1,f,c
 14211  001CCE  ECFD  F036         	call	_Read_b_eep	;wreg free
 14212  001CD2  0100               	movlb	0	; () banked
 14213  001CD4  0100               	movlb	0	; () banked
 14214  001CD6  6FA8               	movwf	vscp_writeAppReg@val_1165& (0+255),b
 14215                           
 14216                           ; BSR set to: 0
 14217                           ;main.c: 1944: if ( bOn ) {
 14218  001CD8  0100               	movlb	0	; () banked
 14219  001CDA  0100               	movlb	0	; () banked
 14220  001CDC  51AA               	movf	vscp_writeAppReg@bOn& (0+255),w,b
 14221  001CDE  B4D8               	btfsc	status,2,c
 14222  001CE0  D018               	goto	l730
 14223                           
 14224                           ; BSR set to: 0
 14225                           ;main.c: 1946: if ( val & 0x08 ) {
 14226  001CE2  0100               	movlb	0	; () banked
 14227  001CE4  0100               	movlb	0	; () banked
 14228  001CE6  A7A8               	btfss	vscp_writeAppReg@val_1165& (0+255),3,b
 14229  001CE8  D02B               	goto	l10797
 14230                           
 14231                           ; BSR set to: 0
 14232                           ;main.c: 1947: SendInformationEvent( reg - 14,
 14233                           ;main.c: 1948: 20,
 14234                           ;main.c: 1949: 3 );
 14235  001CEA  0100               	movlb	0	; () banked
 14236  001CEC  0100               	movlb	0	; () banked
 14237  001CEE  51A2               	movf	vscp_writeAppReg@reg& (0+255),w,b
 14238  001CF0  0FF2               	addlw	242
 14239  001CF2  6E30               	movwf	?_SendInformationEvent,c
 14240  001CF4  0100               	movlb	0	; () banked
 14241  001CF6  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14242  001CF8  0E14               	movlw	20
 14243  001CFA  6E31               	movwf	?_SendInformationEvent+1,c
 14244  001CFC  0100               	movlb	0	; () banked
 14245  001CFE  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14246  001D00  0100               	movlb	0	; () banked
 14247  001D02  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14248  001D04  0E03               	movlw	3
 14249  001D06  6E32               	movwf	?_SendInformationEvent+2,c
 14250  001D08  0100               	movlb	0	; () banked
 14251  001D0A  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14252  001D0C  EC48  F034         	call	_SendInformationEvent	;wreg free
 14253  001D10  D017               	goto	l10797
 14254  001D12                     l730:
 14255                           
 14256                           ; BSR set to: 0
 14257                           ;main.c: 1953: else {
 14258                           ;main.c: 1955: if ( val & 0x10 ) {
 14259  001D12  0100               	movlb	0	; () banked
 14260  001D14  0100               	movlb	0	; () banked
 14261  001D16  A9A8               	btfss	vscp_writeAppReg@val_1165& (0+255),4,b
 14262  001D18  D013               	goto	l10797
 14263                           
 14264                           ; BSR set to: 0
 14265                           ;main.c: 1956: SendInformationEvent( reg - 14,
 14266                           ;main.c: 1957: 20,
 14267                           ;main.c: 1958: 4 );
 14268  001D1A  0100               	movlb	0	; () banked
 14269  001D1C  0100               	movlb	0	; () banked
 14270  001D1E  51A2               	movf	vscp_writeAppReg@reg& (0+255),w,b
 14271  001D20  0FF2               	addlw	242
 14272  001D22  6E30               	movwf	?_SendInformationEvent,c
 14273  001D24  0100               	movlb	0	; () banked
 14274  001D26  6FA4               	movwf	??_vscp_writeAppReg& (0+255),b
 14275  001D28  0E14               	movlw	20
 14276  001D2A  6E31               	movwf	?_SendInformationEvent+1,c
 14277  001D2C  0100               	movlb	0	; () banked
 14278  001D2E  51A4               	movf	??_vscp_writeAppReg& (0+255),w,b
 14279  001D30  0100               	movlb	0	; () banked
 14280  001D32  6FA5               	movwf	(??_vscp_writeAppReg+1)& (0+255),b
 14281  001D34  0E04               	movlw	4
 14282  001D36  6E32               	movwf	?_SendInformationEvent+2,c
 14283  001D38  0100               	movlb	0	; () banked
 14284  001D3A  51A5               	movf	(??_vscp_writeAppReg+1)& (0+255),w,b
 14285  001D3C  EC48  F034         	call	_SendInformationEvent	;wreg free
 14286  001D40                     l10797:
 14287                           
 14288                           ;main.c: 1959: }
 14289                           ;main.c: 1961: }
 14290                           ;main.c: 1962: }
 14291                           ;main.c: 1964: return rv;
 14292  001D40  0100               	movlb	0	; () banked
 14293  001D42  0100               	movlb	0	; () banked
 14294  001D44  51AB               	movf	vscp_writeAppReg@rv& (0+255),w,b
 14295                           
 14296                           ; BSR set to: 0
 14297                           
 14298                           ; BSR set to: 0
 14299  001D46  0012               	return	
 14300  001D48                     __end_of_vscp_writeAppReg:
 14301                           	opt stack 0
 14302                           tblptru	equ	0xFF8
 14303                           prodh	equ	0xFF4
 14304                           prodl	equ	0xFF3
 14305                           postinc0	equ	0xFEE
 14306                           wreg	equ	0xFE8
 14307                           indf2	equ	0xFDF
 14308                           postinc2	equ	0xFDE
 14309                           postdec2	equ	0xFDD
 14310                           fsr2h	equ	0xFDA
 14311                           fsr2l	equ	0xFD9
 14312                           status	equ	0xFD8
 14313                           
 14314 ;; *************** function _calculateSetFilterMask *****************
 14315 ;; Defined at:
 14316 ;;		line 3159 in file "../main.c"
 14317 ;; Parameters:    Size  Location     Type
 14318 ;;		None
 14319 ;; Auto vars:     Size  Location     Type
 14320 ;;  rowfilter       4   45[COMRAM] unsigned long 
 14321 ;;  filter          4   41[COMRAM] unsigned long 
 14322 ;;  mask            4   37[COMRAM] unsigned long 
 14323 ;;  rowmask         4   32[COMRAM] unsigned long 
 14324 ;;  i               1   50[COMRAM] unsigned char 
 14325 ;;  j               1   49[COMRAM] unsigned char 
 14326 ;;  lastOID         1   36[COMRAM] unsigned char 
 14327 ;; Return value:  Size  Location     Type
 14328 ;;		None               void
 14329 ;; Registers used:
 14330 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 14331 ;; Tracked objects:
 14332 ;;		On entry : 0/0
 14333 ;;		On exit  : 0/0
 14334 ;;		Unchanged: 0/0
 14335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14336 ;;      Params:         0       0       0       0       0       0       0
 14337 ;;      Locals:        19       0       0       0       0       0       0
 14338 ;;      Temps:          0      32       0       0       0       0       0
 14339 ;;      Totals:        19      32       0       0       0       0       0
 14340 ;;Total ram usage:       51 bytes
 14341 ;; Hardware stack levels used:    1
 14342 ;; Hardware stack levels required when called:    3
 14343 ;; This function calls:
 14344 ;;		_ECANSetOperationMode
 14345 ;;		__CANIDToRegs
 14346 ;;		_Read_b_eep
 14347 ;; This function is called by:
 14348 ;;		_vscp_writeAppReg
 14349 ;; This function uses a non-reentrant model
 14350 ;;
 14351                           
 14352                           	psect	text24
 14353  0034BC                     __ptext24:
 14354                           	opt stack 0
 14355  0034BC                     _calculateSetFilterMask:
 14356                           	opt stack 23
 14357                           
 14358                           ;main.c: 3160: uint8_t i,j;
 14359                           ;main.c: 3161: uint8_t lastOID;
 14360                           ;main.c: 3162: uint32_t rowmask;
 14361                           ;main.c: 3163: uint32_t rowfilter;
 14362                           ;main.c: 3166: uint32_t mask = 0xffffffff;
 14363                           
 14364                           ; BSR set to: 0
 14365                           ;incstack = 0
 14366                           ;incstack = 0
 14367  0034BC  6826               	setf	calculateSetFilterMask@mask,c
 14368  0034BE  6827               	setf	calculateSetFilterMask@mask+1,c
 14369  0034C0  6828               	setf	calculateSetFilterMask@mask+2,c
 14370  0034C2  6829               	setf	calculateSetFilterMask@mask+3,c
 14371                           
 14372                           ;main.c: 3167: uint32_t filter = 0;
 14373  0034C4  0E00               	movlw	0
 14374  0034C6  6E2A               	movwf	calculateSetFilterMask@filter,c
 14375  0034C8  0E00               	movlw	0
 14376  0034CA  6E2B               	movwf	calculateSetFilterMask@filter+1,c
 14377  0034CC  0E00               	movlw	0
 14378  0034CE  6E2C               	movwf	calculateSetFilterMask@filter+2,c
 14379  0034D0  0E00               	movlw	0
 14380  0034D2  6E2D               	movwf	calculateSetFilterMask@filter+3,c
 14381                           
 14382                           ;main.c: 3170: for ( i=0; i < 8; i++ ) {
 14383  0034D4  0100               	movlb	0	; () banked
 14384  0034D6  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 14385  0034D8  0E00               	movlw	0
 14386  0034DA  6E33               	movwf	calculateSetFilterMask@i,c
 14387  0034DC  0100               	movlb	0	; () banked
 14388  0034DE  5160               	movf	??_calculateSetFilterMask& (0+255),w,b
 14389  0034E0  D313               	goto	L110
 14390  0034E2                     l10809:
 14391                           
 14392                           ;main.c: 3173: if ( Read_b_eep(0x43 + 8*i + 1) & 0x80 ) {
 14393  0034E2  5033               	movf	calculateSetFilterMask@i,w,c
 14394  0034E4  0100               	movlb	0	; () banked
 14395  0034E6  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 14396  0034E8  6B61               	clrf	(??_calculateSetFilterMask+1)& (0+255),b
 14397  0034EA  0100               	movlb	0	; () banked
 14398  0034EC  90D8               	bcf	status,0,c
 14399  0034EE  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 14400  0034F0  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 14401  0034F2  0100               	movlb	0	; () banked
 14402  0034F4  90D8               	bcf	status,0,c
 14403  0034F6  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 14404  0034F8  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 14405  0034FA  0100               	movlb	0	; () banked
 14406  0034FC  90D8               	bcf	status,0,c
 14407  0034FE  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 14408  003500  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 14409  003502  0E44               	movlw	68
 14410  003504  0100               	movlb	0	; () banked
 14411  003506  2560               	addwf	??_calculateSetFilterMask& (0+255),w,b
 14412  003508  6E16               	movwf	?_Read_b_eep,c
 14413  00350A  0E00               	movlw	0
 14414  00350C  0100               	movlb	0	; () banked
 14415  00350E  2161               	addwfc	(??_calculateSetFilterMask+1)& (0+255),w,b
 14416  003510  6E17               	movwf	?_Read_b_eep+1,c
 14417  003512  ECFD  F036         	call	_Read_b_eep	;wreg free
 14418  003516  0100               	movlb	0	; () banked
 14419  003518  6F62               	movwf	(??_calculateSetFilterMask+2)& (0+255),b
 14420  00351A  0100               	movlb	0	; () banked
 14421  00351C  AF62               	btfss	(??_calculateSetFilterMask+2)& (0+255),7,b
 14422  00351E  D2F3               	goto	l10853
 14423                           
 14424                           ; BSR set to: 0
 14425                           ;main.c: 3182: rowmask =
 14426                           ;main.c: 3184: ( (uint32_t)( Read_b_eep(0x43 + 8*i + 1) & 2 ) << 23 ) |
 14427                           ;main.c: 3186: ( (uint32_t)Read_b_eep(0x43 + 8*i + 2) << 16 ) |
 14428                           ;main.c: 3188: ( (uint32_t)Read_b_eep(0x43 + 8*i + 4) << 8 ) |
 14429                           ;main.c: 3190: 0xff;
 14430  003520  5033               	movf	calculateSetFilterMask@i,w,c
 14431  003522  0100               	movlb	0	; () banked
 14432  003524  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 14433  003526  6B61               	clrf	(??_calculateSetFilterMask+1)& (0+255),b
 14434  003528  0100               	movlb	0	; () banked
 14435  00352A  90D8               	bcf	status,0,c
 14436  00352C  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 14437  00352E  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 14438  003530  0100               	movlb	0	; () banked
 14439  003532  90D8               	bcf	status,0,c
 14440  003534  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 14441  003536  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 14442  003538  0100               	movlb	0	; () banked
 14443  00353A  90D8               	bcf	status,0,c
 14444  00353C  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 14445  00353E  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 14446  003540  0E47               	movlw	71
 14447  003542  0100               	movlb	0	; () banked
 14448  003544  2560               	addwf	??_calculateSetFilterMask& (0+255),w,b
 14449  003546  6E16               	movwf	?_Read_b_eep,c
 14450  003548  0E00               	movlw	0
 14451  00354A  0100               	movlb	0	; () banked
 14452  00354C  2161               	addwfc	(??_calculateSetFilterMask+1)& (0+255),w,b
 14453  00354E  6E17               	movwf	?_Read_b_eep+1,c
 14454  003550  ECFD  F036         	call	_Read_b_eep	;wreg free
 14455  003554  0100               	movlb	0	; () banked
 14456  003556  6F62               	movwf	(??_calculateSetFilterMask+2)& (0+255),b
 14457  003558  C062  F063         	movff	??_calculateSetFilterMask+2,??_calculateSetFilterMask+3
 14458  00355C  0100               	movlb	0	; () banked
 14459  00355E  6B64               	clrf	(??_calculateSetFilterMask+4)& (0+255),b
 14460  003560  6B65               	clrf	(??_calculateSetFilterMask+5)& (0+255),b
 14461  003562  6B66               	clrf	(??_calculateSetFilterMask+6)& (0+255),b
 14462  003564  C065  F066         	movff	??_calculateSetFilterMask+5,??_calculateSetFilterMask+6
 14463  003568  C064  F065         	movff	??_calculateSetFilterMask+4,??_calculateSetFilterMask+5
 14464  00356C  C063  F064         	movff	??_calculateSetFilterMask+3,??_calculateSetFilterMask+4
 14465  003570  0100               	movlb	0	; () banked
 14466  003572  6B63               	clrf	(??_calculateSetFilterMask+3)& (0+255),b
 14467  003574  5033               	movf	calculateSetFilterMask@i,w,c
 14468  003576  0100               	movlb	0	; () banked
 14469  003578  6F67               	movwf	(??_calculateSetFilterMask+7)& (0+255),b
 14470  00357A  6B68               	clrf	(??_calculateSetFilterMask+8)& (0+255),b
 14471  00357C  0100               	movlb	0	; () banked
 14472  00357E  90D8               	bcf	status,0,c
 14473  003580  3767               	rlcf	(??_calculateSetFilterMask+7)& (0+255),f,b
 14474  003582  3768               	rlcf	(??_calculateSetFilterMask+8)& (0+255),f,b
 14475  003584  0100               	movlb	0	; () banked
 14476  003586  90D8               	bcf	status,0,c
 14477  003588  3767               	rlcf	(??_calculateSetFilterMask+7)& (0+255),f,b
 14478  00358A  3768               	rlcf	(??_calculateSetFilterMask+8)& (0+255),f,b
 14479  00358C  0100               	movlb	0	; () banked
 14480  00358E  90D8               	bcf	status,0,c
 14481  003590  3767               	rlcf	(??_calculateSetFilterMask+7)& (0+255),f,b
 14482  003592  3768               	rlcf	(??_calculateSetFilterMask+8)& (0+255),f,b
 14483  003594  0E45               	movlw	69
 14484  003596  0100               	movlb	0	; () banked
 14485  003598  2567               	addwf	(??_calculateSetFilterMask+7)& (0+255),w,b
 14486  00359A  6E16               	movwf	?_Read_b_eep,c
 14487  00359C  0E00               	movlw	0
 14488  00359E  0100               	movlb	0	; () banked
 14489  0035A0  2168               	addwfc	(??_calculateSetFilterMask+8)& (0+255),w,b
 14490  0035A2  6E17               	movwf	?_Read_b_eep+1,c
 14491  0035A4  ECFD  F036         	call	_Read_b_eep	;wreg free
 14492  0035A8  0100               	movlb	0	; () banked
 14493  0035AA  6F69               	movwf	(??_calculateSetFilterMask+9)& (0+255),b
 14494  0035AC  C069  F06A         	movff	??_calculateSetFilterMask+9,??_calculateSetFilterMask+10
 14495  0035B0  0100               	movlb	0	; () banked
 14496  0035B2  6B6B               	clrf	(??_calculateSetFilterMask+11)& (0+255),b
 14497  0035B4  6B6C               	clrf	(??_calculateSetFilterMask+12)& (0+255),b
 14498  0035B6  6B6D               	clrf	(??_calculateSetFilterMask+13)& (0+255),b
 14499  0035B8  C06B  F06D         	movff	??_calculateSetFilterMask+11,??_calculateSetFilterMask+13
 14500  0035BC  C06A  F06C         	movff	??_calculateSetFilterMask+10,??_calculateSetFilterMask+12
 14501  0035C0  0100               	movlb	0	; () banked
 14502  0035C2  6B6B               	clrf	(??_calculateSetFilterMask+11)& (0+255),b
 14503  0035C4  6B6A               	clrf	(??_calculateSetFilterMask+10)& (0+255),b
 14504  0035C6  5033               	movf	calculateSetFilterMask@i,w,c
 14505  0035C8  0100               	movlb	0	; () banked
 14506  0035CA  6F6E               	movwf	(??_calculateSetFilterMask+14)& (0+255),b
 14507  0035CC  6B6F               	clrf	(??_calculateSetFilterMask+15)& (0+255),b
 14508  0035CE  0100               	movlb	0	; () banked
 14509  0035D0  90D8               	bcf	status,0,c
 14510  0035D2  376E               	rlcf	(??_calculateSetFilterMask+14)& (0+255),f,b
 14511  0035D4  376F               	rlcf	(??_calculateSetFilterMask+15)& (0+255),f,b
 14512  0035D6  0100               	movlb	0	; () banked
 14513  0035D8  90D8               	bcf	status,0,c
 14514  0035DA  376E               	rlcf	(??_calculateSetFilterMask+14)& (0+255),f,b
 14515  0035DC  376F               	rlcf	(??_calculateSetFilterMask+15)& (0+255),f,b
 14516  0035DE  0100               	movlb	0	; () banked
 14517  0035E0  90D8               	bcf	status,0,c
 14518  0035E2  376E               	rlcf	(??_calculateSetFilterMask+14)& (0+255),f,b
 14519  0035E4  376F               	rlcf	(??_calculateSetFilterMask+15)& (0+255),f,b
 14520  0035E6  0E44               	movlw	68
 14521  0035E8  0100               	movlb	0	; () banked
 14522  0035EA  256E               	addwf	(??_calculateSetFilterMask+14)& (0+255),w,b
 14523  0035EC  6E16               	movwf	?_Read_b_eep,c
 14524  0035EE  0E00               	movlw	0
 14525  0035F0  0100               	movlb	0	; () banked
 14526  0035F2  216F               	addwfc	(??_calculateSetFilterMask+15)& (0+255),w,b
 14527  0035F4  6E17               	movwf	?_Read_b_eep+1,c
 14528  0035F6  ECFD  F036         	call	_Read_b_eep	;wreg free
 14529  0035FA  0100               	movlb	0	; () banked
 14530  0035FC  6F70               	movwf	(??_calculateSetFilterMask+16)& (0+255),b
 14531  0035FE  0E02               	movlw	2
 14532  003600  0100               	movlb	0	; () banked
 14533  003602  1770               	andwf	(??_calculateSetFilterMask+16)& (0+255),f,b
 14534  003604  C070  F071         	movff	??_calculateSetFilterMask+16,??_calculateSetFilterMask+17
 14535  003608  0100               	movlb	0	; () banked
 14536  00360A  6B72               	clrf	(??_calculateSetFilterMask+18)& (0+255),b
 14537  00360C  6B73               	clrf	(??_calculateSetFilterMask+19)& (0+255),b
 14538  00360E  6B74               	clrf	(??_calculateSetFilterMask+20)& (0+255),b
 14539  003610  0E17               	movlw	23
 14540  003612                     u13085:
 14541  003612  90D8               	bcf	status,0,c
 14542  003614  0100               	movlb	0	; () banked
 14543  003616  3771               	rlcf	(??_calculateSetFilterMask+17)& (0+255),f,b
 14544  003618  3772               	rlcf	(??_calculateSetFilterMask+18)& (0+255),f,b
 14545  00361A  3773               	rlcf	(??_calculateSetFilterMask+19)& (0+255),f,b
 14546  00361C  3774               	rlcf	(??_calculateSetFilterMask+20)& (0+255),f,b
 14547  00361E  2EE8               	decfsz	wreg,f,c
 14548  003620  D7F8               	goto	u13085
 14549  003622  0100               	movlb	0	; () banked
 14550  003624  516A               	movf	(??_calculateSetFilterMask+10)& (0+255),w,b
 14551  003626  0100               	movlb	0	; () banked
 14552  003628  1171               	iorwf	(??_calculateSetFilterMask+17)& (0+255),w,b
 14553  00362A  0100               	movlb	0	; () banked
 14554  00362C  6F75               	movwf	(??_calculateSetFilterMask+21)& (0+255),b
 14555  00362E  0100               	movlb	0	; () banked
 14556  003630  516B               	movf	(??_calculateSetFilterMask+11)& (0+255),w,b
 14557  003632  0100               	movlb	0	; () banked
 14558  003634  1172               	iorwf	(??_calculateSetFilterMask+18)& (0+255),w,b
 14559  003636  0100               	movlb	0	; () banked
 14560  003638  6F76               	movwf	(??_calculateSetFilterMask+22)& (0+255),b
 14561  00363A  0100               	movlb	0	; () banked
 14562  00363C  516C               	movf	(??_calculateSetFilterMask+12)& (0+255),w,b
 14563  00363E  0100               	movlb	0	; () banked
 14564  003640  1173               	iorwf	(??_calculateSetFilterMask+19)& (0+255),w,b
 14565  003642  0100               	movlb	0	; () banked
 14566  003644  6F77               	movwf	(??_calculateSetFilterMask+23)& (0+255),b
 14567  003646  0100               	movlb	0	; () banked
 14568  003648  516D               	movf	(??_calculateSetFilterMask+13)& (0+255),w,b
 14569  00364A  0100               	movlb	0	; () banked
 14570  00364C  1174               	iorwf	(??_calculateSetFilterMask+20)& (0+255),w,b
 14571  00364E  0100               	movlb	0	; () banked
 14572  003650  6F78               	movwf	(??_calculateSetFilterMask+24)& (0+255),b
 14573  003652  0100               	movlb	0	; () banked
 14574  003654  5163               	movf	(??_calculateSetFilterMask+3)& (0+255),w,b
 14575  003656  0100               	movlb	0	; () banked
 14576  003658  1175               	iorwf	(??_calculateSetFilterMask+21)& (0+255),w,b
 14577  00365A  0100               	movlb	0	; () banked
 14578  00365C  6F79               	movwf	(??_calculateSetFilterMask+25)& (0+255),b
 14579  00365E  0100               	movlb	0	; () banked
 14580  003660  5164               	movf	(??_calculateSetFilterMask+4)& (0+255),w,b
 14581  003662  0100               	movlb	0	; () banked
 14582  003664  1176               	iorwf	(??_calculateSetFilterMask+22)& (0+255),w,b
 14583  003666  0100               	movlb	0	; () banked
 14584  003668  6F7A               	movwf	(??_calculateSetFilterMask+26)& (0+255),b
 14585  00366A  0100               	movlb	0	; () banked
 14586  00366C  5165               	movf	(??_calculateSetFilterMask+5)& (0+255),w,b
 14587  00366E  0100               	movlb	0	; () banked
 14588  003670  1177               	iorwf	(??_calculateSetFilterMask+23)& (0+255),w,b
 14589  003672  0100               	movlb	0	; () banked
 14590  003674  6F7B               	movwf	(??_calculateSetFilterMask+27)& (0+255),b
 14591  003676  0100               	movlb	0	; () banked
 14592  003678  5166               	movf	(??_calculateSetFilterMask+6)& (0+255),w,b
 14593  00367A  0100               	movlb	0	; () banked
 14594  00367C  1178               	iorwf	(??_calculateSetFilterMask+24)& (0+255),w,b
 14595  00367E  0100               	movlb	0	; () banked
 14596  003680  6F7C               	movwf	(??_calculateSetFilterMask+28)& (0+255),b
 14597  003682  0EFF               	movlw	255
 14598  003684  0100               	movlb	0	; () banked
 14599  003686  1179               	iorwf	(??_calculateSetFilterMask+25)& (0+255),w,b
 14600  003688  6E21               	movwf	calculateSetFilterMask@rowmask,c
 14601  00368A  0100               	movlb	0	; () banked
 14602  00368C  517A               	movf	(??_calculateSetFilterMask+26)& (0+255),w,b
 14603  00368E  6E22               	movwf	calculateSetFilterMask@rowmask+1,c
 14604  003690  0100               	movlb	0	; () banked
 14605  003692  517B               	movf	(??_calculateSetFilterMask+27)& (0+255),w,b
 14606  003694  6E23               	movwf	calculateSetFilterMask@rowmask+2,c
 14607  003696  0100               	movlb	0	; () banked
 14608  003698  517C               	movf	(??_calculateSetFilterMask+28)& (0+255),w,b
 14609  00369A  6E24               	movwf	calculateSetFilterMask@rowmask+3,c
 14610                           
 14611                           ;main.c: 3191: ;
 14612                           ;main.c: 3196: rowfilter =
 14613                           ;main.c: 3198: ( (uint32_t)( Read_b_eep(0x43 + 8*i + 1) & 1 ) << 24 ) |
 14614                           ;main.c: 3200: ( (uint32_t)Read_b_eep(0x43 + 8*i + 3) << 16 ) |
 14615                           ;main.c: 3202: ( (uint32_t)Read_b_eep(0x43 + 8*i + 5) << 8 ) |
 14616                           ;main.c: 3205: Read_b_eep(0x43 + 8*i);
 14617  00369C  5033               	movf	calculateSetFilterMask@i,w,c
 14618  00369E  0100               	movlb	0	; () banked
 14619  0036A0  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 14620  0036A2  6B61               	clrf	(??_calculateSetFilterMask+1)& (0+255),b
 14621  0036A4  0100               	movlb	0	; () banked
 14622  0036A6  90D8               	bcf	status,0,c
 14623  0036A8  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 14624  0036AA  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 14625  0036AC  0100               	movlb	0	; () banked
 14626  0036AE  90D8               	bcf	status,0,c
 14627  0036B0  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 14628  0036B2  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 14629  0036B4  0100               	movlb	0	; () banked
 14630  0036B6  90D8               	bcf	status,0,c
 14631  0036B8  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 14632  0036BA  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 14633  0036BC  0E48               	movlw	72
 14634  0036BE  0100               	movlb	0	; () banked
 14635  0036C0  2560               	addwf	??_calculateSetFilterMask& (0+255),w,b
 14636  0036C2  6E16               	movwf	?_Read_b_eep,c
 14637  0036C4  0E00               	movlw	0
 14638  0036C6  0100               	movlb	0	; () banked
 14639  0036C8  2161               	addwfc	(??_calculateSetFilterMask+1)& (0+255),w,b
 14640  0036CA  6E17               	movwf	?_Read_b_eep+1,c
 14641  0036CC  ECFD  F036         	call	_Read_b_eep	;wreg free
 14642  0036D0  0100               	movlb	0	; () banked
 14643  0036D2  6F62               	movwf	(??_calculateSetFilterMask+2)& (0+255),b
 14644  0036D4  C062  F063         	movff	??_calculateSetFilterMask+2,??_calculateSetFilterMask+3
 14645  0036D8  0100               	movlb	0	; () banked
 14646  0036DA  6B64               	clrf	(??_calculateSetFilterMask+4)& (0+255),b
 14647  0036DC  6B65               	clrf	(??_calculateSetFilterMask+5)& (0+255),b
 14648  0036DE  6B66               	clrf	(??_calculateSetFilterMask+6)& (0+255),b
 14649  0036E0  C065  F066         	movff	??_calculateSetFilterMask+5,??_calculateSetFilterMask+6
 14650  0036E4  C064  F065         	movff	??_calculateSetFilterMask+4,??_calculateSetFilterMask+5
 14651  0036E8  C063  F064         	movff	??_calculateSetFilterMask+3,??_calculateSetFilterMask+4
 14652  0036EC  0100               	movlb	0	; () banked
 14653  0036EE  6B63               	clrf	(??_calculateSetFilterMask+3)& (0+255),b
 14654  0036F0  5033               	movf	calculateSetFilterMask@i,w,c
 14655  0036F2  0100               	movlb	0	; () banked
 14656  0036F4  6F67               	movwf	(??_calculateSetFilterMask+7)& (0+255),b
 14657  0036F6  6B68               	clrf	(??_calculateSetFilterMask+8)& (0+255),b
 14658  0036F8  0100               	movlb	0	; () banked
 14659  0036FA  90D8               	bcf	status,0,c
 14660  0036FC  3767               	rlcf	(??_calculateSetFilterMask+7)& (0+255),f,b
 14661  0036FE  3768               	rlcf	(??_calculateSetFilterMask+8)& (0+255),f,b
 14662  003700  0100               	movlb	0	; () banked
 14663  003702  90D8               	bcf	status,0,c
 14664  003704  3767               	rlcf	(??_calculateSetFilterMask+7)& (0+255),f,b
 14665  003706  3768               	rlcf	(??_calculateSetFilterMask+8)& (0+255),f,b
 14666  003708  0100               	movlb	0	; () banked
 14667  00370A  90D8               	bcf	status,0,c
 14668  00370C  3767               	rlcf	(??_calculateSetFilterMask+7)& (0+255),f,b
 14669  00370E  3768               	rlcf	(??_calculateSetFilterMask+8)& (0+255),f,b
 14670  003710  0E46               	movlw	70
 14671  003712  0100               	movlb	0	; () banked
 14672  003714  2567               	addwf	(??_calculateSetFilterMask+7)& (0+255),w,b
 14673  003716  6E16               	movwf	?_Read_b_eep,c
 14674  003718  0E00               	movlw	0
 14675  00371A  0100               	movlb	0	; () banked
 14676  00371C  2168               	addwfc	(??_calculateSetFilterMask+8)& (0+255),w,b
 14677  00371E  6E17               	movwf	?_Read_b_eep+1,c
 14678  003720  ECFD  F036         	call	_Read_b_eep	;wreg free
 14679  003724  0100               	movlb	0	; () banked
 14680  003726  6F69               	movwf	(??_calculateSetFilterMask+9)& (0+255),b
 14681  003728  C069  F06A         	movff	??_calculateSetFilterMask+9,??_calculateSetFilterMask+10
 14682  00372C  0100               	movlb	0	; () banked
 14683  00372E  6B6B               	clrf	(??_calculateSetFilterMask+11)& (0+255),b
 14684  003730  6B6C               	clrf	(??_calculateSetFilterMask+12)& (0+255),b
 14685  003732  6B6D               	clrf	(??_calculateSetFilterMask+13)& (0+255),b
 14686  003734  C06B  F06D         	movff	??_calculateSetFilterMask+11,??_calculateSetFilterMask+13
 14687  003738  C06A  F06C         	movff	??_calculateSetFilterMask+10,??_calculateSetFilterMask+12
 14688  00373C  0100               	movlb	0	; () banked
 14689  00373E  6B6B               	clrf	(??_calculateSetFilterMask+11)& (0+255),b
 14690  003740  6B6A               	clrf	(??_calculateSetFilterMask+10)& (0+255),b
 14691  003742  5033               	movf	calculateSetFilterMask@i,w,c
 14692  003744  0100               	movlb	0	; () banked
 14693  003746  6F6E               	movwf	(??_calculateSetFilterMask+14)& (0+255),b
 14694  003748  6B6F               	clrf	(??_calculateSetFilterMask+15)& (0+255),b
 14695  00374A  0100               	movlb	0	; () banked
 14696  00374C  90D8               	bcf	status,0,c
 14697  00374E  376E               	rlcf	(??_calculateSetFilterMask+14)& (0+255),f,b
 14698  003750  376F               	rlcf	(??_calculateSetFilterMask+15)& (0+255),f,b
 14699  003752  0100               	movlb	0	; () banked
 14700  003754  90D8               	bcf	status,0,c
 14701  003756  376E               	rlcf	(??_calculateSetFilterMask+14)& (0+255),f,b
 14702  003758  376F               	rlcf	(??_calculateSetFilterMask+15)& (0+255),f,b
 14703  00375A  0100               	movlb	0	; () banked
 14704  00375C  90D8               	bcf	status,0,c
 14705  00375E  376E               	rlcf	(??_calculateSetFilterMask+14)& (0+255),f,b
 14706  003760  376F               	rlcf	(??_calculateSetFilterMask+15)& (0+255),f,b
 14707  003762  0E44               	movlw	68
 14708  003764  0100               	movlb	0	; () banked
 14709  003766  256E               	addwf	(??_calculateSetFilterMask+14)& (0+255),w,b
 14710  003768  6E16               	movwf	?_Read_b_eep,c
 14711  00376A  0E00               	movlw	0
 14712  00376C  0100               	movlb	0	; () banked
 14713  00376E  216F               	addwfc	(??_calculateSetFilterMask+15)& (0+255),w,b
 14714  003770  6E17               	movwf	?_Read_b_eep+1,c
 14715  003772  ECFD  F036         	call	_Read_b_eep	;wreg free
 14716  003776  0100               	movlb	0	; () banked
 14717  003778  6F70               	movwf	(??_calculateSetFilterMask+16)& (0+255),b
 14718  00377A  0E01               	movlw	1
 14719  00377C  0100               	movlb	0	; () banked
 14720  00377E  1770               	andwf	(??_calculateSetFilterMask+16)& (0+255),f,b
 14721  003780  C070  F071         	movff	??_calculateSetFilterMask+16,??_calculateSetFilterMask+17
 14722  003784  0100               	movlb	0	; () banked
 14723  003786  6B72               	clrf	(??_calculateSetFilterMask+18)& (0+255),b
 14724  003788  6B73               	clrf	(??_calculateSetFilterMask+19)& (0+255),b
 14725  00378A  6B74               	clrf	(??_calculateSetFilterMask+20)& (0+255),b
 14726  00378C  C071  F074         	movff	??_calculateSetFilterMask+17,??_calculateSetFilterMask+20
 14727  003790  0100               	movlb	0	; () banked
 14728  003792  6B73               	clrf	(??_calculateSetFilterMask+19)& (0+255),b
 14729  003794  6B72               	clrf	(??_calculateSetFilterMask+18)& (0+255),b
 14730  003796  6B71               	clrf	(??_calculateSetFilterMask+17)& (0+255),b
 14731  003798  0100               	movlb	0	; () banked
 14732  00379A  516A               	movf	(??_calculateSetFilterMask+10)& (0+255),w,b
 14733  00379C  0100               	movlb	0	; () banked
 14734  00379E  1171               	iorwf	(??_calculateSetFilterMask+17)& (0+255),w,b
 14735  0037A0  0100               	movlb	0	; () banked
 14736  0037A2  6F75               	movwf	(??_calculateSetFilterMask+21)& (0+255),b
 14737  0037A4  0100               	movlb	0	; () banked
 14738  0037A6  516B               	movf	(??_calculateSetFilterMask+11)& (0+255),w,b
 14739  0037A8  0100               	movlb	0	; () banked
 14740  0037AA  1172               	iorwf	(??_calculateSetFilterMask+18)& (0+255),w,b
 14741  0037AC  0100               	movlb	0	; () banked
 14742  0037AE  6F76               	movwf	(??_calculateSetFilterMask+22)& (0+255),b
 14743  0037B0  0100               	movlb	0	; () banked
 14744  0037B2  516C               	movf	(??_calculateSetFilterMask+12)& (0+255),w,b
 14745  0037B4  0100               	movlb	0	; () banked
 14746  0037B6  1173               	iorwf	(??_calculateSetFilterMask+19)& (0+255),w,b
 14747  0037B8  0100               	movlb	0	; () banked
 14748  0037BA  6F77               	movwf	(??_calculateSetFilterMask+23)& (0+255),b
 14749  0037BC  0100               	movlb	0	; () banked
 14750  0037BE  516D               	movf	(??_calculateSetFilterMask+13)& (0+255),w,b
 14751  0037C0  0100               	movlb	0	; () banked
 14752  0037C2  1174               	iorwf	(??_calculateSetFilterMask+20)& (0+255),w,b
 14753  0037C4  0100               	movlb	0	; () banked
 14754  0037C6  6F78               	movwf	(??_calculateSetFilterMask+24)& (0+255),b
 14755  0037C8  0100               	movlb	0	; () banked
 14756  0037CA  5163               	movf	(??_calculateSetFilterMask+3)& (0+255),w,b
 14757  0037CC  0100               	movlb	0	; () banked
 14758  0037CE  1175               	iorwf	(??_calculateSetFilterMask+21)& (0+255),w,b
 14759  0037D0  0100               	movlb	0	; () banked
 14760  0037D2  6F79               	movwf	(??_calculateSetFilterMask+25)& (0+255),b
 14761  0037D4  0100               	movlb	0	; () banked
 14762  0037D6  5164               	movf	(??_calculateSetFilterMask+4)& (0+255),w,b
 14763  0037D8  0100               	movlb	0	; () banked
 14764  0037DA  1176               	iorwf	(??_calculateSetFilterMask+22)& (0+255),w,b
 14765  0037DC  0100               	movlb	0	; () banked
 14766  0037DE  6F7A               	movwf	(??_calculateSetFilterMask+26)& (0+255),b
 14767  0037E0  0100               	movlb	0	; () banked
 14768  0037E2  5165               	movf	(??_calculateSetFilterMask+5)& (0+255),w,b
 14769  0037E4  0100               	movlb	0	; () banked
 14770  0037E6  1177               	iorwf	(??_calculateSetFilterMask+23)& (0+255),w,b
 14771  0037E8  0100               	movlb	0	; () banked
 14772  0037EA  6F7B               	movwf	(??_calculateSetFilterMask+27)& (0+255),b
 14773  0037EC  0100               	movlb	0	; () banked
 14774  0037EE  5166               	movf	(??_calculateSetFilterMask+6)& (0+255),w,b
 14775  0037F0  0100               	movlb	0	; () banked
 14776  0037F2  1178               	iorwf	(??_calculateSetFilterMask+24)& (0+255),w,b
 14777  0037F4  0100               	movlb	0	; () banked
 14778  0037F6  6F7C               	movwf	(??_calculateSetFilterMask+28)& (0+255),b
 14779  0037F8  5033               	movf	calculateSetFilterMask@i,w,c
 14780  0037FA  0100               	movlb	0	; () banked
 14781  0037FC  6F7D               	movwf	(??_calculateSetFilterMask+29)& (0+255),b
 14782  0037FE  6B7E               	clrf	(??_calculateSetFilterMask+30)& (0+255),b
 14783  003800  0100               	movlb	0	; () banked
 14784  003802  90D8               	bcf	status,0,c
 14785  003804  377D               	rlcf	(??_calculateSetFilterMask+29)& (0+255),f,b
 14786  003806  377E               	rlcf	(??_calculateSetFilterMask+30)& (0+255),f,b
 14787  003808  0100               	movlb	0	; () banked
 14788  00380A  90D8               	bcf	status,0,c
 14789  00380C  377D               	rlcf	(??_calculateSetFilterMask+29)& (0+255),f,b
 14790  00380E  377E               	rlcf	(??_calculateSetFilterMask+30)& (0+255),f,b
 14791  003810  0100               	movlb	0	; () banked
 14792  003812  90D8               	bcf	status,0,c
 14793  003814  377D               	rlcf	(??_calculateSetFilterMask+29)& (0+255),f,b
 14794  003816  377E               	rlcf	(??_calculateSetFilterMask+30)& (0+255),f,b
 14795  003818  0E43               	movlw	67
 14796  00381A  0100               	movlb	0	; () banked
 14797  00381C  257D               	addwf	(??_calculateSetFilterMask+29)& (0+255),w,b
 14798  00381E  6E16               	movwf	?_Read_b_eep,c
 14799  003820  0E00               	movlw	0
 14800  003822  0100               	movlb	0	; () banked
 14801  003824  217E               	addwfc	(??_calculateSetFilterMask+30)& (0+255),w,b
 14802  003826  6E17               	movwf	?_Read_b_eep+1,c
 14803  003828  ECFD  F036         	call	_Read_b_eep	;wreg free
 14804  00382C  0100               	movlb	0	; () banked
 14805  00382E  6F7F               	movwf	(??_calculateSetFilterMask+31)& (0+255),b
 14806  003830  0100               	movlb	0	; () banked
 14807  003832  517F               	movf	(??_calculateSetFilterMask+31)& (0+255),w,b
 14808  003834  0100               	movlb	0	; () banked
 14809  003836  1179               	iorwf	(??_calculateSetFilterMask+25)& (0+255),w,b
 14810  003838  6E2E               	movwf	calculateSetFilterMask@rowfilter,c
 14811  00383A  0100               	movlb	0	; () banked
 14812  00383C  517A               	movf	(??_calculateSetFilterMask+26)& (0+255),w,b
 14813  00383E  6E2F               	movwf	calculateSetFilterMask@rowfilter+1,c
 14814  003840  0100               	movlb	0	; () banked
 14815  003842  517B               	movf	(??_calculateSetFilterMask+27)& (0+255),w,b
 14816  003844  6E30               	movwf	calculateSetFilterMask@rowfilter+2,c
 14817  003846  0100               	movlb	0	; () banked
 14818  003848  517C               	movf	(??_calculateSetFilterMask+28)& (0+255),w,b
 14819  00384A  6E31               	movwf	calculateSetFilterMask@rowfilter+3,c
 14820                           
 14821                           ; BSR set to: 0
 14822                           ;main.c: 3207: if ( 0 == i ) filter = rowfilter;
 14823  00384C  6633               	tstfsz	calculateSetFilterMask@i,c
 14824  00384E  D008               	goto	l10817
 14825                           
 14826                           ; BSR set to: 0
 14827  003850  C02E  F02A         	movff	calculateSetFilterMask@rowfilter,calculateSetFilterMask@filter
 14828  003854  C02F  F02B         	movff	calculateSetFilterMask@rowfilter+1,calculateSetFilterMask@filter+1
 14829  003858  C030  F02C         	movff	calculateSetFilterMask@rowfilter+2,calculateSetFilterMask@filter+2
 14830  00385C  C031  F02D         	movff	calculateSetFilterMask@rowfilter+3,calculateSetFilterMask@filter+3
 14831  003860                     l10817:
 14832                           
 14833                           ; BSR set to: 0
 14834                           ;main.c: 3211: mask &= rowmask;
 14835  003860  5021               	movf	calculateSetFilterMask@rowmask,w,c
 14836  003862  1626               	andwf	calculateSetFilterMask@mask,f,c
 14837  003864  5022               	movf	calculateSetFilterMask@rowmask+1,w,c
 14838  003866  1627               	andwf	calculateSetFilterMask@mask+1,f,c
 14839  003868  5023               	movf	calculateSetFilterMask@rowmask+2,w,c
 14840  00386A  1628               	andwf	calculateSetFilterMask@mask+2,f,c
 14841  00386C  5024               	movf	calculateSetFilterMask@rowmask+3,w,c
 14842  00386E  1629               	andwf	calculateSetFilterMask@mask+3,f,c
 14843                           
 14844                           ; BSR set to: 0
 14845                           ;main.c: 3216: for ( j=0; j<32; j++ ) {
 14846  003870  0100               	movlb	0	; () banked
 14847  003872  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 14848  003874  0E00               	movlw	0
 14849  003876  6E32               	movwf	calculateSetFilterMask@j,c
 14850  003878  0100               	movlb	0	; () banked
 14851  00387A  5160               	movf	??_calculateSetFilterMask& (0+255),w,b
 14852  00387C  D091               	goto	L111
 14853  00387E                     l10825:
 14854                           
 14855                           ; BSR set to: 0
 14856                           ;main.c: 3218: if ( ( ( filter >> j ) & 1 ) != ( ( rowfilter >> j ) & 1 ) ) {
 14857  00387E  5032               	movf	calculateSetFilterMask@j,w,c
 14858  003880  C02E  F060         	movff	calculateSetFilterMask@rowfilter,??_calculateSetFilterMask
 14859  003884  C02F  F061         	movff	calculateSetFilterMask@rowfilter+1,??_calculateSetFilterMask+1
 14860  003888  C030  F062         	movff	calculateSetFilterMask@rowfilter+2,??_calculateSetFilterMask+2
 14861  00388C  C031  F063         	movff	calculateSetFilterMask@rowfilter+3,??_calculateSetFilterMask+3
 14862  003890  2AE8               	incf	wreg,f,c
 14863  003892  D006               	goto	u13110
 14864  003894                     u13115:
 14865  003894  0100               	movlb	0	; () banked
 14866  003896  90D8               	bcf	status,0,c
 14867  003898  3363               	rrcf	(??_calculateSetFilterMask+3)& (0+255),f,b
 14868  00389A  3362               	rrcf	(??_calculateSetFilterMask+2)& (0+255),f,b
 14869  00389C  3361               	rrcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 14870  00389E  3360               	rrcf	??_calculateSetFilterMask& (0+255),f,b
 14871  0038A0                     u13110:
 14872  0038A0  2EE8               	decfsz	wreg,f,c
 14873  0038A2  D7F8               	goto	u13115
 14874  0038A4  0E01               	movlw	1
 14875  0038A6  0100               	movlb	0	; () banked
 14876  0038A8  1560               	andwf	??_calculateSetFilterMask& (0+255),w,b
 14877  0038AA  0100               	movlb	0	; () banked
 14878  0038AC  6F64               	movwf	(??_calculateSetFilterMask+4)& (0+255),b
 14879  0038AE  0E00               	movlw	0
 14880  0038B0  0100               	movlb	0	; () banked
 14881  0038B2  1561               	andwf	(??_calculateSetFilterMask+1)& (0+255),w,b
 14882  0038B4  0100               	movlb	0	; () banked
 14883  0038B6  6F65               	movwf	(??_calculateSetFilterMask+5)& (0+255),b
 14884  0038B8  0E00               	movlw	0
 14885  0038BA  0100               	movlb	0	; () banked
 14886  0038BC  1562               	andwf	(??_calculateSetFilterMask+2)& (0+255),w,b
 14887  0038BE  0100               	movlb	0	; () banked
 14888  0038C0  6F66               	movwf	(??_calculateSetFilterMask+6)& (0+255),b
 14889  0038C2  0E00               	movlw	0
 14890  0038C4  0100               	movlb	0	; () banked
 14891  0038C6  1563               	andwf	(??_calculateSetFilterMask+3)& (0+255),w,b
 14892  0038C8  0100               	movlb	0	; () banked
 14893  0038CA  6F67               	movwf	(??_calculateSetFilterMask+7)& (0+255),b
 14894  0038CC  5032               	movf	calculateSetFilterMask@j,w,c
 14895  0038CE  C02A  F068         	movff	calculateSetFilterMask@filter,??_calculateSetFilterMask+8
 14896  0038D2  C02B  F069         	movff	calculateSetFilterMask@filter+1,??_calculateSetFilterMask+9
 14897  0038D6  C02C  F06A         	movff	calculateSetFilterMask@filter+2,??_calculateSetFilterMask+10
 14898  0038DA  C02D  F06B         	movff	calculateSetFilterMask@filter+3,??_calculateSetFilterMask+11
 14899  0038DE  2AE8               	incf	wreg,f,c
 14900  0038E0  D006               	goto	u13120
 14901  0038E2                     u13125:
 14902  0038E2  0100               	movlb	0	; () banked
 14903  0038E4  90D8               	bcf	status,0,c
 14904  0038E6  336B               	rrcf	(??_calculateSetFilterMask+11)& (0+255),f,b
 14905  0038E8  336A               	rrcf	(??_calculateSetFilterMask+10)& (0+255),f,b
 14906  0038EA  3369               	rrcf	(??_calculateSetFilterMask+9)& (0+255),f,b
 14907  0038EC  3368               	rrcf	(??_calculateSetFilterMask+8)& (0+255),f,b
 14908  0038EE                     u13120:
 14909  0038EE  2EE8               	decfsz	wreg,f,c
 14910  0038F0  D7F8               	goto	u13125
 14911  0038F2  0E01               	movlw	1
 14912  0038F4  0100               	movlb	0	; () banked
 14913  0038F6  1568               	andwf	(??_calculateSetFilterMask+8)& (0+255),w,b
 14914  0038F8  0100               	movlb	0	; () banked
 14915  0038FA  6F6C               	movwf	(??_calculateSetFilterMask+12)& (0+255),b
 14916  0038FC  0E00               	movlw	0
 14917  0038FE  0100               	movlb	0	; () banked
 14918  003900  1569               	andwf	(??_calculateSetFilterMask+9)& (0+255),w,b
 14919  003902  0100               	movlb	0	; () banked
 14920  003904  6F6D               	movwf	(??_calculateSetFilterMask+13)& (0+255),b
 14921  003906  0E00               	movlw	0
 14922  003908  0100               	movlb	0	; () banked
 14923  00390A  156A               	andwf	(??_calculateSetFilterMask+10)& (0+255),w,b
 14924  00390C  0100               	movlb	0	; () banked
 14925  00390E  6F6E               	movwf	(??_calculateSetFilterMask+14)& (0+255),b
 14926  003910  0E00               	movlw	0
 14927  003912  0100               	movlb	0	; () banked
 14928  003914  156B               	andwf	(??_calculateSetFilterMask+11)& (0+255),w,b
 14929  003916  0100               	movlb	0	; () banked
 14930  003918  6F6F               	movwf	(??_calculateSetFilterMask+15)& (0+255),b
 14931  00391A  0100               	movlb	0	; () banked
 14932  00391C  5167               	movf	(??_calculateSetFilterMask+7)& (0+255),w,b
 14933  00391E  0100               	movlb	0	; () banked
 14934  003920  196F               	xorwf	(??_calculateSetFilterMask+15)& (0+255),w,b
 14935  003922  E10E               	bnz	u13135
 14936  003924  0100               	movlb	0	; () banked
 14937  003926  5166               	movf	(??_calculateSetFilterMask+6)& (0+255),w,b
 14938  003928  0100               	movlb	0	; () banked
 14939  00392A  196E               	xorwf	(??_calculateSetFilterMask+14)& (0+255),w,b
 14940  00392C  E109               	bnz	u13135
 14941  00392E  0100               	movlb	0	; () banked
 14942  003930  5165               	movf	(??_calculateSetFilterMask+5)& (0+255),w,b
 14943  003932  0100               	movlb	0	; () banked
 14944  003934  196D               	xorwf	(??_calculateSetFilterMask+13)& (0+255),w,b
 14945  003936  E104               	bnz	u13135
 14946  003938  0100               	movlb	0	; () banked
 14947  00393A  5164               	movf	(??_calculateSetFilterMask+4)& (0+255),w,b
 14948  00393C  0100               	movlb	0	; () banked
 14949  00393E  196C               	xorwf	(??_calculateSetFilterMask+12)& (0+255),w,b
 14950  003940                     u13135:
 14951  003940  B4D8               	btfsc	status,2,c
 14952  003942  D02D               	goto	l10829
 14953                           
 14954                           ; BSR set to: 0
 14955                           ;main.c: 3219: mask &= ~(1<<j);
 14956  003944  C032  F060         	movff	calculateSetFilterMask@j,??_calculateSetFilterMask
 14957  003948  0E01               	movlw	1
 14958  00394A  0100               	movlb	0	; () banked
 14959  00394C  6F61               	movwf	(??_calculateSetFilterMask+1)& (0+255),b
 14960  00394E  6B62               	clrf	(??_calculateSetFilterMask+2)& (0+255),b
 14961  003950  0100               	movlb	0	; () banked
 14962  003952  2B60               	incf	??_calculateSetFilterMask& (0+255),f,b
 14963  003954  D004               	goto	u13144
 14964  003956                     u13145:
 14965  003956  90D8               	bcf	status,0,c
 14966  003958  0100               	movlb	0	; () banked
 14967  00395A  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 14968  00395C  3762               	rlcf	(??_calculateSetFilterMask+2)& (0+255),f,b
 14969  00395E                     u13144:
 14970  00395E  0100               	movlb	0	; () banked
 14971  003960  2F60               	decfsz	??_calculateSetFilterMask& (0+255),f,b
 14972  003962  D7F9               	goto	u13145
 14973  003964  0100               	movlb	0	; () banked
 14974  003966  1D61               	comf	(??_calculateSetFilterMask+1)& (0+255),w,b
 14975  003968  0100               	movlb	0	; () banked
 14976  00396A  6F63               	movwf	(??_calculateSetFilterMask+3)& (0+255),b
 14977  00396C  0100               	movlb	0	; () banked
 14978  00396E  0100               	movlb	0	; () banked
 14979  003970  1D62               	comf	(??_calculateSetFilterMask+2)& (0+255),w,b
 14980  003972  6F64               	movwf	(??_calculateSetFilterMask+4)& (0+255),b
 14981  003974  0100               	movlb	0	; () banked
 14982  003976  6B65               	clrf	(??_calculateSetFilterMask+5)& (0+255),b
 14983  003978  0100               	movlb	0	; () banked
 14984  00397A  BF64               	btfsc	(??_calculateSetFilterMask+4)& (0+255),7,b
 14985  00397C  0765               	decf	(??_calculateSetFilterMask+5)& (0+255),f,b
 14986  00397E  0100               	movlb	0	; () banked
 14987  003980  5165               	movf	(??_calculateSetFilterMask+5)& (0+255),w,b
 14988  003982  0100               	movlb	0	; () banked
 14989  003984  6F66               	movwf	(??_calculateSetFilterMask+6)& (0+255),b
 14990  003986  0100               	movlb	0	; () banked
 14991  003988  5163               	movf	(??_calculateSetFilterMask+3)& (0+255),w,b
 14992  00398A  1626               	andwf	calculateSetFilterMask@mask,f,c
 14993  00398C  0100               	movlb	0	; () banked
 14994  00398E  5164               	movf	(??_calculateSetFilterMask+4)& (0+255),w,b
 14995  003990  1627               	andwf	calculateSetFilterMask@mask+1,f,c
 14996  003992  0100               	movlb	0	; () banked
 14997  003994  5165               	movf	(??_calculateSetFilterMask+5)& (0+255),w,b
 14998  003996  1628               	andwf	calculateSetFilterMask@mask+2,f,c
 14999  003998  0100               	movlb	0	; () banked
 15000  00399A  5166               	movf	(??_calculateSetFilterMask+6)& (0+255),w,b
 15001  00399C  1629               	andwf	calculateSetFilterMask@mask+3,f,c
 15002  00399E                     l10829:
 15003                           
 15004                           ; BSR set to: 0
 15005  00399E  2A32               	incf	calculateSetFilterMask@j,f,c
 15006  0039A0                     L111:
 15007  0039A0  0E1F               	movlw	31
 15008  0039A2  6432               	cpfsgt	calculateSetFilterMask@j,c
 15009  0039A4  D76C               	goto	l10825
 15010                           
 15011                           ; BSR set to: 0
 15012                           ;main.c: 3220: }
 15013                           ;main.c: 3221: }
 15014                           ;main.c: 3227: filter &= rowfilter;
 15015                           
 15016                           ; BSR set to: 0
 15017  0039A6  502E               	movf	calculateSetFilterMask@rowfilter,w,c
 15018  0039A8  162A               	andwf	calculateSetFilterMask@filter,f,c
 15019  0039AA  502F               	movf	calculateSetFilterMask@rowfilter+1,w,c
 15020  0039AC  162B               	andwf	calculateSetFilterMask@filter+1,f,c
 15021  0039AE  5030               	movf	calculateSetFilterMask@rowfilter+2,w,c
 15022  0039B0  162C               	andwf	calculateSetFilterMask@filter+2,f,c
 15023  0039B2  5031               	movf	calculateSetFilterMask@rowfilter+3,w,c
 15024  0039B4  162D               	andwf	calculateSetFilterMask@filter+3,f,c
 15025                           
 15026                           ; BSR set to: 0
 15027                           ;main.c: 3235: }
 15028                           ;main.c: 3237: if (i) {
 15029                           
 15030                           ; BSR set to: 0
 15031                           
 15032                           ; BSR set to: 0
 15033                           ;main.c: 3234: mask &= ~0xff;
 15034                           
 15035                           ;main.c: 3230: if ( !Read_b_eep(0x43 + 8*i + 1) & 0x40 ) {
 15036  0039B6  5033               	movf	calculateSetFilterMask@i,w,c
 15037  0039B8  B4D8               	btfsc	status,2,c
 15038  0039BA  D08A               	goto	l10851
 15039                           
 15040                           ; BSR set to: 0
 15041                           ;main.c: 3240: for (j = 0; j < 8; j++) {
 15042  0039BC  0100               	movlb	0	; () banked
 15043  0039BE  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 15044  0039C0  0E00               	movlw	0
 15045  0039C2  6E32               	movwf	calculateSetFilterMask@j,c
 15046  0039C4  0100               	movlb	0	; () banked
 15047  0039C6  5160               	movf	??_calculateSetFilterMask& (0+255),w,b
 15048  0039C8  D065               	goto	L112
 15049  0039CA                     l10843:
 15050                           
 15051                           ; BSR set to: 0
 15052                           ;main.c: 3241: if ((lastOID >> i & 1)
 15053                           ;main.c: 3242: != (Read_b_eep(0x43 + 8 * i) >> i & 1)) {
 15054  0039CA  C033  F060         	movff	calculateSetFilterMask@i,??_calculateSetFilterMask
 15055  0039CE  5033               	movf	calculateSetFilterMask@i,w,c
 15056  0039D0  0100               	movlb	0	; () banked
 15057  0039D2  6F61               	movwf	(??_calculateSetFilterMask+1)& (0+255),b
 15058  0039D4  6B62               	clrf	(??_calculateSetFilterMask+2)& (0+255),b
 15059  0039D6  0100               	movlb	0	; () banked
 15060  0039D8  90D8               	bcf	status,0,c
 15061  0039DA  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15062  0039DC  3762               	rlcf	(??_calculateSetFilterMask+2)& (0+255),f,b
 15063  0039DE  0100               	movlb	0	; () banked
 15064  0039E0  90D8               	bcf	status,0,c
 15065  0039E2  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15066  0039E4  3762               	rlcf	(??_calculateSetFilterMask+2)& (0+255),f,b
 15067  0039E6  0100               	movlb	0	; () banked
 15068  0039E8  90D8               	bcf	status,0,c
 15069  0039EA  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15070  0039EC  3762               	rlcf	(??_calculateSetFilterMask+2)& (0+255),f,b
 15071  0039EE  0E43               	movlw	67
 15072  0039F0  0100               	movlb	0	; () banked
 15073  0039F2  2561               	addwf	(??_calculateSetFilterMask+1)& (0+255),w,b
 15074  0039F4  6E16               	movwf	?_Read_b_eep,c
 15075  0039F6  0E00               	movlw	0
 15076  0039F8  0100               	movlb	0	; () banked
 15077  0039FA  2162               	addwfc	(??_calculateSetFilterMask+2)& (0+255),w,b
 15078  0039FC  6E17               	movwf	?_Read_b_eep+1,c
 15079  0039FE  ECFD  F036         	call	_Read_b_eep	;wreg free
 15080  003A02  0100               	movlb	0	; () banked
 15081  003A04  6F63               	movwf	(??_calculateSetFilterMask+3)& (0+255),b
 15082  003A06  0100               	movlb	0	; () banked
 15083  003A08  2B60               	incf	??_calculateSetFilterMask& (0+255),f,b
 15084  003A0A  D003               	goto	u13184
 15085  003A0C                     u13185:
 15086  003A0C  0100               	movlb	0	; () banked
 15087  003A0E  90D8               	bcf	status,0,c
 15088  003A10  3363               	rrcf	(??_calculateSetFilterMask+3)& (0+255),f,b
 15089  003A12                     u13184:
 15090  003A12  0100               	movlb	0	; () banked
 15091  003A14  2F60               	decfsz	??_calculateSetFilterMask& (0+255),f,b
 15092  003A16  D7FA               	goto	u13185
 15093  003A18  0E01               	movlw	1
 15094  003A1A  0100               	movlb	0	; () banked
 15095  003A1C  1763               	andwf	(??_calculateSetFilterMask+3)& (0+255),f,b
 15096  003A1E  C033  F064         	movff	calculateSetFilterMask@i,??_calculateSetFilterMask+4
 15097  003A22  C025  F065         	movff	calculateSetFilterMask@lastOID,??_calculateSetFilterMask+5
 15098  003A26  0100               	movlb	0	; () banked
 15099  003A28  2B64               	incf	(??_calculateSetFilterMask+4)& (0+255),f,b
 15100  003A2A  D003               	goto	u13194
 15101  003A2C                     u13195:
 15102  003A2C  0100               	movlb	0	; () banked
 15103  003A2E  90D8               	bcf	status,0,c
 15104  003A30  3365               	rrcf	(??_calculateSetFilterMask+5)& (0+255),f,b
 15105  003A32                     u13194:
 15106  003A32  0100               	movlb	0	; () banked
 15107  003A34  2F64               	decfsz	(??_calculateSetFilterMask+4)& (0+255),f,b
 15108  003A36  D7FA               	goto	u13195
 15109  003A38  0100               	movlb	0	; () banked
 15110  003A3A  5165               	movf	(??_calculateSetFilterMask+5)& (0+255),w,b
 15111  003A3C  0B01               	andlw	1
 15112  003A3E  0100               	movlb	0	; () banked
 15113  003A40  1963               	xorwf	(??_calculateSetFilterMask+3)& (0+255),w,b
 15114  003A42  B4D8               	btfsc	status,2,c
 15115  003A44  D026               	goto	l10847
 15116                           
 15117                           ; BSR set to: 0
 15118                           ;main.c: 3243: mask &= (1 << i);
 15119  003A46  C033  F060         	movff	calculateSetFilterMask@i,??_calculateSetFilterMask
 15120  003A4A  0E01               	movlw	1
 15121  003A4C  0100               	movlb	0	; () banked
 15122  003A4E  6F61               	movwf	(??_calculateSetFilterMask+1)& (0+255),b
 15123  003A50  6B62               	clrf	(??_calculateSetFilterMask+2)& (0+255),b
 15124  003A52  0100               	movlb	0	; () banked
 15125  003A54  2B60               	incf	??_calculateSetFilterMask& (0+255),f,b
 15126  003A56  D004               	goto	u13214
 15127  003A58                     u13215:
 15128  003A58  90D8               	bcf	status,0,c
 15129  003A5A  0100               	movlb	0	; () banked
 15130  003A5C  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15131  003A5E  3762               	rlcf	(??_calculateSetFilterMask+2)& (0+255),f,b
 15132  003A60                     u13214:
 15133  003A60  0100               	movlb	0	; () banked
 15134  003A62  2F60               	decfsz	??_calculateSetFilterMask& (0+255),f,b
 15135  003A64  D7F9               	goto	u13215
 15136  003A66  C061  F063         	movff	??_calculateSetFilterMask+1,??_calculateSetFilterMask+3
 15137  003A6A  C062  F064         	movff	??_calculateSetFilterMask+2,??_calculateSetFilterMask+4
 15138  003A6E  0E00               	movlw	0
 15139  003A70  0100               	movlb	0	; () banked
 15140  003A72  BF64               	btfsc	(??_calculateSetFilterMask+4)& (0+255),7,b
 15141  003A74  0EFF               	movlw	255
 15142  003A76  6F65               	movwf	(??_calculateSetFilterMask+5)& (0+255),b
 15143  003A78  6F66               	movwf	(??_calculateSetFilterMask+6)& (0+255),b
 15144  003A7A  0100               	movlb	0	; () banked
 15145  003A7C  5163               	movf	(??_calculateSetFilterMask+3)& (0+255),w,b
 15146  003A7E  1626               	andwf	calculateSetFilterMask@mask,f,c
 15147  003A80  0100               	movlb	0	; () banked
 15148  003A82  5164               	movf	(??_calculateSetFilterMask+4)& (0+255),w,b
 15149  003A84  1627               	andwf	calculateSetFilterMask@mask+1,f,c
 15150  003A86  0100               	movlb	0	; () banked
 15151  003A88  5165               	movf	(??_calculateSetFilterMask+5)& (0+255),w,b
 15152  003A8A  1628               	andwf	calculateSetFilterMask@mask+2,f,c
 15153  003A8C  0100               	movlb	0	; () banked
 15154  003A8E  5166               	movf	(??_calculateSetFilterMask+6)& (0+255),w,b
 15155  003A90  1629               	andwf	calculateSetFilterMask@mask+3,f,c
 15156  003A92                     l10847:
 15157                           
 15158                           ; BSR set to: 0
 15159  003A92  2A32               	incf	calculateSetFilterMask@j,f,c
 15160  003A94                     L112:
 15161  003A94  0E07               	movlw	7
 15162  003A96  6432               	cpfsgt	calculateSetFilterMask@j,c
 15163  003A98  D798               	goto	l10843
 15164                           
 15165                           ; BSR set to: 0
 15166                           ;main.c: 3244: }
 15167                           ;main.c: 3245: }
 15168                           ;main.c: 3247: lastOID = Read_b_eep(0x43 + 8 * i);
 15169                           
 15170                           ; BSR set to: 0
 15171  003A9A  5033               	movf	calculateSetFilterMask@i,w,c
 15172  003A9C  0100               	movlb	0	; () banked
 15173  003A9E  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 15174  003AA0  6B61               	clrf	(??_calculateSetFilterMask+1)& (0+255),b
 15175  003AA2  0100               	movlb	0	; () banked
 15176  003AA4  90D8               	bcf	status,0,c
 15177  003AA6  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 15178  003AA8  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15179  003AAA  0100               	movlb	0	; () banked
 15180  003AAC  90D8               	bcf	status,0,c
 15181  003AAE  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 15182  003AB0  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15183  003AB2  0100               	movlb	0	; () banked
 15184  003AB4  90D8               	bcf	status,0,c
 15185  003AB6  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 15186  003AB8  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15187  003ABA  0E43               	movlw	67
 15188  003ABC  0100               	movlb	0	; () banked
 15189  003ABE  2560               	addwf	??_calculateSetFilterMask& (0+255),w,b
 15190  003AC0  6E16               	movwf	?_Read_b_eep,c
 15191  003AC2  0E00               	movlw	0
 15192  003AC4  0100               	movlb	0	; () banked
 15193  003AC6  2161               	addwfc	(??_calculateSetFilterMask+1)& (0+255),w,b
 15194  003AC8  6E17               	movwf	?_Read_b_eep+1,c
 15195  003ACA  ECFD  F036         	call	_Read_b_eep	;wreg free
 15196  003ACE  D01A               	goto	L109
 15197  003AD0                     l10851:
 15198                           
 15199                           ;main.c: 3250: else {
 15200                           ;main.c: 3252: lastOID = Read_b_eep(0x43 + 8 * i);
 15201  003AD0  5033               	movf	calculateSetFilterMask@i,w,c
 15202  003AD2  0100               	movlb	0	; () banked
 15203  003AD4  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 15204  003AD6  6B61               	clrf	(??_calculateSetFilterMask+1)& (0+255),b
 15205  003AD8  0100               	movlb	0	; () banked
 15206  003ADA  90D8               	bcf	status,0,c
 15207  003ADC  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 15208  003ADE  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15209  003AE0  0100               	movlb	0	; () banked
 15210  003AE2  90D8               	bcf	status,0,c
 15211  003AE4  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 15212  003AE6  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15213  003AE8  0100               	movlb	0	; () banked
 15214  003AEA  90D8               	bcf	status,0,c
 15215  003AEC  3760               	rlcf	??_calculateSetFilterMask& (0+255),f,b
 15216  003AEE  3761               	rlcf	(??_calculateSetFilterMask+1)& (0+255),f,b
 15217  003AF0  0E43               	movlw	67
 15218  003AF2  0100               	movlb	0	; () banked
 15219  003AF4  2560               	addwf	??_calculateSetFilterMask& (0+255),w,b
 15220  003AF6  6E16               	movwf	?_Read_b_eep,c
 15221  003AF8  0E00               	movlw	0
 15222  003AFA  0100               	movlb	0	; () banked
 15223  003AFC  2161               	addwfc	(??_calculateSetFilterMask+1)& (0+255),w,b
 15224  003AFE  6E17               	movwf	?_Read_b_eep+1,c
 15225  003B00  ECFD  F036         	call	_Read_b_eep	;wreg free
 15226  003B04                     L109:
 15227  003B04  6E25               	movwf	calculateSetFilterMask@lastOID,c
 15228  003B06                     l10853:
 15229  003B06  2A33               	incf	calculateSetFilterMask@i,f,c
 15230  003B08                     L110:
 15231  003B08  0E07               	movlw	7
 15232  003B0A  6433               	cpfsgt	calculateSetFilterMask@i,c
 15233  003B0C  D4EA               	goto	l10809
 15234                           
 15235                           ;main.c: 3253: }
 15236                           ;main.c: 3255: }
 15237                           ;main.c: 3256: }
 15238                           ;main.c: 3259: ECANSetOperationMode( ECAN_OP_MODE_CONFIG );
 15239  003B0E  0100               	movlb	0	; () banked
 15240  003B10  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 15241  003B12  0E80               	movlw	128
 15242  003B14  6E16               	movwf	?_ECANSetOperationMode,c
 15243  003B16  0100               	movlb	0	; () banked
 15244  003B18  5160               	movf	??_calculateSetFilterMask& (0+255),w,b
 15245  003B1A  ECBD  F036         	call	_ECANSetOperationMode	;wreg free
 15246                           
 15247                           ;main.c: 3262: _CANIDToRegs((BYTE*)&RXM1SIDH, mask, 1);
 15248  003B1E  010F               	movlb	15	; () banked
 15249  003B20  0E0F               	movlw	15	;volatile
 15250  003B22  6E17               	movwf	?__CANIDToRegs+1,c
 15251  003B24  010F               	movlb	15	; () banked
 15252  003B26  0E1C               	movlw	28	;volatile
 15253  003B28  6E16               	movwf	?__CANIDToRegs,c
 15254  003B2A  C026  F018         	movff	calculateSetFilterMask@mask,?__CANIDToRegs+2
 15255  003B2E  C027  F019         	movff	calculateSetFilterMask@mask+1,?__CANIDToRegs+3
 15256  003B32  C028  F01A         	movff	calculateSetFilterMask@mask+2,?__CANIDToRegs+4
 15257  003B36  C029  F01B         	movff	calculateSetFilterMask@mask+3,?__CANIDToRegs+5
 15258  003B3A  0100               	movlb	0	; () banked
 15259  003B3C  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 15260  003B3E  0E01               	movlw	1
 15261  003B40  6E1C               	movwf	?__CANIDToRegs+6,c
 15262  003B42  0100               	movlb	0	; () banked
 15263  003B44  5160               	movf	??_calculateSetFilterMask& (0+255),w,b
 15264  003B46  EC90  F02F         	call	__CANIDToRegs	;wreg free
 15265                           
 15266                           ;main.c: 3265: RXF1EN = 1; _CANIDToRegs((BYTE*)&RXF1SIDH, filter, 1);;
 15267  003B4A  010D               	movlb	13
 15268  003B4C  010D               	movlb	13	; () banked
 15269  003B4E  83D4               	bsf	212,1,b	;volatile
 15270                           
 15271                           ; BSR set to: 13
 15272  003B50  010F               	movlb	15	; () banked
 15273  003B52  0E0F               	movlw	15	;volatile
 15274  003B54  6E17               	movwf	?__CANIDToRegs+1,c
 15275  003B56  010F               	movlb	15	; () banked
 15276  003B58  0E04               	movlw	4	;volatile
 15277  003B5A  6E16               	movwf	?__CANIDToRegs,c
 15278  003B5C  C02A  F018         	movff	calculateSetFilterMask@filter,?__CANIDToRegs+2
 15279  003B60  C02B  F019         	movff	calculateSetFilterMask@filter+1,?__CANIDToRegs+3
 15280  003B64  C02C  F01A         	movff	calculateSetFilterMask@filter+2,?__CANIDToRegs+4
 15281  003B68  C02D  F01B         	movff	calculateSetFilterMask@filter+3,?__CANIDToRegs+5
 15282  003B6C  0100               	movlb	0	; () banked
 15283  003B6E  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 15284  003B70  0E01               	movlw	1
 15285  003B72  6E1C               	movwf	?__CANIDToRegs+6,c
 15286  003B74  0100               	movlb	0	; () banked
 15287  003B76  5160               	movf	??_calculateSetFilterMask& (0+255),w,b
 15288  003B78  EC90  F02F         	call	__CANIDToRegs	;wreg free
 15289                           
 15290                           ;main.c: 3268: ECANSetOperationMode( ECAN_OP_MODE_NORMAL );
 15291  003B7C  0100               	movlb	0	; () banked
 15292  003B7E  6F60               	movwf	??_calculateSetFilterMask& (0+255),b
 15293  003B80  0E00               	movlw	0
 15294  003B82  6E16               	movwf	?_ECANSetOperationMode,c
 15295  003B84  0100               	movlb	0	; () banked
 15296  003B86  5160               	movf	??_calculateSetFilterMask& (0+255),w,b
 15297  003B88  ECBD  F036         	call	_ECANSetOperationMode	;wreg free
 15298  003B8C  0012               	return	
 15299  003B8E                     __end_of_calculateSetFilterMask:
 15300                           	opt stack 0
 15301                           tblptru	equ	0xFF8
 15302                           prodh	equ	0xFF4
 15303                           prodl	equ	0xFF3
 15304                           postinc0	equ	0xFEE
 15305                           wreg	equ	0xFE8
 15306                           indf2	equ	0xFDF
 15307                           postinc2	equ	0xFDE
 15308                           postdec2	equ	0xFDD
 15309                           fsr2h	equ	0xFDA
 15310                           fsr2l	equ	0xFD9
 15311                           status	equ	0xFD8
 15312                           
 15313 ;; *************** function _SendInformationEvent *****************
 15314 ;; Defined at:
 15315 ;;		line 1993 in file "../main.c"
 15316 ;; Parameters:    Size  Location     Type
 15317 ;;  idx             1   47[COMRAM] unsigned char 
 15318 ;;  eventClass      1   48[COMRAM] unsigned char 
 15319 ;;  eventTypeId     1   49[COMRAM] unsigned char 
 15320 ;; Auto vars:     Size  Location     Type
 15321 ;;  data            3   63[BANK0 ] unsigned char [3]
 15322 ;; Return value:  Size  Location     Type
 15323 ;;		None               void
 15324 ;; Registers used:
 15325 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 15326 ;; Tracked objects:
 15327 ;;		On entry : 0/0
 15328 ;;		On exit  : 0/0
 15329 ;;		Unchanged: 0/0
 15330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15331 ;;      Params:         3       0       0       0       0       0       0
 15332 ;;      Locals:         0       3       0       0       0       0       0
 15333 ;;      Temps:          2       0       0       0       0       0       0
 15334 ;;      Totals:         5       3       0       0       0       0       0
 15335 ;;Total ram usage:        8 bytes
 15336 ;; Hardware stack levels used:    1
 15337 ;; Hardware stack levels required when called:    6
 15338 ;; This function calls:
 15339 ;;		_Read_b_eep
 15340 ;;		_sendVSCPFrame
 15341 ;; This function is called by:
 15342 ;;		_doApplicationOneSecondWork
 15343 ;;		_vscp_writeAppReg
 15344 ;;		_doActionOn
 15345 ;;		_doActionOff
 15346 ;;		_doActionStatus
 15347 ;;		_doActionToggle
 15348 ;; This function uses a non-reentrant model
 15349 ;;
 15350                           
 15351                           	psect	text25
 15352  006890                     __ptext25:
 15353                           	opt stack 0
 15354  006890                     _SendInformationEvent:
 15355                           	opt stack 21
 15356                           
 15357                           ;main.c: 1994: uint8_t data[3];
 15358                           ;main.c: 1996: data[ 0 ] = idx;
 15359                           
 15360                           ;incstack = 0
 15361                           ;incstack = 0
 15362  006890  C030  F09F         	movff	SendInformationEvent@idx,SendInformationEvent@data
 15363                           
 15364                           ;main.c: 1997: data[ 1 ] = Read_b_eep(0x43 + 0);
 15365  006894  0E00               	movlw	0
 15366  006896  6E17               	movwf	?_Read_b_eep+1,c
 15367  006898  0E43               	movlw	67
 15368  00689A  6E16               	movwf	?_Read_b_eep,c
 15369  00689C  ECFD  F036         	call	_Read_b_eep	;wreg free
 15370  0068A0  0100               	movlb	0	; () banked
 15371  0068A2  0100               	movlb	0	; () banked
 15372  0068A4  6FA0               	movwf	(SendInformationEvent@data+1)& (0+255),b
 15373                           
 15374                           ; BSR set to: 0
 15375                           ;main.c: 1998: data[ 2 ] = Read_b_eep(0x43 + 2 + idx);
 15376  0068A6  0E45               	movlw	69
 15377  0068A8  2430               	addwf	SendInformationEvent@idx,w,c
 15378  0068AA  6E16               	movwf	?_Read_b_eep,c
 15379  0068AC  6A17               	clrf	?_Read_b_eep+1,c
 15380  0068AE  0E00               	movlw	0
 15381  0068B0  2217               	addwfc	?_Read_b_eep+1,f,c
 15382  0068B2  ECFD  F036         	call	_Read_b_eep	;wreg free
 15383  0068B6  0100               	movlb	0	; () banked
 15384  0068B8  0100               	movlb	0	; () banked
 15385  0068BA  6FA1               	movwf	(SendInformationEvent@data+2)& (0+255),b
 15386                           
 15387                           ; BSR set to: 0
 15388                           ;main.c: 1999: sendVSCPFrame( eventClass,
 15389                           ;main.c: 2000: eventTypeId,
 15390                           ;main.c: 2001: vscp_nickname,
 15391                           ;main.c: 2002: 0x03,
 15392                           ;main.c: 2003: 3,
 15393                           ;main.c: 2004: data );
 15394  0068BC  0100               	movlb	0	; () banked
 15395  0068BE  C031  F083         	movff	SendInformationEvent@eventClass,?_sendVSCPFrame
 15396  0068C2  0100               	movlb	0	; () banked
 15397  0068C4  0100               	movlb	0	; () banked
 15398  0068C6  6B84               	clrf	(?_sendVSCPFrame+1)& (0+255),b
 15399  0068C8  C032  F085         	movff	SendInformationEvent@eventTypeId,?_sendVSCPFrame+2
 15400  0068CC  C0EC  F086         	movff	_vscp_nickname,?_sendVSCPFrame+3
 15401  0068D0  6E33               	movwf	??_SendInformationEvent& (0+255),c
 15402  0068D2  0E03               	movlw	3
 15403  0068D4  0100               	movlb	0	; () banked
 15404  0068D6  0100               	movlb	0	; () banked
 15405  0068D8  6F87               	movwf	(?_sendVSCPFrame+4)& (0+255),b
 15406  0068DA  5033               	movf	??_SendInformationEvent& (0+255),w,c
 15407  0068DC  6E34               	movwf	(??_SendInformationEvent+1)& (0+255),c
 15408  0068DE  0E03               	movlw	3
 15409  0068E0  0100               	movlb	0	; () banked
 15410  0068E2  0100               	movlb	0	; () banked
 15411  0068E4  6F88               	movwf	(?_sendVSCPFrame+5)& (0+255),b
 15412  0068E6  5034               	movf	(??_SendInformationEvent+1)& (0+255),w,c
 15413  0068E8  0100               	movlb	0	; () banked
 15414  0068EA  0E00               	movlw	high SendInformationEvent@data
 15415  0068EC  0100               	movlb	0	; () banked
 15416  0068EE  0100               	movlb	0	; () banked
 15417  0068F0  6F8A               	movwf	(?_sendVSCPFrame+7)& (0+255),b
 15418  0068F2  0100               	movlb	0	; () banked
 15419  0068F4  0E9F               	movlw	low SendInformationEvent@data
 15420  0068F6  0100               	movlb	0	; () banked
 15421  0068F8  6F89               	movwf	(?_sendVSCPFrame+6)& (0+255),b
 15422  0068FA  EC7B  F031         	call	_sendVSCPFrame	;wreg free
 15423  0068FE  0012               	return	
 15424  006900                     __end_of_SendInformationEvent:
 15425                           	opt stack 0
 15426                           tblptru	equ	0xFF8
 15427                           prodh	equ	0xFF4
 15428                           prodl	equ	0xFF3
 15429                           postinc0	equ	0xFEE
 15430                           wreg	equ	0xFE8
 15431                           indf2	equ	0xFDF
 15432                           postinc2	equ	0xFDE
 15433                           postdec2	equ	0xFDD
 15434                           fsr2h	equ	0xFDA
 15435                           fsr2l	equ	0xFD9
 15436                           status	equ	0xFD8
 15437                           
 15438 ;; *************** function _vscp_readRegister *****************
 15439 ;; Defined at:
 15440 ;;		line 561 in file "../../vscp_firmware/common/vscp_firmware.c"
 15441 ;; Parameters:    Size  Location     Type
 15442 ;;  reg             1   42[COMRAM] unsigned char 
 15443 ;; Auto vars:     Size  Location     Type
 15444 ;;		None
 15445 ;; Return value:  Size  Location     Type
 15446 ;;                  1    wreg      unsigned char 
 15447 ;; Registers used:
 15448 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15449 ;; Tracked objects:
 15450 ;;		On entry : 0/0
 15451 ;;		On exit  : 0/0
 15452 ;;		Unchanged: 0/0
 15453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15454 ;;      Params:         1       0       0       0       0       0       0
 15455 ;;      Locals:         0       0       0       0       0       0       0
 15456 ;;      Temps:          0       0       0       0       0       0       0
 15457 ;;      Totals:         1       0       0       0       0       0       0
 15458 ;;Total ram usage:        1 bytes
 15459 ;; Hardware stack levels used:    1
 15460 ;; Hardware stack levels required when called:    5
 15461 ;; This function calls:
 15462 ;;		_vscp_readAppReg
 15463 ;;		_vscp_readStdReg
 15464 ;; This function is called by:
 15465 ;;		_vscp_handleProtocolEvent
 15466 ;; This function uses a non-reentrant model
 15467 ;;
 15468                           
 15469                           	psect	text26
 15470  006D08                     __ptext26:
 15471                           	opt stack 0
 15472  006D08                     _vscp_readRegister:
 15473                           	opt stack 23
 15474                           
 15475                           ;vscp_firmware.c: 562: if (reg >= 0x80) {
 15476                           
 15477                           ;incstack = 0
 15478                           ;incstack = 0
 15479  006D08  0E7F               	movlw	127
 15480  006D0A  642B               	cpfsgt	vscp_readRegister@reg,c
 15481  006D0C  D005               	goto	l11461
 15482                           
 15483                           ;vscp_firmware.c: 563: return vscp_readStdReg(reg);
 15484  006D0E  C02B  F01A         	movff	vscp_readRegister@reg,?_vscp_readStdReg
 15485  006D12  EC30  F028         	call	_vscp_readStdReg	;wreg free
 15486  006D16  D004               	goto	l1213
 15487  006D18                     l11461:
 15488                           
 15489                           ;vscp_firmware.c: 565: else {
 15490                           ;vscp_firmware.c: 566: return vscp_readAppReg(reg);
 15491  006D18  C02B  F018         	movff	vscp_readRegister@reg,?_vscp_readAppReg
 15492  006D1C  EC3F  F030         	call	_vscp_readAppReg	;wreg free
 15493  006D20                     l1213:
 15494  006D20  0012               	return	
 15495  006D22                     __end_of_vscp_readRegister:
 15496                           	opt stack 0
 15497                           tblptru	equ	0xFF8
 15498                           prodh	equ	0xFF4
 15499                           prodl	equ	0xFF3
 15500                           postinc0	equ	0xFEE
 15501                           wreg	equ	0xFE8
 15502                           indf2	equ	0xFDF
 15503                           postinc2	equ	0xFDE
 15504                           postdec2	equ	0xFDD
 15505                           fsr2h	equ	0xFDA
 15506                           fsr2l	equ	0xFD9
 15507                           status	equ	0xFD8
 15508                           
 15509 ;; *************** function _vscp_readStdReg *****************
 15510 ;; Defined at:
 15511 ;;		line 575 in file "../../vscp_firmware/common/vscp_firmware.c"
 15512 ;; Parameters:    Size  Location     Type
 15513 ;;  reg             1   25[COMRAM] unsigned char 
 15514 ;; Auto vars:     Size  Location     Type
 15515 ;;  code            4   35[COMRAM] unsigned long 
 15516 ;;  idx             1   40[COMRAM] unsigned char 
 15517 ;;  code            4   31[COMRAM] unsigned long 
 15518 ;;  idx             1   39[COMRAM] unsigned char 
 15519 ;;  rv              1   41[COMRAM] unsigned char 
 15520 ;; Return value:  Size  Location     Type
 15521 ;;                  1    wreg      unsigned char 
 15522 ;; Registers used:
 15523 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15524 ;; Tracked objects:
 15525 ;;		On entry : 0/0
 15526 ;;		On exit  : 0/0
 15527 ;;		Unchanged: 0/0
 15528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15529 ;;      Params:         1       0       0       0       0       0       0
 15530 ;;      Locals:        11       0       0       0       0       0       0
 15531 ;;      Temps:          5       0       0       0       0       0       0
 15532 ;;      Totals:        17       0       0       0       0       0       0
 15533 ;;Total ram usage:       17 bytes
 15534 ;; Hardware stack levels used:    1
 15535 ;; Hardware stack levels required when called:    4
 15536 ;; This function calls:
 15537 ;;		_vscp_getMajorVersion
 15538 ;;		_vscp_getMinorVersion
 15539 ;;		_vscp_getSubMinorVersion
 15540 ;;		_vscp_getGUID
 15541 ;;		_vscp_getMDF_URL
 15542 ;;		_vscp_getUserID
 15543 ;;		_vscp_getManufacturerId
 15544 ;;		_vscp_getBootLoaderAlgorithm
 15545 ;;		_vscp_getBufferSize
 15546 ;;		_vscp_getFamilyCode
 15547 ;;		_vscp_getFamilyType
 15548 ;;		_vscp_getRegisterPagesUsed
 15549 ;; This function is called by:
 15550 ;;		_vscp_readRegister
 15551 ;;		_vscp_handleProtocolEvent
 15552 ;; This function uses a non-reentrant model
 15553 ;;
 15554                           
 15555                           	psect	text27
 15556  005060                     __ptext27:
 15557                           	opt stack 0
 15558  005060                     _vscp_readStdReg:
 15559                           	opt stack 24
 15560                           
 15561                           ;vscp_firmware.c: 576: uint8_t rv = 0;
 15562                           
 15563                           ;incstack = 0
 15564                           ;incstack = 0
 15565  005060  6E1B               	movwf	??_vscp_readStdReg& (0+255),c
 15566  005062  0E00               	movlw	0
 15567  005064  6E2A               	movwf	vscp_readStdReg@rv,c
 15568  005066  501B               	movf	??_vscp_readStdReg& (0+255),w,c
 15569                           
 15570                           ;vscp_firmware.c: 578: if (0x80 == reg) {
 15571  005068  501A               	movf	vscp_readStdReg@reg,w,c
 15572  00506A  0A80               	xorlw	128
 15573  00506C  A4D8               	btfss	status,2,c
 15574  00506E  D008               	goto	l11473
 15575                           
 15576                           ;vscp_firmware.c: 581: rv = vscp_alarmstatus;
 15577  005070  C0E7  F02A         	movff	_vscp_alarmstatus,vscp_readStdReg@rv
 15578                           
 15579                           ;vscp_firmware.c: 582: vscp_alarmstatus = 0x00;
 15580  005074  6E1B               	movwf	??_vscp_readStdReg& (0+255),c
 15581  005076  0E00               	movlw	0
 15582  005078  0100               	movlb	0	; () banked
 15583  00507A  0100               	movlb	0	; () banked
 15584  00507C  6FE7               	movwf	_vscp_alarmstatus& (0+255),b
 15585  00507E  D007               	goto	L113
 15586  005080                     l11473:
 15587                           
 15588                           ;vscp_firmware.c: 585: else if (0x81 == reg) {
 15589  005080  501A               	movf	vscp_readStdReg@reg,w,c
 15590  005082  0A81               	xorlw	129
 15591  005084  A4D8               	btfss	status,2,c
 15592  005086  D005               	goto	l11477
 15593                           
 15594                           ;vscp_firmware.c: 588: rv = 1;
 15595  005088  6E1B               	movwf	??_vscp_readStdReg& (0+255),c
 15596  00508A  0E01               	movlw	1
 15597  00508C  D00F               	goto	L125
 15598  00508E                     L113:
 15599  00508E  501B               	movf	??_vscp_readStdReg& (0+255),w,c
 15600                           
 15601                           ;vscp_firmware.c: 590: }
 15602  005090  D0D8               	goto	l11561
 15603  005092                     l11477:
 15604                           
 15605                           ;vscp_firmware.c: 591: else if (0x82 == reg) {
 15606  005092  501A               	movf	vscp_readStdReg@reg,w,c
 15607  005094  0A82               	xorlw	130
 15608  005096  A4D8               	btfss	status,2,c
 15609  005098  D003               	goto	l11481
 15610                           
 15611                           ;vscp_firmware.c: 594: rv = 5;
 15612  00509A  6E1B               	movwf	??_vscp_readStdReg& (0+255),c
 15613  00509C  0E05               	movlw	5
 15614  00509E  D006               	goto	L125
 15615  0050A0                     l11481:
 15616                           
 15617                           ;vscp_firmware.c: 597: else if (0x83 == reg) {
 15618  0050A0  501A               	movf	vscp_readStdReg@reg,w,c
 15619  0050A2  0A83               	xorlw	131
 15620  0050A4  A4D8               	btfss	status,2,c
 15621  0050A6  D004               	goto	l11485
 15622                           
 15623                           ;vscp_firmware.c: 600: rv = 0;
 15624  0050A8  6E1B               	movwf	??_vscp_readStdReg& (0+255),c
 15625  0050AA  0E00               	movlw	0
 15626  0050AC                     L125:
 15627  0050AC  6E2A               	movwf	vscp_readStdReg@rv,c
 15628  0050AE  D7EF               	goto	L113
 15629  0050B0                     l11485:
 15630                           
 15631                           ;vscp_firmware.c: 603: else if (0x94 == reg) {
 15632  0050B0  501A               	movf	vscp_readStdReg@reg,w,c
 15633  0050B2  0A94               	xorlw	148
 15634  0050B4  A4D8               	btfss	status,2,c
 15635  0050B6  D003               	goto	l11489
 15636                           
 15637                           ;vscp_firmware.c: 606: rv = vscp_getMajorVersion();
 15638  0050B8  EC42  F037         	call	_vscp_getMajorVersion	;wreg free
 15639  0050BC  D0C1               	goto	L126
 15640  0050BE                     l11489:
 15641                           
 15642                           ;vscp_firmware.c: 609: else if (0x95 == reg) {
 15643  0050BE  501A               	movf	vscp_readStdReg@reg,w,c
 15644  0050C0  0A95               	xorlw	149
 15645  0050C2  A4D8               	btfss	status,2,c
 15646  0050C4  D003               	goto	l11493
 15647                           
 15648                           ;vscp_firmware.c: 612: rv = vscp_getMinorVersion();
 15649  0050C6  EC40  F037         	call	_vscp_getMinorVersion	;wreg free
 15650  0050CA  D0BA               	goto	L126
 15651  0050CC                     l11493:
 15652                           
 15653                           ;vscp_firmware.c: 615: else if (0x96 == reg) {
 15654  0050CC  501A               	movf	vscp_readStdReg@reg,w,c
 15655  0050CE  0A96               	xorlw	150
 15656  0050D0  A4D8               	btfss	status,2,c
 15657  0050D2  D003               	goto	l11497
 15658                           
 15659                           ;vscp_firmware.c: 618: rv = vscp_getSubMinorVersion();
 15660  0050D4  EC3E  F037         	call	_vscp_getSubMinorVersion	;wreg free
 15661  0050D8  D0B3               	goto	L126
 15662  0050DA                     l11497:
 15663                           
 15664                           ;vscp_firmware.c: 621: else if (reg < 0x89) {
 15665  0050DA  0E89               	movlw	137
 15666  0050DC  601A               	cpfslt	vscp_readStdReg@reg,c
 15667  0050DE  D006               	goto	l11501
 15668                           
 15669                           ;vscp_firmware.c: 624: rv = vscp_getUserID(reg - 0x84);
 15670  0050E0  501A               	movf	vscp_readStdReg@reg,w,c
 15671  0050E2  0F7C               	addlw	124
 15672  0050E4  6E18               	movwf	?_vscp_getUserID,c
 15673  0050E6  ECE2  F036         	call	_vscp_getUserID	;wreg free
 15674  0050EA  D0AA               	goto	L126
 15675  0050EC                     l11501:
 15676                           
 15677                           ;vscp_firmware.c: 627: else if ((reg > 0x88) &&
 15678                           ;vscp_firmware.c: 628: (reg < 0x91)) {
 15679  0050EC  0E88               	movlw	136
 15680  0050EE  641A               	cpfsgt	vscp_readStdReg@reg,c
 15681  0050F0  D009               	goto	l11507
 15682  0050F2  0E91               	movlw	145
 15683  0050F4  601A               	cpfslt	vscp_readStdReg@reg,c
 15684  0050F6  D006               	goto	l11507
 15685                           
 15686                           ;vscp_firmware.c: 631: rv = vscp_getManufacturerId(reg - 0x89);
 15687  0050F8  501A               	movf	vscp_readStdReg@reg,w,c
 15688  0050FA  0F77               	addlw	119
 15689  0050FC  6E18               	movwf	?_vscp_getManufacturerId,c
 15690  0050FE  ECD9  F036         	call	_vscp_getManufacturerId	;wreg free
 15691  005102  D09E               	goto	L126
 15692  005104                     l11507:
 15693                           
 15694                           ;vscp_firmware.c: 634: else if (0x91 == reg) {
 15695  005104  501A               	movf	vscp_readStdReg@reg,w,c
 15696  005106  0A91               	xorlw	145
 15697  005108  A4D8               	btfss	status,2,c
 15698  00510A  D003               	goto	l11511
 15699                           
 15700                           ;vscp_firmware.c: 637: rv = vscp_nickname;
 15701  00510C  C0EC  F02A         	movff	_vscp_nickname,vscp_readStdReg@rv
 15702                           
 15703                           ;vscp_firmware.c: 639: }
 15704  005110  D098               	goto	l11561
 15705  005112                     l11511:
 15706                           
 15707                           ;vscp_firmware.c: 640: else if (0x93 == reg) {
 15708  005112  501A               	movf	vscp_readStdReg@reg,w,c
 15709  005114  0A93               	xorlw	147
 15710  005116  A4D8               	btfss	status,2,c
 15711  005118  D003               	goto	l11515
 15712                           
 15713                           ;vscp_firmware.c: 643: rv = (vscp_page_select & 0xff);
 15714  00511A  C036  F02A         	movff	_vscp_page_select,vscp_readStdReg@rv
 15715                           
 15716                           ;vscp_firmware.c: 645: }
 15717  00511E  D091               	goto	l11561
 15718  005120                     l11515:
 15719                           
 15720                           ;vscp_firmware.c: 647: else if (0x92 == reg) {
 15721  005120  501A               	movf	vscp_readStdReg@reg,w,c
 15722  005122  0A92               	xorlw	146
 15723  005124  A4D8               	btfss	status,2,c
 15724  005126  D002               	goto	l11519
 15725                           
 15726                           ;vscp_firmware.c: 650: rv = (vscp_page_select >> 8) & 0xff;
 15727  005128  5037               	movf	_vscp_page_select+1,w,c
 15728  00512A  D08A               	goto	L126
 15729  00512C                     l11519:
 15730                           
 15731                           ;vscp_firmware.c: 653: else if (0x97 == reg) {
 15732  00512C  501A               	movf	vscp_readStdReg@reg,w,c
 15733  00512E  0A97               	xorlw	151
 15734  005130  A4D8               	btfss	status,2,c
 15735  005132  D003               	goto	l11523
 15736                           
 15737                           ;vscp_firmware.c: 655: rv = vscp_getBootLoaderAlgorithm();
 15738  005134  EC3C  F037         	call	_vscp_getBootLoaderAlgorithm	;wreg free
 15739  005138  D083               	goto	L126
 15740  00513A                     l11523:
 15741                           
 15742                           ;vscp_firmware.c: 657: else if (0x98 == reg) {
 15743  00513A  501A               	movf	vscp_readStdReg@reg,w,c
 15744  00513C  0A98               	xorlw	152
 15745  00513E  A4D8               	btfss	status,2,c
 15746  005140  D003               	goto	l11527
 15747                           
 15748                           ;vscp_firmware.c: 659: rv = vscp_getBufferSize();
 15749  005142  EC3A  F037         	call	_vscp_getBufferSize	;wreg free
 15750  005146  D07C               	goto	L126
 15751  005148                     l11527:
 15752                           
 15753                           ;vscp_firmware.c: 661: else if (0x99 == reg) {
 15754  005148  501A               	movf	vscp_readStdReg@reg,w,c
 15755  00514A  0A99               	xorlw	153
 15756  00514C  A4D8               	btfss	status,2,c
 15757  00514E  D003               	goto	l11531
 15758                           
 15759                           ;vscp_firmware.c: 663: rv = vscp_getRegisterPagesUsed();
 15760  005150  EC38  F037         	call	_vscp_getRegisterPagesUsed	;wreg free
 15761  005154  D075               	goto	L126
 15762  005156                     l11531:
 15763                           
 15764                           ;vscp_firmware.c: 665: else if ( ( reg >= 0x9A ) &&
 15765                           ;vscp_firmware.c: 666: ( reg < ( 0x9A + 4 ) ) ) {
 15766  005156  0E99               	movlw	153
 15767  005158  641A               	cpfsgt	vscp_readStdReg@reg,c
 15768  00515A  D02D               	goto	l11541
 15769  00515C  0E9E               	movlw	158
 15770  00515E  601A               	cpfslt	vscp_readStdReg@reg,c
 15771  005160  D02A               	goto	l11541
 15772                           
 15773                           ;vscp_firmware.c: 668: uint32_t code = vscp_getFamilyCode();
 15774  005162  ECD0  F036         	call	_vscp_getFamilyCode	;wreg free
 15775  005166  C019  F023         	movff	?_vscp_getFamilyCode+3,vscp_readStdReg@code+3
 15776  00516A  C018  F022         	movff	?_vscp_getFamilyCode+2,vscp_readStdReg@code+2
 15777  00516E  C017  F021         	movff	?_vscp_getFamilyCode+1,vscp_readStdReg@code+1
 15778  005172  C016  F020         	movff	?_vscp_getFamilyCode,vscp_readStdReg@code
 15779                           
 15780                           ;vscp_firmware.c: 669: uint8_t idx = reg - 0x9A;
 15781  005176  501A               	movf	vscp_readStdReg@reg,w,c
 15782  005178  0F66               	addlw	102
 15783  00517A  6E28               	movwf	vscp_readStdReg@idx,c
 15784                           
 15785                           ;vscp_firmware.c: 670: rv = code >> ( ( ( 3 - idx ) * 8 ) & 0xff );
 15786  00517C  5028               	movf	vscp_readStdReg@idx,w,c
 15787  00517E  0800               	sublw	0
 15788  005180  6E1B               	movwf	??_vscp_readStdReg& (0+255),c
 15789  005182  90D8               	bcf	status,0,c
 15790  005184  361B               	rlcf	??_vscp_readStdReg,f,c
 15791  005186  90D8               	bcf	status,0,c
 15792  005188  361B               	rlcf	??_vscp_readStdReg,f,c
 15793  00518A  90D8               	bcf	status,0,c
 15794  00518C  361B               	rlcf	??_vscp_readStdReg,f,c
 15795  00518E  501B               	movf	??_vscp_readStdReg,w,c
 15796  005190  0F18               	addlw	24
 15797  005192  C020  F01C         	movff	vscp_readStdReg@code,??_vscp_readStdReg+1
 15798  005196  C021  F01D         	movff	vscp_readStdReg@code+1,??_vscp_readStdReg+2
 15799  00519A  C022  F01E         	movff	vscp_readStdReg@code+2,??_vscp_readStdReg+3
 15800  00519E  C023  F01F         	movff	vscp_readStdReg@code+3,??_vscp_readStdReg+4
 15801  0051A2  2AE8               	incf	wreg,f,c
 15802  0051A4  D005               	goto	u14330
 15803  0051A6                     u14335:
 15804  0051A6  90D8               	bcf	status,0,c
 15805  0051A8  321F               	rrcf	??_vscp_readStdReg+4,f,c
 15806  0051AA  321E               	rrcf	??_vscp_readStdReg+3,f,c
 15807  0051AC  321D               	rrcf	??_vscp_readStdReg+2,f,c
 15808  0051AE  321C               	rrcf	??_vscp_readStdReg+1,f,c
 15809  0051B0                     u14330:
 15810  0051B0  2EE8               	decfsz	wreg,f,c
 15811  0051B2  D7F9               	goto	u14335
 15812  0051B4  D02F               	goto	L124
 15813  0051B6                     l11541:
 15814                           
 15815                           ;vscp_firmware.c: 672: else if ( ( reg >= 0x9E ) &&
 15816                           ;vscp_firmware.c: 673: ( reg < ( 0x9E + 4 ) ) ) {
 15817  0051B6  0E9D               	movlw	157
 15818  0051B8  641A               	cpfsgt	vscp_readStdReg@reg,c
 15819  0051BA  D02E               	goto	l11551
 15820  0051BC  0EA2               	movlw	162
 15821  0051BE  601A               	cpfslt	vscp_readStdReg@reg,c
 15822  0051C0  D02B               	goto	l11551
 15823                           
 15824                           ;vscp_firmware.c: 675: uint32_t code = vscp_getFamilyType();
 15825  0051C2  ECC7  F036         	call	_vscp_getFamilyType	;wreg free
 15826  0051C6  C019  F027         	movff	?_vscp_getFamilyType+3,vscp_readStdReg@code_1376+3
 15827  0051CA  C018  F026         	movff	?_vscp_getFamilyType+2,vscp_readStdReg@code_1376+2
 15828  0051CE  C017  F025         	movff	?_vscp_getFamilyType+1,vscp_readStdReg@code_1376+1
 15829  0051D2  C016  F024         	movff	?_vscp_getFamilyType,vscp_readStdReg@code_1376
 15830                           
 15831                           ;vscp_firmware.c: 676: uint8_t idx = reg - 0x9E;
 15832  0051D6  501A               	movf	vscp_readStdReg@reg,w,c
 15833  0051D8  0F62               	addlw	98
 15834  0051DA  6E29               	movwf	vscp_readStdReg@idx_1377,c
 15835                           
 15836                           ;vscp_firmware.c: 677: rv = code >> ( ( ( 3 - idx ) * 8 ) & 0xff );
 15837  0051DC  5029               	movf	vscp_readStdReg@idx_1377,w,c
 15838  0051DE  0800               	sublw	0
 15839  0051E0  6E1B               	movwf	??_vscp_readStdReg& (0+255),c
 15840  0051E2  90D8               	bcf	status,0,c
 15841  0051E4  361B               	rlcf	??_vscp_readStdReg,f,c
 15842  0051E6  90D8               	bcf	status,0,c
 15843  0051E8  361B               	rlcf	??_vscp_readStdReg,f,c
 15844  0051EA  90D8               	bcf	status,0,c
 15845  0051EC  361B               	rlcf	??_vscp_readStdReg,f,c
 15846  0051EE  501B               	movf	??_vscp_readStdReg,w,c
 15847  0051F0  0F18               	addlw	24
 15848  0051F2  C024  F01C         	movff	vscp_readStdReg@code_1376,??_vscp_readStdReg+1
 15849  0051F6  C025  F01D         	movff	vscp_readStdReg@code_1376+1,??_vscp_readStdReg+2
 15850  0051FA  C026  F01E         	movff	vscp_readStdReg@code_1376+2,??_vscp_readStdReg+3
 15851  0051FE  C027  F01F         	movff	vscp_readStdReg@code_1376+3,??_vscp_readStdReg+4
 15852  005202  2AE8               	incf	wreg,f,c
 15853  005204  D005               	goto	u14360
 15854  005206                     u14365:
 15855  005206  90D8               	bcf	status,0,c
 15856  005208  321F               	rrcf	??_vscp_readStdReg+4,f,c
 15857  00520A  321E               	rrcf	??_vscp_readStdReg+3,f,c
 15858  00520C  321D               	rrcf	??_vscp_readStdReg+2,f,c
 15859  00520E  321C               	rrcf	??_vscp_readStdReg+1,f,c
 15860  005210                     u14360:
 15861  005210  2EE8               	decfsz	wreg,f,c
 15862  005212  D7F9               	goto	u14365
 15863  005214                     L124:
 15864  005214  501C               	movf	??_vscp_readStdReg+1,w,c
 15865  005216  D014               	goto	L126
 15866  005218                     l11551:
 15867                           
 15868                           ;vscp_firmware.c: 679: else if ((reg > (0xD0 - 1)) &&
 15869                           ;vscp_firmware.c: 680: (reg < 0xE0)) {
 15870  005218  0ECF               	movlw	207
 15871  00521A  641A               	cpfsgt	vscp_readStdReg@reg,c
 15872  00521C  D009               	goto	l11557
 15873  00521E  0EE0               	movlw	224
 15874  005220  601A               	cpfslt	vscp_readStdReg@reg,c
 15875  005222  D006               	goto	l11557
 15876                           
 15877                           ;vscp_firmware.c: 683: rv = vscp_getGUID(reg - 0xD0);
 15878  005224  501A               	movf	vscp_readStdReg@reg,w,c
 15879  005226  0F30               	addlw	48
 15880  005228  6E18               	movwf	?_vscp_getGUID,c
 15881  00522A  ECEB  F036         	call	_vscp_getGUID	;wreg free
 15882  00522E  D008               	goto	L126
 15883  005230                     l11557:
 15884                           
 15885                           ;vscp_firmware.c: 686: else if ( reg >= 0xE0 ) {
 15886  005230  0EDF               	movlw	223
 15887  005232  641A               	cpfsgt	vscp_readStdReg@reg,c
 15888  005234  D006               	goto	l11561
 15889                           
 15890                           ;vscp_firmware.c: 689: rv = vscp_getMDF_URL(reg - 0xE0);
 15891  005236  501A               	movf	vscp_readStdReg@reg,w,c
 15892  005238  0F20               	addlw	32
 15893  00523A  6E16               	movwf	?_vscp_getMDF_URL,c
 15894  00523C  EC91  F036         	call	_vscp_getMDF_URL	;wreg free
 15895  005240                     L126:
 15896  005240  6E2A               	movwf	vscp_readStdReg@rv,c
 15897  005242                     l11561:
 15898                           
 15899                           ;vscp_firmware.c: 691: }
 15900                           ;vscp_firmware.c: 693: return rv;
 15901  005242  502A               	movf	vscp_readStdReg@rv,w,c
 15902  005244  0012               	return	
 15903  005246                     __end_of_vscp_readStdReg:
 15904                           	opt stack 0
 15905                           tblptru	equ	0xFF8
 15906                           prodh	equ	0xFF4
 15907                           prodl	equ	0xFF3
 15908                           postinc0	equ	0xFEE
 15909                           wreg	equ	0xFE8
 15910                           indf2	equ	0xFDF
 15911                           postinc2	equ	0xFDE
 15912                           postdec2	equ	0xFDD
 15913                           fsr2h	equ	0xFDA
 15914                           fsr2l	equ	0xFD9
 15915                           status	equ	0xFD8
 15916                           
 15917 ;; *************** function _vscp_getRegisterPagesUsed *****************
 15918 ;; Defined at:
 15919 ;;		line 3049 in file "../main.c"
 15920 ;; Parameters:    Size  Location     Type
 15921 ;;		None
 15922 ;; Auto vars:     Size  Location     Type
 15923 ;;		None
 15924 ;; Return value:  Size  Location     Type
 15925 ;;                  1    wreg      unsigned char 
 15926 ;; Registers used:
 15927 ;;		wreg
 15928 ;; Tracked objects:
 15929 ;;		On entry : 0/0
 15930 ;;		On exit  : 0/0
 15931 ;;		Unchanged: 0/0
 15932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15933 ;;      Params:         0       0       0       0       0       0       0
 15934 ;;      Locals:         0       0       0       0       0       0       0
 15935 ;;      Temps:          0       0       0       0       0       0       0
 15936 ;;      Totals:         0       0       0       0       0       0       0
 15937 ;;Total ram usage:        0 bytes
 15938 ;; Hardware stack levels used:    1
 15939 ;; Hardware stack levels required when called:    2
 15940 ;; This function calls:
 15941 ;;		Nothing
 15942 ;; This function is called by:
 15943 ;;		_vscp_readStdReg
 15944 ;; This function uses a non-reentrant model
 15945 ;;
 15946                           
 15947                           	psect	text28
 15948  006E70                     __ptext28:
 15949                           	opt stack 0
 15950  006E70                     _vscp_getRegisterPagesUsed:
 15951                           	opt stack 25
 15952                           
 15953                           ;main.c: 3050: return 1;
 15954                           
 15955                           ;incstack = 0
 15956                           ;incstack = 0
 15957  006E70  0E01               	movlw	1
 15958  006E72  0012               	return	
 15959  006E74                     __end_of_vscp_getRegisterPagesUsed:
 15960                           	opt stack 0
 15961                           tblptru	equ	0xFF8
 15962                           prodh	equ	0xFF4
 15963                           prodl	equ	0xFF3
 15964                           postinc0	equ	0xFEE
 15965                           wreg	equ	0xFE8
 15966                           indf2	equ	0xFDF
 15967                           postinc2	equ	0xFDE
 15968                           postdec2	equ	0xFDD
 15969                           fsr2h	equ	0xFDA
 15970                           fsr2l	equ	0xFD9
 15971                           status	equ	0xFD8
 15972                           
 15973 ;; *************** function _vscp_getFamilyType *****************
 15974 ;; Defined at:
 15975 ;;		line 3030 in file "../main.c"
 15976 ;; Parameters:    Size  Location     Type
 15977 ;;		None
 15978 ;; Auto vars:     Size  Location     Type
 15979 ;;		None
 15980 ;; Return value:  Size  Location     Type
 15981 ;;                  4   21[COMRAM] unsigned long 
 15982 ;; Registers used:
 15983 ;;		wreg, status,2
 15984 ;; Tracked objects:
 15985 ;;		On entry : 0/0
 15986 ;;		On exit  : 0/0
 15987 ;;		Unchanged: 0/0
 15988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15989 ;;      Params:         4       0       0       0       0       0       0
 15990 ;;      Locals:         0       0       0       0       0       0       0
 15991 ;;      Temps:          0       0       0       0       0       0       0
 15992 ;;      Totals:         4       0       0       0       0       0       0
 15993 ;;Total ram usage:        4 bytes
 15994 ;; Hardware stack levels used:    1
 15995 ;; Hardware stack levels required when called:    2
 15996 ;; This function calls:
 15997 ;;		Nothing
 15998 ;; This function is called by:
 15999 ;;		_vscp_readStdReg
 16000 ;; This function uses a non-reentrant model
 16001 ;;
 16002                           
 16003                           	psect	text29
 16004  006D8E                     __ptext29:
 16005                           	opt stack 0
 16006  006D8E                     _vscp_getFamilyType:
 16007                           	opt stack 25
 16008                           
 16009                           ;main.c: 3031: return 0;
 16010                           
 16011                           ;incstack = 0
 16012                           ;incstack = 0
 16013  006D8E  0E00               	movlw	0
 16014  006D90  6E16               	movwf	?_vscp_getFamilyType,c
 16015  006D92  0E00               	movlw	0
 16016  006D94  6E17               	movwf	?_vscp_getFamilyType+1,c
 16017  006D96  0E00               	movlw	0
 16018  006D98  6E18               	movwf	?_vscp_getFamilyType+2,c
 16019  006D9A  0E00               	movlw	0
 16020  006D9C  6E19               	movwf	?_vscp_getFamilyType+3,c
 16021  006D9E  0012               	return	
 16022  006DA0                     __end_of_vscp_getFamilyType:
 16023                           	opt stack 0
 16024                           tblptru	equ	0xFF8
 16025                           prodh	equ	0xFF4
 16026                           prodl	equ	0xFF3
 16027                           postinc0	equ	0xFEE
 16028                           wreg	equ	0xFE8
 16029                           indf2	equ	0xFDF
 16030                           postinc2	equ	0xFDE
 16031                           postdec2	equ	0xFDD
 16032                           fsr2h	equ	0xFDA
 16033                           fsr2l	equ	0xFD9
 16034                           status	equ	0xFD8
 16035                           
 16036 ;; *************** function _vscp_getFamilyCode *****************
 16037 ;; Defined at:
 16038 ;;		line 3021 in file "../main.c"
 16039 ;; Parameters:    Size  Location     Type
 16040 ;;		None
 16041 ;; Auto vars:     Size  Location     Type
 16042 ;;		None
 16043 ;; Return value:  Size  Location     Type
 16044 ;;                  4   21[COMRAM] unsigned long 
 16045 ;; Registers used:
 16046 ;;		wreg, status,2
 16047 ;; Tracked objects:
 16048 ;;		On entry : 0/0
 16049 ;;		On exit  : 0/0
 16050 ;;		Unchanged: 0/0
 16051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16052 ;;      Params:         4       0       0       0       0       0       0
 16053 ;;      Locals:         0       0       0       0       0       0       0
 16054 ;;      Temps:          0       0       0       0       0       0       0
 16055 ;;      Totals:         4       0       0       0       0       0       0
 16056 ;;Total ram usage:        4 bytes
 16057 ;; Hardware stack levels used:    1
 16058 ;; Hardware stack levels required when called:    2
 16059 ;; This function calls:
 16060 ;;		Nothing
 16061 ;; This function is called by:
 16062 ;;		_vscp_readStdReg
 16063 ;; This function uses a non-reentrant model
 16064 ;;
 16065                           
 16066                           	psect	text30
 16067  006DA0                     __ptext30:
 16068                           	opt stack 0
 16069  006DA0                     _vscp_getFamilyCode:
 16070                           	opt stack 25
 16071                           
 16072                           ;main.c: 3022: return 0L;
 16073                           
 16074                           ;incstack = 0
 16075                           ;incstack = 0
 16076  006DA0  0E00               	movlw	0
 16077  006DA2  6E16               	movwf	?_vscp_getFamilyCode,c
 16078  006DA4  0E00               	movlw	0
 16079  006DA6  6E17               	movwf	?_vscp_getFamilyCode+1,c
 16080  006DA8  0E00               	movlw	0
 16081  006DAA  6E18               	movwf	?_vscp_getFamilyCode+2,c
 16082  006DAC  0E00               	movlw	0
 16083  006DAE  6E19               	movwf	?_vscp_getFamilyCode+3,c
 16084  006DB0  0012               	return	
 16085  006DB2                     __end_of_vscp_getFamilyCode:
 16086                           	opt stack 0
 16087                           tblptru	equ	0xFF8
 16088                           prodh	equ	0xFF4
 16089                           prodl	equ	0xFF3
 16090                           postinc0	equ	0xFEE
 16091                           wreg	equ	0xFE8
 16092                           indf2	equ	0xFDF
 16093                           postinc2	equ	0xFDE
 16094                           postdec2	equ	0xFDD
 16095                           fsr2h	equ	0xFDA
 16096                           fsr2l	equ	0xFD9
 16097                           status	equ	0xFD8
 16098                           
 16099 ;; *************** function _vscp_getBufferSize *****************
 16100 ;; Defined at:
 16101 ;;		line 2882 in file "../main.c"
 16102 ;; Parameters:    Size  Location     Type
 16103 ;;		None
 16104 ;; Auto vars:     Size  Location     Type
 16105 ;;		None
 16106 ;; Return value:  Size  Location     Type
 16107 ;;                  1    wreg      unsigned char 
 16108 ;; Registers used:
 16109 ;;		wreg
 16110 ;; Tracked objects:
 16111 ;;		On entry : 0/0
 16112 ;;		On exit  : 0/0
 16113 ;;		Unchanged: 0/0
 16114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16115 ;;      Params:         0       0       0       0       0       0       0
 16116 ;;      Locals:         0       0       0       0       0       0       0
 16117 ;;      Temps:          0       0       0       0       0       0       0
 16118 ;;      Totals:         0       0       0       0       0       0       0
 16119 ;;Total ram usage:        0 bytes
 16120 ;; Hardware stack levels used:    1
 16121 ;; Hardware stack levels required when called:    2
 16122 ;; This function calls:
 16123 ;;		Nothing
 16124 ;; This function is called by:
 16125 ;;		_vscp_readStdReg
 16126 ;; This function uses a non-reentrant model
 16127 ;;
 16128                           
 16129                           	psect	text31
 16130  006E74                     __ptext31:
 16131                           	opt stack 0
 16132  006E74                     _vscp_getBufferSize:
 16133                           	opt stack 25
 16134                           
 16135                           ;main.c: 2883: return 8;
 16136                           
 16137                           ;incstack = 0
 16138                           ;incstack = 0
 16139  006E74  0E08               	movlw	8
 16140  006E76  0012               	return	
 16141  006E78                     __end_of_vscp_getBufferSize:
 16142                           	opt stack 0
 16143                           tblptru	equ	0xFF8
 16144                           prodh	equ	0xFF4
 16145                           prodl	equ	0xFF3
 16146                           postinc0	equ	0xFEE
 16147                           wreg	equ	0xFE8
 16148                           indf2	equ	0xFDF
 16149                           postinc2	equ	0xFDE
 16150                           postdec2	equ	0xFDD
 16151                           fsr2h	equ	0xFDA
 16152                           fsr2l	equ	0xFD9
 16153                           status	equ	0xFD8
 16154                           
 16155 ;; *************** function _vscp_getBootLoaderAlgorithm *****************
 16156 ;; Defined at:
 16157 ;;		line 2873 in file "../main.c"
 16158 ;; Parameters:    Size  Location     Type
 16159 ;;		None
 16160 ;; Auto vars:     Size  Location     Type
 16161 ;;		None
 16162 ;; Return value:  Size  Location     Type
 16163 ;;                  1    wreg      unsigned char 
 16164 ;; Registers used:
 16165 ;;		wreg
 16166 ;; Tracked objects:
 16167 ;;		On entry : 0/0
 16168 ;;		On exit  : 0/0
 16169 ;;		Unchanged: 0/0
 16170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16171 ;;      Params:         0       0       0       0       0       0       0
 16172 ;;      Locals:         0       0       0       0       0       0       0
 16173 ;;      Temps:          0       0       0       0       0       0       0
 16174 ;;      Totals:         0       0       0       0       0       0       0
 16175 ;;Total ram usage:        0 bytes
 16176 ;; Hardware stack levels used:    1
 16177 ;; Hardware stack levels required when called:    2
 16178 ;; This function calls:
 16179 ;;		Nothing
 16180 ;; This function is called by:
 16181 ;;		_vscp_readStdReg
 16182 ;; This function uses a non-reentrant model
 16183 ;;
 16184                           
 16185                           	psect	text32
 16186  006E78                     __ptext32:
 16187                           	opt stack 0
 16188  006E78                     _vscp_getBootLoaderAlgorithm:
 16189                           	opt stack 25
 16190                           
 16191                           ;main.c: 2874: return 0x01;
 16192                           
 16193                           ;incstack = 0
 16194                           ;incstack = 0
 16195  006E78  0E01               	movlw	1
 16196  006E7A  0012               	return	
 16197  006E7C                     __end_of_vscp_getBootLoaderAlgorithm:
 16198                           	opt stack 0
 16199                           tblptru	equ	0xFF8
 16200                           prodh	equ	0xFF4
 16201                           prodl	equ	0xFF3
 16202                           postinc0	equ	0xFEE
 16203                           wreg	equ	0xFE8
 16204                           indf2	equ	0xFDF
 16205                           postinc2	equ	0xFDE
 16206                           postdec2	equ	0xFDD
 16207                           fsr2h	equ	0xFDA
 16208                           fsr2l	equ	0xFD9
 16209                           status	equ	0xFD8
 16210                           
 16211 ;; *************** function _vscp_getManufacturerId *****************
 16212 ;; Defined at:
 16213 ;;		line 2864 in file "../main.c"
 16214 ;; Parameters:    Size  Location     Type
 16215 ;;  idx             1   23[COMRAM] unsigned char 
 16216 ;; Auto vars:     Size  Location     Type
 16217 ;;		None
 16218 ;; Return value:  Size  Location     Type
 16219 ;;                  1    wreg      unsigned char 
 16220 ;; Registers used:
 16221 ;;		wreg, status,2, status,0, cstack
 16222 ;; Tracked objects:
 16223 ;;		On entry : 0/0
 16224 ;;		On exit  : 0/0
 16225 ;;		Unchanged: 0/0
 16226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16227 ;;      Params:         1       0       0       0       0       0       0
 16228 ;;      Locals:         0       0       0       0       0       0       0
 16229 ;;      Temps:          0       0       0       0       0       0       0
 16230 ;;      Totals:         1       0       0       0       0       0       0
 16231 ;;Total ram usage:        1 bytes
 16232 ;; Hardware stack levels used:    1
 16233 ;; Hardware stack levels required when called:    3
 16234 ;; This function calls:
 16235 ;;		_Read_b_eep
 16236 ;; This function is called by:
 16237 ;;		_vscp_readStdReg
 16238 ;;		_vscp_writeStdReg
 16239 ;; This function uses a non-reentrant model
 16240 ;;
 16241                           
 16242                           	psect	text33
 16243  006DB2                     __ptext33:
 16244                           	opt stack 0
 16245  006DB2                     _vscp_getManufacturerId:
 16246                           	opt stack 24
 16247                           
 16248                           ;main.c: 2865: return Read_b_eep(0x0B + idx);
 16249                           
 16250                           ;incstack = 0
 16251                           ;incstack = 0
 16252  006DB2  0E0B               	movlw	11
 16253  006DB4  2418               	addwf	vscp_getManufacturerId@idx,w,c
 16254  006DB6  6E16               	movwf	?_Read_b_eep,c
 16255  006DB8  6A17               	clrf	?_Read_b_eep+1,c
 16256  006DBA  0E00               	movlw	0
 16257  006DBC  2217               	addwfc	?_Read_b_eep+1,f,c
 16258  006DBE  ECFD  F036         	call	_Read_b_eep	;wreg free
 16259  006DC2  0012               	return	
 16260  006DC4                     __end_of_vscp_getManufacturerId:
 16261                           	opt stack 0
 16262                           tblptru	equ	0xFF8
 16263                           prodh	equ	0xFF4
 16264                           prodl	equ	0xFF3
 16265                           postinc0	equ	0xFEE
 16266                           wreg	equ	0xFE8
 16267                           indf2	equ	0xFDF
 16268                           postinc2	equ	0xFDE
 16269                           postdec2	equ	0xFDD
 16270                           fsr2h	equ	0xFDA
 16271                           fsr2l	equ	0xFD9
 16272                           status	equ	0xFD8
 16273                           
 16274 ;; *************** function _vscp_getUserID *****************
 16275 ;; Defined at:
 16276 ;;		line 2844 in file "../main.c"
 16277 ;; Parameters:    Size  Location     Type
 16278 ;;  idx             1   23[COMRAM] unsigned char 
 16279 ;; Auto vars:     Size  Location     Type
 16280 ;;		None
 16281 ;; Return value:  Size  Location     Type
 16282 ;;                  1    wreg      unsigned char 
 16283 ;; Registers used:
 16284 ;;		wreg, status,2, status,0, cstack
 16285 ;; Tracked objects:
 16286 ;;		On entry : 0/0
 16287 ;;		On exit  : 0/0
 16288 ;;		Unchanged: 0/0
 16289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16290 ;;      Params:         1       0       0       0       0       0       0
 16291 ;;      Locals:         0       0       0       0       0       0       0
 16292 ;;      Temps:          0       0       0       0       0       0       0
 16293 ;;      Totals:         1       0       0       0       0       0       0
 16294 ;;Total ram usage:        1 bytes
 16295 ;; Hardware stack levels used:    1
 16296 ;; Hardware stack levels required when called:    3
 16297 ;; This function calls:
 16298 ;;		_Read_b_eep
 16299 ;; This function is called by:
 16300 ;;		_vscp_readStdReg
 16301 ;;		_vscp_writeStdReg
 16302 ;; This function uses a non-reentrant model
 16303 ;;
 16304                           
 16305                           	psect	text34
 16306  006DC4                     __ptext34:
 16307                           	opt stack 0
 16308  006DC4                     _vscp_getUserID:
 16309                           	opt stack 24
 16310                           
 16311                           ;main.c: 2845: return Read_b_eep(0x06 + idx);
 16312                           
 16313                           ;incstack = 0
 16314                           ;incstack = 0
 16315  006DC4  0E06               	movlw	6
 16316  006DC6  2418               	addwf	vscp_getUserID@idx,w,c
 16317  006DC8  6E16               	movwf	?_Read_b_eep,c
 16318  006DCA  6A17               	clrf	?_Read_b_eep+1,c
 16319  006DCC  0E00               	movlw	0
 16320  006DCE  2217               	addwfc	?_Read_b_eep+1,f,c
 16321  006DD0  ECFD  F036         	call	_Read_b_eep	;wreg free
 16322  006DD4  0012               	return	
 16323  006DD6                     __end_of_vscp_getUserID:
 16324                           	opt stack 0
 16325                           tblptru	equ	0xFF8
 16326                           prodh	equ	0xFF4
 16327                           prodl	equ	0xFF3
 16328                           postinc0	equ	0xFEE
 16329                           wreg	equ	0xFE8
 16330                           indf2	equ	0xFDF
 16331                           postinc2	equ	0xFDE
 16332                           postdec2	equ	0xFDD
 16333                           fsr2h	equ	0xFDA
 16334                           fsr2l	equ	0xFD9
 16335                           status	equ	0xFD8
 16336                           
 16337 ;; *************** function _vscp_getMDF_URL *****************
 16338 ;; Defined at:
 16339 ;;		line 2835 in file "../main.c"
 16340 ;; Parameters:    Size  Location     Type
 16341 ;;  idx             1   21[COMRAM] unsigned char 
 16342 ;; Auto vars:     Size  Location     Type
 16343 ;;		None
 16344 ;; Return value:  Size  Location     Type
 16345 ;;                  1    wreg      unsigned char 
 16346 ;; Registers used:
 16347 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 16348 ;; Tracked objects:
 16349 ;;		On entry : 0/0
 16350 ;;		On exit  : 0/0
 16351 ;;		Unchanged: 0/0
 16352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16353 ;;      Params:         1       0       0       0       0       0       0
 16354 ;;      Locals:         0       0       0       0       0       0       0
 16355 ;;      Temps:          0       0       0       0       0       0       0
 16356 ;;      Totals:         1       0       0       0       0       0       0
 16357 ;;Total ram usage:        1 bytes
 16358 ;; Hardware stack levels used:    1
 16359 ;; Hardware stack levels required when called:    2
 16360 ;; This function calls:
 16361 ;;		Nothing
 16362 ;; This function is called by:
 16363 ;;		_vscp_readStdReg
 16364 ;;		_vscp_handleProtocolEvent
 16365 ;; This function uses a non-reentrant model
 16366 ;;
 16367                           
 16368                           	psect	text35
 16369  006D22                     __ptext35:
 16370                           	opt stack 0
 16371  006D22                     _vscp_getMDF_URL:
 16372                           	opt stack 25
 16373                           
 16374                           ;main.c: 2836: return vscp_deviceURL[ idx ];
 16375                           
 16376                           ;incstack = 0
 16377                           ;incstack = 0
 16378  006D22  5016               	movf	vscp_getMDF_URL@idx,w,c
 16379  006D24  0D01               	mullw	1
 16380  006D26  0E00               	movlw	low _vscp_deviceURL
 16381  006D28  24F3               	addwf	prodl,w,c
 16382  006D2A  6EF6               	movwf	tblptrl,c
 16383  006D2C  0E06               	movlw	high _vscp_deviceURL
 16384  006D2E  20F4               	addwfc	prodh,w,c
 16385  006D30  6EF7               	movwf	tblptrh,c
 16386  006D32  0008               	tblrd		*
 16387  006D34  50F5               	movf	tablat,w,c
 16388  006D36  0012               	return	
 16389  006D38                     __end_of_vscp_getMDF_URL:
 16390                           	opt stack 0
 16391                           tblptru	equ	0xFF8
 16392                           tblptrh	equ	0xFF7
 16393                           tblptrl	equ	0xFF6
 16394                           tablat	equ	0xFF5
 16395                           prodh	equ	0xFF4
 16396                           prodl	equ	0xFF3
 16397                           postinc0	equ	0xFEE
 16398                           wreg	equ	0xFE8
 16399                           indf2	equ	0xFDF
 16400                           postinc2	equ	0xFDE
 16401                           postdec2	equ	0xFDD
 16402                           fsr2h	equ	0xFDA
 16403                           fsr2l	equ	0xFD9
 16404                           status	equ	0xFD8
 16405                           
 16406 ;; *************** function _vscp_getGUID *****************
 16407 ;; Defined at:
 16408 ;;		line 2823 in file "../main.c"
 16409 ;; Parameters:    Size  Location     Type
 16410 ;;  idx             1   23[COMRAM] unsigned char 
 16411 ;; Auto vars:     Size  Location     Type
 16412 ;;		None
 16413 ;; Return value:  Size  Location     Type
 16414 ;;                  1    wreg      unsigned char 
 16415 ;; Registers used:
 16416 ;;		wreg, status,2, status,0, cstack
 16417 ;; Tracked objects:
 16418 ;;		On entry : 0/0
 16419 ;;		On exit  : 0/0
 16420 ;;		Unchanged: 0/0
 16421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16422 ;;      Params:         1       0       0       0       0       0       0
 16423 ;;      Locals:         0       0       0       0       0       0       0
 16424 ;;      Temps:          0       0       0       0       0       0       0
 16425 ;;      Totals:         1       0       0       0       0       0       0
 16426 ;;Total ram usage:        1 bytes
 16427 ;; Hardware stack levels used:    1
 16428 ;; Hardware stack levels required when called:    3
 16429 ;; This function calls:
 16430 ;;		_Read_b_eep
 16431 ;; This function is called by:
 16432 ;;		_vscp_readStdReg
 16433 ;;		_vscp_writeStdReg
 16434 ;;		_vscp_handleProtocolEvent
 16435 ;; This function uses a non-reentrant model
 16436 ;;
 16437                           
 16438                           	psect	text36
 16439  006DD6                     __ptext36:
 16440                           	opt stack 0
 16441  006DD6                     _vscp_getGUID:
 16442                           	opt stack 24
 16443                           
 16444                           ;main.c: 2824: return Read_b_eep(0x13 + idx);
 16445                           
 16446                           ;incstack = 0
 16447                           ;incstack = 0
 16448  006DD6  0E13               	movlw	19
 16449  006DD8  2418               	addwf	vscp_getGUID@idx,w,c
 16450  006DDA  6E16               	movwf	?_Read_b_eep,c
 16451  006DDC  6A17               	clrf	?_Read_b_eep+1,c
 16452  006DDE  0E00               	movlw	0
 16453  006DE0  2217               	addwfc	?_Read_b_eep+1,f,c
 16454  006DE2  ECFD  F036         	call	_Read_b_eep	;wreg free
 16455  006DE6  0012               	return	
 16456  006DE8                     __end_of_vscp_getGUID:
 16457                           	opt stack 0
 16458                           tblptru	equ	0xFF8
 16459                           tblptrh	equ	0xFF7
 16460                           tblptrl	equ	0xFF6
 16461                           tablat	equ	0xFF5
 16462                           prodh	equ	0xFF4
 16463                           prodl	equ	0xFF3
 16464                           postinc0	equ	0xFEE
 16465                           wreg	equ	0xFE8
 16466                           indf2	equ	0xFDF
 16467                           postinc2	equ	0xFDE
 16468                           postdec2	equ	0xFDD
 16469                           fsr2h	equ	0xFDA
 16470                           fsr2l	equ	0xFD9
 16471                           status	equ	0xFD8
 16472                           
 16473 ;; *************** function _vscp_getSubMinorVersion *****************
 16474 ;; Defined at:
 16475 ;;		line 2812 in file "../main.c"
 16476 ;; Parameters:    Size  Location     Type
 16477 ;;		None
 16478 ;; Auto vars:     Size  Location     Type
 16479 ;;		None
 16480 ;; Return value:  Size  Location     Type
 16481 ;;                  1    wreg      unsigned char 
 16482 ;; Registers used:
 16483 ;;		wreg
 16484 ;; Tracked objects:
 16485 ;;		On entry : 0/0
 16486 ;;		On exit  : 0/0
 16487 ;;		Unchanged: 0/0
 16488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16489 ;;      Params:         0       0       0       0       0       0       0
 16490 ;;      Locals:         0       0       0       0       0       0       0
 16491 ;;      Temps:          0       0       0       0       0       0       0
 16492 ;;      Totals:         0       0       0       0       0       0       0
 16493 ;;Total ram usage:        0 bytes
 16494 ;; Hardware stack levels used:    1
 16495 ;; Hardware stack levels required when called:    2
 16496 ;; This function calls:
 16497 ;;		Nothing
 16498 ;; This function is called by:
 16499 ;;		_vscp_readStdReg
 16500 ;; This function uses a non-reentrant model
 16501 ;;
 16502                           
 16503                           	psect	text37
 16504  006E7C                     __ptext37:
 16505                           	opt stack 0
 16506  006E7C                     _vscp_getSubMinorVersion:
 16507                           	opt stack 25
 16508                           
 16509                           ;main.c: 2813: return 0;
 16510                           
 16511                           ;incstack = 0
 16512                           ;incstack = 0
 16513  006E7C  0E00               	movlw	0
 16514  006E7E  0012               	return	
 16515  006E80                     __end_of_vscp_getSubMinorVersion:
 16516                           	opt stack 0
 16517                           tblptru	equ	0xFF8
 16518                           tblptrh	equ	0xFF7
 16519                           tblptrl	equ	0xFF6
 16520                           tablat	equ	0xFF5
 16521                           prodh	equ	0xFF4
 16522                           prodl	equ	0xFF3
 16523                           postinc0	equ	0xFEE
 16524                           wreg	equ	0xFE8
 16525                           indf2	equ	0xFDF
 16526                           postinc2	equ	0xFDE
 16527                           postdec2	equ	0xFDD
 16528                           fsr2h	equ	0xFDA
 16529                           fsr2l	equ	0xFD9
 16530                           status	equ	0xFD8
 16531                           
 16532 ;; *************** function _vscp_getMinorVersion *****************
 16533 ;; Defined at:
 16534 ;;		line 2803 in file "../main.c"
 16535 ;; Parameters:    Size  Location     Type
 16536 ;;		None
 16537 ;; Auto vars:     Size  Location     Type
 16538 ;;		None
 16539 ;; Return value:  Size  Location     Type
 16540 ;;                  1    wreg      unsigned char 
 16541 ;; Registers used:
 16542 ;;		wreg
 16543 ;; Tracked objects:
 16544 ;;		On entry : 0/0
 16545 ;;		On exit  : 0/0
 16546 ;;		Unchanged: 0/0
 16547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16548 ;;      Params:         0       0       0       0       0       0       0
 16549 ;;      Locals:         0       0       0       0       0       0       0
 16550 ;;      Temps:          0       0       0       0       0       0       0
 16551 ;;      Totals:         0       0       0       0       0       0       0
 16552 ;;Total ram usage:        0 bytes
 16553 ;; Hardware stack levels used:    1
 16554 ;; Hardware stack levels required when called:    2
 16555 ;; This function calls:
 16556 ;;		Nothing
 16557 ;; This function is called by:
 16558 ;;		_vscp_readStdReg
 16559 ;; This function uses a non-reentrant model
 16560 ;;
 16561                           
 16562                           	psect	text38
 16563  006E80                     __ptext38:
 16564                           	opt stack 0
 16565  006E80                     _vscp_getMinorVersion:
 16566                           	opt stack 25
 16567                           
 16568                           ;main.c: 2804: return 0;
 16569                           
 16570                           ;incstack = 0
 16571                           ;incstack = 0
 16572  006E80  0E00               	movlw	0
 16573  006E82  0012               	return	
 16574  006E84                     __end_of_vscp_getMinorVersion:
 16575                           	opt stack 0
 16576                           tblptru	equ	0xFF8
 16577                           tblptrh	equ	0xFF7
 16578                           tblptrl	equ	0xFF6
 16579                           tablat	equ	0xFF5
 16580                           prodh	equ	0xFF4
 16581                           prodl	equ	0xFF3
 16582                           postinc0	equ	0xFEE
 16583                           wreg	equ	0xFE8
 16584                           indf2	equ	0xFDF
 16585                           postinc2	equ	0xFDE
 16586                           postdec2	equ	0xFDD
 16587                           fsr2h	equ	0xFDA
 16588                           fsr2l	equ	0xFD9
 16589                           status	equ	0xFD8
 16590                           
 16591 ;; *************** function _vscp_getMajorVersion *****************
 16592 ;; Defined at:
 16593 ;;		line 2794 in file "../main.c"
 16594 ;; Parameters:    Size  Location     Type
 16595 ;;		None
 16596 ;; Auto vars:     Size  Location     Type
 16597 ;;		None
 16598 ;; Return value:  Size  Location     Type
 16599 ;;                  1    wreg      unsigned char 
 16600 ;; Registers used:
 16601 ;;		wreg
 16602 ;; Tracked objects:
 16603 ;;		On entry : 0/0
 16604 ;;		On exit  : 0/0
 16605 ;;		Unchanged: 0/0
 16606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16607 ;;      Params:         0       0       0       0       0       0       0
 16608 ;;      Locals:         0       0       0       0       0       0       0
 16609 ;;      Temps:          0       0       0       0       0       0       0
 16610 ;;      Totals:         0       0       0       0       0       0       0
 16611 ;;Total ram usage:        0 bytes
 16612 ;; Hardware stack levels used:    1
 16613 ;; Hardware stack levels required when called:    2
 16614 ;; This function calls:
 16615 ;;		Nothing
 16616 ;; This function is called by:
 16617 ;;		_vscp_readStdReg
 16618 ;; This function uses a non-reentrant model
 16619 ;;
 16620                           
 16621                           	psect	text39
 16622  006E84                     __ptext39:
 16623                           	opt stack 0
 16624  006E84                     _vscp_getMajorVersion:
 16625                           	opt stack 25
 16626                           
 16627                           ;main.c: 2795: return 1;
 16628                           
 16629                           ;incstack = 0
 16630                           ;incstack = 0
 16631  006E84  0E01               	movlw	1
 16632  006E86  0012               	return	
 16633  006E88                     __end_of_vscp_getMajorVersion:
 16634                           	opt stack 0
 16635                           tblptru	equ	0xFF8
 16636                           tblptrh	equ	0xFF7
 16637                           tblptrl	equ	0xFF6
 16638                           tablat	equ	0xFF5
 16639                           prodh	equ	0xFF4
 16640                           prodl	equ	0xFF3
 16641                           postinc0	equ	0xFEE
 16642                           wreg	equ	0xFE8
 16643                           indf2	equ	0xFDF
 16644                           postinc2	equ	0xFDE
 16645                           postdec2	equ	0xFDD
 16646                           fsr2h	equ	0xFDA
 16647                           fsr2l	equ	0xFD9
 16648                           status	equ	0xFD8
 16649                           
 16650 ;; *************** function _vscp_newNodeOnline *****************
 16651 ;; Defined at:
 16652 ;;		line 502 in file "../../vscp_firmware/common/vscp_firmware.c"
 16653 ;; Parameters:    Size  Location     Type
 16654 ;;		None
 16655 ;; Auto vars:     Size  Location     Type
 16656 ;;		None
 16657 ;; Return value:  Size  Location     Type
 16658 ;;		None               void
 16659 ;; Registers used:
 16660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 16661 ;; Tracked objects:
 16662 ;;		On entry : 0/0
 16663 ;;		On exit  : 0/0
 16664 ;;		Unchanged: 0/0
 16665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16666 ;;      Params:         0       0       0       0       0       0       0
 16667 ;;      Locals:         0       0       0       0       0       0       0
 16668 ;;      Temps:          1       0       0       0       0       0       0
 16669 ;;      Totals:         1       0       0       0       0       0       0
 16670 ;;Total ram usage:        1 bytes
 16671 ;; Hardware stack levels used:    1
 16672 ;; Hardware stack levels required when called:    7
 16673 ;; This function calls:
 16674 ;;		_vscp_sendEvent
 16675 ;; This function is called by:
 16676 ;;		_vscp_handleProtocolEvent
 16677 ;; This function uses a non-reentrant model
 16678 ;;
 16679                           
 16680                           	psect	text40
 16681  006A08                     __ptext40:
 16682                           	opt stack 0
 16683  006A08                     _vscp_newNodeOnline:
 16684                           	opt stack 21
 16685                           
 16686                           ;vscp_firmware.c: 503: if ( ( 1 == ( vscp_imsg.flags & 0x0f ) ) &&
 16687                           ;vscp_firmware.c: 504: (vscp_nickname == vscp_imsg.data[ 0 ])) {
 16688                           
 16689                           ;incstack = 0
 16690                           ;incstack = 0
 16691  006A08  C0F1  F031         	movff	_vscp_imsg,??_vscp_newNodeOnline
 16692  006A0C  0E0F               	movlw	15
 16693  006A0E  1631               	andwf	??_vscp_newNodeOnline,f,c
 16694  006A10  0431               	decf	??_vscp_newNodeOnline,w,c
 16695  006A12  A4D8               	btfss	status,2,c
 16696  006A14  D01A               	goto	l1200
 16697  006A16  0100               	movlb	0	; () banked
 16698  006A18  0100               	movlb	0	; () banked
 16699  006A1A  51EC               	movf	_vscp_nickname& (0+255),w,b
 16700  006A1C  0100               	movlb	0	; () banked
 16701  006A1E  EE20  F0F7         	lfsr	2,_vscp_imsg+6
 16702  006A22  62DF               	cpfseq	indf2,c
 16703  006A24  D012               	goto	l1200
 16704                           
 16705                           ; BSR set to: 0
 16706                           ;vscp_firmware.c: 510: vscp_omsg.flags = 0x80;
 16707  006A26  6E31               	movwf	??_vscp_newNodeOnline& (0+255),c
 16708  006A28  0E80               	movlw	128
 16709  006A2A  6E3E               	movwf	_vscp_omsg,c
 16710  006A2C  5031               	movf	??_vscp_newNodeOnline& (0+255),w,c
 16711                           
 16712                           ;vscp_firmware.c: 511: vscp_omsg.priority = 0x00;
 16713  006A2E  6E31               	movwf	??_vscp_newNodeOnline& (0+255),c
 16714  006A30  0E00               	movlw	0
 16715  006A32  6E3F               	movwf	_vscp_omsg+1,c
 16716  006A34  5031               	movf	??_vscp_newNodeOnline& (0+255),w,c
 16717                           
 16718                           ; BSR set to: 0
 16719                           ;vscp_firmware.c: 512: vscp_omsg.vscp_class = 0;
 16720  006A36  0E00               	movlw	0
 16721  006A38  6E41               	movwf	_vscp_omsg+3,c
 16722  006A3A  0E00               	movlw	0
 16723  006A3C  6E40               	movwf	_vscp_omsg+2,c
 16724                           
 16725                           ; BSR set to: 0
 16726                           ;vscp_firmware.c: 513: vscp_omsg.vscp_type = 3;
 16727  006A3E  6E31               	movwf	??_vscp_newNodeOnline& (0+255),c
 16728  006A40  0E03               	movlw	3
 16729  006A42  6E42               	movwf	_vscp_omsg+4,c
 16730  006A44  5031               	movf	??_vscp_newNodeOnline& (0+255),w,c
 16731                           
 16732                           ; BSR set to: 0
 16733                           ;vscp_firmware.c: 514: vscp_sendEvent();
 16734  006A46  EC46  F035         	call	_vscp_sendEvent	;wreg free
 16735  006A4A                     l1200:
 16736  006A4A  0012               	return	
 16737  006A4C                     __end_of_vscp_newNodeOnline:
 16738                           	opt stack 0
 16739                           tblptru	equ	0xFF8
 16740                           tblptrh	equ	0xFF7
 16741                           tblptrl	equ	0xFF6
 16742                           tablat	equ	0xFF5
 16743                           prodh	equ	0xFF4
 16744                           prodl	equ	0xFF3
 16745                           postinc0	equ	0xFEE
 16746                           wreg	equ	0xFE8
 16747                           indf2	equ	0xFDF
 16748                           postinc2	equ	0xFDE
 16749                           postdec2	equ	0xFDD
 16750                           fsr2h	equ	0xFDA
 16751                           fsr2l	equ	0xFD9
 16752                           status	equ	0xFD8
 16753                           
 16754 ;; *************** function _vscp_handleDropNickname *****************
 16755 ;; Defined at:
 16756 ;;		line 438 in file "../../vscp_firmware/common/vscp_firmware.c"
 16757 ;; Parameters:    Size  Location     Type
 16758 ;;		None
 16759 ;; Auto vars:     Size  Location     Type
 16760 ;;  bytes           1   28[COMRAM] unsigned char 
 16761 ;; Return value:  Size  Location     Type
 16762 ;;		None               void
 16763 ;; Registers used:
 16764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16765 ;; Tracked objects:
 16766 ;;		On entry : 0/0
 16767 ;;		On exit  : 0/0
 16768 ;;		Unchanged: 0/0
 16769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16770 ;;      Params:         0       0       0       0       0       0       0
 16771 ;;      Locals:         1       0       0       0       0       0       0
 16772 ;;      Temps:          1       0       0       0       0       0       0
 16773 ;;      Totals:         2       0       0       0       0       0       0
 16774 ;;Total ram usage:        2 bytes
 16775 ;; Hardware stack levels used:    1
 16776 ;; Hardware stack levels required when called:    5
 16777 ;; This function calls:
 16778 ;;		_vscp_init
 16779 ;;		_vscp_writeNicknamePermanent
 16780 ;; This function is called by:
 16781 ;;		_vscp_handleProtocolEvent
 16782 ;; This function uses a non-reentrant model
 16783 ;;
 16784                           
 16785                           	psect	text41
 16786  0069BC                     __ptext41:
 16787                           	opt stack 0
 16788  0069BC                     _vscp_handleDropNickname:
 16789                           	opt stack 23
 16790                           
 16791                           ;vscp_firmware.c: 439: uint8_t bytes = vscp_imsg.flags & 0x0f;
 16792                           
 16793                           ;incstack = 0
 16794                           ;incstack = 0
 16795  0069BC  0100               	movlb	0	; () banked
 16796  0069BE  0100               	movlb	0	; () banked
 16797  0069C0  51F1               	movf	_vscp_imsg& (0+255),w,b
 16798  0069C2  0B0F               	andlw	15
 16799  0069C4  6E1D               	movwf	vscp_handleDropNickname@bytes,c
 16800                           
 16801                           ; BSR set to: 0
 16802                           ;vscp_firmware.c: 445: if ((bytes >= 1) && (vscp_nickname == vscp_imsg.data[ 0 ])) {
 16803  0069C6  501D               	movf	vscp_handleDropNickname@bytes,w,c
 16804  0069C8  B4D8               	btfsc	status,2,c
 16805  0069CA  D01D               	goto	l1196
 16806                           
 16807                           ; BSR set to: 0
 16808  0069CC  0100               	movlb	0	; () banked
 16809  0069CE  0100               	movlb	0	; () banked
 16810  0069D0  51EC               	movf	_vscp_nickname& (0+255),w,b
 16811  0069D2  0100               	movlb	0	; () banked
 16812  0069D4  EE20  F0F7         	lfsr	2,_vscp_imsg+6
 16813  0069D8  62DF               	cpfseq	indf2,c
 16814  0069DA  D015               	goto	l1196
 16815                           
 16816                           ; BSR set to: 0
 16817                           ;vscp_firmware.c: 477: if ((bytes == 1) || ((bytes > 1) && (vscp_imsg.data[1] == 0))) {
 16818  0069DC  041D               	decf	vscp_handleDropNickname@bytes,w,c
 16819  0069DE  B4D8               	btfsc	status,2,c
 16820  0069E0  D007               	goto	l1195
 16821                           
 16822                           ; BSR set to: 0
 16823  0069E2  0E01               	movlw	1
 16824  0069E4  641D               	cpfsgt	vscp_handleDropNickname@bytes,c
 16825  0069E6  D00F               	goto	l1196
 16826                           
 16827                           ; BSR set to: 0
 16828  0069E8  0100               	movlb	0	; () banked
 16829  0069EA  0100               	movlb	0	; () banked
 16830  0069EC  67F8               	tstfsz	(_vscp_imsg+7)& (0+255),b
 16831  0069EE  D00B               	goto	l1196
 16832  0069F0                     l1195:
 16833                           
 16834                           ; BSR set to: 0
 16835                           ;vscp_firmware.c: 479: vscp_nickname = 0xff;
 16836  0069F0  0100               	movlb	0	; () banked
 16837  0069F2  0100               	movlb	0	; () banked
 16838  0069F4  69EC               	setf	_vscp_nickname& (0+255),b
 16839                           
 16840                           ; BSR set to: 0
 16841                           ;vscp_firmware.c: 480: vscp_writeNicknamePermanent(0xff);
 16842  0069F6  6E1C               	movwf	??_vscp_handleDropNickname& (0+255),c
 16843  0069F8  0EFF               	movlw	255
 16844  0069FA  6E1B               	movwf	?_vscp_writeNicknamePermanent,c
 16845  0069FC  501C               	movf	??_vscp_handleDropNickname& (0+255),w,c
 16846  0069FE  ECB2  F036         	call	_vscp_writeNicknamePermanent	;wreg free
 16847                           
 16848                           ;vscp_firmware.c: 481: vscp_init();
 16849  006A02  EC05  F032         	call	_vscp_init	;wreg free
 16850  006A06                     l1196:
 16851  006A06  0012               	return	
 16852  006A08                     __end_of_vscp_handleDropNickname:
 16853                           	opt stack 0
 16854                           tblptru	equ	0xFF8
 16855                           tblptrh	equ	0xFF7
 16856                           tblptrl	equ	0xFF6
 16857                           tablat	equ	0xFF5
 16858                           prodh	equ	0xFF4
 16859                           prodl	equ	0xFF3
 16860                           postinc0	equ	0xFEE
 16861                           wreg	equ	0xFE8
 16862                           indf2	equ	0xFDF
 16863                           postinc2	equ	0xFDE
 16864                           postdec2	equ	0xFDD
 16865                           fsr2h	equ	0xFDA
 16866                           fsr2l	equ	0xFD9
 16867                           status	equ	0xFD8
 16868                           
 16869 ;; *************** function _vscp_init *****************
 16870 ;; Defined at:
 16871 ;;		line 119 in file "../../vscp_firmware/common/vscp_firmware.c"
 16872 ;; Parameters:    Size  Location     Type
 16873 ;;		None
 16874 ;; Auto vars:     Size  Location     Type
 16875 ;;		None
 16876 ;; Return value:  Size  Location     Type
 16877 ;;		None               void
 16878 ;; Registers used:
 16879 ;;		wreg, status,2, cstack
 16880 ;; Tracked objects:
 16881 ;;		On entry : 0/0
 16882 ;;		On exit  : 0/0
 16883 ;;		Unchanged: 0/0
 16884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16885 ;;      Params:         0       0       0       0       0       0       0
 16886 ;;      Locals:         0       0       0       0       0       0       0
 16887 ;;      Temps:          1       0       0       0       0       0       0
 16888 ;;      Totals:         1       0       0       0       0       0       0
 16889 ;;Total ram usage:        1 bytes
 16890 ;; Hardware stack levels used:    1
 16891 ;; Hardware stack levels required when called:    4
 16892 ;; This function calls:
 16893 ;;		_vscp_readNicknamePermanent
 16894 ;; This function is called by:
 16895 ;;		_main
 16896 ;;		_vscp_handleDropNickname
 16897 ;;		_vscp_handleProtocolEvent
 16898 ;;		_vscp_handlePreActiveState
 16899 ;; This function uses a non-reentrant model
 16900 ;;
 16901                           
 16902                           	psect	text42
 16903  00640A                     __ptext42:
 16904                           	opt stack 0
 16905  00640A                     _vscp_init:
 16906                           	opt stack 23
 16907                           
 16908                           ;vscp_firmware.c: 120: vscp_initledfunc = 0x02;
 16909                           
 16910                           ;incstack = 0
 16911                           ;incstack = 0
 16912  00640A  6E18               	movwf	??_vscp_init& (0+255),c
 16913  00640C  0E02               	movlw	2
 16914  00640E  6E3B               	movwf	_vscp_initledfunc,c
 16915  006410  5018               	movf	??_vscp_init& (0+255),w,c
 16916                           
 16917                           ;vscp_firmware.c: 123: vscp_nickname = vscp_readNicknamePermanent();
 16918  006412  EC1D  F037         	call	_vscp_readNicknamePermanent	;wreg free
 16919  006416  0100               	movlb	0	; () banked
 16920  006418  0100               	movlb	0	; () banked
 16921  00641A  6FEC               	movwf	_vscp_nickname& (0+255),b
 16922                           
 16923                           ; BSR set to: 0
 16924                           ;vscp_firmware.c: 126: if (!vscp_nickname) vscp_nickname = 0xff;
 16925  00641C  0100               	movlb	0	; () banked
 16926  00641E  0100               	movlb	0	; () banked
 16927  006420  67EC               	tstfsz	_vscp_nickname& (0+255),b
 16928  006422  D003               	goto	l9245
 16929                           
 16930                           ; BSR set to: 0
 16931  006424  0100               	movlb	0	; () banked
 16932  006426  0100               	movlb	0	; () banked
 16933  006428  69EC               	setf	_vscp_nickname& (0+255),b
 16934  00642A                     l9245:
 16935                           
 16936                           ; BSR set to: 0
 16937                           ;vscp_firmware.c: 129: vscp_imsg.flags = 0;
 16938  00642A  6E18               	movwf	??_vscp_init& (0+255),c
 16939  00642C  0E00               	movlw	0
 16940  00642E  0100               	movlb	0	; () banked
 16941  006430  0100               	movlb	0	; () banked
 16942  006432  6FF1               	movwf	_vscp_imsg& (0+255),b
 16943  006434  5018               	movf	??_vscp_init& (0+255),w,c
 16944                           
 16945                           ;vscp_firmware.c: 130: vscp_imsg.priority = 0;
 16946  006436  6E18               	movwf	??_vscp_init& (0+255),c
 16947  006438  0E00               	movlw	0
 16948  00643A  0100               	movlb	0	; () banked
 16949  00643C  0100               	movlb	0	; () banked
 16950  00643E  6FF2               	movwf	(_vscp_imsg+1)& (0+255),b
 16951  006440  5018               	movf	??_vscp_init& (0+255),w,c
 16952                           
 16953                           ; BSR set to: 0
 16954                           ;vscp_firmware.c: 131: vscp_imsg.vscp_class = 0;
 16955  006442  0E00               	movlw	0
 16956  006444  0100               	movlb	0	; () banked
 16957  006446  0100               	movlb	0	; () banked
 16958  006448  6FF4               	movwf	(_vscp_imsg+3)& (0+255),b
 16959  00644A  0E00               	movlw	0
 16960  00644C  0100               	movlb	0	; () banked
 16961  00644E  6FF3               	movwf	(_vscp_imsg+2)& (0+255),b
 16962                           
 16963                           ; BSR set to: 0
 16964                           ;vscp_firmware.c: 132: vscp_imsg.vscp_type = 0;
 16965  006450  6E18               	movwf	??_vscp_init& (0+255),c
 16966  006452  0E00               	movlw	0
 16967  006454  0100               	movlb	0	; () banked
 16968  006456  0100               	movlb	0	; () banked
 16969  006458  6FF5               	movwf	(_vscp_imsg+4)& (0+255),b
 16970  00645A  5018               	movf	??_vscp_init& (0+255),w,c
 16971                           
 16972                           ; BSR set to: 0
 16973                           ;vscp_firmware.c: 135: vscp_omsg.flags = 0;
 16974  00645C  6E18               	movwf	??_vscp_init& (0+255),c
 16975  00645E  0E00               	movlw	0
 16976  006460  6E3E               	movwf	_vscp_omsg,c
 16977  006462  5018               	movf	??_vscp_init& (0+255),w,c
 16978                           
 16979                           ; BSR set to: 0
 16980                           ;vscp_firmware.c: 136: vscp_omsg.priority = 0;
 16981  006464  6E18               	movwf	??_vscp_init& (0+255),c
 16982  006466  0E00               	movlw	0
 16983  006468  6E3F               	movwf	_vscp_omsg+1,c
 16984  00646A  5018               	movf	??_vscp_init& (0+255),w,c
 16985                           
 16986                           ;vscp_firmware.c: 137: vscp_omsg.vscp_class = 0;
 16987  00646C  0E00               	movlw	0
 16988  00646E  6E41               	movwf	_vscp_omsg+3,c
 16989  006470  0E00               	movlw	0
 16990  006472  6E40               	movwf	_vscp_omsg+2,c
 16991                           
 16992                           ; BSR set to: 0
 16993                           ;vscp_firmware.c: 138: vscp_omsg.vscp_type = 0;
 16994  006474  6E18               	movwf	??_vscp_init& (0+255),c
 16995  006476  0E00               	movlw	0
 16996  006478  6E42               	movwf	_vscp_omsg+4,c
 16997  00647A  5018               	movf	??_vscp_init& (0+255),w,c
 16998                           
 16999                           ; BSR set to: 0
 17000                           ;vscp_firmware.c: 140: vscp_errorcnt = 0;
 17001  00647C  6E18               	movwf	??_vscp_init& (0+255),c
 17002  00647E  0E00               	movlw	0
 17003  006480  0100               	movlb	0	; () banked
 17004  006482  0100               	movlb	0	; () banked
 17005  006484  6FE8               	movwf	_vscp_errorcnt& (0+255),b
 17006  006486  5018               	movf	??_vscp_init& (0+255),w,c
 17007                           
 17008                           ; BSR set to: 0
 17009                           ;vscp_firmware.c: 141: vscp_alarmstatus = 0;
 17010  006488  6E18               	movwf	??_vscp_init& (0+255),c
 17011  00648A  0E00               	movlw	0
 17012  00648C  0100               	movlb	0	; () banked
 17013  00648E  0100               	movlb	0	; () banked
 17014  006490  6FE7               	movwf	_vscp_alarmstatus& (0+255),b
 17015  006492  5018               	movf	??_vscp_init& (0+255),w,c
 17016                           
 17017                           ; BSR set to: 0
 17018                           ;vscp_firmware.c: 143: vscp_probe_address = 0;
 17019  006494  6E18               	movwf	??_vscp_init& (0+255),c
 17020  006496  0E00               	movlw	0
 17021  006498  6E3C               	movwf	_vscp_probe_address,c
 17022  00649A  5018               	movf	??_vscp_init& (0+255),w,c
 17023                           
 17024                           ; BSR set to: 0
 17025                           ;vscp_firmware.c: 146: vscp_node_state = 0x00;
 17026  00649C  6E18               	movwf	??_vscp_init& (0+255),c
 17027  00649E  0E00               	movlw	0
 17028  0064A0  0100               	movlb	0	; () banked
 17029  0064A2  0100               	movlb	0	; () banked
 17030  0064A4  6FED               	movwf	_vscp_node_state& (0+255),b
 17031  0064A6  5018               	movf	??_vscp_init& (0+255),w,c
 17032                           
 17033                           ; BSR set to: 0
 17034                           ;vscp_firmware.c: 147: vscp_node_substate = 0x00;
 17035  0064A8  6E18               	movwf	??_vscp_init& (0+255),c
 17036  0064AA  0E00               	movlw	0
 17037  0064AC  0100               	movlb	0	; () banked
 17038  0064AE  0100               	movlb	0	; () banked
 17039  0064B0  6FEE               	movwf	_vscp_node_substate& (0+255),b
 17040  0064B2  5018               	movf	??_vscp_init& (0+255),w,c
 17041                           
 17042                           ; BSR set to: 0
 17043                           ;vscp_firmware.c: 149: vscp_probe_cnt = 0;
 17044  0064B4  6E18               	movwf	??_vscp_init& (0+255),c
 17045  0064B6  0E00               	movlw	0
 17046  0064B8  0100               	movlb	0	; () banked
 17047  0064BA  0100               	movlb	0	; () banked
 17048  0064BC  6FEF               	movwf	_vscp_probe_cnt& (0+255),b
 17049  0064BE  5018               	movf	??_vscp_init& (0+255),w,c
 17050                           
 17051                           ; BSR set to: 0
 17052                           ;vscp_firmware.c: 150: vscp_page_select = 0;
 17053  0064C0  0E00               	movlw	0
 17054  0064C2  6E37               	movwf	_vscp_page_select+1,c
 17055  0064C4  0E00               	movlw	0
 17056  0064C6  6E36               	movwf	_vscp_page_select,c
 17057                           
 17058                           ; BSR set to: 0
 17059                           ;vscp_firmware.c: 153: vscp_timer = 0;
 17060  0064C8  0E00               	movlw	0
 17061  0064CA  6E39               	movwf	_vscp_timer+1,c	;volatile
 17062  0064CC  0E00               	movlw	0
 17063  0064CE  6E38               	movwf	_vscp_timer,c	;volatile
 17064                           
 17065                           ; BSR set to: 0
 17066                           ;vscp_firmware.c: 154: vscp_configtimer = 0;
 17067  0064D0  0E00               	movlw	0
 17068  0064D2  0100               	movlb	0	; () banked
 17069  0064D4  0100               	movlb	0	; () banked
 17070  0064D6  6FDA               	movwf	(_vscp_configtimer+1)& (0+255),b	;volatile
 17071  0064D8  0E00               	movlw	0
 17072  0064DA  0100               	movlb	0	; () banked
 17073  0064DC  6FD9               	movwf	_vscp_configtimer& (0+255),b	;volatile
 17074                           
 17075                           ;vscp_firmware.c: 155: vscp_second = 0;
 17076  0064DE  6E18               	movwf	??_vscp_init& (0+255),c
 17077  0064E0  0E00               	movlw	0
 17078  0064E2  0100               	movlb	0	; () banked
 17079  0064E4  0100               	movlb	0	; () banked
 17080  0064E6  6FF0               	movwf	_vscp_second& (0+255),b
 17081  0064E8  5018               	movf	??_vscp_init& (0+255),w,c
 17082                           
 17083                           ;vscp_firmware.c: 156: vscp_minute = 0;
 17084  0064EA  6E18               	movwf	??_vscp_init& (0+255),c
 17085  0064EC  0E00               	movlw	0
 17086  0064EE  0100               	movlb	0	; () banked
 17087  0064F0  0100               	movlb	0	; () banked
 17088  0064F2  6FEB               	movwf	_vscp_minute& (0+255),b
 17089  0064F4  5018               	movf	??_vscp_init& (0+255),w,c
 17090                           
 17091                           ;vscp_firmware.c: 157: vscp_hour = 0;
 17092  0064F6  6E18               	movwf	??_vscp_init& (0+255),c
 17093  0064F8  0E00               	movlw	0
 17094  0064FA  0100               	movlb	0	; () banked
 17095  0064FC  0100               	movlb	0	; () banked
 17096  0064FE  6FE9               	movwf	_vscp_hour& (0+255),b
 17097  006500  5018               	movf	??_vscp_init& (0+255),w,c
 17098                           
 17099                           ; BSR set to: 0
 17100  006502  0012               	return	
 17101  006504                     __end_of_vscp_init:
 17102                           	opt stack 0
 17103                           tblptru	equ	0xFF8
 17104                           tblptrh	equ	0xFF7
 17105                           tblptrl	equ	0xFF6
 17106                           tablat	equ	0xFF5
 17107                           prodh	equ	0xFF4
 17108                           prodl	equ	0xFF3
 17109                           postinc0	equ	0xFEE
 17110                           wreg	equ	0xFE8
 17111                           indf2	equ	0xFDF
 17112                           postinc2	equ	0xFDE
 17113                           postdec2	equ	0xFDD
 17114                           fsr2h	equ	0xFDA
 17115                           fsr2l	equ	0xFD9
 17116                           status	equ	0xFD8
 17117                           
 17118 ;; *************** function _vscp_readNicknamePermanent *****************
 17119 ;; Defined at:
 17120 ;;		line 959 in file "../main.c"
 17121 ;; Parameters:    Size  Location     Type
 17122 ;;		None
 17123 ;; Auto vars:     Size  Location     Type
 17124 ;;		None
 17125 ;; Return value:  Size  Location     Type
 17126 ;;                  1    wreg      unsigned char 
 17127 ;; Registers used:
 17128 ;;		wreg, status,2, cstack
 17129 ;; Tracked objects:
 17130 ;;		On entry : 0/0
 17131 ;;		On exit  : 0/0
 17132 ;;		Unchanged: 0/0
 17133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17134 ;;      Params:         0       0       0       0       0       0       0
 17135 ;;      Locals:         0       0       0       0       0       0       0
 17136 ;;      Temps:          0       0       0       0       0       0       0
 17137 ;;      Totals:         0       0       0       0       0       0       0
 17138 ;;Total ram usage:        0 bytes
 17139 ;; Hardware stack levels used:    1
 17140 ;; Hardware stack levels required when called:    3
 17141 ;; This function calls:
 17142 ;;		_Read_b_eep
 17143 ;; This function is called by:
 17144 ;;		_vscp_init
 17145 ;; This function uses a non-reentrant model
 17146 ;;
 17147                           
 17148                           	psect	text43
 17149  006E3A                     __ptext43:
 17150                           	opt stack 0
 17151  006E3A                     _vscp_readNicknamePermanent:
 17152                           	opt stack 23
 17153                           
 17154                           ;main.c: 960: return Read_b_eep(0x01);
 17155                           
 17156                           ; BSR set to: 0
 17157                           ;incstack = 0
 17158                           ;incstack = 0
 17159  006E3A  0E00               	movlw	0
 17160  006E3C  6E17               	movwf	?_Read_b_eep+1,c
 17161  006E3E  0E01               	movlw	1
 17162  006E40  6E16               	movwf	?_Read_b_eep,c
 17163  006E42  ECFD  F036         	call	_Read_b_eep	;wreg free
 17164  006E46  0012               	return	
 17165  006E48                     __end_of_vscp_readNicknamePermanent:
 17166                           	opt stack 0
 17167                           tblptru	equ	0xFF8
 17168                           tblptrh	equ	0xFF7
 17169                           tblptrl	equ	0xFF6
 17170                           tablat	equ	0xFF5
 17171                           prodh	equ	0xFF4
 17172                           prodl	equ	0xFF3
 17173                           postinc0	equ	0xFEE
 17174                           wreg	equ	0xFE8
 17175                           indf2	equ	0xFDF
 17176                           postinc2	equ	0xFDE
 17177                           postdec2	equ	0xFDD
 17178                           fsr2h	equ	0xFDA
 17179                           fsr2l	equ	0xFD9
 17180                           status	equ	0xFD8
 17181                           
 17182 ;; *************** function _vscp_handleSetNickname *****************
 17183 ;; Defined at:
 17184 ;;		line 422 in file "../../vscp_firmware/common/vscp_firmware.c"
 17185 ;; Parameters:    Size  Location     Type
 17186 ;;		None
 17187 ;; Auto vars:     Size  Location     Type
 17188 ;;		None
 17189 ;; Return value:  Size  Location     Type
 17190 ;;		None               void
 17191 ;; Registers used:
 17192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17193 ;; Tracked objects:
 17194 ;;		On entry : 0/0
 17195 ;;		On exit  : 0/0
 17196 ;;		Unchanged: 0/0
 17197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17198 ;;      Params:         0       0       0       0       0       0       0
 17199 ;;      Locals:         0       0       0       0       0       0       0
 17200 ;;      Temps:          1       0       0       0       0       0       0
 17201 ;;      Totals:         1       0       0       0       0       0       0
 17202 ;;Total ram usage:        1 bytes
 17203 ;; Hardware stack levels used:    1
 17204 ;; Hardware stack levels required when called:    4
 17205 ;; This function calls:
 17206 ;;		_vscp_writeNicknamePermanent
 17207 ;;		_vscp_setSegmentCRC
 17208 ;; This function is called by:
 17209 ;;		_vscp_handleProtocolEvent
 17210 ;; This function uses a non-reentrant model
 17211 ;;
 17212                           
 17213                           	psect	text44
 17214  006B06                     __ptext44:
 17215                           	opt stack 0
 17216  006B06                     _vscp_handleSetNickname:
 17217                           	opt stack 24
 17218                           
 17219                           ;vscp_firmware.c: 423: if ( ( 2 == (vscp_imsg.flags & 0x0f ) ) &&
 17220                           ;vscp_firmware.c: 424: (vscp_nickname == vscp_imsg.data[ 0 ])) {
 17221                           
 17222                           ;incstack = 0
 17223                           ;incstack = 0
 17224  006B06  0100               	movlb	0	; () banked
 17225  006B08  0100               	movlb	0	; () banked
 17226  006B0A  51F1               	movf	_vscp_imsg& (0+255),w,b
 17227  006B0C  0B0F               	andlw	15
 17228  006B0E  0A02               	xorlw	2
 17229  006B10  A4D8               	btfss	status,2,c
 17230  006B12  D014               	goto	l1189
 17231                           
 17232                           ; BSR set to: 0
 17233  006B14  0100               	movlb	0	; () banked
 17234  006B16  0100               	movlb	0	; () banked
 17235  006B18  51EC               	movf	_vscp_nickname& (0+255),w,b
 17236  006B1A  0100               	movlb	0	; () banked
 17237  006B1C  EE20  F0F7         	lfsr	2,_vscp_imsg+6
 17238  006B20  62DF               	cpfseq	indf2,c
 17239  006B22  D00C               	goto	l1189
 17240                           
 17241                           ; BSR set to: 0
 17242                           ;vscp_firmware.c: 427: vscp_nickname = vscp_imsg.data[ 1 ];
 17243  006B24  C0F8  F0EC         	movff	_vscp_imsg+7,_vscp_nickname
 17244                           
 17245                           ; BSR set to: 0
 17246                           ;vscp_firmware.c: 428: vscp_writeNicknamePermanent(vscp_nickname);
 17247  006B28  C0EC  F01B         	movff	_vscp_nickname,?_vscp_writeNicknamePermanent
 17248  006B2C  ECB2  F036         	call	_vscp_writeNicknamePermanent	;wreg free
 17249                           
 17250                           ;vscp_firmware.c: 429: vscp_setSegmentCRC(0x40);
 17251  006B30  6E1C               	movwf	??_vscp_handleSetNickname& (0+255),c
 17252  006B32  0E40               	movlw	64
 17253  006B34  6E1B               	movwf	?_vscp_setSegmentCRC,c
 17254  006B36  501C               	movf	??_vscp_handleSetNickname& (0+255),w,c
 17255  006B38  ECA7  F036         	call	_vscp_setSegmentCRC	;wreg free
 17256  006B3C                     l1189:
 17257  006B3C  0012               	return	
 17258  006B3E                     __end_of_vscp_handleSetNickname:
 17259                           	opt stack 0
 17260                           tblptru	equ	0xFF8
 17261                           tblptrh	equ	0xFF7
 17262                           tblptrl	equ	0xFF6
 17263                           tablat	equ	0xFF5
 17264                           prodh	equ	0xFF4
 17265                           prodl	equ	0xFF3
 17266                           postinc0	equ	0xFEE
 17267                           wreg	equ	0xFE8
 17268                           indf2	equ	0xFDF
 17269                           postinc2	equ	0xFDE
 17270                           postdec2	equ	0xFDD
 17271                           fsr2h	equ	0xFDA
 17272                           fsr2l	equ	0xFD9
 17273                           status	equ	0xFD8
 17274                           
 17275 ;; *************** function _vscp_handleHeartbeat *****************
 17276 ;; Defined at:
 17277 ;;		line 396 in file "../../vscp_firmware/common/vscp_firmware.c"
 17278 ;; Parameters:    Size  Location     Type
 17279 ;;		None
 17280 ;; Auto vars:     Size  Location     Type
 17281 ;;		None
 17282 ;; Return value:  Size  Location     Type
 17283 ;;		None               void
 17284 ;; Registers used:
 17285 ;;		wreg, status,2, status,0, cstack
 17286 ;; Tracked objects:
 17287 ;;		On entry : 0/0
 17288 ;;		On exit  : 0/0
 17289 ;;		Unchanged: 0/0
 17290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17291 ;;      Params:         0       0       0       0       0       0       0
 17292 ;;      Locals:         0       0       0       0       0       0       0
 17293 ;;      Temps:          1       0       0       0       0       0       0
 17294 ;;      Totals:         1       0       0       0       0       0       0
 17295 ;;Total ram usage:        1 bytes
 17296 ;; Hardware stack levels used:    1
 17297 ;; Hardware stack levels required when called:    4
 17298 ;; This function calls:
 17299 ;;		_vscp_writeNicknamePermanent
 17300 ;;		_vscp_getSegmentCRC
 17301 ;;		_vscp_setSegmentCRC
 17302 ;; This function is called by:
 17303 ;;		_vscp_handleProtocolEvent
 17304 ;; This function uses a non-reentrant model
 17305 ;;
 17306                           
 17307                           	psect	text45
 17308  006964                     __ptext45:
 17309                           	opt stack 0
 17310  006964                     _vscp_handleHeartbeat:
 17311                           	opt stack 24
 17312                           
 17313                           ;vscp_firmware.c: 397: if ( !vscp_getSegmentCRC() ) {
 17314                           
 17315                           ;incstack = 0
 17316                           ;incstack = 0
 17317  006964  EC24  F037         	call	_vscp_getSegmentCRC	;wreg free
 17318  006968  0900               	iorlw	0
 17319  00696A  A4D8               	btfss	status,2,c
 17320  00696C  D022               	goto	l11417
 17321                           
 17322                           ;vscp_firmware.c: 398: if ( ( 5 == (vscp_imsg.flags & 0x0f ) ) &&
 17323                           ;vscp_firmware.c: 399: (vscp_getSegmentCRC() != vscp_imsg.data[ 0 ])) {
 17324  00696E  0100               	movlb	0	; () banked
 17325  006970  0100               	movlb	0	; () banked
 17326  006972  51F1               	movf	_vscp_imsg& (0+255),w,b
 17327  006974  0B0F               	andlw	15
 17328  006976  0A05               	xorlw	5
 17329  006978  A4D8               	btfss	status,2,c
 17330  00697A  D01F               	goto	l1185
 17331                           
 17332                           ; BSR set to: 0
 17333  00697C  EC24  F037         	call	_vscp_getSegmentCRC	;wreg free
 17334  006980  0100               	movlb	0	; () banked
 17335  006982  0100               	movlb	0	; () banked
 17336  006984  19F7               	xorwf	(_vscp_imsg+6)& (0+255),w,b
 17337  006986  B4D8               	btfsc	status,2,c
 17338  006988  D018               	goto	l1185
 17339                           
 17340                           ; BSR set to: 0
 17341                           ;vscp_firmware.c: 403: vscp_setSegmentCRC(vscp_imsg.data[ 0 ]);
 17342  00698A  C0F7  F01B         	movff	_vscp_imsg+6,?_vscp_setSegmentCRC
 17343  00698E  ECA7  F036         	call	_vscp_setSegmentCRC	;wreg free
 17344                           
 17345                           ;vscp_firmware.c: 406: vscp_nickname = 0xff;
 17346  006992  0100               	movlb	0	; () banked
 17347  006994  0100               	movlb	0	; () banked
 17348  006996  69EC               	setf	_vscp_nickname& (0+255),b
 17349                           
 17350                           ;vscp_firmware.c: 407: vscp_writeNicknamePermanent(0xff);
 17351  006998  6E1C               	movwf	??_vscp_handleHeartbeat& (0+255),c
 17352  00699A  0EFF               	movlw	255
 17353  00699C  6E1B               	movwf	?_vscp_writeNicknamePermanent,c
 17354  00699E  501C               	movf	??_vscp_handleHeartbeat& (0+255),w,c
 17355  0069A0  ECB2  F036         	call	_vscp_writeNicknamePermanent	;wreg free
 17356                           
 17357                           ;vscp_firmware.c: 408: vscp_node_state = 0x01;
 17358  0069A4  6E1C               	movwf	??_vscp_handleHeartbeat& (0+255),c
 17359  0069A6  0E01               	movlw	1
 17360  0069A8  0100               	movlb	0	; () banked
 17361  0069AA  0100               	movlb	0	; () banked
 17362  0069AC  6FED               	movwf	_vscp_node_state& (0+255),b
 17363  0069AE  501C               	movf	??_vscp_handleHeartbeat& (0+255),w,c
 17364  0069B0  D004               	goto	l1185
 17365  0069B2                     l11417:
 17366                           
 17367                           ;vscp_firmware.c: 411: else {
 17368                           ;vscp_firmware.c: 413: vscp_setSegmentCRC(vscp_imsg.data[ 0 ]);
 17369  0069B2  C0F7  F01B         	movff	_vscp_imsg+6,?_vscp_setSegmentCRC
 17370  0069B6  ECA7  F036         	call	_vscp_setSegmentCRC	;wreg free
 17371  0069BA                     l1185:
 17372  0069BA  0012               	return	
 17373  0069BC                     __end_of_vscp_handleHeartbeat:
 17374                           	opt stack 0
 17375                           tblptru	equ	0xFF8
 17376                           tblptrh	equ	0xFF7
 17377                           tblptrl	equ	0xFF6
 17378                           tablat	equ	0xFF5
 17379                           prodh	equ	0xFF4
 17380                           prodl	equ	0xFF3
 17381                           postinc0	equ	0xFEE
 17382                           wreg	equ	0xFE8
 17383                           indf2	equ	0xFDF
 17384                           postinc2	equ	0xFDE
 17385                           postdec2	equ	0xFDD
 17386                           fsr2h	equ	0xFDA
 17387                           fsr2l	equ	0xFD9
 17388                           status	equ	0xFD8
 17389                           
 17390 ;; *************** function _vscp_getMatrixInfo *****************
 17391 ;; Defined at:
 17392 ;;		line 3004 in file "../main.c"
 17393 ;; Parameters:    Size  Location     Type
 17394 ;;  pData           2   21[COMRAM] PTR unsigned char 
 17395 ;;		 -> vscp_omsg(13), 
 17396 ;; Auto vars:     Size  Location     Type
 17397 ;;  i               1   24[COMRAM] unsigned char 
 17398 ;; Return value:  Size  Location     Type
 17399 ;;		None               void
 17400 ;; Registers used:
 17401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17402 ;; Tracked objects:
 17403 ;;		On entry : 0/0
 17404 ;;		On exit  : 0/0
 17405 ;;		Unchanged: 0/0
 17406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17407 ;;      Params:         2       0       0       0       0       0       0
 17408 ;;      Locals:         1       0       0       0       0       0       0
 17409 ;;      Temps:          1       0       0       0       0       0       0
 17410 ;;      Totals:         4       0       0       0       0       0       0
 17411 ;;Total ram usage:        4 bytes
 17412 ;; Hardware stack levels used:    1
 17413 ;; Hardware stack levels required when called:    2
 17414 ;; This function calls:
 17415 ;;		Nothing
 17416 ;; This function is called by:
 17417 ;;		_vscp_handleProtocolEvent
 17418 ;; This function uses a non-reentrant model
 17419 ;;
 17420                           
 17421                           	psect	text46
 17422  006B3E                     __ptext46:
 17423                           	opt stack 0
 17424  006B3E                     _vscp_getMatrixInfo:
 17425                           	opt stack 26
 17426                           
 17427                           ;main.c: 3005: uint8_t i;
 17428                           ;main.c: 3007: vscp_omsg.data[ 0 ] = 7;
 17429                           
 17430                           ;incstack = 0
 17431                           ;incstack = 0
 17432  006B3E  6E18               	movwf	??_vscp_getMatrixInfo& (0+255),c
 17433  006B40  0E07               	movlw	7
 17434  006B42  6E43               	movwf	_vscp_omsg+5,c
 17435  006B44  5018               	movf	??_vscp_getMatrixInfo& (0+255),w,c
 17436                           
 17437                           ;main.c: 3008: vscp_omsg.data[ 1 ] = 72;
 17438  006B46  6E18               	movwf	??_vscp_getMatrixInfo& (0+255),c
 17439  006B48  0E48               	movlw	72
 17440  006B4A  6E44               	movwf	_vscp_omsg+6,c
 17441  006B4C  5018               	movf	??_vscp_getMatrixInfo& (0+255),w,c
 17442                           
 17443                           ;main.c: 3011: for ( i = 2; i < 8; i++ ) {
 17444  006B4E  6E18               	movwf	??_vscp_getMatrixInfo& (0+255),c
 17445  006B50  0E02               	movlw	2
 17446  006B52  6E19               	movwf	vscp_getMatrixInfo@i,c
 17447  006B54  5018               	movf	??_vscp_getMatrixInfo& (0+255),w,c
 17448  006B56  D00B               	goto	L127
 17449  006B58                     l11293:
 17450                           
 17451                           ;main.c: 3012: vscp_omsg.data[ i ] = 0;
 17452  006B58  5019               	movf	vscp_getMatrixInfo@i,w,c
 17453  006B5A  0D01               	mullw	1
 17454  006B5C  0E43               	movlw	low (_vscp_omsg+5)
 17455  006B5E  24F3               	addwf	prodl,w,c
 17456  006B60  6ED9               	movwf	fsr2l,c
 17457  006B62  0E00               	movlw	high (_vscp_omsg+5)
 17458  006B64  20F4               	addwfc	prodh,w,c
 17459  006B66  6EDA               	movwf	fsr2h,c
 17460  006B68  0E00               	movlw	0
 17461  006B6A  6EDF               	movwf	indf2,c
 17462  006B6C  2A19               	incf	vscp_getMatrixInfo@i,f,c
 17463  006B6E                     L127:
 17464  006B6E  0E07               	movlw	7
 17465  006B70  6419               	cpfsgt	vscp_getMatrixInfo@i,c
 17466  006B72  D7F2               	goto	l11293
 17467  006B74  0012               	return	
 17468  006B76                     __end_of_vscp_getMatrixInfo:
 17469                           	opt stack 0
 17470                           tblptru	equ	0xFF8
 17471                           tblptrh	equ	0xFF7
 17472                           tblptrl	equ	0xFF6
 17473                           tablat	equ	0xFF5
 17474                           prodh	equ	0xFF4
 17475                           prodl	equ	0xFF3
 17476                           postinc0	equ	0xFEE
 17477                           wreg	equ	0xFE8
 17478                           indf2	equ	0xFDF
 17479                           postinc2	equ	0xFDE
 17480                           postdec2	equ	0xFDD
 17481                           fsr2h	equ	0xFDA
 17482                           fsr2l	equ	0xFD9
 17483                           status	equ	0xFD8
 17484                           
 17485 ;; *************** function _vscp_goBootloaderMode *****************
 17486 ;; Defined at:
 17487 ;;		line 2988 in file "../main.c"
 17488 ;; Parameters:    Size  Location     Type
 17489 ;;  algorithm       1   26[COMRAM] unsigned char 
 17490 ;; Auto vars:     Size  Location     Type
 17491 ;;		None
 17492 ;; Return value:  Size  Location     Type
 17493 ;;		None               void
 17494 ;; Registers used:
 17495 ;;		wreg, status,2, status,0, cstack
 17496 ;; Tracked objects:
 17497 ;;		On entry : 0/0
 17498 ;;		On exit  : 0/0
 17499 ;;		Unchanged: 0/0
 17500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17501 ;;      Params:         1       0       0       0       0       0       0
 17502 ;;      Locals:         0       0       0       0       0       0       0
 17503 ;;      Temps:          1       0       0       0       0       0       0
 17504 ;;      Totals:         2       0       0       0       0       0       0
 17505 ;;Total ram usage:        2 bytes
 17506 ;; Hardware stack levels used:    1
 17507 ;; Hardware stack levels required when called:    3
 17508 ;; This function calls:
 17509 ;;		_Busy_eep
 17510 ;;		_Write_b_eep
 17511 ;; This function is called by:
 17512 ;;		_vscp_handleProtocolEvent
 17513 ;; This function uses a non-reentrant model
 17514 ;;
 17515                           
 17516                           	psect	text47
 17517  006CAE                     __ptext47:
 17518                           	opt stack 0
 17519  006CAE                     _vscp_goBootloaderMode:
 17520                           	opt stack 25
 17521                           
 17522                           ;main.c: 2989: if ( 0x01 != algorithm ) return;
 17523                           
 17524                           ;incstack = 0
 17525                           ;incstack = 0
 17526  006CAE  041B               	decf	vscp_goBootloaderMode@algorithm,w,c
 17527  006CB0  A4D8               	btfss	status,2,c
 17528  006CB2  D00D               	goto	l975
 17529                           
 17530                           ;main.c: 2993: (Busy_eep(), Write_b_eep(0x00,0xff));
 17531  006CB4  EC35  F037         	call	_Busy_eep	;wreg free
 17532  006CB8  0E00               	movlw	0
 17533  006CBA  6E17               	movwf	?_Write_b_eep+1,c
 17534  006CBC  0E00               	movlw	0
 17535  006CBE  6E16               	movwf	?_Write_b_eep,c
 17536  006CC0  6E1C               	movwf	??_vscp_goBootloaderMode& (0+255),c
 17537  006CC2  0EFF               	movlw	255
 17538  006CC4  6E18               	movwf	?_Write_b_eep+2,c
 17539  006CC6  501C               	movf	??_vscp_goBootloaderMode& (0+255),w,c
 17540  006CC8  EC65  F035         	call	_Write_b_eep	;wreg free
 17541  006CCC  00FF               	reset		;# 
 17542  006CCE                     l975:
 17543  006CCE  0012               	return	
 17544  006CD0                     __end_of_vscp_goBootloaderMode:
 17545                           	opt stack 0
 17546                           tblptru	equ	0xFF8
 17547                           tblptrh	equ	0xFF7
 17548                           tblptrl	equ	0xFF6
 17549                           tablat	equ	0xFF5
 17550                           prodh	equ	0xFF4
 17551                           prodl	equ	0xFF3
 17552                           postinc0	equ	0xFEE
 17553                           wreg	equ	0xFE8
 17554                           indf2	equ	0xFDF
 17555                           postinc2	equ	0xFDE
 17556                           postdec2	equ	0xFDD
 17557                           fsr2h	equ	0xFDA
 17558                           fsr2l	equ	0xFD9
 17559                           status	equ	0xFD8
 17560                           
 17561 ;; *************** function _vscp_handleProbeState *****************
 17562 ;; Defined at:
 17563 ;;		line 202 in file "../../vscp_firmware/common/vscp_firmware.c"
 17564 ;; Parameters:    Size  Location     Type
 17565 ;;		None
 17566 ;; Auto vars:     Size  Location     Type
 17567 ;;		None
 17568 ;; Return value:  Size  Location     Type
 17569 ;;		None               void
 17570 ;; Registers used:
 17571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 17572 ;; Tracked objects:
 17573 ;;		On entry : 0/0
 17574 ;;		On exit  : 0/0
 17575 ;;		Unchanged: 0/0
 17576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17577 ;;      Params:         0       0       0       0       0       0       0
 17578 ;;      Locals:         0       0       0       0       0       0       0
 17579 ;;      Temps:          1       0       0       0       0       0       0
 17580 ;;      Totals:         1       0       0       0       0       0       0
 17581 ;;Total ram usage:        1 bytes
 17582 ;; Hardware stack levels used:    1
 17583 ;; Hardware stack levels required when called:    8
 17584 ;; This function calls:
 17585 ;;		_vscp_goActiveState
 17586 ;;		_vscp_writeNicknamePermanent
 17587 ;;		_vscp_sendEvent
 17588 ;;		_vscp_setSegmentCRC
 17589 ;; This function is called by:
 17590 ;;		_main
 17591 ;; This function uses a non-reentrant model
 17592 ;;
 17593                           
 17594                           	psect	text48
 17595  005C42                     __ptext48:
 17596                           	opt stack 0
 17597  005C42                     _vscp_handleProbeState:
 17598                           	opt stack 21
 17599                           
 17600                           ;vscp_firmware.c: 203: switch (vscp_node_substate) {
 17601                           
 17602                           ;incstack = 0
 17603                           ;incstack = 0
 17604  005C42  D0A5               	goto	l9391
 17605  005C44                     l9319:
 17606                           
 17607                           ;vscp_firmware.c: 207: if (0xff != vscp_probe_address) {
 17608  005C44  283C               	incf	_vscp_probe_address,w,c
 17609  005C46  B4D8               	btfsc	status,2,c
 17610  005C48  D01A               	goto	l9335
 17611                           
 17612                           ;vscp_firmware.c: 209: vscp_omsg.flags = 0x80 + 1;
 17613  005C4A  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17614  005C4C  0E81               	movlw	129
 17615  005C4E  6E3E               	movwf	_vscp_omsg,c
 17616  005C50  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 17617                           
 17618                           ;vscp_firmware.c: 210: vscp_omsg.priority = 0x00;
 17619  005C52  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17620  005C54  0E00               	movlw	0
 17621  005C56  6E3F               	movwf	_vscp_omsg+1,c
 17622  005C58  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 17623                           
 17624                           ;vscp_firmware.c: 211: vscp_omsg.vscp_class = 0;
 17625  005C5A  0E00               	movlw	0
 17626  005C5C  6E41               	movwf	_vscp_omsg+3,c
 17627  005C5E  0E00               	movlw	0
 17628  005C60  6E40               	movwf	_vscp_omsg+2,c
 17629                           
 17630                           ;vscp_firmware.c: 212: vscp_omsg.vscp_type = 2;
 17631  005C62  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17632  005C64  0E02               	movlw	2
 17633  005C66  6E42               	movwf	_vscp_omsg+4,c
 17634  005C68  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 17635                           
 17636                           ;vscp_firmware.c: 213: vscp_omsg.data[ 0 ] = vscp_probe_address;
 17637  005C6A  C03C  F043         	movff	_vscp_probe_address,_vscp_omsg+5
 17638                           
 17639                           ;vscp_firmware.c: 216: vscp_sendEvent();
 17640  005C6E  EC46  F035         	call	_vscp_sendEvent	;wreg free
 17641                           
 17642                           ;vscp_firmware.c: 218: vscp_node_substate = 0x01;
 17643  005C72  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17644  005C74  0E01               	movlw	1
 17645  005C76  0100               	movlb	0	; () banked
 17646  005C78  0100               	movlb	0	; () banked
 17647  005C7A  6FEE               	movwf	_vscp_node_substate& (0+255),b
 17648  005C7C  D031               	goto	L128
 17649  005C7E                     l9335:
 17650                           
 17651                           ;vscp_firmware.c: 222: else {
 17652                           ;vscp_firmware.c: 225: vscp_node_state = 0x04;
 17653  005C7E  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17654  005C80  0E04               	movlw	4
 17655  005C82  0100               	movlb	0	; () banked
 17656  005C84  0100               	movlb	0	; () banked
 17657  005C86  6FED               	movwf	_vscp_node_state& (0+255),b
 17658  005C88  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 17659                           
 17660                           ;vscp_firmware.c: 228: vscp_omsg.flags = 0x80 + 1;
 17661  005C8A  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17662  005C8C  0E81               	movlw	129
 17663  005C8E  6E3E               	movwf	_vscp_omsg,c
 17664  005C90  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 17665                           
 17666                           ; BSR set to: 0
 17667                           ;vscp_firmware.c: 229: vscp_omsg.data[ 0 ] = 0xff;
 17668  005C92  6843               	setf	_vscp_omsg+5,c
 17669                           
 17670                           ;vscp_firmware.c: 230: vscp_omsg.priority = 0x07;
 17671  005C94  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17672  005C96  0E07               	movlw	7
 17673  005C98  6E3F               	movwf	_vscp_omsg+1,c
 17674  005C9A  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 17675                           
 17676                           ; BSR set to: 0
 17677                           ;vscp_firmware.c: 231: vscp_omsg.vscp_class = 0;
 17678  005C9C  0E00               	movlw	0
 17679  005C9E  6E41               	movwf	_vscp_omsg+3,c
 17680  005CA0  0E00               	movlw	0
 17681  005CA2  6E40               	movwf	_vscp_omsg+2,c
 17682                           
 17683                           ; BSR set to: 0
 17684                           ;vscp_firmware.c: 232: vscp_omsg.vscp_type = 3;
 17685  005CA4  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17686  005CA6  0E03               	movlw	3
 17687  005CA8  6E42               	movwf	_vscp_omsg+4,c
 17688  005CAA  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 17689                           
 17690                           ; BSR set to: 0
 17691                           ;vscp_firmware.c: 235: vscp_sendEvent();
 17692  005CAC  EC46  F035         	call	_vscp_sendEvent	;wreg free
 17693  005CB0  D07A               	goto	l9393
 17694  005CB2                     l1153:
 17695                           
 17696                           ; BSR set to: 0
 17697                           ;vscp_firmware.c: 242: if (vscp_imsg.flags & 0x80) {
 17698  005CB2  0100               	movlb	0	; () banked
 17699  005CB4  0100               	movlb	0	; () banked
 17700  005CB6  AFF1               	btfss	_vscp_imsg& (0+255),7,b
 17701  005CB8  D021               	goto	l9361
 17702                           
 17703                           ; BSR set to: 0
 17704                           ;vscp_firmware.c: 245: if ((0 == vscp_imsg.vscp_class) &&
 17705                           ;vscp_firmware.c: 246: (3 == vscp_imsg.vscp_type)) {
 17706  005CBA  0100               	movlb	0	; () banked
 17707  005CBC  0100               	movlb	0	; () banked
 17708  005CBE  51F4               	movf	(_vscp_imsg+3)& (0+255),w,b
 17709  005CC0  11F3               	iorwf	(_vscp_imsg+2)& (0+255),w,b
 17710  005CC2  A4D8               	btfss	status,2,c
 17711  005CC4  D070               	goto	l9393
 17712                           
 17713                           ; BSR set to: 0
 17714  005CC6  0100               	movlb	0	; () banked
 17715  005CC8  0100               	movlb	0	; () banked
 17716  005CCA  51F5               	movf	(_vscp_imsg+4)& (0+255),w,b
 17717  005CCC  0A03               	xorlw	3
 17718  005CCE  A4D8               	btfss	status,2,c
 17719  005CD0  D06A               	goto	l9393
 17720                           
 17721                           ; BSR set to: 0
 17722                           ;vscp_firmware.c: 249: if (0 == vscp_probe_address) {
 17723  005CD2  663C               	tstfsz	_vscp_probe_address,c
 17724  005CD4  D00B               	goto	l9355
 17725                           
 17726                           ; BSR set to: 0
 17727                           ;vscp_firmware.c: 253: vscp_node_state = 0x02;
 17728  005CD6  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17729  005CD8  0E02               	movlw	2
 17730  005CDA  0100               	movlb	0	; () banked
 17731  005CDC  0100               	movlb	0	; () banked
 17732  005CDE  6FED               	movwf	_vscp_node_state& (0+255),b
 17733  005CE0                     L128:
 17734  005CE0  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 17735                           
 17736                           ; BSR set to: 0
 17737                           ;vscp_firmware.c: 254: vscp_timer = 0;
 17738  005CE2  0E00               	movlw	0
 17739  005CE4  6E39               	movwf	_vscp_timer+1,c	;volatile
 17740  005CE6  0E00               	movlw	0
 17741  005CE8  6E38               	movwf	_vscp_timer,c	;volatile
 17742                           
 17743                           ;vscp_firmware.c: 256: }
 17744  005CEA  D05D               	goto	l9393
 17745  005CEC                     l9355:
 17746                           
 17747                           ; BSR set to: 0
 17748                           ;vscp_firmware.c: 257: else {
 17749                           ;vscp_firmware.c: 260: vscp_probe_address++;
 17750  005CEC  2A3C               	incf	_vscp_probe_address,f,c
 17751                           
 17752                           ; BSR set to: 0
 17753                           ;vscp_firmware.c: 261: vscp_node_substate = 0x00;
 17754  005CEE  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17755  005CF0  0E00               	movlw	0
 17756  005CF2  0100               	movlb	0	; () banked
 17757  005CF4  0100               	movlb	0	; () banked
 17758  005CF6  6FEE               	movwf	_vscp_node_substate& (0+255),b
 17759  005CF8  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 17760  005CFA  D01B               	goto	L129
 17761  005CFC                     l9361:
 17762                           
 17763                           ; BSR set to: 0
 17764                           ;vscp_firmware.c: 267: else {
 17765                           ;vscp_firmware.c: 269: if (vscp_timer > 1000) {
 17766  005CFC  0EE9               	movlw	233
 17767  005CFE  5C38               	subwf	_vscp_timer,w,c	;volatile
 17768  005D00  0E03               	movlw	3
 17769  005D02  5839               	subwfb	_vscp_timer+1,w,c	;volatile
 17770  005D04  A0D8               	btfss	status,0,c
 17771  005D06  D04F               	goto	l9393
 17772                           
 17773                           ; BSR set to: 0
 17774                           ;vscp_firmware.c: 271: vscp_probe_cnt++;
 17775  005D08  0100               	movlb	0	; () banked
 17776  005D0A  0100               	movlb	0	; () banked
 17777  005D0C  2BEF               	incf	_vscp_probe_cnt& (0+255),f,b
 17778                           
 17779                           ; BSR set to: 0
 17780                           ;vscp_firmware.c: 273: if (vscp_probe_cnt >= 3) {
 17781  005D0E  0E02               	movlw	2
 17782  005D10  0100               	movlb	0	; () banked
 17783  005D12  0100               	movlb	0	; () banked
 17784  005D14  65EF               	cpfsgt	_vscp_probe_cnt& (0+255),b
 17785  005D16  D034               	goto	l9387
 17786                           
 17787                           ; BSR set to: 0
 17788                           ;vscp_firmware.c: 276: if (0 == vscp_probe_address) {
 17789  005D18  663C               	tstfsz	_vscp_probe_address,c
 17790  005D1A  D011               	goto	l1161
 17791                           
 17792                           ; BSR set to: 0
 17793                           ;vscp_firmware.c: 279: vscp_probe_address++;
 17794  005D1C  2A3C               	incf	_vscp_probe_address,f,c
 17795                           
 17796                           ; BSR set to: 0
 17797                           ;vscp_firmware.c: 280: vscp_node_substate = 0x00;
 17798  005D1E  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17799  005D20  0E00               	movlw	0
 17800  005D22  0100               	movlb	0	; () banked
 17801  005D24  0100               	movlb	0	; () banked
 17802  005D26  6FEE               	movwf	_vscp_node_substate& (0+255),b
 17803  005D28  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 17804                           
 17805                           ; BSR set to: 0
 17806                           ;vscp_firmware.c: 281: vscp_timer = 0;
 17807  005D2A  0E00               	movlw	0
 17808  005D2C  6E39               	movwf	_vscp_timer+1,c	;volatile
 17809  005D2E  0E00               	movlw	0
 17810  005D30  6E38               	movwf	_vscp_timer,c	;volatile
 17811  005D32                     L129:
 17812                           
 17813                           ; BSR set to: 0
 17814                           ;vscp_firmware.c: 282: vscp_probe_cnt = 0;
 17815  005D32  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17816  005D34  0E00               	movlw	0
 17817  005D36  0100               	movlb	0	; () banked
 17818  005D38  0100               	movlb	0	; () banked
 17819  005D3A  6FEF               	movwf	_vscp_probe_cnt& (0+255),b
 17820  005D3C  D026               	goto	L131
 17821  005D3E                     l1161:
 17822                           
 17823                           ; BSR set to: 0
 17824                           ;vscp_firmware.c: 285: else {
 17825                           ;vscp_firmware.c: 288: vscp_nickname = vscp_probe_address;
 17826  005D3E  C03C  F0EC         	movff	_vscp_probe_address,_vscp_nickname
 17827                           
 17828                           ; BSR set to: 0
 17829                           ;vscp_firmware.c: 289: vscp_node_state = 0x03;
 17830  005D42  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17831  005D44  0E03               	movlw	3
 17832  005D46  0100               	movlb	0	; () banked
 17833  005D48  0100               	movlb	0	; () banked
 17834  005D4A  6FED               	movwf	_vscp_node_state& (0+255),b
 17835  005D4C  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 17836                           
 17837                           ;vscp_firmware.c: 290: vscp_node_substate = 0x00;
 17838  005D4E  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17839  005D50  0E00               	movlw	0
 17840  005D52  0100               	movlb	0	; () banked
 17841  005D54  0100               	movlb	0	; () banked
 17842  005D56  6FEE               	movwf	_vscp_node_substate& (0+255),b
 17843  005D58  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 17844                           
 17845                           ; BSR set to: 0
 17846                           ;vscp_firmware.c: 291: vscp_writeNicknamePermanent(vscp_nickname);
 17847  005D5A  C0EC  F01B         	movff	_vscp_nickname,?_vscp_writeNicknamePermanent
 17848  005D5E  ECB2  F036         	call	_vscp_writeNicknamePermanent	;wreg free
 17849                           
 17850                           ;vscp_firmware.c: 292: vscp_setSegmentCRC(0x40);
 17851  005D62  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17852  005D64  0E40               	movlw	64
 17853  005D66  6E1B               	movwf	?_vscp_setSegmentCRC,c
 17854  005D68  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 17855  005D6A  ECA7  F036         	call	_vscp_setSegmentCRC	;wreg free
 17856                           
 17857                           ;vscp_firmware.c: 295: vscp_probe_cnt = 0;
 17858  005D6E  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17859  005D70  0E00               	movlw	0
 17860  005D72  0100               	movlb	0	; () banked
 17861  005D74  0100               	movlb	0	; () banked
 17862  005D76  6FEF               	movwf	_vscp_probe_cnt& (0+255),b
 17863  005D78  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 17864                           
 17865                           ; BSR set to: 0
 17866                           ;vscp_firmware.c: 296: vscp_goActiveState();
 17867  005D7A  ECF2  F035         	call	_vscp_goActiveState	;wreg free
 17868  005D7E  D013               	goto	l9393
 17869  005D80                     l9387:
 17870                           
 17871                           ; BSR set to: 0
 17872                           ;vscp_firmware.c: 312: vscp_node_substate = 0x00;
 17873  005D80  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17874  005D82  0E00               	movlw	0
 17875  005D84  0100               	movlb	0	; () banked
 17876  005D86  0100               	movlb	0	; () banked
 17877  005D88  6FEE               	movwf	_vscp_node_substate& (0+255),b
 17878  005D8A                     L131:
 17879  005D8A  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 17880                           
 17881                           ;vscp_firmware.c: 313: break;
 17882  005D8C  D00C               	goto	l9393
 17883  005D8E                     l9391:
 17884  005D8E  0100               	movlb	0	; () banked
 17885  005D90  0100               	movlb	0	; () banked
 17886  005D92  51EE               	movf	_vscp_node_substate& (0+255),w,b
 17887                           
 17888                           ; Switch size 1, requested type "space"
 17889                           ; Number of cases is 3, Range of values is 0 to 2
 17890                           ; switch strategies available:
 17891                           ; Name         Instructions Cycles
 17892                           ; simple_byte           10     6 (average)
 17893                           ;	Chosen strategy is simple_byte
 17894  005D94  0A00               	xorlw	0	; case 0
 17895  005D96  B4D8               	btfsc	status,2,c
 17896  005D98  D755               	goto	l9319
 17897  005D9A  0A01               	xorlw	1	; case 1
 17898  005D9C  B4D8               	btfsc	status,2,c
 17899  005D9E  D789               	goto	l1153
 17900  005DA0  0A03               	xorlw	3	; case 2
 17901  005DA2  A4D8               	btfss	status,2,c
 17902  005DA4  D7ED               	goto	l9387
 17903  005DA6                     l9393:
 17904                           
 17905                           ;vscp_firmware.c: 316: vscp_imsg.flags = 0;
 17906  005DA6  6E32               	movwf	??_vscp_handleProbeState& (0+255),c
 17907  005DA8  0E00               	movlw	0
 17908  005DAA  0100               	movlb	0	; () banked
 17909  005DAC  0100               	movlb	0	; () banked
 17910  005DAE  6FF1               	movwf	_vscp_imsg& (0+255),b
 17911  005DB0  5032               	movf	??_vscp_handleProbeState& (0+255),w,c
 17912                           
 17913                           ; BSR set to: 0
 17914  005DB2  0012               	return	
 17915  005DB4                     __end_of_vscp_handleProbeState:
 17916                           	opt stack 0
 17917                           tblptru	equ	0xFF8
 17918                           tblptrh	equ	0xFF7
 17919                           tblptrl	equ	0xFF6
 17920                           tablat	equ	0xFF5
 17921                           prodh	equ	0xFF4
 17922                           prodl	equ	0xFF3
 17923                           postinc0	equ	0xFEE
 17924                           wreg	equ	0xFE8
 17925                           indf2	equ	0xFDF
 17926                           postinc2	equ	0xFDE
 17927                           postdec2	equ	0xFDD
 17928                           fsr2h	equ	0xFDA
 17929                           fsr2l	equ	0xFD9
 17930                           status	equ	0xFD8
 17931                           
 17932 ;; *************** function _vscp_goActiveState *****************
 17933 ;; Defined at:
 17934 ;;		line 358 in file "../../vscp_firmware/common/vscp_firmware.c"
 17935 ;; Parameters:    Size  Location     Type
 17936 ;;		None
 17937 ;; Auto vars:     Size  Location     Type
 17938 ;;		None
 17939 ;; Return value:  Size  Location     Type
 17940 ;;		None               void
 17941 ;; Registers used:
 17942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 17943 ;; Tracked objects:
 17944 ;;		On entry : 0/0
 17945 ;;		On exit  : 0/0
 17946 ;;		Unchanged: 0/0
 17947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17948 ;;      Params:         0       0       0       0       0       0       0
 17949 ;;      Locals:         0       0       0       0       0       0       0
 17950 ;;      Temps:          1       0       0       0       0       0       0
 17951 ;;      Totals:         1       0       0       0       0       0       0
 17952 ;;Total ram usage:        1 bytes
 17953 ;; Hardware stack levels used:    1
 17954 ;; Hardware stack levels required when called:    7
 17955 ;; This function calls:
 17956 ;;		_vscp_sendEvent
 17957 ;; This function is called by:
 17958 ;;		_main
 17959 ;;		_vscp_handleProbeState
 17960 ;; This function uses a non-reentrant model
 17961 ;;
 17962                           
 17963                           	psect	text49
 17964  006BE4                     __ptext49:
 17965                           	opt stack 0
 17966  006BE4                     _vscp_goActiveState:
 17967                           	opt stack 21
 17968                           
 17969                           ;vscp_firmware.c: 359: vscp_omsg.flags = 0x80 + 1;
 17970                           
 17971                           ; BSR set to: 0
 17972                           ;incstack = 0
 17973                           ;incstack = 0
 17974  006BE4  6E31               	movwf	??_vscp_goActiveState& (0+255),c
 17975  006BE6  0E81               	movlw	129
 17976  006BE8  6E3E               	movwf	_vscp_omsg,c
 17977  006BEA  5031               	movf	??_vscp_goActiveState& (0+255),w,c
 17978                           
 17979                           ;vscp_firmware.c: 360: vscp_omsg.priority = 0x00;
 17980  006BEC  6E31               	movwf	??_vscp_goActiveState& (0+255),c
 17981  006BEE  0E00               	movlw	0
 17982  006BF0  6E3F               	movwf	_vscp_omsg+1,c
 17983  006BF2  5031               	movf	??_vscp_goActiveState& (0+255),w,c
 17984                           
 17985                           ;vscp_firmware.c: 361: vscp_omsg.vscp_class = 0;
 17986  006BF4  0E00               	movlw	0
 17987  006BF6  6E41               	movwf	_vscp_omsg+3,c
 17988  006BF8  0E00               	movlw	0
 17989  006BFA  6E40               	movwf	_vscp_omsg+2,c
 17990                           
 17991                           ;vscp_firmware.c: 362: vscp_omsg.vscp_type = 2;
 17992  006BFC  6E31               	movwf	??_vscp_goActiveState& (0+255),c
 17993  006BFE  0E02               	movlw	2
 17994  006C00  6E42               	movwf	_vscp_omsg+4,c
 17995  006C02  5031               	movf	??_vscp_goActiveState& (0+255),w,c
 17996                           
 17997                           ;vscp_firmware.c: 363: vscp_omsg.data[ 0 ] = vscp_nickname;
 17998  006C04  C0EC  F043         	movff	_vscp_nickname,_vscp_omsg+5
 17999                           
 18000                           ;vscp_firmware.c: 366: vscp_sendEvent();
 18001  006C08  EC46  F035         	call	_vscp_sendEvent	;wreg free
 18002                           
 18003                           ;vscp_firmware.c: 368: vscp_initledfunc = 0x01;
 18004  006C0C  6E31               	movwf	??_vscp_goActiveState& (0+255),c
 18005  006C0E  0E01               	movlw	1
 18006  006C10  6E3B               	movwf	_vscp_initledfunc,c
 18007  006C12  5031               	movf	??_vscp_goActiveState& (0+255),w,c
 18008  006C14  0012               	return	
 18009  006C16                     __end_of_vscp_goActiveState:
 18010                           	opt stack 0
 18011                           tblptru	equ	0xFF8
 18012                           tblptrh	equ	0xFF7
 18013                           tblptrl	equ	0xFF6
 18014                           tablat	equ	0xFF5
 18015                           prodh	equ	0xFF4
 18016                           prodl	equ	0xFF3
 18017                           postinc0	equ	0xFEE
 18018                           wreg	equ	0xFE8
 18019                           indf2	equ	0xFDF
 18020                           postinc2	equ	0xFDE
 18021                           postdec2	equ	0xFDD
 18022                           fsr2h	equ	0xFDA
 18023                           fsr2l	equ	0xFD9
 18024                           status	equ	0xFD8
 18025                           
 18026 ;; *************** function _vscp_sendEvent *****************
 18027 ;; Defined at:
 18028 ;;		line 1288 in file "../../vscp_firmware/common/vscp_firmware.c"
 18029 ;; Parameters:    Size  Location     Type
 18030 ;;		None
 18031 ;; Auto vars:     Size  Location     Type
 18032 ;;  rv              1   47[COMRAM] unsigned char 
 18033 ;; Return value:  Size  Location     Type
 18034 ;;                  1    wreg      unsigned char 
 18035 ;; Registers used:
 18036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 18037 ;; Tracked objects:
 18038 ;;		On entry : 0/0
 18039 ;;		On exit  : 0/0
 18040 ;;		Unchanged: 0/0
 18041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18042 ;;      Params:         0       0       0       0       0       0       0
 18043 ;;      Locals:         1       0       0       0       0       0       0
 18044 ;;      Temps:          0       0       0       0       0       0       0
 18045 ;;      Totals:         1       0       0       0       0       0       0
 18046 ;;Total ram usage:        1 bytes
 18047 ;; Hardware stack levels used:    1
 18048 ;; Hardware stack levels required when called:    6
 18049 ;; This function calls:
 18050 ;;		_sendVSCPFrame
 18051 ;; This function is called by:
 18052 ;;		_vscp_handleProbeState
 18053 ;;		_vscp_goActiveState
 18054 ;;		_vscp_sendHeartBeat
 18055 ;;		_vscp_newNodeOnline
 18056 ;;		_vscp_handleProtocolEvent
 18057 ;;		_sendDMatrixInfo
 18058 ;;		_vscp_getEmbeddedMdfInfo
 18059 ;; This function uses a non-reentrant model
 18060 ;;
 18061                           
 18062                           	psect	text50
 18063  006A8C                     __ptext50:
 18064                           	opt stack 0
 18065  006A8C                     _vscp_sendEvent:
 18066                           	opt stack 21
 18067                           
 18068                           ;vscp_firmware.c: 1289: int8_t rv;
 18069                           ;vscp_firmware.c: 1291: if ( !(rv = sendVSCPFrame( vscp_omsg.vscp_class,
 18070                           ;vscp_firmware.c: 1292: vscp_omsg.vscp_type,
 18071                           ;vscp_firmware.c: 1293: vscp_nickname,
 18072                           ;vscp_firmware.c: 1294: vscp_omsg.priority,
 18073                           ;vscp_firmware.c: 1295: (vscp_omsg.flags & 0x0f),
 18074                           ;vscp_firmware.c: 1296: vscp_omsg.data ) ) ) {
 18075                           
 18076                           ;incstack = 0
 18077                           ;incstack = 0
 18078  006A8C  C040  F083         	movff	_vscp_omsg+2,?_sendVSCPFrame
 18079  006A90  C041  F084         	movff	_vscp_omsg+3,?_sendVSCPFrame+1
 18080  006A94  C042  F085         	movff	_vscp_omsg+4,?_sendVSCPFrame+2
 18081  006A98  C0EC  F086         	movff	_vscp_nickname,?_sendVSCPFrame+3
 18082  006A9C  C03F  F087         	movff	_vscp_omsg+1,?_sendVSCPFrame+4
 18083  006AA0  503E               	movf	_vscp_omsg,w,c
 18084  006AA2  0B0F               	andlw	15
 18085  006AA4  0100               	movlb	0	; () banked
 18086  006AA6  0100               	movlb	0	; () banked
 18087  006AA8  6F88               	movwf	(?_sendVSCPFrame+5)& (0+255),b
 18088  006AAA  0E00               	movlw	high (_vscp_omsg+5)
 18089  006AAC  0100               	movlb	0	; () banked
 18090  006AAE  0100               	movlb	0	; () banked
 18091  006AB0  6F8A               	movwf	(?_sendVSCPFrame+7)& (0+255),b
 18092  006AB2  0E43               	movlw	low (_vscp_omsg+5)
 18093  006AB4  0100               	movlb	0	; () banked
 18094  006AB6  6F89               	movwf	(?_sendVSCPFrame+6)& (0+255),b
 18095  006AB8  EC7B  F031         	call	_sendVSCPFrame	;wreg free
 18096  006ABC  6E30               	movwf	vscp_sendEvent@rv,c
 18097  006ABE  6630               	tstfsz	vscp_sendEvent@rv& (0+255),c
 18098  006AC0  D003               	goto	l1381
 18099                           
 18100                           ;vscp_firmware.c: 1297: vscp_errorcnt++;
 18101  006AC2  0100               	movlb	0	; () banked
 18102  006AC4  0100               	movlb	0	; () banked
 18103  006AC6  2BE8               	incf	_vscp_errorcnt& (0+255),f,b
 18104  006AC8                     l1381:
 18105  006AC8  0012               	return	
 18106  006ACA                     __end_of_vscp_sendEvent:
 18107                           	opt stack 0
 18108                           tblptru	equ	0xFF8
 18109                           tblptrh	equ	0xFF7
 18110                           tblptrl	equ	0xFF6
 18111                           tablat	equ	0xFF5
 18112                           prodh	equ	0xFF4
 18113                           prodl	equ	0xFF3
 18114                           postinc0	equ	0xFEE
 18115                           wreg	equ	0xFE8
 18116                           indf2	equ	0xFDF
 18117                           postinc2	equ	0xFDE
 18118                           postdec2	equ	0xFDD
 18119                           fsr2h	equ	0xFDA
 18120                           fsr2l	equ	0xFD9
 18121                           status	equ	0xFD8
 18122                           
 18123 ;; *************** function _sendVSCPFrame *****************
 18124 ;; Defined at:
 18125 ;;		line 3063 in file "../main.c"
 18126 ;; Parameters:    Size  Location     Type
 18127 ;;  vscpclass       2   35[BANK0 ] unsigned short 
 18128 ;;  vscptype        1   37[BANK0 ] unsigned char 
 18129 ;;  nodeid          1   38[BANK0 ] unsigned char 
 18130 ;;  priority        1   39[BANK0 ] unsigned char 
 18131 ;;  size            1   40[BANK0 ] unsigned char 
 18132 ;;  pData           2   41[BANK0 ] PTR unsigned char 
 18133 ;;		 -> SendInformationEvent@data(3), vscp_omsg(13), 
 18134 ;; Auto vars:     Size  Location     Type
 18135 ;;  id              4   43[COMRAM] unsigned long 
 18136 ;; Return value:  Size  Location     Type
 18137 ;;                  1    wreg      unsigned char 
 18138 ;; Registers used:
 18139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18140 ;; Tracked objects:
 18141 ;;		On entry : 0/0
 18142 ;;		On exit  : 0/0
 18143 ;;		Unchanged: 0/0
 18144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18145 ;;      Params:         0       8       0       0       0       0       0
 18146 ;;      Locals:         4       0       0       0       0       0       0
 18147 ;;      Temps:          0      20       0       0       0       0       0
 18148 ;;      Totals:         4      28       0       0       0       0       0
 18149 ;;Total ram usage:       32 bytes
 18150 ;; Hardware stack levels used:    1
 18151 ;; Hardware stack levels required when called:    5
 18152 ;; This function calls:
 18153 ;;		_sendCANFrame
 18154 ;; This function is called by:
 18155 ;;		_SendInformationEvent
 18156 ;;		_vscp_sendEvent
 18157 ;; This function uses a non-reentrant model
 18158 ;;
 18159                           
 18160                           	psect	text51
 18161  0062F6                     __ptext51:
 18162                           	opt stack 0
 18163  0062F6                     _sendVSCPFrame:
 18164                           	opt stack 21
 18165                           
 18166                           ;main.c: 3064: uint32_t id = ( (uint32_t)priority << 26 ) |
 18167                           ;main.c: 3065: ( (uint32_t)vscpclass << 16 ) |
 18168                           ;main.c: 3066: ( (uint32_t)vscptype << 8 ) |
 18169                           ;main.c: 3067: nodeid;
 18170                           
 18171                           ;incstack = 0
 18172                           ;incstack = 0
 18173  0062F6  0100               	movlb	0	; () banked
 18174  0062F8  C085  F08B         	movff	sendVSCPFrame@vscptype,??_sendVSCPFrame
 18175  0062FC  0100               	movlb	0	; () banked
 18176  0062FE  6B8C               	clrf	(??_sendVSCPFrame+1)& (0+255),b
 18177  006300  6B8D               	clrf	(??_sendVSCPFrame+2)& (0+255),b
 18178  006302  6B8E               	clrf	(??_sendVSCPFrame+3)& (0+255),b
 18179  006304  C08D  F08E         	movff	??_sendVSCPFrame+2,??_sendVSCPFrame+3
 18180  006308  C08C  F08D         	movff	??_sendVSCPFrame+1,??_sendVSCPFrame+2
 18181  00630C  C08B  F08C         	movff	??_sendVSCPFrame,??_sendVSCPFrame+1
 18182  006310  0100               	movlb	0	; () banked
 18183  006312  6B8B               	clrf	??_sendVSCPFrame& (0+255),b
 18184  006314  0100               	movlb	0	; () banked
 18185  006316  0100               	movlb	0	; () banked
 18186  006318  5183               	movf	sendVSCPFrame@vscpclass& (0+255),w,b
 18187  00631A  0100               	movlb	0	; () banked
 18188  00631C  6F8F               	movwf	(??_sendVSCPFrame+4)& (0+255),b
 18189  00631E  0100               	movlb	0	; () banked
 18190  006320  0100               	movlb	0	; () banked
 18191  006322  5184               	movf	(sendVSCPFrame@vscpclass+1)& (0+255),w,b
 18192  006324  0100               	movlb	0	; () banked
 18193  006326  6F90               	movwf	(??_sendVSCPFrame+5)& (0+255),b
 18194  006328  0100               	movlb	0	; () banked
 18195  00632A  6B91               	clrf	(??_sendVSCPFrame+6)& (0+255),b
 18196  00632C  0100               	movlb	0	; () banked
 18197  00632E  6B92               	clrf	(??_sendVSCPFrame+7)& (0+255),b
 18198  006330  C090  F092         	movff	??_sendVSCPFrame+5,??_sendVSCPFrame+7
 18199  006334  C08F  F091         	movff	??_sendVSCPFrame+4,??_sendVSCPFrame+6
 18200  006338  0100               	movlb	0	; () banked
 18201  00633A  6B90               	clrf	(??_sendVSCPFrame+5)& (0+255),b
 18202  00633C  6B8F               	clrf	(??_sendVSCPFrame+4)& (0+255),b
 18203  00633E  0100               	movlb	0	; () banked
 18204  006340  C087  F093         	movff	sendVSCPFrame@priority,??_sendVSCPFrame+8
 18205  006344  0100               	movlb	0	; () banked
 18206  006346  6B94               	clrf	(??_sendVSCPFrame+9)& (0+255),b
 18207  006348  6B95               	clrf	(??_sendVSCPFrame+10)& (0+255),b
 18208  00634A  6B96               	clrf	(??_sendVSCPFrame+11)& (0+255),b
 18209  00634C  0E1A               	movlw	26
 18210  00634E                     u13255:
 18211  00634E  90D8               	bcf	status,0,c
 18212  006350  0100               	movlb	0	; () banked
 18213  006352  3793               	rlcf	(??_sendVSCPFrame+8)& (0+255),f,b
 18214  006354  3794               	rlcf	(??_sendVSCPFrame+9)& (0+255),f,b
 18215  006356  3795               	rlcf	(??_sendVSCPFrame+10)& (0+255),f,b
 18216  006358  3796               	rlcf	(??_sendVSCPFrame+11)& (0+255),f,b
 18217  00635A  2EE8               	decfsz	wreg,f,c
 18218  00635C  D7F8               	goto	u13255
 18219  00635E  0100               	movlb	0	; () banked
 18220  006360  518F               	movf	(??_sendVSCPFrame+4)& (0+255),w,b
 18221  006362  0100               	movlb	0	; () banked
 18222  006364  1193               	iorwf	(??_sendVSCPFrame+8)& (0+255),w,b
 18223  006366  0100               	movlb	0	; () banked
 18224  006368  6F97               	movwf	(??_sendVSCPFrame+12)& (0+255),b
 18225  00636A  0100               	movlb	0	; () banked
 18226  00636C  5190               	movf	(??_sendVSCPFrame+5)& (0+255),w,b
 18227  00636E  0100               	movlb	0	; () banked
 18228  006370  1194               	iorwf	(??_sendVSCPFrame+9)& (0+255),w,b
 18229  006372  0100               	movlb	0	; () banked
 18230  006374  6F98               	movwf	(??_sendVSCPFrame+13)& (0+255),b
 18231  006376  0100               	movlb	0	; () banked
 18232  006378  5191               	movf	(??_sendVSCPFrame+6)& (0+255),w,b
 18233  00637A  0100               	movlb	0	; () banked
 18234  00637C  1195               	iorwf	(??_sendVSCPFrame+10)& (0+255),w,b
 18235  00637E  0100               	movlb	0	; () banked
 18236  006380  6F99               	movwf	(??_sendVSCPFrame+14)& (0+255),b
 18237  006382  0100               	movlb	0	; () banked
 18238  006384  5192               	movf	(??_sendVSCPFrame+7)& (0+255),w,b
 18239  006386  0100               	movlb	0	; () banked
 18240  006388  1196               	iorwf	(??_sendVSCPFrame+11)& (0+255),w,b
 18241  00638A  0100               	movlb	0	; () banked
 18242  00638C  6F9A               	movwf	(??_sendVSCPFrame+15)& (0+255),b
 18243  00638E  0100               	movlb	0	; () banked
 18244  006390  518B               	movf	??_sendVSCPFrame& (0+255),w,b
 18245  006392  0100               	movlb	0	; () banked
 18246  006394  1197               	iorwf	(??_sendVSCPFrame+12)& (0+255),w,b
 18247  006396  0100               	movlb	0	; () banked
 18248  006398  6F9B               	movwf	(??_sendVSCPFrame+16)& (0+255),b
 18249  00639A  0100               	movlb	0	; () banked
 18250  00639C  518C               	movf	(??_sendVSCPFrame+1)& (0+255),w,b
 18251  00639E  0100               	movlb	0	; () banked
 18252  0063A0  1198               	iorwf	(??_sendVSCPFrame+13)& (0+255),w,b
 18253  0063A2  0100               	movlb	0	; () banked
 18254  0063A4  6F9C               	movwf	(??_sendVSCPFrame+17)& (0+255),b
 18255  0063A6  0100               	movlb	0	; () banked
 18256  0063A8  518D               	movf	(??_sendVSCPFrame+2)& (0+255),w,b
 18257  0063AA  0100               	movlb	0	; () banked
 18258  0063AC  1199               	iorwf	(??_sendVSCPFrame+14)& (0+255),w,b
 18259  0063AE  0100               	movlb	0	; () banked
 18260  0063B0  6F9D               	movwf	(??_sendVSCPFrame+18)& (0+255),b
 18261  0063B2  0100               	movlb	0	; () banked
 18262  0063B4  518E               	movf	(??_sendVSCPFrame+3)& (0+255),w,b
 18263  0063B6  0100               	movlb	0	; () banked
 18264  0063B8  119A               	iorwf	(??_sendVSCPFrame+15)& (0+255),w,b
 18265  0063BA  0100               	movlb	0	; () banked
 18266  0063BC  6F9E               	movwf	(??_sendVSCPFrame+19)& (0+255),b
 18267  0063BE  0100               	movlb	0	; () banked
 18268  0063C0  0100               	movlb	0	; () banked
 18269  0063C2  5186               	movf	sendVSCPFrame@nodeid& (0+255),w,b
 18270  0063C4  0100               	movlb	0	; () banked
 18271  0063C6  119B               	iorwf	(??_sendVSCPFrame+16)& (0+255),w,b
 18272  0063C8  6E2C               	movwf	sendVSCPFrame@id,c
 18273  0063CA  0100               	movlb	0	; () banked
 18274  0063CC  519C               	movf	(??_sendVSCPFrame+17)& (0+255),w,b
 18275  0063CE  6E2D               	movwf	sendVSCPFrame@id+1,c
 18276  0063D0  0100               	movlb	0	; () banked
 18277  0063D2  519D               	movf	(??_sendVSCPFrame+18)& (0+255),w,b
 18278  0063D4  6E2E               	movwf	sendVSCPFrame@id+2,c
 18279  0063D6  0100               	movlb	0	; () banked
 18280  0063D8  519E               	movf	(??_sendVSCPFrame+19)& (0+255),w,b
 18281  0063DA  6E2F               	movwf	sendVSCPFrame@id+3,c
 18282                           
 18283                           ; BSR set to: 0
 18284                           ;main.c: 3069: if ( !sendCANFrame( id, size, pData ) ) {
 18285  0063DC  C02C  F07C         	movff	sendVSCPFrame@id,?_sendCANFrame
 18286  0063E0  C02D  F07D         	movff	sendVSCPFrame@id+1,?_sendCANFrame+1
 18287  0063E4  C02E  F07E         	movff	sendVSCPFrame@id+2,?_sendCANFrame+2
 18288  0063E8  C02F  F07F         	movff	sendVSCPFrame@id+3,?_sendCANFrame+3
 18289  0063EC  C088  F080         	movff	sendVSCPFrame@size,?_sendCANFrame+4
 18290  0063F0  C089  F081         	movff	sendVSCPFrame@pData,?_sendCANFrame+5
 18291  0063F4  C08A  F082         	movff	sendVSCPFrame@pData+1,?_sendCANFrame+6
 18292  0063F8  EC80  F034         	call	_sendCANFrame	;wreg free
 18293  0063FC  0900               	iorlw	0
 18294  0063FE  A4D8               	btfss	status,2,c
 18295  006400  D002               	goto	l10891
 18296                           
 18297                           ;main.c: 3070: return 0;
 18298  006402  0E00               	movlw	0
 18299  006404  D001               	goto	l996
 18300  006406                     l10891:
 18301                           
 18302                           ;main.c: 3071: }
 18303                           ;main.c: 3073: return 1;
 18304  006406  0E01               	movlw	1
 18305  006408                     l996:
 18306  006408  0012               	return	
 18307  00640A                     __end_of_sendVSCPFrame:
 18308                           	opt stack 0
 18309                           tblptru	equ	0xFF8
 18310                           tblptrh	equ	0xFF7
 18311                           tblptrl	equ	0xFF6
 18312                           tablat	equ	0xFF5
 18313                           prodh	equ	0xFF4
 18314                           prodl	equ	0xFF3
 18315                           postinc0	equ	0xFEE
 18316                           wreg	equ	0xFE8
 18317                           indf2	equ	0xFDF
 18318                           postinc2	equ	0xFDE
 18319                           postdec2	equ	0xFDD
 18320                           fsr2h	equ	0xFDA
 18321                           fsr2l	equ	0xFD9
 18322                           status	equ	0xFD8
 18323                           
 18324 ;; *************** function _sendCANFrame *****************
 18325 ;; Defined at:
 18326 ;;		line 3108 in file "../main.c"
 18327 ;; Parameters:    Size  Location     Type
 18328 ;;  id              4   28[BANK0 ] unsigned long 
 18329 ;;  dlc             1   32[BANK0 ] unsigned char 
 18330 ;;  pdata           2   33[BANK0 ] PTR unsigned char 
 18331 ;;		 -> SendInformationEvent@data(3), vscp_omsg(13), 
 18332 ;; Auto vars:     Size  Location     Type
 18333 ;;  rv              1   42[COMRAM] unsigned char 
 18334 ;; Return value:  Size  Location     Type
 18335 ;;                  1    wreg      unsigned char 
 18336 ;; Registers used:
 18337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18338 ;; Tracked objects:
 18339 ;;		On entry : 0/0
 18340 ;;		On exit  : 0/0
 18341 ;;		Unchanged: 0/0
 18342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18343 ;;      Params:         0       7       0       0       0       0       0
 18344 ;;      Locals:         1       0       0       0       0       0       0
 18345 ;;      Temps:          1       0       0       0       0       0       0
 18346 ;;      Totals:         2       7       0       0       0       0       0
 18347 ;;Total ram usage:        9 bytes
 18348 ;; Hardware stack levels used:    1
 18349 ;; Hardware stack levels required when called:    4
 18350 ;; This function calls:
 18351 ;;		_ECANSendMessage
 18352 ;; This function is called by:
 18353 ;;		_sendVSCPFrame
 18354 ;; This function uses a non-reentrant model
 18355 ;;
 18356                           
 18357                           	psect	text52
 18358  006900                     __ptext52:
 18359                           	opt stack 0
 18360  006900                     _sendCANFrame:
 18361                           	opt stack 21
 18362                           
 18363                           ;main.c: 3109: uint8_t rv = 0;
 18364                           
 18365                           ;incstack = 0
 18366                           ;incstack = 0
 18367  006900  6E2A               	movwf	??_sendCANFrame& (0+255),c
 18368  006902  0E00               	movlw	0
 18369  006904  6E2B               	movwf	sendCANFrame@rv,c
 18370  006906  502A               	movf	??_sendCANFrame& (0+255),w,c
 18371                           
 18372                           ;main.c: 3110: sendTimer = 0;
 18373  006908  6E2A               	movwf	??_sendCANFrame& (0+255),c
 18374  00690A  0E00               	movlw	0
 18375  00690C  0100               	movlb	0	; () banked
 18376  00690E  0100               	movlb	0	; () banked
 18377  006910  6FE6               	movwf	_sendTimer& (0+255),b
 18378  006912  502A               	movf	??_sendCANFrame& (0+255),w,c
 18379                           
 18380                           ;main.c: 3112: while ( sendTimer < 1 ) {
 18381  006914  D01C               	goto	l11321
 18382  006916                     l11317:
 18383                           
 18384                           ; BSR set to: 0
 18385                           ;main.c: 3113: if ( ECANSendMessage( id, pdata, dlc, ECAN_TX_XTD_FRAME ) ) {
 18386  006916  C07C  F021         	movff	sendCANFrame@id,?_ECANSendMessage
 18387  00691A  C07D  F022         	movff	sendCANFrame@id+1,?_ECANSendMessage+1
 18388  00691E  C07E  F023         	movff	sendCANFrame@id+2,?_ECANSendMessage+2
 18389  006922  C07F  F024         	movff	sendCANFrame@id+3,?_ECANSendMessage+3
 18390  006926  C081  F025         	movff	sendCANFrame@pdata,?_ECANSendMessage+4
 18391  00692A  C082  F026         	movff	sendCANFrame@pdata+1,?_ECANSendMessage+5
 18392  00692E  C080  F027         	movff	sendCANFrame@dlc,?_ECANSendMessage+6
 18393  006932  6E2A               	movwf	??_sendCANFrame& (0+255),c
 18394  006934  0E20               	movlw	32
 18395  006936  6E28               	movwf	?_ECANSendMessage+7,c
 18396  006938  502A               	movf	??_sendCANFrame& (0+255),w,c
 18397  00693A  EC0A  F027         	call	_ECANSendMessage	;wreg free
 18398  00693E  0900               	iorlw	0
 18399  006940  B4D8               	btfsc	status,2,c
 18400  006942  D005               	goto	l11321
 18401                           
 18402                           ;main.c: 3114: rv = 1;
 18403  006944  6E2A               	movwf	??_sendCANFrame& (0+255),c
 18404  006946  0E01               	movlw	1
 18405  006948  6E2B               	movwf	sendCANFrame@rv,c
 18406  00694A  502A               	movf	??_sendCANFrame& (0+255),w,c
 18407                           
 18408                           ;main.c: 3115: break;
 18409  00694C  D005               	goto	l11323
 18410  00694E                     l11321:
 18411  00694E  0100               	movlb	0	; () banked
 18412  006950  0100               	movlb	0	; () banked
 18413  006952  51E6               	movf	_sendTimer& (0+255),w,b
 18414  006954  B4D8               	btfsc	status,2,c
 18415  006956  D7DF               	goto	l11317
 18416  006958                     l11323:
 18417                           
 18418                           ;main.c: 3116: }
 18419                           ;main.c: 3117: }
 18420                           ;main.c: 3119: vscp_omsg.flags = 0;
 18421  006958  6E2A               	movwf	??_sendCANFrame& (0+255),c
 18422  00695A  0E00               	movlw	0
 18423  00695C  6E3E               	movwf	_vscp_omsg,c
 18424  00695E  502A               	movf	??_sendCANFrame& (0+255),w,c
 18425                           
 18426                           ;main.c: 3121: return rv;
 18427  006960  502B               	movf	sendCANFrame@rv,w,c
 18428  006962  0012               	return	
 18429  006964                     __end_of_sendCANFrame:
 18430                           	opt stack 0
 18431                           tblptru	equ	0xFF8
 18432                           tblptrh	equ	0xFF7
 18433                           tblptrl	equ	0xFF6
 18434                           tablat	equ	0xFF5
 18435                           prodh	equ	0xFF4
 18436                           prodl	equ	0xFF3
 18437                           postinc0	equ	0xFEE
 18438                           wreg	equ	0xFE8
 18439                           indf2	equ	0xFDF
 18440                           postinc2	equ	0xFDE
 18441                           postdec2	equ	0xFDD
 18442                           fsr2h	equ	0xFDA
 18443                           fsr2l	equ	0xFD9
 18444                           status	equ	0xFD8
 18445                           
 18446 ;; *************** function _ECANSendMessage *****************
 18447 ;; Defined at:
 18448 ;;		line 617 in file "../ECAN.c"
 18449 ;; Parameters:    Size  Location     Type
 18450 ;;  id              4   32[COMRAM] unsigned long 
 18451 ;;  data            2   36[COMRAM] PTR unsigned char 
 18452 ;;		 -> SendInformationEvent@data(3), vscp_omsg(13), 
 18453 ;;  dataLen         1   38[COMRAM] unsigned char 
 18454 ;;  msgFlags        1   39[COMRAM] enum E16315
 18455 ;; Auto vars:     Size  Location     Type
 18456 ;;  pb             18    0[BANK0 ] PTR unsigned char [9]
 18457 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 18458 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 18459 ;;		 -> B0CON(1), 
 18460 ;;  ptr             2   26[BANK0 ] PTR unsigned char 
 18461 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 18462 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 18463 ;;		 -> B0CON(1), 
 18464 ;;  tempPtr         2   22[BANK0 ] PTR unsigned char 
 18465 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), B5CON(1), 
 18466 ;;		 -> B4CON(1), B3CON(1), B2CON(1), B1CON(1), 
 18467 ;;		 -> B0CON(1), 
 18468 ;;  i               1   25[BANK0 ] unsigned char 
 18469 ;;  temp            1   24[BANK0 ] unsigned char 
 18470 ;;  tempBSEL0       1   21[BANK0 ] struct .
 18471 ;;  j               1   20[BANK0 ] unsigned char 
 18472 ;;  buffers         1   19[BANK0 ] unsigned char 
 18473 ;;  mode            1   18[BANK0 ] unsigned char 
 18474 ;; Return value:  Size  Location     Type
 18475 ;;                  1    wreg      enum E15660
 18476 ;; Registers used:
 18477 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18478 ;; Tracked objects:
 18479 ;;		On entry : 0/0
 18480 ;;		On exit  : 0/0
 18481 ;;		Unchanged: 0/0
 18482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18483 ;;      Params:         8       0       0       0       0       0       0
 18484 ;;      Locals:         0      28       0       0       0       0       0
 18485 ;;      Temps:          1       0       0       0       0       0       0
 18486 ;;      Totals:         9      28       0       0       0       0       0
 18487 ;;Total ram usage:       37 bytes
 18488 ;; Hardware stack levels used:    1
 18489 ;; Hardware stack levels required when called:    3
 18490 ;; This function calls:
 18491 ;;		__CANIDToRegs
 18492 ;; This function is called by:
 18493 ;;		_sendCANFrame
 18494 ;; This function uses a non-reentrant model
 18495 ;;
 18496                           
 18497                           	psect	text53
 18498  004E14                     __ptext53:
 18499                           	opt stack 0
 18500  004E14                     _ECANSendMessage:
 18501                           	opt stack 21
 18502                           
 18503                           ;ECAN.c: 619: BYTE mode;
 18504                           ;ECAN.c: 620: BYTE buffers;
 18505                           ;ECAN.c: 628: BYTE i,j;
 18506                           ;ECAN.c: 629: BYTE *ptr, *tempPtr;
 18507                           ;ECAN.c: 630: BYTE* pb[9];
 18508                           ;ECAN.c: 631: BYTE temp;
 18509                           ;ECAN.c: 634: BYTE_VAL tempBSEL0;
 18510                           ;ECAN.c: 641: pb[0]=(BYTE*)&TXB0CON;
 18511                           
 18512                           ;incstack = 0
 18513                           ;incstack = 0
 18514  004E14  010F               	movlb	15	; () banked
 18515  004E16  0E0F               	movlw	15	;volatile
 18516  004E18  0100               	movlb	0	; () banked
 18517  004E1A  0100               	movlb	0	; () banked
 18518  004E1C  6F61               	movwf	(ECANSendMessage@pb+1)& (0+255),b
 18519  004E1E  010F               	movlb	15	; () banked
 18520  004E20  0E40               	movlw	64	;volatile
 18521  004E22  0100               	movlb	0	; () banked
 18522  004E24  6F60               	movwf	ECANSendMessage@pb& (0+255),b
 18523                           
 18524                           ;ECAN.c: 642: pb[1]=(BYTE*)&TXB1CON;
 18525  004E26  010F               	movlb	15	; () banked
 18526  004E28  0E0F               	movlw	15	;volatile
 18527  004E2A  0100               	movlb	0	; () banked
 18528  004E2C  0100               	movlb	0	; () banked
 18529  004E2E  6F63               	movwf	(ECANSendMessage@pb+3)& (0+255),b
 18530  004E30  010F               	movlb	15	; () banked
 18531  004E32  0E30               	movlw	48	;volatile
 18532  004E34  0100               	movlb	0	; () banked
 18533  004E36  6F62               	movwf	(ECANSendMessage@pb+2)& (0+255),b
 18534                           
 18535                           ;ECAN.c: 643: pb[2]=(BYTE*)&TXB2CON;
 18536  004E38  010F               	movlb	15	; () banked
 18537  004E3A  0E0F               	movlw	15	;volatile
 18538  004E3C  0100               	movlb	0	; () banked
 18539  004E3E  0100               	movlb	0	; () banked
 18540  004E40  6F65               	movwf	(ECANSendMessage@pb+5)& (0+255),b
 18541  004E42  010F               	movlb	15	; () banked
 18542  004E44  0E20               	movlw	32	;volatile
 18543  004E46  0100               	movlb	0	; () banked
 18544  004E48  6F64               	movwf	(ECANSendMessage@pb+4)& (0+255),b
 18545                           
 18546                           ;ECAN.c: 650: pb[3]=(BYTE*)&B0CON;
 18547  004E4A  010E               	movlb	14	; () banked
 18548  004E4C  0E0E               	movlw	14	;volatile
 18549  004E4E  0100               	movlb	0	; () banked
 18550  004E50  0100               	movlb	0	; () banked
 18551  004E52  6F67               	movwf	(ECANSendMessage@pb+7)& (0+255),b
 18552  004E54  010E               	movlb	14	; () banked
 18553  004E56  0E20               	movlw	32	;volatile
 18554  004E58  0100               	movlb	0	; () banked
 18555  004E5A  6F66               	movwf	(ECANSendMessage@pb+6)& (0+255),b
 18556                           
 18557                           ;ECAN.c: 651: pb[4]=(BYTE*)&B1CON;
 18558  004E5C  010E               	movlb	14	; () banked
 18559  004E5E  0E0E               	movlw	14	;volatile
 18560  004E60  0100               	movlb	0	; () banked
 18561  004E62  0100               	movlb	0	; () banked
 18562  004E64  6F69               	movwf	(ECANSendMessage@pb+9)& (0+255),b
 18563  004E66  010E               	movlb	14	; () banked
 18564  004E68  0E30               	movlw	48	;volatile
 18565  004E6A  0100               	movlb	0	; () banked
 18566  004E6C  6F68               	movwf	(ECANSendMessage@pb+8)& (0+255),b
 18567                           
 18568                           ;ECAN.c: 652: pb[5]=(BYTE*)&B2CON;
 18569  004E6E  010E               	movlb	14	; () banked
 18570  004E70  0E0E               	movlw	14	;volatile
 18571  004E72  0100               	movlb	0	; () banked
 18572  004E74  0100               	movlb	0	; () banked
 18573  004E76  6F6B               	movwf	(ECANSendMessage@pb+11)& (0+255),b
 18574  004E78  010E               	movlb	14	; () banked
 18575  004E7A  0E40               	movlw	64	;volatile
 18576  004E7C  0100               	movlb	0	; () banked
 18577  004E7E  6F6A               	movwf	(ECANSendMessage@pb+10)& (0+255),b
 18578                           
 18579                           ;ECAN.c: 653: pb[6]=(BYTE*)&B3CON;
 18580  004E80  010E               	movlb	14	; () banked
 18581  004E82  0E0E               	movlw	14	;volatile
 18582  004E84  0100               	movlb	0	; () banked
 18583  004E86  0100               	movlb	0	; () banked
 18584  004E88  6F6D               	movwf	(ECANSendMessage@pb+13)& (0+255),b
 18585  004E8A  010E               	movlb	14	; () banked
 18586  004E8C  0E50               	movlw	80	;volatile
 18587  004E8E  0100               	movlb	0	; () banked
 18588  004E90  6F6C               	movwf	(ECANSendMessage@pb+12)& (0+255),b
 18589                           
 18590                           ;ECAN.c: 654: pb[7]=(BYTE*)&B4CON;
 18591  004E92  010E               	movlb	14	; () banked
 18592  004E94  0E0E               	movlw	14	;volatile
 18593  004E96  0100               	movlb	0	; () banked
 18594  004E98  0100               	movlb	0	; () banked
 18595  004E9A  6F6F               	movwf	(ECANSendMessage@pb+15)& (0+255),b
 18596  004E9C  010E               	movlb	14	; () banked
 18597  004E9E  0E60               	movlw	96	;volatile
 18598  004EA0  0100               	movlb	0	; () banked
 18599  004EA2  6F6E               	movwf	(ECANSendMessage@pb+14)& (0+255),b
 18600                           
 18601                           ;ECAN.c: 655: pb[8]=(BYTE*)&B5CON;
 18602  004EA4  010E               	movlb	14	; () banked
 18603  004EA6  0E0E               	movlw	14	;volatile
 18604  004EA8  0100               	movlb	0	; () banked
 18605  004EAA  0100               	movlb	0	; () banked
 18606  004EAC  6F71               	movwf	(ECANSendMessage@pb+17)& (0+255),b
 18607  004EAE  010E               	movlb	14	; () banked
 18608  004EB0  0E70               	movlw	112	;volatile
 18609  004EB2  0100               	movlb	0	; () banked
 18610  004EB4  6F70               	movwf	(ECANSendMessage@pb+16)& (0+255),b
 18611                           
 18612                           ; BSR set to: 0
 18613                           ;ECAN.c: 659: mode = ECANCON&0xC0;
 18614  004EB6  5077               	movf	3959,w,c	;volatile
 18615  004EB8  0BC0               	andlw	192
 18616  004EBA  0100               	movlb	0	; () banked
 18617  004EBC  0100               	movlb	0	; () banked
 18618  004EBE  6F72               	movwf	ECANSendMessage@mode& (0+255),b
 18619                           
 18620                           ; BSR set to: 0
 18621                           ;ECAN.c: 660: if ( mode == 0x00 )
 18622  004EC0  0100               	movlb	0	; () banked
 18623  004EC2  0100               	movlb	0	; () banked
 18624  004EC4  6772               	tstfsz	ECANSendMessage@mode& (0+255),b
 18625  004EC6  D003               	goto	l8657
 18626                           
 18627                           ; BSR set to: 0
 18628                           ;ECAN.c: 661: buffers = 2;
 18629  004EC8  6E29               	movwf	??_ECANSendMessage& (0+255),c
 18630  004ECA  0E02               	movlw	2
 18631  004ECC  D002               	goto	L132
 18632  004ECE                     l8657:
 18633                           
 18634                           ; BSR set to: 0
 18635                           ;ECAN.c: 662: else
 18636                           ;ECAN.c: 663: buffers = 8;
 18637  004ECE  6E29               	movwf	??_ECANSendMessage& (0+255),c
 18638  004ED0  0E08               	movlw	8
 18639  004ED2                     L132:
 18640  004ED2  0100               	movlb	0	; () banked
 18641  004ED4  0100               	movlb	0	; () banked
 18642  004ED6  6F73               	movwf	ECANSendMessage@buffers& (0+255),b
 18643  004ED8  5029               	movf	??_ECANSendMessage& (0+255),w,c
 18644                           
 18645                           ; BSR set to: 0
 18646                           ;ECAN.c: 684: tempBSEL0.Val = BSEL0 >> 1;
 18647                           
 18648                           ; BSR set to: 0
 18649  004EDA  010D               	movlb	13	; () banked
 18650  004EDC  010D               	movlb	13	; () banked
 18651  004EDE  90D8               	bcf	status,0,c
 18652  004EE0  31F8               	rrcf	248,w,b	;volatile
 18653  004EE2  0100               	movlb	0	; () banked
 18654  004EE4  0100               	movlb	0	; () banked
 18655  004EE6  6F75               	movwf	ECANSendMessage@tempBSEL0& (0+255),b
 18656                           
 18657                           ; BSR set to: 0
 18658                           ;ECAN.c: 686: for ( i = 0; i < buffers; i++ )
 18659  004EE8  6E29               	movwf	??_ECANSendMessage& (0+255),c
 18660  004EEA  0E00               	movlw	0
 18661  004EEC  0100               	movlb	0	; () banked
 18662  004EEE  0100               	movlb	0	; () banked
 18663  004EF0  6F79               	movwf	ECANSendMessage@i& (0+255),b
 18664  004EF2  5029               	movf	??_ECANSendMessage& (0+255),w,c
 18665  004EF4  D0AB               	goto	l8719
 18666  004EF6                     l8663:
 18667                           
 18668                           ; BSR set to: 0
 18669                           ;ECAN.c: 688: {
 18670                           ;ECAN.c: 693: ptr = pb[i];
 18671  004EF6  0100               	movlb	0	; () banked
 18672  004EF8  0100               	movlb	0	; () banked
 18673  004EFA  5179               	movf	ECANSendMessage@i& (0+255),w,b
 18674  004EFC  0D02               	mullw	2
 18675  004EFE  0100               	movlb	0	; () banked
 18676  004F00  0E60               	movlw	low ECANSendMessage@pb
 18677  004F02  24F3               	addwf	prodl,w,c
 18678  004F04  6ED9               	movwf	fsr2l,c
 18679  004F06  0100               	movlb	0	; () banked
 18680  004F08  0E00               	movlw	high ECANSendMessage@pb
 18681  004F0A  20F4               	addwfc	prodh,w,c
 18682  004F0C  6EDA               	movwf	fsr2h,c
 18683  004F0E  0100               	movlb	0	; () banked
 18684  004F10  CFDE F07A          	movff	postinc2,ECANSendMessage@ptr
 18685  004F14  0100               	movlb	0	; () banked
 18686  004F16  CFDD F07B          	movff	postdec2,ECANSendMessage@ptr+1
 18687                           
 18688                           ; BSR set to: 0
 18689                           ;ECAN.c: 694: tempPtr = ptr;
 18690  004F1A  C07A  F076         	movff	ECANSendMessage@ptr,ECANSendMessage@tempPtr
 18691  004F1E  C07B  F077         	movff	ECANSendMessage@ptr+1,ECANSendMessage@tempPtr+1
 18692                           
 18693                           ; BSR set to: 0
 18694                           ;ECAN.c: 702: if ( i > 2 )
 18695  004F22  0E02               	movlw	2
 18696  004F24  0100               	movlb	0	; () banked
 18697  004F26  0100               	movlb	0	; () banked
 18698  004F28  6579               	cpfsgt	ECANSendMessage@i& (0+255),b
 18699  004F2A  D007               	goto	l8675
 18700                           
 18701                           ; BSR set to: 0
 18702                           ;ECAN.c: 703: {
 18703                           ;ECAN.c: 707: tempBSEL0.Val >>= 1;
 18704  004F2C  0100               	movlb	0	; () banked
 18705  004F2E  90D8               	bcf	status,0,c
 18706  004F30  3375               	rrcf	ECANSendMessage@tempBSEL0& (0+255),f,b
 18707                           
 18708                           ; BSR set to: 0
 18709                           ;ECAN.c: 712: if ( !tempBSEL0.bits.b0 )
 18710  004F32  0100               	movlb	0	; () banked
 18711  004F34  0100               	movlb	0	; () banked
 18712  004F36  A175               	btfss	ECANSendMessage@tempBSEL0& (0+255),0,b
 18713  004F38  D086               	goto	l8717
 18714  004F3A                     l8675:
 18715                           
 18716                           ; BSR set to: 0
 18717                           ;ECAN.c: 714: }
 18718                           ;ECAN.c: 720: if ( !(*ptr & 0x08) )
 18719  004F3A  C07A  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 18720  004F3E  C07B  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 18721  004F42  50DF               	movf	indf2,w,c
 18722  004F44  6E29               	movwf	??_ECANSendMessage& (0+255),c
 18723  004F46  B629               	btfsc	??_ECANSendMessage,3,c
 18724  004F48  D07E               	goto	l8717
 18725                           
 18726                           ; BSR set to: 0
 18727                           ;ECAN.c: 721: {
 18728                           ;ECAN.c: 723: *ptr &= ~ECAN_TX_PRIORITY_BITS;
 18729  004F4A  C07A  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 18730  004F4E  C07B  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 18731  004F52  0EFC               	movlw	252
 18732  004F54  16DF               	andwf	indf2,f,c
 18733                           
 18734                           ; BSR set to: 0
 18735                           ;ECAN.c: 724: *ptr |= msgFlags & ECAN_TX_PRIORITY_BITS;
 18736  004F56  C028  F029         	movff	ECANSendMessage@msgFlags,??_ECANSendMessage
 18737  004F5A  0E03               	movlw	3
 18738  004F5C  1629               	andwf	??_ECANSendMessage,f,c
 18739  004F5E  C07A  FFD9         	movff	ECANSendMessage@ptr,fsr2l
 18740  004F62  C07B  FFDA         	movff	ECANSendMessage@ptr+1,fsr2h
 18741  004F66  5029               	movf	??_ECANSendMessage,w,c
 18742  004F68  12DF               	iorwf	indf2,f,c
 18743                           
 18744                           ; BSR set to: 0
 18745                           ;ECAN.c: 727: if ( msgFlags & ECAN_TX_RTR_BIT )
 18746  004F6A  AC28               	btfss	ECANSendMessage@msgFlags,6,c
 18747  004F6C  D006               	goto	l168
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;ECAN.c: 728: temp = 0x40 | dataLen;
 18751  004F6E  5027               	movf	ECANSendMessage@dataLen,w,c
 18752  004F70  0940               	iorlw	64
 18753  004F72  0100               	movlb	0	; () banked
 18754  004F74  0100               	movlb	0	; () banked
 18755  004F76  6F78               	movwf	ECANSendMessage@temp& (0+255),b
 18756  004F78  D002               	goto	l8685
 18757  004F7A                     l168:
 18758                           
 18759                           ; BSR set to: 0
 18760                           ;ECAN.c: 729: else
 18761                           ;ECAN.c: 730: temp = dataLen;
 18762  004F7A  C027  F078         	movff	ECANSendMessage@dataLen,ECANSendMessage@temp
 18763  004F7E                     l8685:
 18764                           
 18765                           ; BSR set to: 0
 18766                           ;ECAN.c: 732: *(ptr+5) = temp;
 18767  004F7E  0100               	movlb	0	; () banked
 18768  004F80  EE20 F005          	lfsr	2,5
 18769  004F84  0100               	movlb	0	; () banked
 18770  004F86  517A               	movf	ECANSendMessage@ptr& (0+255),w,b
 18771  004F88  26D9               	addwf	fsr2l,f,c
 18772  004F8A  0100               	movlb	0	; () banked
 18773  004F8C  517B               	movf	(ECANSendMessage@ptr+1)& (0+255),w,b
 18774  004F8E  22DA               	addwfc	fsr2h,f,c
 18775  004F90  0100               	movlb	0	; () banked
 18776  004F92  C078  FFDF         	movff	ECANSendMessage@temp,indf2
 18777                           
 18778                           ; BSR set to: 0
 18779                           ;ECAN.c: 735: if ( msgFlags & ECAN_TX_FRAME_BIT )
 18780  004F96  AA28               	btfss	ECANSendMessage@msgFlags,5,c
 18781  004F98  D003               	goto	l8691
 18782                           
 18783                           ; BSR set to: 0
 18784                           ;ECAN.c: 736: temp = 1;
 18785  004F9A  6E29               	movwf	??_ECANSendMessage& (0+255),c
 18786  004F9C  0E01               	movlw	1
 18787  004F9E  D002               	goto	L133
 18788  004FA0                     l8691:
 18789                           
 18790                           ; BSR set to: 0
 18791                           ;ECAN.c: 738: else
 18792                           ;ECAN.c: 739: temp = 0;
 18793  004FA0  6E29               	movwf	??_ECANSendMessage& (0+255),c
 18794  004FA2  0E00               	movlw	0
 18795  004FA4                     L133:
 18796  004FA4  0100               	movlb	0	; () banked
 18797  004FA6  0100               	movlb	0	; () banked
 18798  004FA8  6F78               	movwf	ECANSendMessage@temp& (0+255),b
 18799  004FAA  5029               	movf	??_ECANSendMessage& (0+255),w,c
 18800                           
 18801                           ; BSR set to: 0
 18802                           ;ECAN.c: 742: _CANIDToRegs((BYTE*)(ptr+1), id, temp);
 18803                           
 18804                           ; BSR set to: 0
 18805  004FAC  0E01               	movlw	1
 18806  004FAE  0100               	movlb	0	; () banked
 18807  004FB0  0100               	movlb	0	; () banked
 18808  004FB2  257A               	addwf	ECANSendMessage@ptr& (0+255),w,b
 18809  004FB4  6E16               	movwf	?__CANIDToRegs,c
 18810  004FB6  0E00               	movlw	0
 18811  004FB8  0100               	movlb	0	; () banked
 18812  004FBA  0100               	movlb	0	; () banked
 18813  004FBC  217B               	addwfc	(ECANSendMessage@ptr+1)& (0+255),w,b
 18814  004FBE  6E17               	movwf	?__CANIDToRegs+1,c
 18815  004FC0  C021  F018         	movff	ECANSendMessage@id,?__CANIDToRegs+2
 18816  004FC4  C022  F019         	movff	ECANSendMessage@id+1,?__CANIDToRegs+3
 18817  004FC8  C023  F01A         	movff	ECANSendMessage@id+2,?__CANIDToRegs+4
 18818  004FCC  C024  F01B         	movff	ECANSendMessage@id+3,?__CANIDToRegs+5
 18819  004FD0  C078  F01C         	movff	ECANSendMessage@temp,?__CANIDToRegs+6
 18820  004FD4  EC90  F02F         	call	__CANIDToRegs	;wreg free
 18821                           
 18822                           ;ECAN.c: 745: ptr += 6;
 18823  004FD8  0E06               	movlw	6
 18824  004FDA  0100               	movlb	0	; () banked
 18825  004FDC  0100               	movlb	0	; () banked
 18826  004FDE  277A               	addwf	ECANSendMessage@ptr& (0+255),f,b
 18827  004FE0  0E00               	movlw	0
 18828  004FE2  0100               	movlb	0	; () banked
 18829  004FE4  237B               	addwfc	(ECANSendMessage@ptr+1)& (0+255),f,b
 18830                           
 18831                           ; BSR set to: 0
 18832                           ;ECAN.c: 747: for ( j = 0 ; j < dataLen; j++ )
 18833  004FE6  6E29               	movwf	??_ECANSendMessage& (0+255),c
 18834  004FE8  0E00               	movlw	0
 18835  004FEA  0100               	movlb	0	; () banked
 18836  004FEC  0100               	movlb	0	; () banked
 18837  004FEE  6F74               	movwf	ECANSendMessage@j& (0+255),b
 18838  004FF0  5029               	movf	??_ECANSendMessage& (0+255),w,c
 18839  004FF2  D013               	goto	l8707
 18840  004FF4                     l8699:
 18841                           
 18842                           ; BSR set to: 0
 18843                           ;ECAN.c: 748: *ptr++ = *data++;
 18844  004FF4  C025  FFD9         	movff	ECANSendMessage@data,fsr2l
 18845  004FF8  C026  FFDA         	movff	ECANSendMessage@data+1,fsr2h
 18846  004FFC  C07A  FFE1         	movff	ECANSendMessage@ptr,fsr1l
 18847  005000  C07B  FFE2         	movff	ECANSendMessage@ptr+1,fsr1h
 18848  005004  CFDF FFE7          	movff	indf2,indf1
 18849                           
 18850                           ; BSR set to: 0
 18851  005008  4A25               	infsnz	ECANSendMessage@data,f,c
 18852  00500A  2A26               	incf	ECANSendMessage@data+1,f,c
 18853                           
 18854                           ; BSR set to: 0
 18855  00500C  0100               	movlb	0	; () banked
 18856  00500E  0100               	movlb	0	; () banked
 18857  005010  4B7A               	infsnz	ECANSendMessage@ptr& (0+255),f,b
 18858  005012  2B7B               	incf	(ECANSendMessage@ptr+1)& (0+255),f,b
 18859                           
 18860                           ; BSR set to: 0
 18861  005014  0100               	movlb	0	; () banked
 18862  005016  0100               	movlb	0	; () banked
 18863  005018  2B74               	incf	ECANSendMessage@j& (0+255),f,b
 18864  00501A                     l8707:
 18865                           
 18866                           ; BSR set to: 0
 18867  00501A  5027               	movf	ECANSendMessage@dataLen,w,c
 18868  00501C  0100               	movlb	0	; () banked
 18869  00501E  0100               	movlb	0	; () banked
 18870  005020  5D74               	subwf	ECANSendMessage@j& (0+255),w,b
 18871  005022  A0D8               	btfss	status,0,c
 18872  005024  D7E7               	goto	l8699
 18873                           
 18874                           ; BSR set to: 0
 18875                           ;ECAN.c: 752: if ( !(*tempPtr & 0x04) )
 18876                           
 18877                           ; BSR set to: 0
 18878  005026  C076  FFD9         	movff	ECANSendMessage@tempPtr,fsr2l
 18879  00502A  C077  FFDA         	movff	ECANSendMessage@tempPtr+1,fsr2h
 18880  00502E  50DF               	movf	indf2,w,c
 18881  005030  6E29               	movwf	??_ECANSendMessage& (0+255),c
 18882  005032  B429               	btfsc	??_ECANSendMessage,2,c
 18883  005034  D006               	goto	l8713
 18884                           
 18885                           ; BSR set to: 0
 18886                           ;ECAN.c: 753: *tempPtr |= 0x08;
 18887  005036  C076  FFD9         	movff	ECANSendMessage@tempPtr,fsr2l
 18888  00503A  C077  FFDA         	movff	ECANSendMessage@tempPtr+1,fsr2h
 18889  00503E  0E00               	movlw	0
 18890  005040  86DB               	bsf	plusw2,3,c
 18891  005042                     l8713:
 18892                           
 18893                           ; BSR set to: 0
 18894                           ;ECAN.c: 755: return TRUE;
 18895  005042  0E01               	movlw	1
 18896  005044  D00C               	goto	l176
 18897  005046                     l8717:
 18898                           
 18899                           ; BSR set to: 0
 18900  005046  0100               	movlb	0	; () banked
 18901  005048  0100               	movlb	0	; () banked
 18902  00504A  2B79               	incf	ECANSendMessage@i& (0+255),f,b
 18903  00504C                     l8719:
 18904                           
 18905                           ; BSR set to: 0
 18906  00504C  0100               	movlb	0	; () banked
 18907  00504E  0100               	movlb	0	; () banked
 18908  005050  5173               	movf	ECANSendMessage@buffers& (0+255),w,b
 18909  005052  0100               	movlb	0	; () banked
 18910  005054  0100               	movlb	0	; () banked
 18911  005056  5D79               	subwf	ECANSendMessage@i& (0+255),w,b
 18912  005058  A0D8               	btfss	status,0,c
 18913  00505A  D74D               	goto	l8663
 18914                           
 18915                           ; BSR set to: 0
 18916                           ;ECAN.c: 756: }
 18917                           ;ECAN.c: 757: }
 18918                           ;ECAN.c: 760: return FALSE;
 18919                           
 18920                           ; BSR set to: 0
 18921  00505C  0E00               	movlw	0
 18922  00505E                     l176:
 18923                           
 18924                           ; BSR set to: 0
 18925  00505E  0012               	return	
 18926  005060                     __end_of_ECANSendMessage:
 18927                           	opt stack 0
 18928                           tblptru	equ	0xFF8
 18929                           tblptrh	equ	0xFF7
 18930                           tblptrl	equ	0xFF6
 18931                           tablat	equ	0xFF5
 18932                           prodh	equ	0xFF4
 18933                           prodl	equ	0xFF3
 18934                           postinc0	equ	0xFEE
 18935                           wreg	equ	0xFE8
 18936                           indf1	equ	0xFE7
 18937                           fsr1h	equ	0xFE2
 18938                           fsr1l	equ	0xFE1
 18939                           indf2	equ	0xFDF
 18940                           postinc2	equ	0xFDE
 18941                           postdec2	equ	0xFDD
 18942                           plusw2	equ	0xFDB
 18943                           fsr2h	equ	0xFDA
 18944                           fsr2l	equ	0xFD9
 18945                           status	equ	0xFD8
 18946                           
 18947 ;; *************** function __CANIDToRegs *****************
 18948 ;; Defined at:
 18949 ;;		line 1099 in file "../ECAN.c"
 18950 ;; Parameters:    Size  Location     Type
 18951 ;;  ptr             2   21[COMRAM] PTR unsigned char 
 18952 ;;		 -> TXB2CON(1), TXB1CON(1), TXB0CON(1), RXM1SIDH(1), 
 18953 ;;		 -> RXF1SIDH(1), B5CON(1), B4CON(1), B3CON(1), 
 18954 ;;		 -> B2CON(1), B1CON(1), B0CON(1), 
 18955 ;;  val             4   23[COMRAM] unsigned long 
 18956 ;;  type            1   27[COMRAM] unsigned char 
 18957 ;; Auto vars:     Size  Location     Type
 18958 ;;  Value           2   30[COMRAM] PTR struct _CAN_MESSAGE_
 18959 ;;		 -> _CANIDToRegs@val(4), 
 18960 ;; Return value:  Size  Location     Type
 18961 ;;		None               void
 18962 ;; Registers used:
 18963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18964 ;; Tracked objects:
 18965 ;;		On entry : 0/0
 18966 ;;		On exit  : 0/0
 18967 ;;		Unchanged: 0/0
 18968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18969 ;;      Params:         7       0       0       0       0       0       0
 18970 ;;      Locals:         2       0       0       0       0       0       0
 18971 ;;      Temps:          2       0       0       0       0       0       0
 18972 ;;      Totals:        11       0       0       0       0       0       0
 18973 ;;Total ram usage:       11 bytes
 18974 ;; Hardware stack levels used:    1
 18975 ;; Hardware stack levels required when called:    2
 18976 ;; This function calls:
 18977 ;;		Nothing
 18978 ;; This function is called by:
 18979 ;;		_ECANSendMessage
 18980 ;;		_calculateSetFilterMask
 18981 ;; This function uses a non-reentrant model
 18982 ;;
 18983                           
 18984                           	psect	text54
 18985  005F20                     __ptext54:
 18986                           	opt stack 0
 18987  005F20                     __CANIDToRegs:
 18988                           	opt stack 21
 18989                           
 18990                           ;ECAN.c: 1100: CAN_MESSAGE_ID *Value;
 18991                           ;ECAN.c: 1102: Value = (CAN_MESSAGE_ID*)&val;
 18992                           
 18993                           ; BSR set to: 0
 18994                           ;incstack = 0
 18995                           ;incstack = 0
 18996  005F20  0E00               	movlw	high __CANIDToRegs@val
 18997  005F22  6E20               	movwf	__CANIDToRegs@Value+1,c
 18998  005F24  0E18               	movlw	low __CANIDToRegs@val
 18999  005F26  6E1F               	movwf	__CANIDToRegs@Value,c
 19000                           
 19001                           ;ECAN.c: 1104: if ( type == 0 )
 19002  005F28  661C               	tstfsz	__CANIDToRegs@type,c
 19003  005F2A  D03A               	goto	l8735
 19004                           
 19005                           ;ECAN.c: 1105: {
 19006                           ;ECAN.c: 1107: *ptr = Value->BYTES.BYTE_1 >> 3;
 19007  005F2C  C01F  FFD9         	movff	__CANIDToRegs@Value,fsr2l
 19008  005F30  C020  FFDA         	movff	__CANIDToRegs@Value+1,fsr2h
 19009  005F34  50DF               	movf	indf2,w,c
 19010  005F36  6E1D               	movwf	??__CANIDToRegs& (0+255),c
 19011  005F38  90D8               	bcf	status,0,c
 19012  005F3A  321D               	rrcf	??__CANIDToRegs,f,c
 19013  005F3C  90D8               	bcf	status,0,c
 19014  005F3E  321D               	rrcf	??__CANIDToRegs,f,c
 19015  005F40  90D8               	bcf	status,0,c
 19016  005F42  301D               	rrcf	??__CANIDToRegs,w,c
 19017  005F44  C016  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 19018  005F48  C017  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 19019  005F4C  6EDF               	movwf	indf2,c
 19020                           
 19021                           ;ECAN.c: 1108: *ptr |= (Value->BYTES.BYTE_2 << 5);
 19022  005F4E  EE20 F001          	lfsr	2,1
 19023  005F52  501F               	movf	__CANIDToRegs@Value,w,c
 19024  005F54  26D9               	addwf	fsr2l,f,c
 19025  005F56  5020               	movf	__CANIDToRegs@Value+1,w,c
 19026  005F58  22DA               	addwfc	fsr2h,f,c
 19027  005F5A  50DF               	movf	indf2,w,c
 19028  005F5C  6E1D               	movwf	??__CANIDToRegs& (0+255),c
 19029  005F5E  0E05               	movlw	5
 19030  005F60  6E1E               	movwf	(??__CANIDToRegs+1)& (0+255),c
 19031  005F62                     u9925:
 19032  005F62  90D8               	bcf	status,0,c
 19033  005F64  361D               	rlcf	??__CANIDToRegs,f,c
 19034  005F66  2E1E               	decfsz	(??__CANIDToRegs+1)& (0+255),f,c
 19035  005F68  D7FC               	goto	u9925
 19036  005F6A  C016  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 19037  005F6E  C017  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 19038  005F72  501D               	movf	??__CANIDToRegs,w,c
 19039  005F74  12DF               	iorwf	indf2,f,c
 19040                           
 19041                           ;ECAN.c: 1109: ptr++;
 19042  005F76  4A16               	infsnz	__CANIDToRegs@ptr,f,c
 19043  005F78  2A17               	incf	__CANIDToRegs@ptr+1,f,c
 19044                           
 19045                           ;ECAN.c: 1110: *ptr = Value->BYTES.BYTE_1 << 5;
 19046  005F7A  C01F  FFD9         	movff	__CANIDToRegs@Value,fsr2l
 19047  005F7E  C020  FFDA         	movff	__CANIDToRegs@Value+1,fsr2h
 19048  005F82  50DF               	movf	indf2,w,c
 19049  005F84  6E1D               	movwf	??__CANIDToRegs& (0+255),c
 19050  005F86  0E05               	movlw	5
 19051  005F88  6E1E               	movwf	(??__CANIDToRegs+1)& (0+255),c
 19052  005F8A                     u9935:
 19053  005F8A  90D8               	bcf	status,0,c
 19054  005F8C  361D               	rlcf	??__CANIDToRegs,f,c
 19055  005F8E  2E1E               	decfsz	(??__CANIDToRegs+1)& (0+255),f,c
 19056  005F90  D7FC               	goto	u9935
 19057  005F92  501D               	movf	??__CANIDToRegs,w,c
 19058  005F94  C016  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 19059  005F98  C017  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 19060  005F9C  6EDF               	movwf	indf2,c
 19061                           
 19062                           ;ECAN.c: 1111: }
 19063  005F9E  D06E               	goto	l230
 19064  005FA0                     l8735:
 19065                           
 19066                           ;ECAN.c: 1112: else
 19067                           ;ECAN.c: 1113: {
 19068                           ;ECAN.c: 1115: *ptr = Value->BYTES.BYTE_3 >> 5;
 19069  005FA0  EE20 F002          	lfsr	2,2
 19070  005FA4  501F               	movf	__CANIDToRegs@Value,w,c
 19071  005FA6  26D9               	addwf	fsr2l,f,c
 19072  005FA8  5020               	movf	__CANIDToRegs@Value+1,w,c
 19073  005FAA  22DA               	addwfc	fsr2h,f,c
 19074  005FAC  50DF               	movf	indf2,w,c
 19075  005FAE  6E1D               	movwf	??__CANIDToRegs& (0+255),c
 19076  005FB0  0E05               	movlw	5
 19077  005FB2  6E1E               	movwf	(??__CANIDToRegs+1)& (0+255),c
 19078  005FB4                     u9945:
 19079  005FB4  90D8               	bcf	status,0,c
 19080  005FB6  321D               	rrcf	??__CANIDToRegs,f,c
 19081  005FB8  2E1E               	decfsz	(??__CANIDToRegs+1)& (0+255),f,c
 19082  005FBA  D7FC               	goto	u9945
 19083  005FBC  501D               	movf	??__CANIDToRegs,w,c
 19084  005FBE  C016  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 19085  005FC2  C017  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 19086  005FC6  6EDF               	movwf	indf2,c
 19087                           
 19088                           ;ECAN.c: 1116: *ptr |= Value->BYTES.BYTE_4 << 3;
 19089  005FC8  EE20 F003          	lfsr	2,3
 19090  005FCC  501F               	movf	__CANIDToRegs@Value,w,c
 19091  005FCE  26D9               	addwf	fsr2l,f,c
 19092  005FD0  5020               	movf	__CANIDToRegs@Value+1,w,c
 19093  005FD2  22DA               	addwfc	fsr2h,f,c
 19094  005FD4  50DF               	movf	indf2,w,c
 19095  005FD6  6E1D               	movwf	??__CANIDToRegs& (0+255),c
 19096  005FD8  90D8               	bcf	status,0,c
 19097  005FDA  361D               	rlcf	??__CANIDToRegs,f,c
 19098  005FDC  90D8               	bcf	status,0,c
 19099  005FDE  361D               	rlcf	??__CANIDToRegs,f,c
 19100  005FE0  90D8               	bcf	status,0,c
 19101  005FE2  361D               	rlcf	??__CANIDToRegs,f,c
 19102  005FE4  C016  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 19103  005FE8  C017  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 19104  005FEC  501D               	movf	??__CANIDToRegs,w,c
 19105  005FEE  12DF               	iorwf	indf2,f,c
 19106                           
 19107                           ;ECAN.c: 1117: ptr++;
 19108  005FF0  4A16               	infsnz	__CANIDToRegs@ptr,f,c
 19109  005FF2  2A17               	incf	__CANIDToRegs@ptr+1,f,c
 19110                           
 19111                           ;ECAN.c: 1118: *ptr = (Value->BYTES.BYTE_3 << 3) & 0xE0;
 19112  005FF4  EE20 F002          	lfsr	2,2
 19113  005FF8  501F               	movf	__CANIDToRegs@Value,w,c
 19114  005FFA  26D9               	addwf	fsr2l,f,c
 19115  005FFC  5020               	movf	__CANIDToRegs@Value+1,w,c
 19116  005FFE  22DA               	addwfc	fsr2h,f,c
 19117  006000  50DF               	movf	indf2,w,c
 19118  006002  6E1D               	movwf	??__CANIDToRegs& (0+255),c
 19119  006004  90D8               	bcf	status,0,c
 19120  006006  361D               	rlcf	??__CANIDToRegs,f,c
 19121  006008  90D8               	bcf	status,0,c
 19122  00600A  361D               	rlcf	??__CANIDToRegs,f,c
 19123  00600C  90D8               	bcf	status,0,c
 19124  00600E  341D               	rlcf	??__CANIDToRegs,w,c
 19125  006010  0BE0               	andlw	224
 19126  006012  C016  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 19127  006016  C017  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 19128  00601A  6EDF               	movwf	indf2,c
 19129                           
 19130                           ;ECAN.c: 1120: *ptr |= 0b00001000;
 19131  00601C  C016  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 19132  006020  C017  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 19133  006024  0E00               	movlw	0
 19134  006026  86DB               	bsf	plusw2,3,c
 19135                           
 19136                           ;ECAN.c: 1121: *ptr |= Value->BYTES.BYTE_3 & 0x03;
 19137  006028  EE20 F002          	lfsr	2,2
 19138  00602C  501F               	movf	__CANIDToRegs@Value,w,c
 19139  00602E  26D9               	addwf	fsr2l,f,c
 19140  006030  5020               	movf	__CANIDToRegs@Value+1,w,c
 19141  006032  22DA               	addwfc	fsr2h,f,c
 19142  006034  50DF               	movf	indf2,w,c
 19143  006036  6E1D               	movwf	??__CANIDToRegs& (0+255),c
 19144  006038  0E03               	movlw	3
 19145  00603A  161D               	andwf	??__CANIDToRegs,f,c
 19146  00603C  C016  FFD9         	movff	__CANIDToRegs@ptr,fsr2l
 19147  006040  C017  FFDA         	movff	__CANIDToRegs@ptr+1,fsr2h
 19148  006044  501D               	movf	??__CANIDToRegs,w,c
 19149  006046  12DF               	iorwf	indf2,f,c
 19150                           
 19151                           ;ECAN.c: 1122: ptr++;
 19152  006048  4A16               	infsnz	__CANIDToRegs@ptr,f,c
 19153  00604A  2A17               	incf	__CANIDToRegs@ptr+1,f,c
 19154                           
 19155                           ;ECAN.c: 1123: *ptr = Value->BYTES.BYTE_2;
 19156  00604C  EE20 F001          	lfsr	2,1
 19157  006050  501F               	movf	__CANIDToRegs@Value,w,c
 19158  006052  26D9               	addwf	fsr2l,f,c
 19159  006054  5020               	movf	__CANIDToRegs@Value+1,w,c
 19160  006056  22DA               	addwfc	fsr2h,f,c
 19161  006058  C016  FFE1         	movff	__CANIDToRegs@ptr,fsr1l
 19162  00605C  C017  FFE2         	movff	__CANIDToRegs@ptr+1,fsr1h
 19163  006060  CFDF FFE7          	movff	indf2,indf1
 19164                           
 19165                           ;ECAN.c: 1124: ptr++;
 19166  006064  4A16               	infsnz	__CANIDToRegs@ptr,f,c
 19167  006066  2A17               	incf	__CANIDToRegs@ptr+1,f,c
 19168                           
 19169                           ;ECAN.c: 1125: *ptr = Value->BYTES.BYTE_1;
 19170  006068  C01F  FFD9         	movff	__CANIDToRegs@Value,fsr2l
 19171  00606C  C020  FFDA         	movff	__CANIDToRegs@Value+1,fsr2h
 19172  006070  C016  FFE1         	movff	__CANIDToRegs@ptr,fsr1l
 19173  006074  C017  FFE2         	movff	__CANIDToRegs@ptr+1,fsr1h
 19174  006078  CFDF FFE7          	movff	indf2,indf1
 19175  00607C                     l230:
 19176  00607C  0012               	return	
 19177  00607E                     __end_of__CANIDToRegs:
 19178                           	opt stack 0
 19179                           tblptru	equ	0xFF8
 19180                           tblptrh	equ	0xFF7
 19181                           tblptrl	equ	0xFF6
 19182                           tablat	equ	0xFF5
 19183                           prodh	equ	0xFF4
 19184                           prodl	equ	0xFF3
 19185                           postinc0	equ	0xFEE
 19186                           wreg	equ	0xFE8
 19187                           indf1	equ	0xFE7
 19188                           fsr1h	equ	0xFE2
 19189                           fsr1l	equ	0xFE1
 19190                           indf2	equ	0xFDF
 19191                           postinc2	equ	0xFDE
 19192                           postdec2	equ	0xFDD
 19193                           plusw2	equ	0xFDB
 19194                           fsr2h	equ	0xFDA
 19195                           fsr2l	equ	0xFD9
 19196                           status	equ	0xFD8
 19197                           
 19198 ;; *************** function _vscp_getEvent *****************
 19199 ;; Defined at:
 19200 ;;		line 1308 in file "../../vscp_firmware/common/vscp_firmware.c"
 19201 ;; Parameters:    Size  Location     Type
 19202 ;;		None
 19203 ;; Auto vars:     Size  Location     Type
 19204 ;;  rv              1   20[BANK0 ] unsigned char 
 19205 ;; Return value:  Size  Location     Type
 19206 ;;                  1    wreg      unsigned char 
 19207 ;; Registers used:
 19208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, bsr, cstack
 19209 ;; Tracked objects:
 19210 ;;		On entry : 0/0
 19211 ;;		On exit  : 0/0
 19212 ;;		Unchanged: 0/0
 19213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19214 ;;      Params:         0       0       0       0       0       0       0
 19215 ;;      Locals:         0       1       0       0       0       0       0
 19216 ;;      Temps:          0       0       0       0       0       0       0
 19217 ;;      Totals:         0       1       0       0       0       0       0
 19218 ;;Total ram usage:        1 bytes
 19219 ;; Hardware stack levels used:    1
 19220 ;; Hardware stack levels required when called:    6
 19221 ;; This function calls:
 19222 ;;		_getVSCPFrame
 19223 ;; This function is called by:
 19224 ;;		_main
 19225 ;; This function uses a non-reentrant model
 19226 ;;
 19227                           
 19228                           	psect	text55
 19229  006786                     __ptext55:
 19230                           	opt stack 0
 19231  006786                     _vscp_getEvent:
 19232                           	opt stack 23
 19233                           
 19234                           ;vscp_firmware.c: 1309: int8_t rv;
 19235                           ;vscp_firmware.c: 1315: if (vscp_imsg.flags & 0x80) return !0;
 19236                           
 19237                           ;incstack = 0
 19238                           ;incstack = 0
 19239  006786  0100               	movlb	0	; () banked
 19240  006788  0100               	movlb	0	; () banked
 19241  00678A  BFF1               	btfsc	_vscp_imsg& (0+255),7,b
 19242  00678C  D042               	goto	l1385
 19243                           
 19244                           ; BSR set to: 0
 19245                           ;vscp_firmware.c: 1318: if ((rv = getVSCPFrame(&vscp_imsg.vscp_class,
 19246                           ;vscp_firmware.c: 1319: &vscp_imsg.vscp_type,
 19247                           ;vscp_firmware.c: 1320: &vscp_imsg.oaddr,
 19248                           ;vscp_firmware.c: 1321: &vscp_imsg.priority,
 19249                           ;vscp_firmware.c: 1322: &vscp_imsg.flags,
 19250                           ;vscp_firmware.c: 1323: vscp_imsg.data))) {
 19251                           
 19252                           ; BSR set to: 0
 19253                           
 19254                           ; BSR set to: 0
 19255                           ;	Return value of _vscp_getEvent is never used
 19256  00678E  0100               	movlb	0	; () banked
 19257  006790  0E00               	movlw	high (_vscp_imsg+2)
 19258  006792  0100               	movlb	0	; () banked
 19259  006794  0100               	movlb	0	; () banked
 19260  006796  6F61               	movwf	(?_getVSCPFrame+1)& (0+255),b
 19261  006798  0100               	movlb	0	; () banked
 19262  00679A  0EF3               	movlw	low (_vscp_imsg+2)
 19263  00679C  0100               	movlb	0	; () banked
 19264  00679E  6F60               	movwf	?_getVSCPFrame& (0+255),b
 19265  0067A0  0100               	movlb	0	; () banked
 19266  0067A2  0E00               	movlw	high (_vscp_imsg+4)
 19267  0067A4  0100               	movlb	0	; () banked
 19268  0067A6  0100               	movlb	0	; () banked
 19269  0067A8  6F63               	movwf	(?_getVSCPFrame+3)& (0+255),b
 19270  0067AA  0100               	movlb	0	; () banked
 19271  0067AC  0EF5               	movlw	low (_vscp_imsg+4)
 19272  0067AE  0100               	movlb	0	; () banked
 19273  0067B0  6F62               	movwf	(?_getVSCPFrame+2)& (0+255),b
 19274  0067B2  0100               	movlb	0	; () banked
 19275  0067B4  0E00               	movlw	high (_vscp_imsg+5)
 19276  0067B6  0100               	movlb	0	; () banked
 19277  0067B8  0100               	movlb	0	; () banked
 19278  0067BA  6F65               	movwf	(?_getVSCPFrame+5)& (0+255),b
 19279  0067BC  0100               	movlb	0	; () banked
 19280  0067BE  0EF6               	movlw	low (_vscp_imsg+5)
 19281  0067C0  0100               	movlb	0	; () banked
 19282  0067C2  6F64               	movwf	(?_getVSCPFrame+4)& (0+255),b
 19283  0067C4  0100               	movlb	0	; () banked
 19284  0067C6  0E00               	movlw	high (_vscp_imsg+1)
 19285  0067C8  0100               	movlb	0	; () banked
 19286  0067CA  0100               	movlb	0	; () banked
 19287  0067CC  6F67               	movwf	(?_getVSCPFrame+7)& (0+255),b
 19288  0067CE  0100               	movlb	0	; () banked
 19289  0067D0  0EF2               	movlw	low (_vscp_imsg+1)
 19290  0067D2  0100               	movlb	0	; () banked
 19291  0067D4  6F66               	movwf	(?_getVSCPFrame+6)& (0+255),b
 19292  0067D6  0100               	movlb	0	; () banked
 19293  0067D8  0E00               	movlw	high _vscp_imsg
 19294  0067DA  0100               	movlb	0	; () banked
 19295  0067DC  0100               	movlb	0	; () banked
 19296  0067DE  6F69               	movwf	(?_getVSCPFrame+9)& (0+255),b
 19297  0067E0  0100               	movlb	0	; () banked
 19298  0067E2  0EF1               	movlw	low _vscp_imsg
 19299  0067E4  0100               	movlb	0	; () banked
 19300  0067E6  6F68               	movwf	(?_getVSCPFrame+8)& (0+255),b
 19301  0067E8  0100               	movlb	0	; () banked
 19302  0067EA  0E00               	movlw	high (_vscp_imsg+6)
 19303  0067EC  0100               	movlb	0	; () banked
 19304  0067EE  0100               	movlb	0	; () banked
 19305  0067F0  6F6B               	movwf	(?_getVSCPFrame+11)& (0+255),b
 19306  0067F2  0100               	movlb	0	; () banked
 19307  0067F4  0EF7               	movlw	low (_vscp_imsg+6)
 19308  0067F6  0100               	movlb	0	; () banked
 19309  0067F8  6F6A               	movwf	(?_getVSCPFrame+10)& (0+255),b
 19310  0067FA  ECD8  F032         	call	_getVSCPFrame	;wreg free
 19311  0067FE  0100               	movlb	0	; () banked
 19312  006800  0100               	movlb	0	; () banked
 19313  006802  6F74               	movwf	vscp_getEvent@rv& (0+255),b
 19314  006804  0100               	movlb	0	; () banked
 19315  006806  5174               	movf	vscp_getEvent@rv& (0+255),w,b
 19316  006808  B4D8               	btfsc	status,2,c
 19317  00680A  D003               	goto	l1385
 19318                           
 19319                           ; BSR set to: 0
 19320                           ;vscp_firmware.c: 1325: vscp_imsg.flags |= 0x80;
 19321  00680C  0100               	movlb	0	; () banked
 19322  00680E  0100               	movlb	0	; () banked
 19323  006810  8FF1               	bsf	_vscp_imsg& (0+255),7,b
 19324  006812                     l1385:
 19325                           
 19326                           ; BSR set to: 0
 19327  006812  0012               	return	
 19328  006814                     __end_of_vscp_getEvent:
 19329                           	opt stack 0
 19330                           tblptru	equ	0xFF8
 19331                           tblptrh	equ	0xFF7
 19332                           tblptrl	equ	0xFF6
 19333                           tablat	equ	0xFF5
 19334                           prodh	equ	0xFF4
 19335                           prodl	equ	0xFF3
 19336                           postinc0	equ	0xFEE
 19337                           wreg	equ	0xFE8
 19338                           indf1	equ	0xFE7
 19339                           fsr1h	equ	0xFE2
 19340                           fsr1l	equ	0xFE1
 19341                           indf2	equ	0xFDF
 19342                           postinc2	equ	0xFDE
 19343                           postdec2	equ	0xFDD
 19344                           plusw2	equ	0xFDB
 19345                           fsr2h	equ	0xFDA
 19346                           fsr2l	equ	0xFD9
 19347                           status	equ	0xFD8
 19348                           
 19349 ;; *************** function _getVSCPFrame *****************
 19350 ;; Defined at:
 19351 ;;		line 3087 in file "../main.c"
 19352 ;; Parameters:    Size  Location     Type
 19353 ;;  pvscpclass      2    0[BANK0 ] PTR unsigned short 
 19354 ;;		 -> vscp_imsg(14), 
 19355 ;;  pvscptype       2    2[BANK0 ] PTR unsigned char 
 19356 ;;		 -> vscp_imsg(14), 
 19357 ;;  pNodeId         2    4[BANK0 ] PTR unsigned char 
 19358 ;;		 -> vscp_imsg(14), 
 19359 ;;  pPriority       2    6[BANK0 ] PTR unsigned char 
 19360 ;;		 -> vscp_imsg(14), 
 19361 ;;  pSize           2    8[BANK0 ] PTR unsigned char 
 19362 ;;		 -> vscp_imsg(14), 
 19363 ;;  pData           2   10[BANK0 ] PTR unsigned char 
 19364 ;;		 -> vscp_imsg(14), 
 19365 ;; Auto vars:     Size  Location     Type
 19366 ;;  id              4   16[BANK0 ] unsigned long 
 19367 ;; Return value:  Size  Location     Type
 19368 ;;                  1    wreg      unsigned char 
 19369 ;; Registers used:
 19370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19371 ;; Tracked objects:
 19372 ;;		On entry : 0/0
 19373 ;;		On exit  : 0/0
 19374 ;;		Unchanged: 0/0
 19375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19376 ;;      Params:         0      12       0       0       0       0       0
 19377 ;;      Locals:         0       4       0       0       0       0       0
 19378 ;;      Temps:          0       4       0       0       0       0       0
 19379 ;;      Totals:         0      20       0       0       0       0       0
 19380 ;;Total ram usage:       20 bytes
 19381 ;; Hardware stack levels used:    1
 19382 ;; Hardware stack levels required when called:    5
 19383 ;; This function calls:
 19384 ;;		_getCANFrame
 19385 ;; This function is called by:
 19386 ;;		_vscp_getEvent
 19387 ;; This function uses a non-reentrant model
 19388 ;;
 19389                           
 19390                           	psect	text56
 19391  0065B0                     __ptext56:
 19392                           	opt stack 0
 19393  0065B0                     _getVSCPFrame:
 19394                           	opt stack 23
 19395                           
 19396                           ;main.c: 3088: uint32_t id;
 19397                           ;main.c: 3090: if ( !getCANFrame(&id, pSize, pData) ) {
 19398                           
 19399                           ; BSR set to: 0
 19400                           ;incstack = 0
 19401                           ;incstack = 0
 19402  0065B0  0100               	movlb	0	; () banked
 19403  0065B2  0E00               	movlw	high getVSCPFrame@id
 19404  0065B4  6E30               	movwf	?_getCANFrame+1,c
 19405  0065B6  0100               	movlb	0	; () banked
 19406  0065B8  0E70               	movlw	low getVSCPFrame@id
 19407  0065BA  6E2F               	movwf	?_getCANFrame,c
 19408  0065BC  C068  F031         	movff	getVSCPFrame@pSize,?_getCANFrame+2
 19409  0065C0  C069  F032         	movff	getVSCPFrame@pSize+1,?_getCANFrame+3
 19410  0065C4  C06A  F033         	movff	getVSCPFrame@pData,?_getCANFrame+4
 19411  0065C8  C06B  F034         	movff	getVSCPFrame@pData+1,?_getCANFrame+5
 19412  0065CC  EC26  F035         	call	_getCANFrame	;wreg free
 19413  0065D0  0900               	iorlw	0
 19414  0065D2  A4D8               	btfss	status,2,c
 19415  0065D4  D002               	goto	l11335
 19416                           
 19417                           ;main.c: 3091: return 0;
 19418  0065D6  0E00               	movlw	0
 19419  0065D8  D03F               	goto	l1000
 19420  0065DA                     l11335:
 19421                           
 19422                           ;main.c: 3092: }
 19423                           ;main.c: 3094: *pNodeId = id & 0x0ff;
 19424  0065DA  C064  FFD9         	movff	getVSCPFrame@pNodeId,fsr2l
 19425  0065DE  C065  FFDA         	movff	getVSCPFrame@pNodeId+1,fsr2h
 19426  0065E2  0100               	movlb	0	; () banked
 19427  0065E4  C070  FFDF         	movff	getVSCPFrame@id,indf2
 19428                           
 19429                           ;main.c: 3095: *pvscptype = (id >> 8) & 0xff;
 19430  0065E8  C062  FFD9         	movff	getVSCPFrame@pvscptype,fsr2l
 19431  0065EC  C063  FFDA         	movff	getVSCPFrame@pvscptype+1,fsr2h
 19432  0065F0  0100               	movlb	0	; () banked
 19433  0065F2  C071  FFDF         	movff	getVSCPFrame@id+1,indf2
 19434                           
 19435                           ; BSR set to: 0
 19436                           ;main.c: 3096: *pvscpclass = (id >> 16) & 0x1ff;
 19437  0065F6  0EFF               	movlw	255
 19438  0065F8  0100               	movlb	0	; () banked
 19439  0065FA  1572               	andwf	(getVSCPFrame@id+2)& (0+255),w,b
 19440  0065FC  0100               	movlb	0	; () banked
 19441  0065FE  6F6C               	movwf	??_getVSCPFrame& (0+255),b
 19442  006600  0E01               	movlw	1
 19443  006602  0100               	movlb	0	; () banked
 19444  006604  1573               	andwf	(getVSCPFrame@id+3)& (0+255),w,b
 19445  006606  0100               	movlb	0	; () banked
 19446  006608  6F6D               	movwf	(??_getVSCPFrame+1)& (0+255),b
 19447  00660A  C060  FFD9         	movff	getVSCPFrame@pvscpclass,fsr2l
 19448  00660E  C061  FFDA         	movff	getVSCPFrame@pvscpclass+1,fsr2h
 19449  006612  C06C  FFDE         	movff	??_getVSCPFrame,postinc2
 19450  006616  C06D  FFDD         	movff	??_getVSCPFrame+1,postdec2
 19451                           
 19452                           ; BSR set to: 0
 19453                           ;main.c: 3097: *pPriority = (uint16_t) (0x07 & (id >> 26));
 19454  00661A  0100               	movlb	0	; () banked
 19455  00661C  C070  F06C         	movff	getVSCPFrame@id,??_getVSCPFrame
 19456  006620  0100               	movlb	0	; () banked
 19457  006622  C071  F06D         	movff	getVSCPFrame@id+1,??_getVSCPFrame+1
 19458  006626  0100               	movlb	0	; () banked
 19459  006628  C072  F06E         	movff	getVSCPFrame@id+2,??_getVSCPFrame+2
 19460  00662C  0100               	movlb	0	; () banked
 19461  00662E  C073  F06F         	movff	getVSCPFrame@id+3,??_getVSCPFrame+3
 19462  006632  0E1B               	movlw	27
 19463  006634  D006               	goto	u13920
 19464  006636                     u13925:
 19465  006636  0100               	movlb	0	; () banked
 19466  006638  90D8               	bcf	status,0,c
 19467  00663A  336F               	rrcf	(??_getVSCPFrame+3)& (0+255),f,b
 19468  00663C  336E               	rrcf	(??_getVSCPFrame+2)& (0+255),f,b
 19469  00663E  336D               	rrcf	(??_getVSCPFrame+1)& (0+255),f,b
 19470  006640  336C               	rrcf	??_getVSCPFrame& (0+255),f,b
 19471  006642                     u13920:
 19472  006642  2EE8               	decfsz	wreg,f,c
 19473  006644  D7F8               	goto	u13925
 19474  006646  0100               	movlb	0	; () banked
 19475  006648  516C               	movf	??_getVSCPFrame& (0+255),w,b
 19476  00664A  0B07               	andlw	7
 19477  00664C  C066  FFD9         	movff	getVSCPFrame@pPriority,fsr2l
 19478  006650  C067  FFDA         	movff	getVSCPFrame@pPriority+1,fsr2h
 19479  006654  6EDF               	movwf	indf2,c
 19480                           
 19481                           ; BSR set to: 0
 19482                           ;main.c: 3099: return 1;
 19483  006656  0E01               	movlw	1
 19484  006658                     l1000:
 19485  006658  0012               	return	
 19486  00665A                     __end_of_getVSCPFrame:
 19487                           	opt stack 0
 19488                           tblptru	equ	0xFF8
 19489                           tblptrh	equ	0xFF7
 19490                           tblptrl	equ	0xFF6
 19491                           tablat	equ	0xFF5
 19492                           prodh	equ	0xFF4
 19493                           prodl	equ	0xFF3
 19494                           postinc0	equ	0xFEE
 19495                           wreg	equ	0xFE8
 19496                           indf1	equ	0xFE7
 19497                           fsr1h	equ	0xFE2
 19498                           fsr1l	equ	0xFE1
 19499                           indf2	equ	0xFDF
 19500                           postinc2	equ	0xFDE
 19501                           postdec2	equ	0xFDD
 19502                           plusw2	equ	0xFDB
 19503                           fsr2h	equ	0xFDA
 19504                           fsr2l	equ	0xFD9
 19505                           status	equ	0xFD8
 19506                           
 19507 ;; *************** function _getCANFrame *****************
 19508 ;; Defined at:
 19509 ;;		line 3129 in file "../main.c"
 19510 ;; Parameters:    Size  Location     Type
 19511 ;;  pid             2   46[COMRAM] PTR unsigned long 
 19512 ;;		 -> getVSCPFrame@id(4), 
 19513 ;;  pdlc            2   48[COMRAM] PTR unsigned char 
 19514 ;;		 -> vscp_imsg(14), 
 19515 ;;  pdata           2   50[COMRAM] PTR unsigned char 
 19516 ;;		 -> vscp_imsg(14), 
 19517 ;; Auto vars:     Size  Location     Type
 19518 ;;  flags           1   52[COMRAM] enum E16341
 19519 ;; Return value:  Size  Location     Type
 19520 ;;                  1    wreg      unsigned char 
 19521 ;; Registers used:
 19522 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19523 ;; Tracked objects:
 19524 ;;		On entry : 0/0
 19525 ;;		On exit  : 0/0
 19526 ;;		Unchanged: 0/0
 19527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19528 ;;      Params:         6       0       0       0       0       0       0
 19529 ;;      Locals:         1       0       0       0       0       0       0
 19530 ;;      Temps:          0       0       0       0       0       0       0
 19531 ;;      Totals:         7       0       0       0       0       0       0
 19532 ;;Total ram usage:        7 bytes
 19533 ;; Hardware stack levels used:    1
 19534 ;; Hardware stack levels required when called:    4
 19535 ;; This function calls:
 19536 ;;		_ECANReceiveMessage
 19537 ;; This function is called by:
 19538 ;;		_getVSCPFrame
 19539 ;; This function uses a non-reentrant model
 19540 ;;
 19541                           
 19542                           	psect	text57
 19543  006A4C                     __ptext57:
 19544                           	opt stack 0
 19545  006A4C                     _getCANFrame:
 19546                           	opt stack 23
 19547                           
 19548                           ;main.c: 3130: ECAN_RX_MSG_FLAGS flags;
 19549                           ;main.c: 3134: if (vscp_imsg.flags & 0x80) return 0;
 19550                           
 19551                           ;incstack = 0
 19552                           ;incstack = 0
 19553  006A4C  0100               	movlb	0	; () banked
 19554  006A4E  0100               	movlb	0	; () banked
 19555  006A50  BFF1               	btfsc	_vscp_imsg& (0+255),7,b
 19556  006A52  D01A               	goto	l11367
 19557                           
 19558                           ; BSR set to: 0
 19559                           ;main.c: 3136: if ( ECANReceiveMessage( pid, pdata, pdlc, &flags) ) {
 19560                           
 19561                           ; BSR set to: 0
 19562                           
 19563                           ; BSR set to: 0
 19564                           
 19565                           ; BSR set to: 0
 19566  006A54  C02F  F01F         	movff	getCANFrame@pid,?_ECANReceiveMessage
 19567  006A58  C030  F020         	movff	getCANFrame@pid+1,?_ECANReceiveMessage+1
 19568  006A5C  C033  F021         	movff	getCANFrame@pdata,?_ECANReceiveMessage+2
 19569  006A60  C034  F022         	movff	getCANFrame@pdata+1,?_ECANReceiveMessage+3
 19570  006A64  C031  F023         	movff	getCANFrame@pdlc,?_ECANReceiveMessage+4
 19571  006A68  C032  F024         	movff	getCANFrame@pdlc+1,?_ECANReceiveMessage+5
 19572  006A6C  0E00               	movlw	high getCANFrame@flags
 19573  006A6E  6E26               	movwf	?_ECANReceiveMessage+7,c
 19574  006A70  0E35               	movlw	low getCANFrame@flags
 19575  006A72  6E25               	movwf	?_ECANReceiveMessage+6,c
 19576  006A74  ECC6  F025         	call	_ECANReceiveMessage	;wreg free
 19577  006A78  0900               	iorlw	0
 19578  006A7A  A4D8               	btfss	status,2,c
 19579                           
 19580                           ;main.c: 3139: if (flags & ECAN_RX_RTR_FRAME) return 0;
 19581  006A7C  BC35               	btfsc	getCANFrame@flags,6,c
 19582  006A7E  D004               	goto	l11367
 19583                           
 19584                           ;main.c: 3142: if (!(flags & ECAN_RX_XTD_FRAME)) return 0;
 19585  006A80  AA35               	btfss	getCANFrame@flags,5,c
 19586  006A82  D002               	goto	l11367
 19587                           
 19588                           ;main.c: 3144: return 1;
 19589  006A84  0E01               	movlw	1
 19590  006A86  D001               	goto	l1011
 19591  006A88                     l11367:
 19592                           
 19593                           ;main.c: 3146: }
 19594                           ;main.c: 3148: return 0;
 19595  006A88  0E00               	movlw	0
 19596  006A8A                     l1011:
 19597  006A8A  0012               	return	
 19598  006A8C                     __end_of_getCANFrame:
 19599                           	opt stack 0
 19600                           tblptru	equ	0xFF8
 19601                           tblptrh	equ	0xFF7
 19602                           tblptrl	equ	0xFF6
 19603                           tablat	equ	0xFF5
 19604                           prodh	equ	0xFF4
 19605                           prodl	equ	0xFF3
 19606                           postinc0	equ	0xFEE
 19607                           wreg	equ	0xFE8
 19608                           indf1	equ	0xFE7
 19609                           fsr1h	equ	0xFE2
 19610                           fsr1l	equ	0xFE1
 19611                           indf2	equ	0xFDF
 19612                           postinc2	equ	0xFDE
 19613                           postdec2	equ	0xFDD
 19614                           plusw2	equ	0xFDB
 19615                           fsr2h	equ	0xFDA
 19616                           fsr2l	equ	0xFD9
 19617                           status	equ	0xFD8
 19618                           
 19619 ;; *************** function _ECANReceiveMessage *****************
 19620 ;; Defined at:
 19621 ;;		line 803 in file "../ECAN.c"
 19622 ;; Parameters:    Size  Location     Type
 19623 ;;  id              2   30[COMRAM] PTR unsigned long 
 19624 ;;		 -> getVSCPFrame@id(4), 
 19625 ;;  data            2   32[COMRAM] PTR unsigned char 
 19626 ;;		 -> vscp_imsg(14), 
 19627 ;;  dataLen         2   34[COMRAM] PTR unsigned char 
 19628 ;;		 -> vscp_imsg(14), 
 19629 ;;  msgFlags        2   36[COMRAM] PTR enum E16333
 19630 ;;		 -> getCANFrame@flags(1), 
 19631 ;; Auto vars:     Size  Location     Type
 19632 ;;  ptr             2   44[COMRAM] PTR unsigned char 
 19633 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 19634 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 19635 ;;  savedPtr        2   39[COMRAM] PTR unsigned char 
 19636 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 19637 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 19638 ;;  temp            1   43[COMRAM] struct .
 19639 ;;  mode            1   42[COMRAM] unsigned char 
 19640 ;;  i               1   41[COMRAM] unsigned char 
 19641 ;; Return value:  Size  Location     Type
 19642 ;;                  1    wreg      enum E15660
 19643 ;; Registers used:
 19644 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19645 ;; Tracked objects:
 19646 ;;		On entry : 0/0
 19647 ;;		On exit  : 0/0
 19648 ;;		Unchanged: 0/0
 19649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19650 ;;      Params:         8       0       0       0       0       0       0
 19651 ;;      Locals:         7       0       0       0       0       0       0
 19652 ;;      Temps:          1       0       0       0       0       0       0
 19653 ;;      Totals:        16       0       0       0       0       0       0
 19654 ;;Total ram usage:       16 bytes
 19655 ;; Hardware stack levels used:    1
 19656 ;; Hardware stack levels required when called:    3
 19657 ;; This function calls:
 19658 ;;		__ECANPointBuffer
 19659 ;;		__RegsToCANID
 19660 ;; This function is called by:
 19661 ;;		_getCANFrame
 19662 ;; This function uses a non-reentrant model
 19663 ;;
 19664                           
 19665                           	psect	text58
 19666  004B8C                     __ptext58:
 19667                           	opt stack 0
 19668  004B8C                     _ECANReceiveMessage:
 19669                           	opt stack 23
 19670                           
 19671                           ;ECAN.c: 805: BYTE mode;
 19672                           ;ECAN.c: 808: BYTE *ptr, *savedPtr;
 19673                           ;ECAN.c: 809: char i;
 19674                           ;ECAN.c: 810: BYTE_VAL temp;
 19675                           ;ECAN.c: 812: _ECANRxFilterHitInfo.Val = 0;
 19676                           
 19677                           ;incstack = 0
 19678                           ;incstack = 0
 19679  004B8C  6E27               	movwf	??_ECANReceiveMessage& (0+255),c
 19680  004B8E  0E00               	movlw	0
 19681  004B90  0100               	movlb	0	; () banked
 19682  004B92  0100               	movlb	0	; () banked
 19683  004B94  6FDB               	movwf	__ECANRxFilterHitInfo& (0+255),b
 19684  004B96  5027               	movf	??_ECANReceiveMessage& (0+255),w,c
 19685                           
 19686                           ; BSR set to: 0
 19687                           ;ECAN.c: 815: mode = ECANCON&0xC0;
 19688  004B98  5077               	movf	3959,w,c	;volatile
 19689  004B9A  0BC0               	andlw	192
 19690  004B9C  6E2B               	movwf	ECANReceiveMessage@mode,c
 19691                           
 19692                           ; BSR set to: 0
 19693                           ;ECAN.c: 816: if ( mode == 0x00 )
 19694  004B9E  662B               	tstfsz	ECANReceiveMessage@mode,c
 19695  004BA0  D040               	goto	l8789
 19696                           
 19697                           ; BSR set to: 0
 19698                           ;ECAN.c: 822: {
 19699                           ;ECAN.c: 824: if ( RXB0FUL )
 19700  004BA2  AE60               	btfss	3936,7,c	;volatile
 19701  004BA4  D017               	goto	l181
 19702                           
 19703                           ; BSR set to: 0
 19704                           ;ECAN.c: 825: {
 19705                           ;ECAN.c: 827: RXB0IF = 0;
 19706  004BA6  90A4               	bcf	4004,0,c	;volatile
 19707                           
 19708                           ;ECAN.c: 830: if ( RXB0OVFL )
 19709  004BA8  AE74               	btfss	3956,7,c	;volatile
 19710  004BAA  D007               	goto	l8765
 19711                           
 19712                           ; BSR set to: 0
 19713                           ;ECAN.c: 831: {
 19714                           ;ECAN.c: 832: *msgFlags |= ECAN_RX_OVERFLOW;
 19715  004BAC  C025  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 19716  004BB0  C026  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 19717  004BB4  0E00               	movlw	0
 19718  004BB6  86DB               	bsf	plusw2,3,c
 19719                           
 19720                           ; BSR set to: 0
 19721                           ;ECAN.c: 833: RXB0OVFL = 0;
 19722  004BB8  9E74               	bcf	3956,7,c	;volatile
 19723  004BBA                     l8765:
 19724                           
 19725                           ; BSR set to: 0
 19726                           ;ECAN.c: 834: }
 19727                           ;ECAN.c: 836: _ECANRxFilterHitInfo.bits.b0 = RXB0FILHIT0;
 19728  004BBA  A060               	btfss	3936,0,c	;volatile
 19729  004BBC  D004               	bra	u9985
 19730  004BBE  0100               	movlb	0	; () banked
 19731  004BC0  0100               	movlb	0	; () banked
 19732  004BC2  81DB               	bsf	__ECANRxFilterHitInfo& (0+255),0,b
 19733  004BC4  D003               	bra	u9987
 19734  004BC6                     u9985:
 19735  004BC6  0100               	movlb	0	; () banked
 19736  004BC8  0100               	movlb	0	; () banked
 19737  004BCA  91DB               	bcf	__ECANRxFilterHitInfo& (0+255),0,b
 19738  004BCC                     u9987:
 19739                           
 19740                           ; BSR set to: 0
 19741                           ;ECAN.c: 838: ptr = (BYTE*)&RXB0CON;
 19742  004BCC  0E0F               	movlw	15	;volatile
 19743  004BCE  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 19744  004BD0  0E60               	movlw	96	;volatile
 19745  004BD2  D025               	goto	L134
 19746  004BD4                     l181:
 19747                           
 19748                           ; BSR set to: 0
 19749                           ;ECAN.c: 841: else if ( RXB1CONbits.RXFUL )
 19750  004BD4  010F               	movlb	15	; () banked
 19751  004BD6  010F               	movlb	15	; () banked
 19752  004BD8  AF50               	btfss	80,7,b	;volatile
 19753  004BDA  D08A               	goto	l8829
 19754                           
 19755                           ; BSR set to: 15
 19756                           ;ECAN.c: 842: {
 19757                           ;ECAN.c: 844: RXB1IF = 0;
 19758  004BDC  92A4               	bcf	4004,1,c	;volatile
 19759                           
 19760                           ;ECAN.c: 847: if ( RXB1OVFL )
 19761  004BDE  AC74               	btfss	3956,6,c	;volatile
 19762  004BE0  D007               	goto	l8775
 19763                           
 19764                           ; BSR set to: 15
 19765                           ;ECAN.c: 848: {
 19766                           ;ECAN.c: 849: *msgFlags |= ECAN_RX_OVERFLOW;
 19767  004BE2  C025  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 19768  004BE6  C026  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 19769  004BEA  0E00               	movlw	0
 19770  004BEC  86DB               	bsf	plusw2,3,c
 19771                           
 19772                           ; BSR set to: 15
 19773                           ;ECAN.c: 850: RXB1OVFL = 0;
 19774  004BEE  9C74               	bcf	3956,6,c	;volatile
 19775  004BF0                     l8775:
 19776                           
 19777                           ; BSR set to: 15
 19778                           ;ECAN.c: 851: }
 19779                           ;ECAN.c: 853: _ECANRxFilterHitInfo.Val = RXB1CON & 0x07;
 19780  004BF0  010F               	movlb	15	; () banked
 19781  004BF2  010F               	movlb	15	; () banked
 19782  004BF4  5150               	movf	80,w,b	;volatile
 19783  004BF6  0B07               	andlw	7
 19784  004BF8  0100               	movlb	0	; () banked
 19785  004BFA  0100               	movlb	0	; () banked
 19786  004BFC  6FDB               	movwf	__ECANRxFilterHitInfo& (0+255),b
 19787                           
 19788                           ; BSR set to: 0
 19789                           ;ECAN.c: 855: if ( _ECANRxFilterHitInfo.Val < 0x02 )
 19790  004BFE  0E02               	movlw	2
 19791  004C00  0100               	movlb	0	; () banked
 19792  004C02  0100               	movlb	0	; () banked
 19793  004C04  61DB               	cpfslt	__ECANRxFilterHitInfo& (0+255),b
 19794  004C06  D006               	goto	l8781
 19795                           
 19796                           ; BSR set to: 0
 19797                           ;ECAN.c: 856: *msgFlags |= ECAN_RX_DBL_BUFFERED;
 19798  004C08  C025  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 19799  004C0C  C026  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 19800  004C10  0E00               	movlw	0
 19801  004C12  8EDB               	bsf	plusw2,7,c
 19802  004C14                     l8781:
 19803                           
 19804                           ; BSR set to: 0
 19805                           ;ECAN.c: 859: ptr = (BYTE*)&RXB1CON;
 19806  004C14  010F               	movlb	15	; () banked
 19807  004C16  0E0F               	movlw	15	;volatile
 19808  004C18  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 19809  004C1A  010F               	movlb	15	; () banked
 19810  004C1C  0E50               	movlw	80	;volatile
 19811  004C1E                     L134:
 19812  004C1E  6E2D               	movwf	ECANReceiveMessage@ptr,c
 19813                           
 19814                           ;ECAN.c: 860: }
 19815  004C20  D07C               	goto	l8843
 19816  004C22                     l8789:
 19817                           
 19818                           ;ECAN.c: 869: else if ( mode == 0x40 )
 19819  004C22  502B               	movf	ECANReceiveMessage@mode,w,c
 19820  004C24  0A40               	xorlw	64
 19821  004C26  A4D8               	btfss	status,2,c
 19822  004C28  D057               	goto	l191
 19823                           
 19824                           ;ECAN.c: 875: {
 19825                           ;ECAN.c: 876: if ( RXB0FUL )
 19826  004C2A  AE60               	btfss	3936,7,c	;volatile
 19827  004C2C  D004               	goto	l192
 19828                           
 19829                           ;ECAN.c: 877: ptr = (BYTE*)&RXB0CON;
 19830  004C2E  0E0F               	movlw	15	;volatile
 19831  004C30  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 19832  004C32  0E60               	movlw	96	;volatile
 19833  004C34  D04F               	goto	L141
 19834  004C36                     l192:
 19835                           
 19836                           ;ECAN.c: 879: else if (RXB1CONbits.RXFUL)
 19837  004C36  010F               	movlb	15	; () banked
 19838  004C38  010F               	movlb	15	; () banked
 19839  004C3A  AF50               	btfss	80,7,b	;volatile
 19840  004C3C  D006               	goto	l194
 19841                           
 19842                           ; BSR set to: 15
 19843                           ;ECAN.c: 880: ptr = (BYTE*)&RXB1CON;
 19844  004C3E  010F               	movlb	15	; () banked
 19845  004C40  0E0F               	movlw	15	;volatile
 19846  004C42  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 19847  004C44  010F               	movlb	15	; () banked
 19848  004C46  0E50               	movlw	80	;volatile
 19849  004C48  D045               	goto	L141
 19850  004C4A                     l194:
 19851                           
 19852                           ; BSR set to: 15
 19853                           ;ECAN.c: 882: else if ( (B0TXEN==0) && B0RXFUL )
 19854  004C4A  010D               	movlb	13
 19855  004C4C  B5F8               	btfsc	248,2,b	;volatile
 19856  004C4E  D009               	goto	l196
 19857  004C50  010E               	movlb	14
 19858  004C52  AF20               	btfss	32,7,b	;volatile
 19859  004C54  D006               	goto	l196
 19860                           
 19861                           ;ECAN.c: 883: ptr = (BYTE*)&B0CON;
 19862  004C56  010E               	movlb	14	; () banked
 19863  004C58  0E0E               	movlw	14	;volatile
 19864  004C5A  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 19865  004C5C  010E               	movlb	14	; () banked
 19866  004C5E  0E20               	movlw	32	;volatile
 19867  004C60  D039               	goto	L141
 19868  004C62                     l196:
 19869                           
 19870                           ;ECAN.c: 885: else if ( (B1TXEN==0) && B1RXFUL )
 19871  004C62  010D               	movlb	13
 19872  004C64  B7F8               	btfsc	248,3,b	;volatile
 19873  004C66  D009               	goto	l198
 19874  004C68  010E               	movlb	14
 19875  004C6A  AF30               	btfss	48,7,b	;volatile
 19876  004C6C  D006               	goto	l198
 19877                           
 19878                           ;ECAN.c: 886: ptr = (BYTE*)&B1CON;
 19879  004C6E  010E               	movlb	14	; () banked
 19880  004C70  0E0E               	movlw	14	;volatile
 19881  004C72  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 19882  004C74  010E               	movlb	14	; () banked
 19883  004C76  0E30               	movlw	48	;volatile
 19884  004C78  D02D               	goto	L141
 19885  004C7A                     l198:
 19886                           
 19887                           ;ECAN.c: 888: else if ( (B2TXEN==0) && B2RXFUL )
 19888  004C7A  010D               	movlb	13
 19889  004C7C  B9F8               	btfsc	248,4,b	;volatile
 19890  004C7E  D009               	goto	l200
 19891  004C80  010E               	movlb	14
 19892  004C82  AF40               	btfss	64,7,b	;volatile
 19893  004C84  D006               	goto	l200
 19894                           
 19895                           ;ECAN.c: 889: ptr = (BYTE*)&B2CON;
 19896  004C86  010E               	movlb	14	; () banked
 19897  004C88  0E0E               	movlw	14	;volatile
 19898  004C8A  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 19899  004C8C  010E               	movlb	14	; () banked
 19900  004C8E  0E40               	movlw	64	;volatile
 19901  004C90  D021               	goto	L141
 19902  004C92                     l200:
 19903                           
 19904                           ;ECAN.c: 891: else if ( (B3TXEN==0) && B3RXFUL )
 19905  004C92  010D               	movlb	13
 19906  004C94  BBF8               	btfsc	248,5,b	;volatile
 19907  004C96  D008               	goto	l202
 19908  004C98  010E               	movlb	14
 19909  004C9A  AF50               	btfss	80,7,b	;volatile
 19910  004C9C  D005               	goto	l202
 19911                           
 19912                           ;ECAN.c: 892: ptr = (BYTE*)&B3CON;
 19913  004C9E  010E               	movlb	14	; () banked
 19914  004CA0  0E0E               	movlw	14	;volatile
 19915  004CA2  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 19916  004CA4  010E               	movlb	14	; () banked
 19917  004CA6  D7CF               	goto	L143
 19918  004CA8                     l202:
 19919                           
 19920                           ;ECAN.c: 894: else if ( (B4TXEN==0) && B4RXFUL )
 19921  004CA8  010D               	movlb	13
 19922  004CAA  BDF8               	btfsc	248,6,b	;volatile
 19923  004CAC  D008               	goto	l204
 19924  004CAE  010E               	movlb	14
 19925  004CB0  AF60               	btfss	96,7,b	;volatile
 19926  004CB2  D005               	goto	l204
 19927                           
 19928                           ;ECAN.c: 895: ptr = (BYTE*)&B4CON;
 19929  004CB4  010E               	movlb	14	; () banked
 19930  004CB6  0E0E               	movlw	14	;volatile
 19931  004CB8  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 19932  004CBA  010E               	movlb	14	; () banked
 19933  004CBC  D7BA               	goto	L144
 19934  004CBE                     l204:
 19935                           
 19936                           ;ECAN.c: 897: else if ( (B5TXEN==0) && B5RXFUL )
 19937  004CBE  010D               	movlb	13
 19938  004CC0  BFF8               	btfsc	248,7,b	;volatile
 19939  004CC2  D016               	goto	l8829
 19940  004CC4  010E               	movlb	14
 19941  004CC6  AF70               	btfss	112,7,b	;volatile
 19942  004CC8  D013               	goto	l8829
 19943                           
 19944                           ;ECAN.c: 898: ptr = (BYTE*)&B5CON;
 19945  004CCA  010E               	movlb	14	; () banked
 19946  004CCC  0E0E               	movlw	14	;volatile
 19947  004CCE  6E2E               	movwf	ECANReceiveMessage@ptr+1,c
 19948  004CD0  010E               	movlb	14	; () banked
 19949  004CD2  0E70               	movlw	112	;volatile
 19950  004CD4                     L141:
 19951  004CD4  6E2D               	movwf	ECANReceiveMessage@ptr,c
 19952  004CD6  D00E               	goto	l8833
 19953  004CD8                     l191:
 19954                           
 19955                           ;ECAN.c: 910: else
 19956                           ;ECAN.c: 915: {
 19957                           ;ECAN.c: 916: if ( FIFOEMPTY == 1 )
 19958  004CD8  AE74               	btfss	3956,7,c	;volatile
 19959  004CDA  D00A               	goto	l8829
 19960                           
 19961                           ;ECAN.c: 917: {
 19962                           ;ECAN.c: 918: ptr = (BYTE*)_ECANPointBuffer(CANCON&0x07);
 19963  004CDC  506F               	movf	3951,w,c	;volatile
 19964  004CDE  0B07               	andlw	7
 19965  004CE0  6E16               	movwf	?__ECANPointBuffer,c
 19966  004CE2  EC79  F033         	call	__ECANPointBuffer	;wreg free
 19967  004CE6  C016  F02D         	movff	?__ECANPointBuffer,ECANReceiveMessage@ptr
 19968  004CEA  C017  F02E         	movff	?__ECANPointBuffer+1,ECANReceiveMessage@ptr+1
 19969                           
 19970                           ;ECAN.c: 920: goto _SaveMode12Message;
 19971  004CEE  D002               	goto	l8833
 19972  004CF0                     l8829:
 19973                           
 19974                           ;ECAN.c: 921: }
 19975                           ;ECAN.c: 923: return FALSE;
 19976  004CF0  0E00               	movlw	0
 19977  004CF2  D08F               	goto	l188
 19978  004CF4                     l8833:
 19979                           
 19980                           ;ECAN.c: 930: _ECANRxFilterHitInfo.Val = *ptr & 0x1f;
 19981  004CF4  C02D  FFD9         	movff	ECANReceiveMessage@ptr,fsr2l
 19982  004CF8  C02E  FFDA         	movff	ECANReceiveMessage@ptr+1,fsr2h
 19983  004CFC  50DF               	movf	indf2,w,c
 19984  004CFE  0B1F               	andlw	31
 19985  004D00  0100               	movlb	0	; () banked
 19986  004D02  0100               	movlb	0	; () banked
 19987  004D04  6FDB               	movwf	__ECANRxFilterHitInfo& (0+255),b
 19988                           
 19989                           ; BSR set to: 0
 19990                           ;ECAN.c: 932: RXB1IF = 0;
 19991  004D06  92A4               	bcf	4004,1,c	;volatile
 19992                           
 19993                           ; BSR set to: 0
 19994                           ;ECAN.c: 934: if ( RXB1OVFL )
 19995  004D08  AC74               	btfss	3956,6,c	;volatile
 19996  004D0A  D007               	goto	l8843
 19997                           
 19998                           ; BSR set to: 0
 19999                           ;ECAN.c: 935: {
 20000                           ;ECAN.c: 936: *msgFlags |= ECAN_RX_OVERFLOW;
 20001  004D0C  C025  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 20002  004D10  C026  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 20003  004D14  0E00               	movlw	0
 20004  004D16  86DB               	bsf	plusw2,3,c
 20005                           
 20006                           ; BSR set to: 0
 20007                           ;ECAN.c: 937: RXB1OVFL = 0;
 20008  004D18  9C74               	bcf	3956,6,c	;volatile
 20009  004D1A                     l8843:
 20010                           
 20011                           ;ECAN.c: 942: savedPtr = ptr;
 20012  004D1A  C02D  F028         	movff	ECANReceiveMessage@ptr,ECANReceiveMessage@savedPtr
 20013  004D1E  C02E  F029         	movff	ECANReceiveMessage@ptr+1,ECANReceiveMessage@savedPtr+1
 20014                           
 20015                           ;ECAN.c: 943: *msgFlags = 0;
 20016  004D22  C025  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 20017  004D26  C026  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 20018  004D2A  0E00               	movlw	0
 20019  004D2C  6EDF               	movwf	indf2,c
 20020                           
 20021                           ;ECAN.c: 946: temp.Val = *(ptr+5);
 20022  004D2E  EE20 F005          	lfsr	2,5
 20023  004D32  502D               	movf	ECANReceiveMessage@ptr,w,c
 20024  004D34  26D9               	addwf	fsr2l,f,c
 20025  004D36  502E               	movf	ECANReceiveMessage@ptr+1,w,c
 20026  004D38  22DA               	addwfc	fsr2h,f,c
 20027  004D3A  50DF               	movf	indf2,w,c
 20028  004D3C  6E2C               	movwf	ECANReceiveMessage@temp,c
 20029                           
 20030                           ;ECAN.c: 947: *dataLen = temp.Val & 0b00001111;
 20031  004D3E  502C               	movf	ECANReceiveMessage@temp,w,c
 20032  004D40  0B0F               	andlw	15
 20033  004D42  C023  FFD9         	movff	ECANReceiveMessage@dataLen,fsr2l
 20034  004D46  C024  FFDA         	movff	ECANReceiveMessage@dataLen+1,fsr2h
 20035  004D4A  6EDF               	movwf	indf2,c
 20036                           
 20037                           ;ECAN.c: 950: if ( temp.bits.b6 )
 20038  004D4C  AC2C               	btfss	ECANReceiveMessage@temp,6,c
 20039  004D4E  D006               	goto	l212
 20040                           
 20041                           ;ECAN.c: 951: *msgFlags |= ECAN_RX_RTR_FRAME;
 20042  004D50  C025  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 20043  004D54  C026  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 20044  004D58  0E00               	movlw	0
 20045  004D5A  8CDB               	bsf	plusw2,6,c
 20046  004D5C                     l212:
 20047                           
 20048                           ;ECAN.c: 954: temp.Val = *(ptr+2);
 20049  004D5C  EE20 F002          	lfsr	2,2
 20050  004D60  502D               	movf	ECANReceiveMessage@ptr,w,c
 20051  004D62  26D9               	addwf	fsr2l,f,c
 20052  004D64  502E               	movf	ECANReceiveMessage@ptr+1,w,c
 20053  004D66  22DA               	addwfc	fsr2h,f,c
 20054  004D68  50DF               	movf	indf2,w,c
 20055  004D6A  6E2C               	movwf	ECANReceiveMessage@temp,c
 20056                           
 20057                           ;ECAN.c: 955: if ( temp.bits.b3 )
 20058  004D6C  A62C               	btfss	ECANReceiveMessage@temp,3,c
 20059  004D6E  D009               	goto	l8861
 20060                           
 20061                           ;ECAN.c: 956: {
 20062                           ;ECAN.c: 957: *msgFlags |= ECAN_RX_XTD_FRAME;
 20063  004D70  C025  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 20064  004D74  C026  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 20065  004D78  0E00               	movlw	0
 20066  004D7A  8ADB               	bsf	plusw2,5,c
 20067                           
 20068                           ;ECAN.c: 958: temp.Val = 1;
 20069  004D7C  6E27               	movwf	??_ECANReceiveMessage& (0+255),c
 20070  004D7E  0E01               	movlw	1
 20071  004D80  D002               	goto	L142
 20072  004D82                     l8861:
 20073                           
 20074                           ;ECAN.c: 960: else
 20075                           ;ECAN.c: 961: temp.Val = 0;
 20076  004D82  6E27               	movwf	??_ECANReceiveMessage& (0+255),c
 20077  004D84  0E00               	movlw	0
 20078  004D86                     L142:
 20079  004D86  6E2C               	movwf	ECANReceiveMessage@temp,c
 20080  004D88  5027               	movf	??_ECANReceiveMessage& (0+255),w,c
 20081                           
 20082                           ;ECAN.c: 963: _RegsToCANID(ptr+1, id, temp.Val);
 20083  004D8A  0E01               	movlw	1
 20084  004D8C  242D               	addwf	ECANReceiveMessage@ptr,w,c
 20085  004D8E  6E16               	movwf	?__RegsToCANID,c
 20086  004D90  0E00               	movlw	0
 20087  004D92  202E               	addwfc	ECANReceiveMessage@ptr+1,w,c
 20088  004D94  6E17               	movwf	?__RegsToCANID+1,c
 20089  004D96  C01F  F018         	movff	ECANReceiveMessage@id,?__RegsToCANID+2
 20090  004D9A  C020  F019         	movff	ECANReceiveMessage@id+1,?__RegsToCANID+3
 20091  004D9E  C02C  F01A         	movff	ECANReceiveMessage@temp,?__RegsToCANID+4
 20092  004DA2  EC67  F02D         	call	__RegsToCANID	;wreg free
 20093                           
 20094                           ;ECAN.c: 966: ptr += 6;
 20095  004DA6  0E06               	movlw	6
 20096  004DA8  262D               	addwf	ECANReceiveMessage@ptr,f,c
 20097  004DAA  0E00               	movlw	0
 20098  004DAC  222E               	addwfc	ECANReceiveMessage@ptr+1,f,c
 20099                           
 20100                           ;ECAN.c: 967: temp.Val = *dataLen;
 20101  004DAE  C023  FFD9         	movff	ECANReceiveMessage@dataLen,fsr2l
 20102  004DB2  C024  FFDA         	movff	ECANReceiveMessage@dataLen+1,fsr2h
 20103  004DB6  50DF               	movf	indf2,w,c
 20104  004DB8  6E2C               	movwf	ECANReceiveMessage@temp,c
 20105                           
 20106                           ;ECAN.c: 968: for ( i = 0; i < temp.Val; i++ )
 20107  004DBA  6E27               	movwf	??_ECANReceiveMessage& (0+255),c
 20108  004DBC  0E00               	movlw	0
 20109  004DBE  6E2A               	movwf	ECANReceiveMessage@i,c
 20110  004DC0  5027               	movf	??_ECANReceiveMessage& (0+255),w,c
 20111  004DC2  D00F               	goto	l8879
 20112  004DC4                     l8871:
 20113                           
 20114                           ;ECAN.c: 969: *data++ = *ptr++;
 20115  004DC4  C02D  FFD9         	movff	ECANReceiveMessage@ptr,fsr2l
 20116  004DC8  C02E  FFDA         	movff	ECANReceiveMessage@ptr+1,fsr2h
 20117  004DCC  C021  FFE1         	movff	ECANReceiveMessage@data,fsr1l
 20118  004DD0  C022  FFE2         	movff	ECANReceiveMessage@data+1,fsr1h
 20119  004DD4  CFDF FFE7          	movff	indf2,indf1
 20120  004DD8  4A2D               	infsnz	ECANReceiveMessage@ptr,f,c
 20121  004DDA  2A2E               	incf	ECANReceiveMessage@ptr+1,f,c
 20122  004DDC  4A21               	infsnz	ECANReceiveMessage@data,f,c
 20123  004DDE  2A22               	incf	ECANReceiveMessage@data+1,f,c
 20124  004DE0  2A2A               	incf	ECANReceiveMessage@i,f,c
 20125  004DE2                     l8879:
 20126  004DE2  502C               	movf	ECANReceiveMessage@temp,w,c
 20127  004DE4  5C2A               	subwf	ECANReceiveMessage@i,w,c
 20128  004DE6  A0D8               	btfss	status,0,c
 20129  004DE8  D7ED               	goto	l8871
 20130                           
 20131                           ;ECAN.c: 972: if ( IRXIF )
 20132  004DEA  AEA4               	btfss	4004,7,c	;volatile
 20133  004DEC  D007               	goto	l8885
 20134                           
 20135                           ;ECAN.c: 973: {
 20136                           ;ECAN.c: 974: *msgFlags |= ECAN_RX_INVALID_MSG;
 20137  004DEE  C025  FFD9         	movff	ECANReceiveMessage@msgFlags,fsr2l
 20138  004DF2  C026  FFDA         	movff	ECANReceiveMessage@msgFlags+1,fsr2h
 20139  004DF6  0E00               	movlw	0
 20140  004DF8  88DB               	bsf	plusw2,4,c
 20141                           
 20142                           ;ECAN.c: 975: IRXIF = 0;
 20143  004DFA  9EA4               	bcf	4004,7,c	;volatile
 20144  004DFC                     l8885:
 20145                           
 20146                           ;ECAN.c: 976: }
 20147                           ;ECAN.c: 979: *savedPtr &= 0x7f;
 20148  004DFC  C028  FFD9         	movff	ECANReceiveMessage@savedPtr,fsr2l
 20149  004E00  C029  FFDA         	movff	ECANReceiveMessage@savedPtr+1,fsr2h
 20150  004E04  0E7F               	movlw	127
 20151  004E06  16DF               	andwf	indf2,f,c
 20152                           
 20153                           ;ECAN.c: 983: if ( mode == 0x80 )
 20154  004E08  502B               	movf	ECANReceiveMessage@mode,w,c
 20155  004E0A  0A80               	xorlw	128
 20156  004E0C  B4D8               	btfsc	status,2,c
 20157                           
 20158                           ;ECAN.c: 984: FIFOEMPTY = 0;
 20159  004E0E  9E74               	bcf	3956,7,c	;volatile
 20160                           
 20161                           ;ECAN.c: 990: return TRUE;
 20162  004E10  0E01               	movlw	1
 20163  004E12                     l188:
 20164  004E12  0012               	return	
 20165  004E14                     __end_of_ECANReceiveMessage:
 20166                           	opt stack 0
 20167                           tblptru	equ	0xFF8
 20168                           tblptrh	equ	0xFF7
 20169                           tblptrl	equ	0xFF6
 20170                           tablat	equ	0xFF5
 20171                           prodh	equ	0xFF4
 20172                           prodl	equ	0xFF3
 20173                           postinc0	equ	0xFEE
 20174                           wreg	equ	0xFE8
 20175                           indf1	equ	0xFE7
 20176                           fsr1h	equ	0xFE2
 20177                           fsr1l	equ	0xFE1
 20178                           indf2	equ	0xFDF
 20179                           postinc2	equ	0xFDE
 20180                           postdec2	equ	0xFDD
 20181                           plusw2	equ	0xFDB
 20182                           fsr2h	equ	0xFDA
 20183                           fsr2l	equ	0xFD9
 20184                           status	equ	0xFD8
 20185                           
 20186 ;; *************** function __RegsToCANID *****************
 20187 ;; Defined at:
 20188 ;;		line 1156 in file "../ECAN.c"
 20189 ;; Parameters:    Size  Location     Type
 20190 ;;  ptr             2   21[COMRAM] PTR unsigned char 
 20191 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 20192 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 20193 ;;  val             2   23[COMRAM] PTR unsigned long 
 20194 ;;		 -> getVSCPFrame@id(4), 
 20195 ;;  type            1   25[COMRAM] unsigned char 
 20196 ;; Auto vars:     Size  Location     Type
 20197 ;;  Value           2   28[COMRAM] PTR struct _CAN_MESSAGE_
 20198 ;;		 -> getVSCPFrame@id(4), 
 20199 ;; Return value:  Size  Location     Type
 20200 ;;		None               void
 20201 ;; Registers used:
 20202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 20203 ;; Tracked objects:
 20204 ;;		On entry : 0/0
 20205 ;;		On exit  : 0/0
 20206 ;;		Unchanged: 0/0
 20207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20208 ;;      Params:         5       0       0       0       0       0       0
 20209 ;;      Locals:         2       0       0       0       0       0       0
 20210 ;;      Temps:          2       0       0       0       0       0       0
 20211 ;;      Totals:         9       0       0       0       0       0       0
 20212 ;;Total ram usage:        9 bytes
 20213 ;; Hardware stack levels used:    1
 20214 ;; Hardware stack levels required when called:    2
 20215 ;; This function calls:
 20216 ;;		Nothing
 20217 ;; This function is called by:
 20218 ;;		_ECANReceiveMessage
 20219 ;; This function uses a non-reentrant model
 20220 ;;
 20221                           
 20222                           	psect	text59
 20223  005ACE                     __ptext59:
 20224                           	opt stack 0
 20225  005ACE                     __RegsToCANID:
 20226                           	opt stack 23
 20227                           
 20228                           ;ECAN.c: 1157: CAN_MESSAGE_ID *Value;
 20229                           ;ECAN.c: 1159: Value = (CAN_MESSAGE_ID*)val;
 20230                           
 20231                           ;incstack = 0
 20232                           ;incstack = 0
 20233  005ACE  C018  F01D         	movff	__RegsToCANID@val,__RegsToCANID@Value
 20234  005AD2  C019  F01E         	movff	__RegsToCANID@val+1,__RegsToCANID@Value+1
 20235                           
 20236                           ;ECAN.c: 1161: if ( type == 0 )
 20237  005AD6  661A               	tstfsz	__RegsToCANID@type,c
 20238  005AD8  D04A               	goto	l8931
 20239                           
 20240                           ;ECAN.c: 1162: {
 20241                           ;ECAN.c: 1164: Value->BYTES.BYTE_1 = (*ptr << 3);
 20242  005ADA  C016  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 20243  005ADE  C017  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 20244  005AE2  50DF               	movf	indf2,w,c
 20245  005AE4  6E1B               	movwf	??__RegsToCANID& (0+255),c
 20246  005AE6  90D8               	bcf	status,0,c
 20247  005AE8  361B               	rlcf	??__RegsToCANID,f,c
 20248  005AEA  90D8               	bcf	status,0,c
 20249  005AEC  361B               	rlcf	??__RegsToCANID,f,c
 20250  005AEE  90D8               	bcf	status,0,c
 20251  005AF0  341B               	rlcf	??__RegsToCANID,w,c
 20252  005AF2  C01D  FFD9         	movff	__RegsToCANID@Value,fsr2l
 20253  005AF6  C01E  FFDA         	movff	__RegsToCANID@Value+1,fsr2h
 20254  005AFA  6EDF               	movwf	indf2,c
 20255                           
 20256                           ;ECAN.c: 1165: Value->BYTES.BYTE_2 = *ptr >> 5;
 20257  005AFC  EE20 F001          	lfsr	2,1
 20258  005B00  501D               	movf	__RegsToCANID@Value,w,c
 20259  005B02  26D9               	addwf	fsr2l,f,c
 20260  005B04  501E               	movf	__RegsToCANID@Value+1,w,c
 20261  005B06  22DA               	addwfc	fsr2h,f,c
 20262  005B08  C016  FFE1         	movff	__RegsToCANID@ptr,fsr1l
 20263  005B0C  C017  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
 20264  005B10  50E7               	movf	indf1,w,c
 20265  005B12  6E1B               	movwf	??__RegsToCANID& (0+255),c
 20266  005B14  0E05               	movlw	5
 20267  005B16  6E1C               	movwf	(??__RegsToCANID+1)& (0+255),c
 20268  005B18                     u10255:
 20269  005B18  90D8               	bcf	status,0,c
 20270  005B1A  321B               	rrcf	??__RegsToCANID,f,c
 20271  005B1C  2E1C               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 20272  005B1E  D7FC               	goto	u10255
 20273  005B20  501B               	movf	??__RegsToCANID,w,c
 20274  005B22  6EDF               	movwf	indf2,c
 20275                           
 20276                           ;ECAN.c: 1166: ptr++;
 20277  005B24  4A16               	infsnz	__RegsToCANID@ptr,f,c
 20278  005B26  2A17               	incf	__RegsToCANID@ptr+1,f,c
 20279                           
 20280                           ;ECAN.c: 1167: Value->BYTES.BYTE_1 |= (*ptr >> 5);
 20281  005B28  C016  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 20282  005B2C  C017  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 20283  005B30  50DF               	movf	indf2,w,c
 20284  005B32  6E1B               	movwf	??__RegsToCANID& (0+255),c
 20285  005B34  0E05               	movlw	5
 20286  005B36  6E1C               	movwf	(??__RegsToCANID+1)& (0+255),c
 20287  005B38                     u10265:
 20288  005B38  90D8               	bcf	status,0,c
 20289  005B3A  321B               	rrcf	??__RegsToCANID,f,c
 20290  005B3C  2E1C               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 20291  005B3E  D7FC               	goto	u10265
 20292  005B40  C01D  FFD9         	movff	__RegsToCANID@Value,fsr2l
 20293  005B44  C01E  FFDA         	movff	__RegsToCANID@Value+1,fsr2h
 20294  005B48  501B               	movf	??__RegsToCANID,w,c
 20295  005B4A  12DF               	iorwf	indf2,f,c
 20296                           
 20297                           ;ECAN.c: 1168: Value->BYTES.BYTE_3 = 0x00;
 20298  005B4C  EE20 F002          	lfsr	2,2
 20299  005B50  501D               	movf	__RegsToCANID@Value,w,c
 20300  005B52  26D9               	addwf	fsr2l,f,c
 20301  005B54  501E               	movf	__RegsToCANID@Value+1,w,c
 20302  005B56  22DA               	addwfc	fsr2h,f,c
 20303  005B58  0E00               	movlw	0
 20304  005B5A  6EDF               	movwf	indf2,c
 20305                           
 20306                           ;ECAN.c: 1169: Value->BYTES.BYTE_4 = 0x00;
 20307  005B5C  EE20 F003          	lfsr	2,3
 20308  005B60  501D               	movf	__RegsToCANID@Value,w,c
 20309  005B62  26D9               	addwf	fsr2l,f,c
 20310  005B64  501E               	movf	__RegsToCANID@Value+1,w,c
 20311  005B66  22DA               	addwfc	fsr2h,f,c
 20312  005B68  0E00               	movlw	0
 20313  005B6A  6EDF               	movwf	indf2,c
 20314                           
 20315                           ;ECAN.c: 1170: }
 20316  005B6C  D069               	goto	l235
 20317  005B6E                     l8931:
 20318                           
 20319                           ;ECAN.c: 1171: else
 20320                           ;ECAN.c: 1172: {
 20321                           ;ECAN.c: 1174: Value->BYTES.BYTE_3 = (*ptr << 5);
 20322  005B6E  EE20 F002          	lfsr	2,2
 20323  005B72  501D               	movf	__RegsToCANID@Value,w,c
 20324  005B74  26D9               	addwf	fsr2l,f,c
 20325  005B76  501E               	movf	__RegsToCANID@Value+1,w,c
 20326  005B78  22DA               	addwfc	fsr2h,f,c
 20327  005B7A  C016  FFE1         	movff	__RegsToCANID@ptr,fsr1l
 20328  005B7E  C017  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
 20329  005B82  50E7               	movf	indf1,w,c
 20330  005B84  6E1B               	movwf	??__RegsToCANID& (0+255),c
 20331  005B86  0E05               	movlw	5
 20332  005B88  6E1C               	movwf	(??__RegsToCANID+1)& (0+255),c
 20333  005B8A                     u10275:
 20334  005B8A  90D8               	bcf	status,0,c
 20335  005B8C  361B               	rlcf	??__RegsToCANID,f,c
 20336  005B8E  2E1C               	decfsz	(??__RegsToCANID+1)& (0+255),f,c
 20337  005B90  D7FC               	goto	u10275
 20338  005B92  501B               	movf	??__RegsToCANID,w,c
 20339  005B94  6EDF               	movwf	indf2,c
 20340                           
 20341                           ;ECAN.c: 1175: Value->BYTES.BYTE_4 = (*ptr >> 3);
 20342  005B96  EE20 F003          	lfsr	2,3
 20343  005B9A  501D               	movf	__RegsToCANID@Value,w,c
 20344  005B9C  26D9               	addwf	fsr2l,f,c
 20345  005B9E  501E               	movf	__RegsToCANID@Value+1,w,c
 20346  005BA0  22DA               	addwfc	fsr2h,f,c
 20347  005BA2  C016  FFE1         	movff	__RegsToCANID@ptr,fsr1l
 20348  005BA6  C017  FFE2         	movff	__RegsToCANID@ptr+1,fsr1h
 20349  005BAA  50E7               	movf	indf1,w,c
 20350  005BAC  6E1B               	movwf	??__RegsToCANID& (0+255),c
 20351  005BAE  90D8               	bcf	status,0,c
 20352  005BB0  321B               	rrcf	??__RegsToCANID,f,c
 20353  005BB2  90D8               	bcf	status,0,c
 20354  005BB4  321B               	rrcf	??__RegsToCANID,f,c
 20355  005BB6  90D8               	bcf	status,0,c
 20356  005BB8  301B               	rrcf	??__RegsToCANID,w,c
 20357  005BBA  6EDF               	movwf	indf2,c
 20358                           
 20359                           ;ECAN.c: 1176: ptr++;
 20360  005BBC  4A16               	infsnz	__RegsToCANID@ptr,f,c
 20361  005BBE  2A17               	incf	__RegsToCANID@ptr+1,f,c
 20362                           
 20363                           ;ECAN.c: 1177: Value->BYTES.BYTE_3 |= (*ptr & 0x03);
 20364  005BC0  C016  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 20365  005BC4  C017  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 20366  005BC8  50DF               	movf	indf2,w,c
 20367  005BCA  6E1B               	movwf	??__RegsToCANID& (0+255),c
 20368  005BCC  0E03               	movlw	3
 20369  005BCE  161B               	andwf	??__RegsToCANID,f,c
 20370  005BD0  EE20 F002          	lfsr	2,2
 20371  005BD4  501D               	movf	__RegsToCANID@Value,w,c
 20372  005BD6  26D9               	addwf	fsr2l,f,c
 20373  005BD8  501E               	movf	__RegsToCANID@Value+1,w,c
 20374  005BDA  22DA               	addwfc	fsr2h,f,c
 20375  005BDC  501B               	movf	??__RegsToCANID,w,c
 20376  005BDE  12DF               	iorwf	indf2,f,c
 20377                           
 20378                           ;ECAN.c: 1179: Value->BYTES.BYTE_3 |= ((*ptr & 0xe0) >> 3);
 20379  005BE0  C016  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 20380  005BE4  C017  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 20381  005BE8  50DF               	movf	indf2,w,c
 20382  005BEA  6E1B               	movwf	??__RegsToCANID& (0+255),c
 20383  005BEC  90D8               	bcf	status,0,c
 20384  005BEE  321B               	rrcf	??__RegsToCANID,f,c
 20385  005BF0  90D8               	bcf	status,0,c
 20386  005BF2  321B               	rrcf	??__RegsToCANID,f,c
 20387  005BF4  90D8               	bcf	status,0,c
 20388  005BF6  321B               	rrcf	??__RegsToCANID,f,c
 20389  005BF8  0E1C               	movlw	28
 20390  005BFA  161B               	andwf	??__RegsToCANID,f,c
 20391  005BFC  EE20 F002          	lfsr	2,2
 20392  005C00  501D               	movf	__RegsToCANID@Value,w,c
 20393  005C02  26D9               	addwf	fsr2l,f,c
 20394  005C04  501E               	movf	__RegsToCANID@Value+1,w,c
 20395  005C06  22DA               	addwfc	fsr2h,f,c
 20396  005C08  501B               	movf	??__RegsToCANID,w,c
 20397  005C0A  12DF               	iorwf	indf2,f,c
 20398                           
 20399                           ;ECAN.c: 1180: ptr++;
 20400  005C0C  4A16               	infsnz	__RegsToCANID@ptr,f,c
 20401  005C0E  2A17               	incf	__RegsToCANID@ptr+1,f,c
 20402                           
 20403                           ;ECAN.c: 1181: Value->BYTES.BYTE_2 = *ptr;
 20404  005C10  C016  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 20405  005C14  C017  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 20406  005C18  EE10 F001          	lfsr	1,1
 20407  005C1C  501D               	movf	__RegsToCANID@Value,w,c
 20408  005C1E  26E1               	addwf	fsr1l,f,c
 20409  005C20  501E               	movf	__RegsToCANID@Value+1,w,c
 20410  005C22  22E2               	addwfc	fsr1h,f,c
 20411  005C24  CFDF FFE7          	movff	indf2,indf1
 20412                           
 20413                           ;ECAN.c: 1182: ptr++;
 20414  005C28  4A16               	infsnz	__RegsToCANID@ptr,f,c
 20415  005C2A  2A17               	incf	__RegsToCANID@ptr+1,f,c
 20416                           
 20417                           ;ECAN.c: 1183: Value->BYTES.BYTE_1 = *ptr;
 20418  005C2C  C016  FFD9         	movff	__RegsToCANID@ptr,fsr2l
 20419  005C30  C017  FFDA         	movff	__RegsToCANID@ptr+1,fsr2h
 20420  005C34  C01D  FFE1         	movff	__RegsToCANID@Value,fsr1l
 20421  005C38  C01E  FFE2         	movff	__RegsToCANID@Value+1,fsr1h
 20422  005C3C  CFDF FFE7          	movff	indf2,indf1
 20423  005C40                     l235:
 20424  005C40  0012               	return	
 20425  005C42                     __end_of__RegsToCANID:
 20426                           	opt stack 0
 20427                           tblptru	equ	0xFF8
 20428                           tblptrh	equ	0xFF7
 20429                           tblptrl	equ	0xFF6
 20430                           tablat	equ	0xFF5
 20431                           prodh	equ	0xFF4
 20432                           prodl	equ	0xFF3
 20433                           postinc0	equ	0xFEE
 20434                           wreg	equ	0xFE8
 20435                           indf1	equ	0xFE7
 20436                           fsr1h	equ	0xFE2
 20437                           fsr1l	equ	0xFE1
 20438                           indf2	equ	0xFDF
 20439                           postinc2	equ	0xFDE
 20440                           postdec2	equ	0xFDD
 20441                           plusw2	equ	0xFDB
 20442                           fsr2h	equ	0xFDA
 20443                           fsr2l	equ	0xFD9
 20444                           status	equ	0xFD8
 20445                           
 20446 ;; *************** function __ECANPointBuffer *****************
 20447 ;; Defined at:
 20448 ;;		line 1207 in file "../ECAN.c"
 20449 ;; Parameters:    Size  Location     Type
 20450 ;;  b               1   21[COMRAM] unsigned char 
 20451 ;; Auto vars:     Size  Location     Type
 20452 ;;  pt              2   23[COMRAM] PTR unsigned char 
 20453 ;;		 -> B5CON(1), B4CON(1), B3CON(1), B2CON(1), 
 20454 ;;		 -> B1CON(1), B0CON(1), RXB1CON(1), RXB0CON(1), 
 20455 ;; Return value:  Size  Location     Type
 20456 ;;                  2   21[COMRAM] PTR unsigned char 
 20457 ;; Registers used:
 20458 ;;		wreg, status,2, status,0
 20459 ;; Tracked objects:
 20460 ;;		On entry : 0/0
 20461 ;;		On exit  : 0/0
 20462 ;;		Unchanged: 0/0
 20463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20464 ;;      Params:         2       0       0       0       0       0       0
 20465 ;;      Locals:         2       0       0       0       0       0       0
 20466 ;;      Temps:          0       0       0       0       0       0       0
 20467 ;;      Totals:         4       0       0       0       0       0       0
 20468 ;;Total ram usage:        4 bytes
 20469 ;; Hardware stack levels used:    1
 20470 ;; Hardware stack levels required when called:    2
 20471 ;; This function calls:
 20472 ;;		Nothing
 20473 ;; This function is called by:
 20474 ;;		_ECANReceiveMessage
 20475 ;; This function uses a non-reentrant model
 20476 ;;
 20477                           
 20478                           	psect	text60
 20479  0066F2                     __ptext60:
 20480                           	opt stack 0
 20481  0066F2                     __ECANPointBuffer:
 20482                           	opt stack 23
 20483                           
 20484                           ;ECAN.c: 1208: BYTE* pt;
 20485                           ;ECAN.c: 1210: switch(b)
 20486                           
 20487                           ;incstack = 0
 20488                           ;incstack = 0
 20489  0066F2  D02D               	goto	l8915
 20490  0066F4                     l8897:
 20491                           
 20492                           ;ECAN.c: 1213: pt=(BYTE*)&RXB0CON;
 20493  0066F4  0E0F               	movlw	15	;volatile
 20494  0066F6  6E19               	movwf	__ECANPointBuffer@pt+1,c
 20495  0066F8  0E60               	movlw	96	;volatile
 20496  0066FA  D027               	goto	L151
 20497  0066FC                     l8899:
 20498                           
 20499                           ;ECAN.c: 1216: pt=(BYTE*)&RXB1CON;
 20500  0066FC  010F               	movlb	15	; () banked
 20501  0066FE  0E0F               	movlw	15	;volatile
 20502  006700  6E19               	movwf	__ECANPointBuffer@pt+1,c
 20503  006702  010F               	movlb	15	; () banked
 20504  006704  0E50               	movlw	80	;volatile
 20505  006706  D021               	goto	L151
 20506  006708                     l8901:
 20507                           
 20508                           ;ECAN.c: 1219: pt=(BYTE*)&B0CON;
 20509  006708  010E               	movlb	14	; () banked
 20510  00670A  0E0E               	movlw	14	;volatile
 20511  00670C  6E19               	movwf	__ECANPointBuffer@pt+1,c
 20512  00670E  010E               	movlb	14	; () banked
 20513  006710  0E20               	movlw	32	;volatile
 20514  006712  D01B               	goto	L151
 20515  006714                     l8903:
 20516                           
 20517                           ;ECAN.c: 1222: pt=(BYTE*)&B1CON;
 20518  006714  010E               	movlb	14	; () banked
 20519  006716  0E0E               	movlw	14	;volatile
 20520  006718  6E19               	movwf	__ECANPointBuffer@pt+1,c
 20521  00671A  010E               	movlb	14	; () banked
 20522  00671C  0E30               	movlw	48	;volatile
 20523  00671E  D015               	goto	L151
 20524  006720                     l8905:
 20525                           
 20526                           ;ECAN.c: 1225: pt=(BYTE*)&B2CON;
 20527  006720  010E               	movlb	14	; () banked
 20528  006722  0E0E               	movlw	14	;volatile
 20529  006724  6E19               	movwf	__ECANPointBuffer@pt+1,c
 20530  006726  010E               	movlb	14	; () banked
 20531  006728  0E40               	movlw	64	;volatile
 20532  00672A  D00F               	goto	L151
 20533  00672C                     l8907:
 20534                           
 20535                           ;ECAN.c: 1228: pt=(BYTE*)&B3CON;
 20536  00672C  010E               	movlb	14	; () banked
 20537  00672E  0E0E               	movlw	14	;volatile
 20538  006730  6E19               	movwf	__ECANPointBuffer@pt+1,c
 20539  006732  010E               	movlb	14	; () banked
 20540  006734  D7E7               	goto	L152
 20541  006736                     l8909:
 20542                           
 20543                           ;ECAN.c: 1231: pt=(BYTE*)&B4CON;
 20544  006736  010E               	movlb	14	; () banked
 20545  006738  0E0E               	movlw	14	;volatile
 20546  00673A  6E19               	movwf	__ECANPointBuffer@pt+1,c
 20547  00673C  010E               	movlb	14	; () banked
 20548  00673E  D7DC               	goto	L153
 20549  006740                     l8911:
 20550                           
 20551                           ;ECAN.c: 1234: pt=(BYTE*)&B5CON;
 20552  006740  010E               	movlb	14	; () banked
 20553  006742  0E0E               	movlw	14	;volatile
 20554  006744  6E19               	movwf	__ECANPointBuffer@pt+1,c
 20555  006746  010E               	movlb	14	; () banked
 20556  006748  0E70               	movlw	112	;volatile
 20557  00674A                     L151:
 20558  00674A  6E18               	movwf	__ECANPointBuffer@pt,c
 20559                           
 20560                           ;ECAN.c: 1235: break;
 20561  00674C  D017               	goto	l240
 20562  00674E                     l8915:
 20563  00674E  5016               	movf	__ECANPointBuffer@b,w,c
 20564                           
 20565                           ; Switch size 1, requested type "space"
 20566                           ; Number of cases is 7, Range of values is 0 to 6
 20567                           ; switch strategies available:
 20568                           ; Name         Instructions Cycles
 20569                           ; simple_byte           22    12 (average)
 20570                           ;	Chosen strategy is simple_byte
 20571  006750  0A00               	xorlw	0	; case 0
 20572  006752  B4D8               	btfsc	status,2,c
 20573  006754  D7CF               	goto	l8897
 20574  006756  0A01               	xorlw	1	; case 1
 20575  006758  B4D8               	btfsc	status,2,c
 20576  00675A  D7D0               	goto	l8899
 20577  00675C  0A03               	xorlw	3	; case 2
 20578  00675E  B4D8               	btfsc	status,2,c
 20579  006760  D7D3               	goto	l8901
 20580  006762  0A01               	xorlw	1	; case 3
 20581  006764  B4D8               	btfsc	status,2,c
 20582  006766  D7D6               	goto	l8903
 20583  006768  0A07               	xorlw	7	; case 4
 20584  00676A  B4D8               	btfsc	status,2,c
 20585  00676C  D7D9               	goto	l8905
 20586  00676E  0A01               	xorlw	1	; case 5
 20587  006770  B4D8               	btfsc	status,2,c
 20588  006772  D7DC               	goto	l8907
 20589  006774  0A03               	xorlw	3	; case 6
 20590  006776  B4D8               	btfsc	status,2,c
 20591  006778  D7DE               	goto	l8909
 20592  00677A  D7E2               	goto	l8911
 20593  00677C                     l240:
 20594                           
 20595                           ;ECAN.c: 1237: return (pt);
 20596  00677C  C018  F016         	movff	__ECANPointBuffer@pt,?__ECANPointBuffer
 20597  006780  C019  F017         	movff	__ECANPointBuffer@pt+1,?__ECANPointBuffer+1
 20598  006784  0012               	return	
 20599  006786                     __end_of__ECANPointBuffer:
 20600                           	opt stack 0
 20601                           tblptru	equ	0xFF8
 20602                           tblptrh	equ	0xFF7
 20603                           tblptrl	equ	0xFF6
 20604                           tablat	equ	0xFF5
 20605                           prodh	equ	0xFF4
 20606                           prodl	equ	0xFF3
 20607                           postinc0	equ	0xFEE
 20608                           wreg	equ	0xFE8
 20609                           indf1	equ	0xFE7
 20610                           fsr1h	equ	0xFE2
 20611                           fsr1l	equ	0xFE1
 20612                           indf2	equ	0xFDF
 20613                           postinc2	equ	0xFDE
 20614                           postdec2	equ	0xFDD
 20615                           plusw2	equ	0xFDB
 20616                           fsr2h	equ	0xFDA
 20617                           fsr2l	equ	0xFD9
 20618                           status	equ	0xFD8
 20619                           
 20620 ;; *************** function _vscp_check_pstorage *****************
 20621 ;; Defined at:
 20622 ;;		line 168 in file "../../vscp_firmware/common/vscp_firmware.c"
 20623 ;; Parameters:    Size  Location     Type
 20624 ;;		None
 20625 ;; Auto vars:     Size  Location     Type
 20626 ;;		None
 20627 ;; Return value:  Size  Location     Type
 20628 ;;                  1    wreg      unsigned char 
 20629 ;; Registers used:
 20630 ;;		wreg, status,2, status,0, cstack
 20631 ;; Tracked objects:
 20632 ;;		On entry : 0/0
 20633 ;;		On exit  : 0/0
 20634 ;;		Unchanged: 0/0
 20635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20636 ;;      Params:         0       0       0       0       0       0       0
 20637 ;;      Locals:         0       0       0       0       0       0       0
 20638 ;;      Temps:          1       0       0       0       0       0       0
 20639 ;;      Totals:         1       0       0       0       0       0       0
 20640 ;;Total ram usage:        1 bytes
 20641 ;; Hardware stack levels used:    1
 20642 ;; Hardware stack levels required when called:    4
 20643 ;; This function calls:
 20644 ;;		_vscp_writeNicknamePermanent
 20645 ;;		_vscp_getSegmentCRC
 20646 ;;		_vscp_setSegmentCRC
 20647 ;;		_vscp_setControlByte
 20648 ;; This function is called by:
 20649 ;;		_main
 20650 ;; This function uses a non-reentrant model
 20651 ;;
 20652                           
 20653                           	psect	text61
 20654  006B76                     __ptext61:
 20655                           	opt stack 0
 20656  006B76                     _vscp_check_pstorage:
 20657                           	opt stack 25
 20658                           
 20659                           ;vscp_firmware.c: 171: if ((vscp_getSegmentCRC() & 0xc0) == 0x40) {
 20660                           
 20661                           ;incstack = 0
 20662                           ;incstack = 0
 20663  006B76  EC24  F037         	call	_vscp_getSegmentCRC	;wreg free
 20664  006B7A  0BC0               	andlw	192
 20665  006B7C  0A40               	xorlw	64
 20666  006B7E  A4D8               	btfss	status,2,c
 20667  006B80  D002               	goto	l9087
 20668                           
 20669                           ;vscp_firmware.c: 172: return !0;
 20670  006B82  0E01               	movlw	1
 20671  006B84  D013               	goto	l1142
 20672  006B86                     l9087:
 20673                           
 20674                           ;vscp_firmware.c: 173: }
 20675                           ;vscp_firmware.c: 176: vscp_writeNicknamePermanent(0xff);
 20676  006B86  6E1C               	movwf	??_vscp_check_pstorage& (0+255),c
 20677  006B88  0EFF               	movlw	255
 20678  006B8A  6E1B               	movwf	?_vscp_writeNicknamePermanent,c
 20679  006B8C  501C               	movf	??_vscp_check_pstorage& (0+255),w,c
 20680  006B8E  ECB2  F036         	call	_vscp_writeNicknamePermanent	;wreg free
 20681                           
 20682                           ;vscp_firmware.c: 179: vscp_setSegmentCRC(0x00);
 20683  006B92  6E1C               	movwf	??_vscp_check_pstorage& (0+255),c
 20684  006B94  0E00               	movlw	0
 20685  006B96  6E1B               	movwf	?_vscp_setSegmentCRC,c
 20686  006B98  501C               	movf	??_vscp_check_pstorage& (0+255),w,c
 20687  006B9A  ECA7  F036         	call	_vscp_setSegmentCRC	;wreg free
 20688                           
 20689                           ;vscp_firmware.c: 183: vscp_setControlByte(0xA0);
 20690  006B9E  6E1C               	movwf	??_vscp_check_pstorage& (0+255),c
 20691  006BA0  0EA0               	movlw	160
 20692  006BA2  6E1B               	movwf	?_vscp_setControlByte,c
 20693  006BA4  501C               	movf	??_vscp_check_pstorage& (0+255),w,c
 20694  006BA6  EC9C  F036         	call	_vscp_setControlByte	;wreg free
 20695                           
 20696                           ;vscp_firmware.c: 185: return 0;
 20697  006BAA  0E00               	movlw	0
 20698  006BAC                     l1142:
 20699  006BAC  0012               	return	
 20700  006BAE                     __end_of_vscp_check_pstorage:
 20701                           	opt stack 0
 20702                           tblptru	equ	0xFF8
 20703                           tblptrh	equ	0xFF7
 20704                           tblptrl	equ	0xFF6
 20705                           tablat	equ	0xFF5
 20706                           prodh	equ	0xFF4
 20707                           prodl	equ	0xFF3
 20708                           postinc0	equ	0xFEE
 20709                           wreg	equ	0xFE8
 20710                           indf1	equ	0xFE7
 20711                           fsr1h	equ	0xFE2
 20712                           fsr1l	equ	0xFE1
 20713                           indf2	equ	0xFDF
 20714                           postinc2	equ	0xFDE
 20715                           postdec2	equ	0xFDD
 20716                           plusw2	equ	0xFDB
 20717                           fsr2h	equ	0xFDA
 20718                           fsr2l	equ	0xFD9
 20719                           status	equ	0xFD8
 20720                           
 20721 ;; *************** function _vscp_setControlByte *****************
 20722 ;; Defined at:
 20723 ;;		line 2928 in file "../main.c"
 20724 ;; Parameters:    Size  Location     Type
 20725 ;;  ctrl            1   26[COMRAM] unsigned char 
 20726 ;; Auto vars:     Size  Location     Type
 20727 ;;		None
 20728 ;; Return value:  Size  Location     Type
 20729 ;;		None               void
 20730 ;; Registers used:
 20731 ;;		wreg, status,2, cstack
 20732 ;; Tracked objects:
 20733 ;;		On entry : 0/0
 20734 ;;		On exit  : 0/0
 20735 ;;		Unchanged: 0/0
 20736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20737 ;;      Params:         1       0       0       0       0       0       0
 20738 ;;      Locals:         0       0       0       0       0       0       0
 20739 ;;      Temps:          0       0       0       0       0       0       0
 20740 ;;      Totals:         1       0       0       0       0       0       0
 20741 ;;Total ram usage:        1 bytes
 20742 ;; Hardware stack levels used:    1
 20743 ;; Hardware stack levels required when called:    3
 20744 ;; This function calls:
 20745 ;;		_Busy_eep
 20746 ;;		_Write_b_eep
 20747 ;; This function is called by:
 20748 ;;		_vscp_check_pstorage
 20749 ;; This function uses a non-reentrant model
 20750 ;;
 20751                           
 20752                           	psect	text62
 20753  006D38                     __ptext62:
 20754                           	opt stack 0
 20755  006D38                     _vscp_setControlByte:
 20756                           	opt stack 25
 20757                           
 20758                           ;main.c: 2929: (Busy_eep(), Write_b_eep(0x03,ctrl));
 20759                           
 20760                           ;incstack = 0
 20761                           ;incstack = 0
 20762  006D38  EC35  F037         	call	_Busy_eep	;wreg free
 20763  006D3C  0E00               	movlw	0
 20764  006D3E  6E17               	movwf	?_Write_b_eep+1,c
 20765  006D40  0E03               	movlw	3
 20766  006D42  6E16               	movwf	?_Write_b_eep,c
 20767  006D44  C01B  F018         	movff	vscp_setControlByte@ctrl,?_Write_b_eep+2
 20768  006D48  EC65  F035         	call	_Write_b_eep	;wreg free
 20769  006D4C  0012               	return	
 20770  006D4E                     __end_of_vscp_setControlByte:
 20771                           	opt stack 0
 20772                           tblptru	equ	0xFF8
 20773                           tblptrh	equ	0xFF7
 20774                           tblptrl	equ	0xFF6
 20775                           tablat	equ	0xFF5
 20776                           prodh	equ	0xFF4
 20777                           prodl	equ	0xFF3
 20778                           postinc0	equ	0xFEE
 20779                           wreg	equ	0xFE8
 20780                           indf1	equ	0xFE7
 20781                           fsr1h	equ	0xFE2
 20782                           fsr1l	equ	0xFE1
 20783                           indf2	equ	0xFDF
 20784                           postinc2	equ	0xFDE
 20785                           postdec2	equ	0xFDD
 20786                           plusw2	equ	0xFDB
 20787                           fsr2h	equ	0xFDA
 20788                           fsr2l	equ	0xFD9
 20789                           status	equ	0xFD8
 20790                           
 20791 ;; *************** function _vscp_setSegmentCRC *****************
 20792 ;; Defined at:
 20793 ;;		line 2919 in file "../main.c"
 20794 ;; Parameters:    Size  Location     Type
 20795 ;;  crc             1   26[COMRAM] unsigned char 
 20796 ;; Auto vars:     Size  Location     Type
 20797 ;;		None
 20798 ;; Return value:  Size  Location     Type
 20799 ;;		None               void
 20800 ;; Registers used:
 20801 ;;		wreg, status,2, cstack
 20802 ;; Tracked objects:
 20803 ;;		On entry : 0/0
 20804 ;;		On exit  : 0/0
 20805 ;;		Unchanged: 0/0
 20806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20807 ;;      Params:         1       0       0       0       0       0       0
 20808 ;;      Locals:         0       0       0       0       0       0       0
 20809 ;;      Temps:          0       0       0       0       0       0       0
 20810 ;;      Totals:         1       0       0       0       0       0       0
 20811 ;;Total ram usage:        1 bytes
 20812 ;; Hardware stack levels used:    1
 20813 ;; Hardware stack levels required when called:    3
 20814 ;; This function calls:
 20815 ;;		_Busy_eep
 20816 ;;		_Write_b_eep
 20817 ;; This function is called by:
 20818 ;;		_vscp_check_pstorage
 20819 ;;		_vscp_handleProbeState
 20820 ;;		_vscp_handleHeartbeat
 20821 ;;		_vscp_handleSetNickname
 20822 ;;		_vscp_handlePreActiveState
 20823 ;; This function uses a non-reentrant model
 20824 ;;
 20825                           
 20826                           	psect	text63
 20827  006D4E                     __ptext63:
 20828                           	opt stack 0
 20829  006D4E                     _vscp_setSegmentCRC:
 20830                           	opt stack 24
 20831                           
 20832                           ;main.c: 2920: (Busy_eep(), Write_b_eep(0x02,crc));
 20833                           
 20834                           ;incstack = 0
 20835                           ;incstack = 0
 20836  006D4E  EC35  F037         	call	_Busy_eep	;wreg free
 20837  006D52  0E00               	movlw	0
 20838  006D54  6E17               	movwf	?_Write_b_eep+1,c
 20839  006D56  0E02               	movlw	2
 20840  006D58  6E16               	movwf	?_Write_b_eep,c
 20841  006D5A  C01B  F018         	movff	vscp_setSegmentCRC@crc,?_Write_b_eep+2
 20842  006D5E  EC65  F035         	call	_Write_b_eep	;wreg free
 20843  006D62  0012               	return	
 20844  006D64                     __end_of_vscp_setSegmentCRC:
 20845                           	opt stack 0
 20846                           tblptru	equ	0xFF8
 20847                           tblptrh	equ	0xFF7
 20848                           tblptrl	equ	0xFF6
 20849                           tablat	equ	0xFF5
 20850                           prodh	equ	0xFF4
 20851                           prodl	equ	0xFF3
 20852                           postinc0	equ	0xFEE
 20853                           wreg	equ	0xFE8
 20854                           indf1	equ	0xFE7
 20855                           fsr1h	equ	0xFE2
 20856                           fsr1l	equ	0xFE1
 20857                           indf2	equ	0xFDF
 20858                           postinc2	equ	0xFDE
 20859                           postdec2	equ	0xFDD
 20860                           plusw2	equ	0xFDB
 20861                           fsr2h	equ	0xFDA
 20862                           fsr2l	equ	0xFD9
 20863                           status	equ	0xFD8
 20864                           
 20865 ;; *************** function _vscp_getSegmentCRC *****************
 20866 ;; Defined at:
 20867 ;;		line 2910 in file "../main.c"
 20868 ;; Parameters:    Size  Location     Type
 20869 ;;		None
 20870 ;; Auto vars:     Size  Location     Type
 20871 ;;		None
 20872 ;; Return value:  Size  Location     Type
 20873 ;;                  1    wreg      unsigned char 
 20874 ;; Registers used:
 20875 ;;		wreg, status,2, cstack
 20876 ;; Tracked objects:
 20877 ;;		On entry : 0/0
 20878 ;;		On exit  : 0/0
 20879 ;;		Unchanged: 0/0
 20880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20881 ;;      Params:         0       0       0       0       0       0       0
 20882 ;;      Locals:         0       0       0       0       0       0       0
 20883 ;;      Temps:          0       0       0       0       0       0       0
 20884 ;;      Totals:         0       0       0       0       0       0       0
 20885 ;;Total ram usage:        0 bytes
 20886 ;; Hardware stack levels used:    1
 20887 ;; Hardware stack levels required when called:    3
 20888 ;; This function calls:
 20889 ;;		_Read_b_eep
 20890 ;; This function is called by:
 20891 ;;		_vscp_check_pstorage
 20892 ;;		_vscp_handleHeartbeat
 20893 ;; This function uses a non-reentrant model
 20894 ;;
 20895                           
 20896                           	psect	text64
 20897  006E48                     __ptext64:
 20898                           	opt stack 0
 20899  006E48                     _vscp_getSegmentCRC:
 20900                           	opt stack 24
 20901                           
 20902                           ;main.c: 2911: return Read_b_eep(0x02);
 20903                           
 20904                           ;incstack = 0
 20905                           ;incstack = 0
 20906  006E48  0E00               	movlw	0
 20907  006E4A  6E17               	movwf	?_Read_b_eep+1,c
 20908  006E4C  0E02               	movlw	2
 20909  006E4E  6E16               	movwf	?_Read_b_eep,c
 20910  006E50  ECFD  F036         	call	_Read_b_eep	;wreg free
 20911  006E54  0012               	return	
 20912  006E56                     __end_of_vscp_getSegmentCRC:
 20913                           	opt stack 0
 20914                           tblptru	equ	0xFF8
 20915                           tblptrh	equ	0xFF7
 20916                           tblptrl	equ	0xFF6
 20917                           tablat	equ	0xFF5
 20918                           prodh	equ	0xFF4
 20919                           prodl	equ	0xFF3
 20920                           postinc0	equ	0xFEE
 20921                           wreg	equ	0xFE8
 20922                           indf1	equ	0xFE7
 20923                           fsr1h	equ	0xFE2
 20924                           fsr1l	equ	0xFE1
 20925                           indf2	equ	0xFDF
 20926                           postinc2	equ	0xFDE
 20927                           postdec2	equ	0xFDD
 20928                           plusw2	equ	0xFDB
 20929                           fsr2h	equ	0xFDA
 20930                           fsr2l	equ	0xFD9
 20931                           status	equ	0xFD8
 20932                           
 20933 ;; *************** function _vscp_writeNicknamePermanent *****************
 20934 ;; Defined at:
 20935 ;;		line 968 in file "../main.c"
 20936 ;; Parameters:    Size  Location     Type
 20937 ;;  nickname        1   26[COMRAM] unsigned char 
 20938 ;; Auto vars:     Size  Location     Type
 20939 ;;		None
 20940 ;; Return value:  Size  Location     Type
 20941 ;;		None               void
 20942 ;; Registers used:
 20943 ;;		wreg, status,2, cstack
 20944 ;; Tracked objects:
 20945 ;;		On entry : 0/0
 20946 ;;		On exit  : 0/0
 20947 ;;		Unchanged: 0/0
 20948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20949 ;;      Params:         1       0       0       0       0       0       0
 20950 ;;      Locals:         0       0       0       0       0       0       0
 20951 ;;      Temps:          0       0       0       0       0       0       0
 20952 ;;      Totals:         1       0       0       0       0       0       0
 20953 ;;Total ram usage:        1 bytes
 20954 ;; Hardware stack levels used:    1
 20955 ;; Hardware stack levels required when called:    3
 20956 ;; This function calls:
 20957 ;;		_Busy_eep
 20958 ;;		_Write_b_eep
 20959 ;; This function is called by:
 20960 ;;		_vscp_check_pstorage
 20961 ;;		_vscp_handleProbeState
 20962 ;;		_vscp_handleHeartbeat
 20963 ;;		_vscp_handleSetNickname
 20964 ;;		_vscp_handleDropNickname
 20965 ;;		_vscp_handlePreActiveState
 20966 ;; This function uses a non-reentrant model
 20967 ;;
 20968                           
 20969                           	psect	text65
 20970  006D64                     __ptext65:
 20971                           	opt stack 0
 20972  006D64                     _vscp_writeNicknamePermanent:
 20973                           	opt stack 24
 20974                           
 20975                           ;main.c: 969: (Busy_eep(), Write_b_eep(0x01,nickname));
 20976                           
 20977                           ;incstack = 0
 20978                           ;incstack = 0
 20979  006D64  EC35  F037         	call	_Busy_eep	;wreg free
 20980  006D68  0E00               	movlw	0
 20981  006D6A  6E17               	movwf	?_Write_b_eep+1,c
 20982  006D6C  0E01               	movlw	1
 20983  006D6E  6E16               	movwf	?_Write_b_eep,c
 20984  006D70  C01B  F018         	movff	vscp_writeNicknamePermanent@nickname,?_Write_b_eep+2
 20985  006D74  EC65  F035         	call	_Write_b_eep	;wreg free
 20986  006D78  0012               	return	
 20987  006D7A                     __end_of_vscp_writeNicknamePermanent:
 20988                           	opt stack 0
 20989                           tblptru	equ	0xFF8
 20990                           tblptrh	equ	0xFF7
 20991                           tblptrl	equ	0xFF6
 20992                           tablat	equ	0xFF5
 20993                           prodh	equ	0xFF4
 20994                           prodl	equ	0xFF3
 20995                           postinc0	equ	0xFEE
 20996                           wreg	equ	0xFE8
 20997                           indf1	equ	0xFE7
 20998                           fsr1h	equ	0xFE2
 20999                           fsr1l	equ	0xFE1
 21000                           indf2	equ	0xFDF
 21001                           postinc2	equ	0xFDE
 21002                           postdec2	equ	0xFDD
 21003                           plusw2	equ	0xFDB
 21004                           fsr2h	equ	0xFDA
 21005                           fsr2l	equ	0xFD9
 21006                           status	equ	0xFD8
 21007                           
 21008 ;; *************** function _Write_b_eep *****************
 21009 ;; Defined at:
 21010 ;;		line 31 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\EEP\write_B.c"
 21011 ;; Parameters:    Size  Location     Type
 21012 ;;  badd            2   21[COMRAM] unsigned int 
 21013 ;;  bdat            1   23[COMRAM] unsigned char 
 21014 ;; Auto vars:     Size  Location     Type
 21015 ;;  GIE_BIT_VAL     1   25[COMRAM] unsigned char 
 21016 ;; Return value:  Size  Location     Type
 21017 ;;		None               void
 21018 ;; Registers used:
 21019 ;;		wreg, status,2
 21020 ;; Tracked objects:
 21021 ;;		On entry : 0/0
 21022 ;;		On exit  : 0/0
 21023 ;;		Unchanged: 0/0
 21024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21025 ;;      Params:         3       0       0       0       0       0       0
 21026 ;;      Locals:         1       0       0       0       0       0       0
 21027 ;;      Temps:          1       0       0       0       0       0       0
 21028 ;;      Totals:         5       0       0       0       0       0       0
 21029 ;;Total ram usage:        5 bytes
 21030 ;; Hardware stack levels used:    1
 21031 ;; Hardware stack levels required when called:    2
 21032 ;; This function calls:
 21033 ;;		Nothing
 21034 ;; This function is called by:
 21035 ;;		_main
 21036 ;;		_init_app_eeprom
 21037 ;;		_vscp_setGUID
 21038 ;;		_vscp_setManufacturerId
 21039 ;;		_vscp_writeNicknamePermanent
 21040 ;;		_vscp_writeAppReg
 21041 ;;		_vscp_setUserID
 21042 ;;		_vscp_setSegmentCRC
 21043 ;;		_vscp_setControlByte
 21044 ;;		_vscp_goBootloaderMode
 21045 ;;		_doActionDisable
 21046 ;;		_vscp_setNickname
 21047 ;; This function uses a non-reentrant model
 21048 ;;
 21049                           
 21050                           	psect	text66
 21051  006ACA                     __ptext66:
 21052                           	opt stack 0
 21053  006ACA                     _Write_b_eep:
 21054                           	opt stack 23
 21055                           
 21056                           ;incstack = 0
 21057                           ;incstack = 0
 21058  006ACA  6E19               	movwf	??_Write_b_eep& (0+255),c
 21059  006ACC  0E00               	movlw	0
 21060  006ACE  6E1A               	movwf	Write_b_eep@GIE_BIT_VAL,c
 21061  006AD0  5019               	movf	??_Write_b_eep& (0+255),w,c
 21062  006AD2  C016  FFA9         	movff	Write_b_eep@badd,4009	;volatile
 21063  006AD6  C018  FFA8         	movff	Write_b_eep@bdat,4008	;volatile
 21064  006ADA  9EA6               	bcf	4006,7,c	;volatile
 21065  006ADC  9CA6               	bcf	4006,6,c	;volatile
 21066  006ADE  84A6               	bsf	4006,2,c	;volatile
 21067  006AE0  0E00               	movlw	0
 21068  006AE2  BEF2               	btfsc	intcon,7,c	;volatile
 21069  006AE4  0E01               	movlw	1
 21070  006AE6  6E1A               	movwf	Write_b_eep@GIE_BIT_VAL,c
 21071  006AE8  9EF2               	bcf	intcon,7,c	;volatile
 21072  006AEA  0E55               	movlw	85
 21073  006AEC  6EA7               	movwf	4007,c	;volatile
 21074  006AEE  0EAA               	movlw	170
 21075  006AF0  6EA7               	movwf	4007,c	;volatile
 21076  006AF2  82A6               	bsf	4006,1,c	;volatile
 21077  006AF4                     l1416:
 21078  006AF4  B2A6               	btfsc	4006,1,c	;volatile
 21079  006AF6  D7FE               	goto	l1416
 21080  006AF8  B01A               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
 21081  006AFA  D002               	bra	u10695
 21082  006AFC  9EF2               	bcf	intcon,7,c	;volatile
 21083  006AFE  D001               	bra	u10696
 21084  006B00                     u10695:
 21085  006B00  8EF2               	bsf	intcon,7,c	;volatile
 21086  006B02                     u10696:
 21087  006B02  94A6               	bcf	4006,2,c	;volatile
 21088  006B04  0012               	return	
 21089  006B06                     __end_of_Write_b_eep:
 21090                           	opt stack 0
 21091                           tblptru	equ	0xFF8
 21092                           tblptrh	equ	0xFF7
 21093                           tblptrl	equ	0xFF6
 21094                           tablat	equ	0xFF5
 21095                           prodh	equ	0xFF4
 21096                           prodl	equ	0xFF3
 21097                           intcon	equ	0xFF2
 21098                           postinc0	equ	0xFEE
 21099                           wreg	equ	0xFE8
 21100                           indf1	equ	0xFE7
 21101                           fsr1h	equ	0xFE2
 21102                           fsr1l	equ	0xFE1
 21103                           indf2	equ	0xFDF
 21104                           postinc2	equ	0xFDE
 21105                           postdec2	equ	0xFDD
 21106                           plusw2	equ	0xFDB
 21107                           fsr2h	equ	0xFDA
 21108                           fsr2l	equ	0xFD9
 21109                           status	equ	0xFD8
 21110                           
 21111 ;; *************** function _Busy_eep *****************
 21112 ;; Defined at:
 21113 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\EEP\busy_eep.c"
 21114 ;; Parameters:    Size  Location     Type
 21115 ;;		None
 21116 ;; Auto vars:     Size  Location     Type
 21117 ;;		None
 21118 ;; Return value:  Size  Location     Type
 21119 ;;		None               void
 21120 ;; Registers used:
 21121 ;;		None
 21122 ;; Tracked objects:
 21123 ;;		On entry : 0/0
 21124 ;;		On exit  : 0/0
 21125 ;;		Unchanged: 0/0
 21126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21127 ;;      Params:         0       0       0       0       0       0       0
 21128 ;;      Locals:         0       0       0       0       0       0       0
 21129 ;;      Temps:          0       0       0       0       0       0       0
 21130 ;;      Totals:         0       0       0       0       0       0       0
 21131 ;;Total ram usage:        0 bytes
 21132 ;; Hardware stack levels used:    1
 21133 ;; Hardware stack levels required when called:    2
 21134 ;; This function calls:
 21135 ;;		Nothing
 21136 ;; This function is called by:
 21137 ;;		_main
 21138 ;;		_init_app_eeprom
 21139 ;;		_vscp_setGUID
 21140 ;;		_vscp_setManufacturerId
 21141 ;;		_vscp_writeNicknamePermanent
 21142 ;;		_vscp_writeAppReg
 21143 ;;		_vscp_setUserID
 21144 ;;		_vscp_setSegmentCRC
 21145 ;;		_vscp_setControlByte
 21146 ;;		_vscp_goBootloaderMode
 21147 ;;		_doActionDisable
 21148 ;;		_vscp_setNickname
 21149 ;; This function uses a non-reentrant model
 21150 ;;
 21151                           
 21152                           	psect	text67
 21153  006E6A                     __ptext67:
 21154                           	opt stack 0
 21155  006E6A                     _Busy_eep:
 21156                           	opt stack 23
 21157  006E6A                     l1391:
 21158  006E6A  A2A6               	btfss	4006,1,c	;volatile
 21159  006E6C  0012               	return	
 21160  006E6E  D7FD               	goto	l1391
 21161  006E70                     __end_of_Busy_eep:
 21162                           	opt stack 0
 21163                           tblptru	equ	0xFF8
 21164                           tblptrh	equ	0xFF7
 21165                           tblptrl	equ	0xFF6
 21166                           tablat	equ	0xFF5
 21167                           prodh	equ	0xFF4
 21168                           prodl	equ	0xFF3
 21169                           intcon	equ	0xFF2
 21170                           postinc0	equ	0xFEE
 21171                           wreg	equ	0xFE8
 21172                           indf1	equ	0xFE7
 21173                           fsr1h	equ	0xFE2
 21174                           fsr1l	equ	0xFE1
 21175                           indf2	equ	0xFDF
 21176                           postinc2	equ	0xFDE
 21177                           postdec2	equ	0xFDD
 21178                           plusw2	equ	0xFDB
 21179                           fsr2h	equ	0xFDA
 21180                           fsr2l	equ	0xFD9
 21181                           status	equ	0xFD8
 21182                           
 21183 ;; *************** function _init *****************
 21184 ;; Defined at:
 21185 ;;		line 329 in file "../main.c"
 21186 ;; Parameters:    Size  Location     Type
 21187 ;;		None
 21188 ;; Auto vars:     Size  Location     Type
 21189 ;;  dir             1   26[COMRAM] unsigned char 
 21190 ;; Return value:  Size  Location     Type
 21191 ;;		None               void
 21192 ;; Registers used:
 21193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21194 ;; Tracked objects:
 21195 ;;		On entry : 0/0
 21196 ;;		On exit  : 0/0
 21197 ;;		Unchanged: 0/0
 21198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21199 ;;      Params:         0       0       0       0       0       0       0
 21200 ;;      Locals:         1       0       0       0       0       0       0
 21201 ;;      Temps:          1       0       0       0       0       0       0
 21202 ;;      Totals:         2       0       0       0       0       0       0
 21203 ;;Total ram usage:        2 bytes
 21204 ;; Hardware stack levels used:    1
 21205 ;; Hardware stack levels required when called:    4
 21206 ;; This function calls:
 21207 ;;		_ECANInitialize
 21208 ;;		_WriteTimer0
 21209 ;;		_init_app_ram
 21210 ;;		_Read_b_eep
 21211 ;;		_OpenTimer0
 21212 ;; This function is called by:
 21213 ;;		_main
 21214 ;; This function uses a non-reentrant model
 21215 ;;
 21216                           
 21217                           	psect	text68
 21218  006504                     __ptext68:
 21219                           	opt stack 0
 21220  006504                     _init:
 21221                           	opt stack 25
 21222                           
 21223                           ;main.c: 330: unsigned char dir;
 21224                           ;main.c: 335: init_app_ram();
 21225                           
 21226                           ;incstack = 0
 21227                           ;incstack = 0
 21228  006504  EC65  F022         	call	_init_app_ram	;wreg free
 21229                           
 21230                           ;main.c: 346: dir = Read_b_eep(0x43 + 12);
 21231  006508  0E00               	movlw	0
 21232  00650A  6E17               	movwf	?_Read_b_eep+1,c
 21233  00650C  0E4F               	movlw	79
 21234  00650E  6E16               	movwf	?_Read_b_eep,c
 21235  006510  ECFD  F036         	call	_Read_b_eep	;wreg free
 21236  006514  6E1B               	movwf	init@dir,c
 21237                           
 21238                           ;main.c: 347: TRISA = ( dir & 0x01 ) |
 21239                           ;main.c: 348: ( ( dir >> 1 ) & 0x01 ) |
 21240                           ;main.c: 349: 0b00000000;
 21241  006516  C01B  F01A         	movff	init@dir,??_init
 21242  00651A  90D8               	bcf	status,0,c
 21243  00651C  321A               	rrcf	??_init,f,c
 21244  00651E  0E01               	movlw	1
 21245  006520  161A               	andwf	??_init,f,c
 21246  006522  501B               	movf	init@dir,w,c
 21247  006524  0B01               	andlw	1
 21248  006526  101A               	iorwf	??_init,w,c
 21249  006528  6E92               	movwf	3986,c	;volatile
 21250                           
 21251                           ;main.c: 350: PORTA = 0x00;
 21252  00652A  0E00               	movlw	0
 21253  00652C  6E80               	movwf	3968,c	;volatile
 21254                           
 21255                           ;main.c: 362: dir = Read_b_eep(0x43 + 13);
 21256  00652E  0E00               	movlw	0
 21257  006530  6E17               	movwf	?_Read_b_eep+1,c
 21258  006532  0E50               	movlw	80
 21259  006534  6E16               	movwf	?_Read_b_eep,c
 21260  006536  ECFD  F036         	call	_Read_b_eep	;wreg free
 21261  00653A  6E1B               	movwf	init@dir,c
 21262                           
 21263                           ;main.c: 363: TRISB = ( dir & 0x03 ) |
 21264                           ;main.c: 364: 0b00001000;
 21265  00653C  501B               	movf	init@dir,w,c
 21266  00653E  0B03               	andlw	3
 21267  006540  0908               	iorlw	8
 21268  006542  6E93               	movwf	3987,c	;volatile
 21269                           
 21270                           ;main.c: 367: if ( Read_b_eep(0x43 + 44) & 0x01 ) {
 21271  006544  0E00               	movlw	0
 21272  006546  6E17               	movwf	?_Read_b_eep+1,c
 21273  006548  0E6F               	movlw	111
 21274  00654A  6E16               	movwf	?_Read_b_eep,c
 21275  00654C  ECFD  F036         	call	_Read_b_eep	;wreg free
 21276  006550  6E1A               	movwf	??_init& (0+255),c
 21277  006552  B01A               	btfsc	??_init,0,c
 21278                           
 21279                           ;main.c: 368: INTCON2bits.RBPU = 0;
 21280  006554  9EF1               	bcf	intcon2,7,c	;volatile
 21281                           
 21282                           ;main.c: 369: }
 21283                           ;main.c: 371: PORTB = 0x00;
 21284  006556  0E00               	movlw	0
 21285  006558  6E81               	movwf	3969,c	;volatile
 21286                           
 21287                           ;main.c: 381: dir = ( Read_b_eep(0x43 + 13) << 1 ) & 0b11111000;
 21288  00655A  0E00               	movlw	0
 21289  00655C  6E17               	movwf	?_Read_b_eep+1,c
 21290  00655E  0E50               	movlw	80
 21291  006560  6E16               	movwf	?_Read_b_eep,c
 21292  006562  ECFD  F036         	call	_Read_b_eep	;wreg free
 21293  006566  6E1A               	movwf	??_init& (0+255),c
 21294  006568  90D8               	bcf	status,0,c
 21295  00656A  341A               	rlcf	??_init,w,c
 21296  00656C  0BF8               	andlw	248
 21297  00656E  6E1B               	movwf	init@dir,c
 21298                           
 21299                           ;main.c: 382: TRISC = dir |
 21300                           ;main.c: 383: 0b00000001;
 21301  006570  501B               	movf	init@dir,w,c
 21302  006572  0901               	iorlw	1
 21303  006574  6E94               	movwf	3988,c	;volatile
 21304                           
 21305                           ;main.c: 384: PORTC = 0x00;
 21306  006576  0E00               	movlw	0
 21307  006578  6E82               	movwf	3970,c	;volatile
 21308                           
 21309                           ;main.c: 410: OpenTimer0( 0b11111111 & 0b10111111 & 0b11011111 & 0b11110010 );
 21310  00657A  6E1A               	movwf	??_init& (0+255),c
 21311  00657C  0E92               	movlw	146
 21312  00657E  6E16               	movwf	?_OpenTimer0,c
 21313  006580  501A               	movf	??_init& (0+255),w,c
 21314  006582  EC68  F036         	call	_OpenTimer0	;wreg free
 21315                           
 21316                           ;main.c: 411: WriteTimer0( 0xfb1d );
 21317  006586  0EFB               	movlw	251
 21318  006588  6E17               	movwf	?_WriteTimer0+1,c
 21319  00658A  0E1D               	movlw	29
 21320  00658C  6E16               	movwf	?_WriteTimer0,c
 21321  00658E  ECF4  F036         	call	_WriteTimer0	;wreg free
 21322                           
 21323                           ;main.c: 414: LATBbits.LATB0 = 0;
 21324  006592  908A               	bcf	3978,0,c	;volatile
 21325                           
 21326                           ;main.c: 415: LATBbits.LATB1 = 0;
 21327  006594  928A               	bcf	3978,1,c	;volatile
 21328                           
 21329                           ;main.c: 416: LATCbits.LATC3 = 0;
 21330  006596  968B               	bcf	3979,3,c	;volatile
 21331                           
 21332                           ;main.c: 417: LATCbits.LATC4 = 0;
 21333  006598  988B               	bcf	3979,4,c	;volatile
 21334                           
 21335                           ;main.c: 418: LATCbits.LATC5 = 0;
 21336  00659A  9A8B               	bcf	3979,5,c	;volatile
 21337                           
 21338                           ;main.c: 419: LATCbits.LATC6 = 0;
 21339  00659C  9C8B               	bcf	3979,6,c	;volatile
 21340                           
 21341                           ;main.c: 420: LATCbits.LATC7 = 0;
 21342  00659E  9E8B               	bcf	3979,7,c	;volatile
 21343                           
 21344                           ;main.c: 421: LATAbits.LATA2 = 0;
 21345  0065A0  9489               	bcf	3977,2,c	;volatile
 21346                           
 21347                           ;main.c: 422: LATAbits.LATA1 = 0;
 21348  0065A2  9289               	bcf	3977,1,c	;volatile
 21349                           
 21350                           ;main.c: 423: LATAbits.LATA0 = 0;
 21351  0065A4  9089               	bcf	3977,0,c	;volatile
 21352                           
 21353                           ;main.c: 426: ECANInitialize();
 21354  0065A6  ECDA  F02E         	call	_ECANInitialize	;wreg free
 21355                           
 21356                           ;main.c: 447: INTCONbits.PEIE = 1;
 21357  0065AA  8CF2               	bsf	intcon,6,c	;volatile
 21358                           
 21359                           ;main.c: 450: INTCONbits.GIE = 1;
 21360  0065AC  8EF2               	bsf	intcon,7,c	;volatile
 21361                           
 21362                           ;main.c: 452: return;
 21363  0065AE  0012               	return	
 21364  0065B0                     __end_of_init:
 21365                           	opt stack 0
 21366                           tblptru	equ	0xFF8
 21367                           tblptrh	equ	0xFF7
 21368                           tblptrl	equ	0xFF6
 21369                           tablat	equ	0xFF5
 21370                           prodh	equ	0xFF4
 21371                           prodl	equ	0xFF3
 21372                           intcon	equ	0xFF2
 21373                           intcon2	equ	0xFF1
 21374                           postinc0	equ	0xFEE
 21375                           wreg	equ	0xFE8
 21376                           indf1	equ	0xFE7
 21377                           fsr1h	equ	0xFE2
 21378                           fsr1l	equ	0xFE1
 21379                           indf2	equ	0xFDF
 21380                           postinc2	equ	0xFDE
 21381                           postdec2	equ	0xFDD
 21382                           plusw2	equ	0xFDB
 21383                           fsr2h	equ	0xFDA
 21384                           fsr2l	equ	0xFD9
 21385                           status	equ	0xFD8
 21386                           
 21387 ;; *************** function _OpenTimer0 *****************
 21388 ;; Defined at:
 21389 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0open.c"
 21390 ;; Parameters:    Size  Location     Type
 21391 ;;  config          1   21[COMRAM] unsigned char 
 21392 ;; Auto vars:     Size  Location     Type
 21393 ;;		None
 21394 ;; Return value:  Size  Location     Type
 21395 ;;		None               void
 21396 ;; Registers used:
 21397 ;;		wreg, status,2, status,0
 21398 ;; Tracked objects:
 21399 ;;		On entry : 0/0
 21400 ;;		On exit  : 0/0
 21401 ;;		Unchanged: 0/0
 21402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21403 ;;      Params:         1       0       0       0       0       0       0
 21404 ;;      Locals:         0       0       0       0       0       0       0
 21405 ;;      Temps:          0       0       0       0       0       0       0
 21406 ;;      Totals:         1       0       0       0       0       0       0
 21407 ;;Total ram usage:        1 bytes
 21408 ;; Hardware stack levels used:    1
 21409 ;; Hardware stack levels required when called:    2
 21410 ;; This function calls:
 21411 ;;		Nothing
 21412 ;; This function is called by:
 21413 ;;		_init
 21414 ;; This function uses a non-reentrant model
 21415 ;;
 21416                           
 21417                           	psect	text69
 21418  006CD0                     __ptext69:
 21419                           	opt stack 0
 21420  006CD0                     _OpenTimer0:
 21421                           	opt stack 26
 21422                           
 21423                           ;incstack = 0
 21424                           ;incstack = 0
 21425  006CD0  5016               	movf	OpenTimer0@config,w,c
 21426  006CD2  0B7F               	andlw	127
 21427  006CD4  6ED5               	movwf	4053,c	;volatile
 21428  006CD6  0E00               	movlw	0
 21429  006CD8  6ED7               	movwf	4055,c	;volatile
 21430  006CDA  0E00               	movlw	0
 21431  006CDC  6ED6               	movwf	4054,c	;volatile
 21432  006CDE  94F2               	bcf	intcon,2,c	;volatile
 21433  006CE0  AE16               	btfss	OpenTimer0@config,7,c
 21434  006CE2  D002               	goto	l1432
 21435  006CE4  8AF2               	bsf	intcon,5,c	;volatile
 21436  006CE6  D001               	goto	l1433
 21437  006CE8                     l1432:
 21438  006CE8  9AF2               	bcf	intcon,5,c	;volatile
 21439  006CEA                     l1433:
 21440  006CEA  8ED5               	bsf	4053,7,c	;volatile
 21441  006CEC  0012               	return	
 21442  006CEE                     __end_of_OpenTimer0:
 21443                           	opt stack 0
 21444                           tblptru	equ	0xFF8
 21445                           tblptrh	equ	0xFF7
 21446                           tblptrl	equ	0xFF6
 21447                           tablat	equ	0xFF5
 21448                           prodh	equ	0xFF4
 21449                           prodl	equ	0xFF3
 21450                           intcon	equ	0xFF2
 21451                           intcon2	equ	0xFF1
 21452                           postinc0	equ	0xFEE
 21453                           wreg	equ	0xFE8
 21454                           indf1	equ	0xFE7
 21455                           fsr1h	equ	0xFE2
 21456                           fsr1l	equ	0xFE1
 21457                           indf2	equ	0xFDF
 21458                           postinc2	equ	0xFDE
 21459                           postdec2	equ	0xFDD
 21460                           plusw2	equ	0xFDB
 21461                           fsr2h	equ	0xFDA
 21462                           fsr2l	equ	0xFD9
 21463                           status	equ	0xFD8
 21464                           
 21465 ;; *************** function _init_app_ram *****************
 21466 ;; Defined at:
 21467 ;;		line 460 in file "../main.c"
 21468 ;; Parameters:    Size  Location     Type
 21469 ;;		None
 21470 ;; Auto vars:     Size  Location     Type
 21471 ;;  i               1   23[COMRAM] unsigned char 
 21472 ;; Return value:  Size  Location     Type
 21473 ;;		None               void
 21474 ;; Registers used:
 21475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21476 ;; Tracked objects:
 21477 ;;		On entry : 0/0
 21478 ;;		On exit  : 0/0
 21479 ;;		Unchanged: 0/0
 21480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21481 ;;      Params:         0       0       0       0       0       0       0
 21482 ;;      Locals:         1       0       0       0       0       0       0
 21483 ;;      Temps:          0      37       0       0       0       0       0
 21484 ;;      Totals:         1      37       0       0       0       0       0
 21485 ;;Total ram usage:       38 bytes
 21486 ;; Hardware stack levels used:    1
 21487 ;; Hardware stack levels required when called:    3
 21488 ;; This function calls:
 21489 ;;		_Read_b_eep
 21490 ;; This function is called by:
 21491 ;;		_main
 21492 ;;		_init
 21493 ;;		_vscp_restoreDefaults
 21494 ;; This function uses a non-reentrant model
 21495 ;;
 21496                           
 21497                           	psect	text70
 21498  0044CA                     __ptext70:
 21499                           	opt stack 0
 21500  0044CA                     _init_app_ram:
 21501                           	opt stack 23
 21502                           
 21503                           ;main.c: 461: uint8_t i;
 21504                           ;main.c: 463: measurement_clock = 0;
 21505                           
 21506                           ;incstack = 0
 21507                           ;incstack = 0
 21508  0044CA  0E00               	movlw	0
 21509  0044CC  0100               	movlb	0	; () banked
 21510  0044CE  0100               	movlb	0	; () banked
 21511  0044D0  6FD1               	movwf	_measurement_clock& (0+255),b	;volatile
 21512  0044D2  0E00               	movlw	0
 21513  0044D4  0100               	movlb	0	; () banked
 21514  0044D6  6FD2               	movwf	(_measurement_clock+1)& (0+255),b	;volatile
 21515  0044D8  0E00               	movlw	0
 21516  0044DA  0100               	movlb	0	; () banked
 21517  0044DC  6FD3               	movwf	(_measurement_clock+2)& (0+255),b	;volatile
 21518  0044DE  0E00               	movlw	0
 21519  0044E0  0100               	movlb	0	; () banked
 21520  0044E2  6FD4               	movwf	(_measurement_clock+3)& (0+255),b	;volatile
 21521                           
 21522                           ; BSR set to: 0
 21523                           ;main.c: 465: seconds = 0;
 21524  0044E4  0100               	movlb	0	; () banked
 21525  0044E6  6F60               	movwf	??_init_app_ram& (0+255),b
 21526  0044E8  0E00               	movlw	0
 21527  0044EA  0100               	movlb	0	; () banked
 21528  0044EC  0100               	movlb	0	; () banked
 21529  0044EE  6FE5               	movwf	_seconds& (0+255),b
 21530  0044F0  0100               	movlb	0	; () banked
 21531  0044F2  5160               	movf	??_init_app_ram& (0+255),w,b
 21532                           
 21533                           ; BSR set to: 0
 21534                           ;main.c: 466: minutes = 0;
 21535  0044F4  0100               	movlb	0	; () banked
 21536  0044F6  6F60               	movwf	??_init_app_ram& (0+255),b
 21537  0044F8  0E00               	movlw	0
 21538  0044FA  0100               	movlb	0	; () banked
 21539  0044FC  0100               	movlb	0	; () banked
 21540  0044FE  6FE4               	movwf	_minutes& (0+255),b
 21541  004500  0100               	movlb	0	; () banked
 21542  004502  5160               	movf	??_init_app_ram& (0+255),w,b
 21543                           
 21544                           ; BSR set to: 0
 21545                           ;main.c: 467: hours = 0;
 21546  004504  0100               	movlb	0	; () banked
 21547  004506  6F60               	movwf	??_init_app_ram& (0+255),b
 21548  004508  0E00               	movlw	0
 21549  00450A  0100               	movlb	0	; () banked
 21550  00450C  0100               	movlb	0	; () banked
 21551  00450E  6FE3               	movwf	_hours& (0+255),b
 21552  004510  0100               	movlb	0	; () banked
 21553  004512  5160               	movf	??_init_app_ram& (0+255),w,b
 21554                           
 21555                           ; BSR set to: 0
 21556                           ;main.c: 469: channel_pulse_flags = 0;
 21557  004514  0E00               	movlw	0
 21558  004516  0100               	movlb	0	; () banked
 21559  004518  0100               	movlb	0	; () banked
 21560  00451A  6FD6               	movwf	(_channel_pulse_flags+1)& (0+255),b
 21561  00451C  0E00               	movlw	0
 21562  00451E  0100               	movlb	0	; () banked
 21563  004520  6FD5               	movwf	_channel_pulse_flags& (0+255),b
 21564                           
 21565                           ;main.c: 472: for ( i = 0; i < 10; i++ ) {
 21566  004522  0100               	movlb	0	; () banked
 21567  004524  6F60               	movwf	??_init_app_ram& (0+255),b
 21568  004526  0E00               	movlw	0
 21569  004528  6E18               	movwf	init_app_ram@i,c
 21570  00452A  0100               	movlb	0	; () banked
 21571  00452C  5160               	movf	??_init_app_ram& (0+255),w,b
 21572  00452E  D01D               	goto	L154
 21573  004530                     l9209:
 21574                           
 21575                           ; BSR set to: 0
 21576                           ;main.c: 473: channel_pulse_timer[ i ] = 0;
 21577  004530  5018               	movf	init_app_ram@i,w,c
 21578  004532  0D02               	mullw	2
 21579  004534  0101               	movlb	1	; () banked
 21580  004536  0E26               	movlw	low _channel_pulse_timer
 21581  004538  24F3               	addwf	prodl,w,c
 21582  00453A  6ED9               	movwf	fsr2l,c
 21583  00453C  0101               	movlb	1	; () banked
 21584  00453E  0E01               	movlw	high _channel_pulse_timer
 21585  004540  20F4               	addwfc	prodh,w,c
 21586  004542  6EDA               	movwf	fsr2h,c
 21587  004544  0E00               	movlw	0
 21588  004546  6EDE               	movwf	postinc2,c
 21589  004548  0E00               	movlw	0
 21590  00454A  6EDD               	movwf	postdec2,c
 21591                           
 21592                           ;main.c: 474: channel_protection_timer[ i ] = 0;
 21593  00454C  5018               	movf	init_app_ram@i,w,c
 21594  00454E  0D02               	mullw	2
 21595  004550  0100               	movlb	0	; () banked
 21596  004552  0EBD               	movlw	low _channel_protection_timer
 21597  004554  24F3               	addwf	prodl,w,c
 21598  004556  6ED9               	movwf	fsr2l,c
 21599  004558  0100               	movlb	0	; () banked
 21600  00455A  0E00               	movlw	high _channel_protection_timer
 21601  00455C  20F4               	addwfc	prodh,w,c
 21602  00455E  6EDA               	movwf	fsr2h,c
 21603  004560  0E00               	movlw	0
 21604  004562  6EDE               	movwf	postinc2,c
 21605  004564  0E00               	movlw	0
 21606  004566  6EDD               	movwf	postdec2,c
 21607                           
 21608                           ; BSR set to: 0
 21609  004568  2A18               	incf	init_app_ram@i,f,c
 21610  00456A                     L154:
 21611                           
 21612                           ; BSR set to: 0
 21613  00456A  0E09               	movlw	9
 21614  00456C  6418               	cpfsgt	init_app_ram@i,c
 21615  00456E  D7E0               	goto	l9209
 21616                           
 21617                           ; BSR set to: 0
 21618                           ;main.c: 475: }
 21619                           ;main.c: 477: for ( i=0; i<10; i++ ) {
 21620                           
 21621                           ; BSR set to: 0
 21622  004570  0100               	movlb	0	; () banked
 21623  004572  6F60               	movwf	??_init_app_ram& (0+255),b
 21624  004574  0E00               	movlw	0
 21625  004576  6E18               	movwf	init_app_ram@i,c
 21626  004578  0100               	movlb	0	; () banked
 21627  00457A  5160               	movf	??_init_app_ram& (0+255),w,b
 21628  00457C  D08F               	goto	L155
 21629  00457E                     l9221:
 21630                           
 21631                           ; BSR set to: 0
 21632                           ;main.c: 480: if ( Read_b_eep(0x43 + 24 + i) &
 21633                           ;main.c: 481: 0x01 ) {
 21634  00457E  0E5B               	movlw	91
 21635  004580  2418               	addwf	init_app_ram@i,w,c
 21636  004582  6E16               	movwf	?_Read_b_eep,c
 21637  004584  6A17               	clrf	?_Read_b_eep+1,c
 21638  004586  0E00               	movlw	0
 21639  004588  2217               	addwfc	?_Read_b_eep+1,f,c
 21640  00458A  ECFD  F036         	call	_Read_b_eep	;wreg free
 21641  00458E  0100               	movlb	0	; () banked
 21642  004590  6F60               	movwf	??_init_app_ram& (0+255),b
 21643  004592  0100               	movlb	0	; () banked
 21644  004594  A160               	btfss	??_init_app_ram& (0+255),0,b
 21645  004596  D047               	goto	l9227
 21646                           
 21647                           ; BSR set to: 0
 21648                           ;main.c: 483: channel_pulse_flags |= (1<<i);
 21649  004598  C018  F060         	movff	init_app_ram@i,??_init_app_ram
 21650  00459C  0E01               	movlw	1
 21651  00459E  0100               	movlb	0	; () banked
 21652  0045A0  6F61               	movwf	(??_init_app_ram+1)& (0+255),b
 21653  0045A2  6B62               	clrf	(??_init_app_ram+2)& (0+255),b
 21654  0045A4  0100               	movlb	0	; () banked
 21655  0045A6  2B60               	incf	??_init_app_ram& (0+255),f,b
 21656  0045A8  D004               	goto	u10594
 21657  0045AA                     u10595:
 21658  0045AA  90D8               	bcf	status,0,c
 21659  0045AC  0100               	movlb	0	; () banked
 21660  0045AE  3761               	rlcf	(??_init_app_ram+1)& (0+255),f,b
 21661  0045B0  3762               	rlcf	(??_init_app_ram+2)& (0+255),f,b
 21662  0045B2                     u10594:
 21663  0045B2  0100               	movlb	0	; () banked
 21664  0045B4  2F60               	decfsz	??_init_app_ram& (0+255),f,b
 21665  0045B6  D7F9               	goto	u10595
 21666  0045B8  0100               	movlb	0	; () banked
 21667  0045BA  5161               	movf	(??_init_app_ram+1)& (0+255),w,b
 21668  0045BC  0100               	movlb	0	; () banked
 21669  0045BE  0100               	movlb	0	; () banked
 21670  0045C0  13D5               	iorwf	_channel_pulse_flags& (0+255),f,b
 21671  0045C2  0100               	movlb	0	; () banked
 21672  0045C4  5162               	movf	(??_init_app_ram+2)& (0+255),w,b
 21673  0045C6  0100               	movlb	0	; () banked
 21674  0045C8  0100               	movlb	0	; () banked
 21675  0045CA  13D6               	iorwf	(_channel_pulse_flags+1)& (0+255),f,b
 21676                           
 21677                           ; BSR set to: 0
 21678                           ;main.c: 484: channel_pulse_timer[ i ] =
 21679                           ;main.c: 485: Read_b_eep(0x43 + 46 + 0 + i) * 256 +
 21680                           ;main.c: 486: Read_b_eep(0x43 + 46 + 1 + i);
 21681  0045CC  0E71               	movlw	113
 21682  0045CE  2418               	addwf	init_app_ram@i,w,c
 21683  0045D0  6E16               	movwf	?_Read_b_eep,c
 21684  0045D2  6A17               	clrf	?_Read_b_eep+1,c
 21685  0045D4  0E00               	movlw	0
 21686  0045D6  2217               	addwfc	?_Read_b_eep+1,f,c
 21687  0045D8  ECFD  F036         	call	_Read_b_eep	;wreg free
 21688  0045DC  0100               	movlb	0	; () banked
 21689  0045DE  6F60               	movwf	??_init_app_ram& (0+255),b
 21690  0045E0  0100               	movlb	0	; () banked
 21691  0045E2  5160               	movf	??_init_app_ram& (0+255),w,b
 21692  0045E4  0100               	movlb	0	; () banked
 21693  0045E6  6F62               	movwf	(??_init_app_ram+2)& (0+255),b
 21694  0045E8  6B61               	clrf	(??_init_app_ram+1)& (0+255),b
 21695  0045EA  0E72               	movlw	114
 21696  0045EC  2418               	addwf	init_app_ram@i,w,c
 21697  0045EE  6E16               	movwf	?_Read_b_eep,c
 21698  0045F0  6A17               	clrf	?_Read_b_eep+1,c
 21699  0045F2  0E00               	movlw	0
 21700  0045F4  2217               	addwfc	?_Read_b_eep+1,f,c
 21701  0045F6  ECFD  F036         	call	_Read_b_eep	;wreg free
 21702  0045FA  0100               	movlb	0	; () banked
 21703  0045FC  6F63               	movwf	(??_init_app_ram+3)& (0+255),b
 21704  0045FE  0100               	movlb	0	; () banked
 21705  004600  5163               	movf	(??_init_app_ram+3)& (0+255),w,b
 21706  004602  0100               	movlb	0	; () banked
 21707  004604  2761               	addwf	(??_init_app_ram+1)& (0+255),f,b
 21708  004606  0E00               	movlw	0
 21709  004608  2362               	addwfc	(??_init_app_ram+2)& (0+255),f,b
 21710  00460A  5018               	movf	init_app_ram@i,w,c
 21711  00460C  0D02               	mullw	2
 21712  00460E  0101               	movlb	1	; () banked
 21713  004610  0E26               	movlw	low _channel_pulse_timer
 21714  004612  24F3               	addwf	prodl,w,c
 21715  004614  6ED9               	movwf	fsr2l,c
 21716  004616  0101               	movlb	1	; () banked
 21717  004618  0E01               	movlw	high _channel_pulse_timer
 21718  00461A  20F4               	addwfc	prodh,w,c
 21719  00461C  6EDA               	movwf	fsr2h,c
 21720  00461E  C061  FFDE         	movff	??_init_app_ram+1,postinc2
 21721  004622  C062  FFDD         	movff	??_init_app_ram+2,postdec2
 21722  004626                     l9227:
 21723                           
 21724                           ;main.c: 487: }
 21725                           ;main.c: 490: if ( Read_b_eep(0x43 + 29 + i) & 0x04) {
 21726  004626  0E60               	movlw	96
 21727  004628  2418               	addwf	init_app_ram@i,w,c
 21728  00462A  6E16               	movwf	?_Read_b_eep,c
 21729  00462C  6A17               	clrf	?_Read_b_eep+1,c
 21730  00462E  0E00               	movlw	0
 21731  004630  2217               	addwfc	?_Read_b_eep+1,f,c
 21732  004632  ECFD  F036         	call	_Read_b_eep	;wreg free
 21733  004636  0100               	movlb	0	; () banked
 21734  004638  6F60               	movwf	??_init_app_ram& (0+255),b
 21735  00463A  0100               	movlb	0	; () banked
 21736  00463C  A560               	btfss	??_init_app_ram& (0+255),2,b
 21737  00463E  D02D               	goto	l9231
 21738                           
 21739                           ; BSR set to: 0
 21740                           ;main.c: 491: channel_protection_timer[ i ] =
 21741                           ;main.c: 492: Read_b_eep(0x43 + 46 + 0 + i) * 256 +
 21742                           ;main.c: 493: Read_b_eep(0x43 + 46 + 1 + i);
 21743  004640  0E71               	movlw	113
 21744  004642  2418               	addwf	init_app_ram@i,w,c
 21745  004644  6E16               	movwf	?_Read_b_eep,c
 21746  004646  6A17               	clrf	?_Read_b_eep+1,c
 21747  004648  0E00               	movlw	0
 21748  00464A  2217               	addwfc	?_Read_b_eep+1,f,c
 21749  00464C  ECFD  F036         	call	_Read_b_eep	;wreg free
 21750  004650  0100               	movlb	0	; () banked
 21751  004652  6F60               	movwf	??_init_app_ram& (0+255),b
 21752  004654  0100               	movlb	0	; () banked
 21753  004656  5160               	movf	??_init_app_ram& (0+255),w,b
 21754  004658  0100               	movlb	0	; () banked
 21755  00465A  6F62               	movwf	(??_init_app_ram+2)& (0+255),b
 21756  00465C  6B61               	clrf	(??_init_app_ram+1)& (0+255),b
 21757  00465E  0E72               	movlw	114
 21758  004660  2418               	addwf	init_app_ram@i,w,c
 21759  004662  6E16               	movwf	?_Read_b_eep,c
 21760  004664  6A17               	clrf	?_Read_b_eep+1,c
 21761  004666  0E00               	movlw	0
 21762  004668  2217               	addwfc	?_Read_b_eep+1,f,c
 21763  00466A  ECFD  F036         	call	_Read_b_eep	;wreg free
 21764  00466E  0100               	movlb	0	; () banked
 21765  004670  6F63               	movwf	(??_init_app_ram+3)& (0+255),b
 21766  004672  0100               	movlb	0	; () banked
 21767  004674  5163               	movf	(??_init_app_ram+3)& (0+255),w,b
 21768  004676  0100               	movlb	0	; () banked
 21769  004678  2761               	addwf	(??_init_app_ram+1)& (0+255),f,b
 21770  00467A  0E00               	movlw	0
 21771  00467C  2362               	addwfc	(??_init_app_ram+2)& (0+255),f,b
 21772  00467E  5018               	movf	init_app_ram@i,w,c
 21773  004680  0D02               	mullw	2
 21774  004682  0100               	movlb	0	; () banked
 21775  004684  0EBD               	movlw	low _channel_protection_timer
 21776  004686  24F3               	addwf	prodl,w,c
 21777  004688  6ED9               	movwf	fsr2l,c
 21778  00468A  0100               	movlb	0	; () banked
 21779  00468C  0E00               	movlw	high _channel_protection_timer
 21780  00468E  20F4               	addwfc	prodh,w,c
 21781  004690  6EDA               	movwf	fsr2h,c
 21782  004692  C061  FFDE         	movff	??_init_app_ram+1,postinc2
 21783  004696  C062  FFDD         	movff	??_init_app_ram+2,postdec2
 21784  00469A                     l9231:
 21785                           
 21786                           ; BSR set to: 0
 21787  00469A  2A18               	incf	init_app_ram@i,f,c
 21788  00469C                     L155:
 21789                           
 21790                           ; BSR set to: 0
 21791  00469C  0E09               	movlw	9
 21792  00469E  6418               	cpfsgt	init_app_ram@i,c
 21793  0046A0  D76E               	goto	l9221
 21794                           
 21795                           ; BSR set to: 0
 21796                           ;main.c: 494: }
 21797                           ;main.c: 496: }
 21798                           ;main.c: 499: current_iostate = ( LATAbits.LATA0 << 9 ) +
 21799                           ;main.c: 500: ( LATAbits.LATA1 << 8 ) +
 21800                           ;main.c: 501: ( LATAbits.LATA2 << 7 ) +
 21801                           ;main.c: 502: ( LATCbits.LATC7 << 6 ) +
 21802                           ;main.c: 503: ( LATCbits.LATC6 << 5 ) +
 21803                           ;main.c: 504: ( LATCbits.LATC5 << 4 ) +
 21804                           ;main.c: 505: ( LATCbits.LATC4 << 3 ) +
 21805                           ;main.c: 506: ( LATCbits.LATC3 << 2 ) +
 21806                           ;main.c: 507: ( LATBbits.LATB1 << 1 ) +
 21807                           ;main.c: 508: LATBbits.LATB0;
 21808                           
 21809                           ; BSR set to: 0
 21810  0046A2  508A               	movf	3978,w,c	;volatile
 21811  0046A4  0B01               	andlw	1
 21812  0046A6  0100               	movlb	0	; () banked
 21813  0046A8  6F60               	movwf	??_init_app_ram& (0+255),b
 21814  0046AA  308A               	rrcf	3978,w,c	;volatile
 21815  0046AC  0B01               	andlw	1
 21816  0046AE  0100               	movlb	0	; () banked
 21817  0046B0  6F61               	movwf	(??_init_app_ram+1)& (0+255),b
 21818  0046B2  90D8               	bcf	status,0,c
 21819  0046B4  0100               	movlb	0	; () banked
 21820  0046B6  3561               	rlcf	(??_init_app_ram+1)& (0+255),w,b
 21821  0046B8  0100               	movlb	0	; () banked
 21822  0046BA  6F62               	movwf	(??_init_app_ram+2)& (0+255),b
 21823  0046BC  0100               	movlb	0	; () banked
 21824  0046BE  6B63               	clrf	(??_init_app_ram+3)& (0+255),b
 21825  0046C0  0100               	movlb	0	; () banked
 21826  0046C2  3763               	rlcf	(??_init_app_ram+3)& (0+255),f,b
 21827  0046C4  308B               	rrcf	3979,w,c	;volatile
 21828  0046C6  32E8               	rrcf	wreg,f,c
 21829  0046C8  32E8               	rrcf	wreg,f,c
 21830  0046CA  0B01               	andlw	1
 21831  0046CC  0100               	movlb	0	; () banked
 21832  0046CE  6F64               	movwf	(??_init_app_ram+4)& (0+255),b
 21833  0046D0  6B65               	clrf	(??_init_app_ram+5)& (0+255),b
 21834  0046D2  0100               	movlb	0	; () banked
 21835  0046D4  90D8               	bcf	status,0,c
 21836  0046D6  3764               	rlcf	(??_init_app_ram+4)& (0+255),f,b
 21837  0046D8  3765               	rlcf	(??_init_app_ram+5)& (0+255),f,b
 21838  0046DA  0100               	movlb	0	; () banked
 21839  0046DC  90D8               	bcf	status,0,c
 21840  0046DE  3764               	rlcf	(??_init_app_ram+4)& (0+255),f,b
 21841  0046E0  3765               	rlcf	(??_init_app_ram+5)& (0+255),f,b
 21842  0046E2  388B               	swapf	3979,w,c	;volatile
 21843  0046E4  0B01               	andlw	1
 21844  0046E6  0100               	movlb	0	; () banked
 21845  0046E8  6F66               	movwf	(??_init_app_ram+6)& (0+255),b
 21846  0046EA  6B67               	clrf	(??_init_app_ram+7)& (0+255),b
 21847  0046EC  0100               	movlb	0	; () banked
 21848  0046EE  90D8               	bcf	status,0,c
 21849  0046F0  3766               	rlcf	(??_init_app_ram+6)& (0+255),f,b
 21850  0046F2  3767               	rlcf	(??_init_app_ram+7)& (0+255),f,b
 21851  0046F4  0100               	movlb	0	; () banked
 21852  0046F6  90D8               	bcf	status,0,c
 21853  0046F8  3766               	rlcf	(??_init_app_ram+6)& (0+255),f,b
 21854  0046FA  3767               	rlcf	(??_init_app_ram+7)& (0+255),f,b
 21855  0046FC  0100               	movlb	0	; () banked
 21856  0046FE  90D8               	bcf	status,0,c
 21857  004700  3766               	rlcf	(??_init_app_ram+6)& (0+255),f,b
 21858  004702  3767               	rlcf	(??_init_app_ram+7)& (0+255),f,b
 21859  004704  388B               	swapf	3979,w,c	;volatile
 21860  004706  32E8               	rrcf	wreg,f,c
 21861  004708  0B01               	andlw	1
 21862  00470A  0100               	movlb	0	; () banked
 21863  00470C  6F68               	movwf	(??_init_app_ram+8)& (0+255),b
 21864  00470E  6B69               	clrf	(??_init_app_ram+9)& (0+255),b
 21865  004710  0100               	movlb	0	; () banked
 21866  004712  3B68               	swapf	(??_init_app_ram+8)& (0+255),f,b
 21867  004714  3B69               	swapf	(??_init_app_ram+9)& (0+255),f,b
 21868  004716  0EF0               	movlw	240
 21869  004718  1769               	andwf	(??_init_app_ram+9)& (0+255),f,b
 21870  00471A  5168               	movf	(??_init_app_ram+8)& (0+255),w,b
 21871  00471C  0B0F               	andlw	15
 21872  00471E  1369               	iorwf	(??_init_app_ram+9)& (0+255),f,b
 21873  004720  0EF0               	movlw	240
 21874  004722  1768               	andwf	(??_init_app_ram+8)& (0+255),f,b
 21875  004724  388B               	swapf	3979,w,c	;volatile
 21876  004726  32E8               	rrcf	wreg,f,c
 21877  004728  32E8               	rrcf	wreg,f,c
 21878  00472A  0B01               	andlw	1
 21879  00472C  0100               	movlb	0	; () banked
 21880  00472E  6F6A               	movwf	(??_init_app_ram+10)& (0+255),b
 21881  004730  6B6B               	clrf	(??_init_app_ram+11)& (0+255),b
 21882  004732  0E05               	movlw	5
 21883  004734                     u10625:
 21884  004734  90D8               	bcf	status,0,c
 21885  004736  0100               	movlb	0	; () banked
 21886  004738  376A               	rlcf	(??_init_app_ram+10)& (0+255),f,b
 21887  00473A  376B               	rlcf	(??_init_app_ram+11)& (0+255),f,b
 21888  00473C  2EE8               	decfsz	wreg,f,c
 21889  00473E  D7FA               	goto	u10625
 21890  004740  348B               	rlcf	3979,w,c	;volatile
 21891  004742  36E8               	rlcf	wreg,f,c
 21892  004744  0B01               	andlw	1
 21893  004746  0100               	movlb	0	; () banked
 21894  004748  6F6C               	movwf	(??_init_app_ram+12)& (0+255),b
 21895  00474A  6B6D               	clrf	(??_init_app_ram+13)& (0+255),b
 21896  00474C  0E06               	movlw	6
 21897  00474E                     u10635:
 21898  00474E  90D8               	bcf	status,0,c
 21899  004750  0100               	movlb	0	; () banked
 21900  004752  376C               	rlcf	(??_init_app_ram+12)& (0+255),f,b
 21901  004754  376D               	rlcf	(??_init_app_ram+13)& (0+255),f,b
 21902  004756  2EE8               	decfsz	wreg,f,c
 21903  004758  D7FA               	goto	u10635
 21904  00475A  3089               	rrcf	3977,w,c	;volatile
 21905  00475C  32E8               	rrcf	wreg,f,c
 21906  00475E  0B01               	andlw	1
 21907  004760  0100               	movlb	0	; () banked
 21908  004762  6F6E               	movwf	(??_init_app_ram+14)& (0+255),b
 21909  004764  6B6F               	clrf	(??_init_app_ram+15)& (0+255),b
 21910  004766  0E07               	movlw	7
 21911  004768                     u10645:
 21912  004768  90D8               	bcf	status,0,c
 21913  00476A  0100               	movlb	0	; () banked
 21914  00476C  376E               	rlcf	(??_init_app_ram+14)& (0+255),f,b
 21915  00476E  376F               	rlcf	(??_init_app_ram+15)& (0+255),f,b
 21916  004770  2EE8               	decfsz	wreg,f,c
 21917  004772  D7FA               	goto	u10645
 21918  004774  3089               	rrcf	3977,w,c	;volatile
 21919  004776  0B01               	andlw	1
 21920  004778  0100               	movlb	0	; () banked
 21921  00477A  6F70               	movwf	(??_init_app_ram+16)& (0+255),b
 21922  00477C  0100               	movlb	0	; () banked
 21923  00477E  5170               	movf	(??_init_app_ram+16)& (0+255),w,b
 21924  004780  0100               	movlb	0	; () banked
 21925  004782  6F72               	movwf	(??_init_app_ram+18)& (0+255),b
 21926  004784  6B71               	clrf	(??_init_app_ram+17)& (0+255),b
 21927  004786  5089               	movf	3977,w,c	;volatile
 21928  004788  0B01               	andlw	1
 21929  00478A  0100               	movlb	0	; () banked
 21930  00478C  6F73               	movwf	(??_init_app_ram+19)& (0+255),b
 21931  00478E  6B74               	clrf	(??_init_app_ram+20)& (0+255),b
 21932  004790  0E09               	movlw	9
 21933  004792                     u10655:
 21934  004792  90D8               	bcf	status,0,c
 21935  004794  0100               	movlb	0	; () banked
 21936  004796  3773               	rlcf	(??_init_app_ram+19)& (0+255),f,b
 21937  004798  3774               	rlcf	(??_init_app_ram+20)& (0+255),f,b
 21938  00479A  2EE8               	decfsz	wreg,f,c
 21939  00479C  D7FA               	goto	u10655
 21940  00479E  0100               	movlb	0	; () banked
 21941  0047A0  5171               	movf	(??_init_app_ram+17)& (0+255),w,b
 21942  0047A2  0100               	movlb	0	; () banked
 21943  0047A4  2573               	addwf	(??_init_app_ram+19)& (0+255),w,b
 21944  0047A6  0100               	movlb	0	; () banked
 21945  0047A8  6F75               	movwf	(??_init_app_ram+21)& (0+255),b
 21946  0047AA  0100               	movlb	0	; () banked
 21947  0047AC  5172               	movf	(??_init_app_ram+18)& (0+255),w,b
 21948  0047AE  0100               	movlb	0	; () banked
 21949  0047B0  2174               	addwfc	(??_init_app_ram+20)& (0+255),w,b
 21950  0047B2  0100               	movlb	0	; () banked
 21951  0047B4  6F76               	movwf	(??_init_app_ram+22)& (0+255),b
 21952  0047B6  0100               	movlb	0	; () banked
 21953  0047B8  516E               	movf	(??_init_app_ram+14)& (0+255),w,b
 21954  0047BA  0100               	movlb	0	; () banked
 21955  0047BC  2575               	addwf	(??_init_app_ram+21)& (0+255),w,b
 21956  0047BE  0100               	movlb	0	; () banked
 21957  0047C0  6F77               	movwf	(??_init_app_ram+23)& (0+255),b
 21958  0047C2  0100               	movlb	0	; () banked
 21959  0047C4  516F               	movf	(??_init_app_ram+15)& (0+255),w,b
 21960  0047C6  0100               	movlb	0	; () banked
 21961  0047C8  2176               	addwfc	(??_init_app_ram+22)& (0+255),w,b
 21962  0047CA  0100               	movlb	0	; () banked
 21963  0047CC  6F78               	movwf	(??_init_app_ram+24)& (0+255),b
 21964  0047CE  0100               	movlb	0	; () banked
 21965  0047D0  516C               	movf	(??_init_app_ram+12)& (0+255),w,b
 21966  0047D2  0100               	movlb	0	; () banked
 21967  0047D4  2577               	addwf	(??_init_app_ram+23)& (0+255),w,b
 21968  0047D6  0100               	movlb	0	; () banked
 21969  0047D8  6F79               	movwf	(??_init_app_ram+25)& (0+255),b
 21970  0047DA  0100               	movlb	0	; () banked
 21971  0047DC  516D               	movf	(??_init_app_ram+13)& (0+255),w,b
 21972  0047DE  0100               	movlb	0	; () banked
 21973  0047E0  2178               	addwfc	(??_init_app_ram+24)& (0+255),w,b
 21974  0047E2  0100               	movlb	0	; () banked
 21975  0047E4  6F7A               	movwf	(??_init_app_ram+26)& (0+255),b
 21976  0047E6  0100               	movlb	0	; () banked
 21977  0047E8  516A               	movf	(??_init_app_ram+10)& (0+255),w,b
 21978  0047EA  0100               	movlb	0	; () banked
 21979  0047EC  2579               	addwf	(??_init_app_ram+25)& (0+255),w,b
 21980  0047EE  0100               	movlb	0	; () banked
 21981  0047F0  6F7B               	movwf	(??_init_app_ram+27)& (0+255),b
 21982  0047F2  0100               	movlb	0	; () banked
 21983  0047F4  516B               	movf	(??_init_app_ram+11)& (0+255),w,b
 21984  0047F6  0100               	movlb	0	; () banked
 21985  0047F8  217A               	addwfc	(??_init_app_ram+26)& (0+255),w,b
 21986  0047FA  0100               	movlb	0	; () banked
 21987  0047FC  6F7C               	movwf	(??_init_app_ram+28)& (0+255),b
 21988  0047FE  0100               	movlb	0	; () banked
 21989  004800  5168               	movf	(??_init_app_ram+8)& (0+255),w,b
 21990  004802  0100               	movlb	0	; () banked
 21991  004804  257B               	addwf	(??_init_app_ram+27)& (0+255),w,b
 21992  004806  0100               	movlb	0	; () banked
 21993  004808  6F7D               	movwf	(??_init_app_ram+29)& (0+255),b
 21994  00480A  0100               	movlb	0	; () banked
 21995  00480C  5169               	movf	(??_init_app_ram+9)& (0+255),w,b
 21996  00480E  0100               	movlb	0	; () banked
 21997  004810  217C               	addwfc	(??_init_app_ram+28)& (0+255),w,b
 21998  004812  0100               	movlb	0	; () banked
 21999  004814  6F7E               	movwf	(??_init_app_ram+30)& (0+255),b
 22000  004816  0100               	movlb	0	; () banked
 22001  004818  5166               	movf	(??_init_app_ram+6)& (0+255),w,b
 22002  00481A  0100               	movlb	0	; () banked
 22003  00481C  257D               	addwf	(??_init_app_ram+29)& (0+255),w,b
 22004  00481E  0100               	movlb	0	; () banked
 22005  004820  6F7F               	movwf	(??_init_app_ram+31)& (0+255),b
 22006  004822  0100               	movlb	0	; () banked
 22007  004824  5167               	movf	(??_init_app_ram+7)& (0+255),w,b
 22008  004826  0100               	movlb	0	; () banked
 22009  004828  217E               	addwfc	(??_init_app_ram+30)& (0+255),w,b
 22010  00482A  0100               	movlb	0	; () banked
 22011  00482C  6F80               	movwf	(??_init_app_ram+32)& (0+255),b
 22012  00482E  0100               	movlb	0	; () banked
 22013  004830  5164               	movf	(??_init_app_ram+4)& (0+255),w,b
 22014  004832  0100               	movlb	0	; () banked
 22015  004834  257F               	addwf	(??_init_app_ram+31)& (0+255),w,b
 22016  004836  0100               	movlb	0	; () banked
 22017  004838  6F81               	movwf	(??_init_app_ram+33)& (0+255),b
 22018  00483A  0100               	movlb	0	; () banked
 22019  00483C  5165               	movf	(??_init_app_ram+5)& (0+255),w,b
 22020  00483E  0100               	movlb	0	; () banked
 22021  004840  2180               	addwfc	(??_init_app_ram+32)& (0+255),w,b
 22022  004842  0100               	movlb	0	; () banked
 22023  004844  6F82               	movwf	(??_init_app_ram+34)& (0+255),b
 22024  004846  0100               	movlb	0	; () banked
 22025  004848  5162               	movf	(??_init_app_ram+2)& (0+255),w,b
 22026  00484A  0100               	movlb	0	; () banked
 22027  00484C  2581               	addwf	(??_init_app_ram+33)& (0+255),w,b
 22028  00484E  0100               	movlb	0	; () banked
 22029  004850  6F83               	movwf	(??_init_app_ram+35)& (0+255),b
 22030  004852  0100               	movlb	0	; () banked
 22031  004854  5163               	movf	(??_init_app_ram+3)& (0+255),w,b
 22032  004856  0100               	movlb	0	; () banked
 22033  004858  2182               	addwfc	(??_init_app_ram+34)& (0+255),w,b
 22034  00485A  0100               	movlb	0	; () banked
 22035  00485C  6F84               	movwf	(??_init_app_ram+36)& (0+255),b
 22036  00485E  0100               	movlb	0	; () banked
 22037  004860  5160               	movf	??_init_app_ram& (0+255),w,b
 22038  004862  0100               	movlb	0	; () banked
 22039  004864  2583               	addwf	(??_init_app_ram+35)& (0+255),w,b
 22040  004866  0100               	movlb	0	; () banked
 22041  004868  0100               	movlb	0	; () banked
 22042  00486A  6FD7               	movwf	_current_iostate& (0+255),b
 22043  00486C  0100               	movlb	0	; () banked
 22044  00486E  0E00               	movlw	0
 22045  004870  0100               	movlb	0	; () banked
 22046  004872  2184               	addwfc	(??_init_app_ram+36)& (0+255),w,b
 22047  004874  0100               	movlb	0	; () banked
 22048  004876  6FD8               	movwf	(_current_iostate+1)& (0+255),b
 22049                           
 22050                           ; BSR set to: 0
 22051  004878  0012               	return	
 22052  00487A                     __end_of_init_app_ram:
 22053                           	opt stack 0
 22054                           tblptru	equ	0xFF8
 22055                           tblptrh	equ	0xFF7
 22056                           tblptrl	equ	0xFF6
 22057                           tablat	equ	0xFF5
 22058                           prodh	equ	0xFF4
 22059                           prodl	equ	0xFF3
 22060                           intcon	equ	0xFF2
 22061                           intcon2	equ	0xFF1
 22062                           postinc0	equ	0xFEE
 22063                           wreg	equ	0xFE8
 22064                           indf1	equ	0xFE7
 22065                           fsr1h	equ	0xFE2
 22066                           fsr1l	equ	0xFE1
 22067                           indf2	equ	0xFDF
 22068                           postinc2	equ	0xFDE
 22069                           postdec2	equ	0xFDD
 22070                           plusw2	equ	0xFDB
 22071                           fsr2h	equ	0xFDA
 22072                           fsr2l	equ	0xFD9
 22073                           status	equ	0xFD8
 22074                           
 22075 ;; *************** function _WriteTimer0 *****************
 22076 ;; Defined at:
 22077 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c"
 22078 ;; Parameters:    Size  Location     Type
 22079 ;;  timer0          2   21[COMRAM] unsigned int 
 22080 ;; Auto vars:     Size  Location     Type
 22081 ;;  timer           2   23[COMRAM] struct Timers
 22082 ;; Return value:  Size  Location     Type
 22083 ;;		None               void
 22084 ;; Registers used:
 22085 ;;		None
 22086 ;; Tracked objects:
 22087 ;;		On entry : 0/0
 22088 ;;		On exit  : 0/0
 22089 ;;		Unchanged: 0/0
 22090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22091 ;;      Params:         2       0       0       0       0       0       0
 22092 ;;      Locals:         2       0       0       0       0       0       0
 22093 ;;      Temps:          0       0       0       0       0       0       0
 22094 ;;      Totals:         4       0       0       0       0       0       0
 22095 ;;Total ram usage:        4 bytes
 22096 ;; Hardware stack levels used:    1
 22097 ;; Hardware stack levels required when called:    2
 22098 ;; This function calls:
 22099 ;;		Nothing
 22100 ;; This function is called by:
 22101 ;;		_init
 22102 ;; This function uses a non-reentrant model
 22103 ;;
 22104                           
 22105                           	psect	text71
 22106  006DE8                     __ptext71:
 22107                           	opt stack 0
 22108  006DE8                     _WriteTimer0:
 22109                           	opt stack 26
 22110                           
 22111                           ; BSR set to: 0
 22112                           ;incstack = 0
 22113                           ;incstack = 0
 22114  006DE8  C016  F018         	movff	WriteTimer0@timer0,WriteTimer0@timer
 22115  006DEC  C017  F019         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
 22116  006DF0  C019  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
 22117  006DF4  C018  FFD6         	movff	WriteTimer0@timer,4054	;volatile
 22118  006DF8  0012               	return	
 22119  006DFA                     __end_of_WriteTimer0:
 22120                           	opt stack 0
 22121                           tblptru	equ	0xFF8
 22122                           tblptrh	equ	0xFF7
 22123                           tblptrl	equ	0xFF6
 22124                           tablat	equ	0xFF5
 22125                           prodh	equ	0xFF4
 22126                           prodl	equ	0xFF3
 22127                           intcon	equ	0xFF2
 22128                           intcon2	equ	0xFF1
 22129                           postinc0	equ	0xFEE
 22130                           wreg	equ	0xFE8
 22131                           indf1	equ	0xFE7
 22132                           fsr1h	equ	0xFE2
 22133                           fsr1l	equ	0xFE1
 22134                           indf2	equ	0xFDF
 22135                           postinc2	equ	0xFDE
 22136                           postdec2	equ	0xFDD
 22137                           plusw2	equ	0xFDB
 22138                           fsr2h	equ	0xFDA
 22139                           fsr2l	equ	0xFD9
 22140                           status	equ	0xFD8
 22141                           
 22142 ;; *************** function _ECANInitialize *****************
 22143 ;; Defined at:
 22144 ;;		line 168 in file "../ECAN.c"
 22145 ;; Parameters:    Size  Location     Type
 22146 ;;		None
 22147 ;; Auto vars:     Size  Location     Type
 22148 ;;		None
 22149 ;; Return value:  Size  Location     Type
 22150 ;;		None               void
 22151 ;; Registers used:
 22152 ;;		wreg, status,2, status,0, cstack
 22153 ;; Tracked objects:
 22154 ;;		On entry : 0/0
 22155 ;;		On exit  : 0/0
 22156 ;;		Unchanged: 0/0
 22157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22158 ;;      Params:         0       0       0       0       0       0       0
 22159 ;;      Locals:         0       0       0       0       0       0       0
 22160 ;;      Temps:          1       0       0       0       0       0       0
 22161 ;;      Totals:         1       0       0       0       0       0       0
 22162 ;;Total ram usage:        1 bytes
 22163 ;; Hardware stack levels used:    1
 22164 ;; Hardware stack levels required when called:    3
 22165 ;; This function calls:
 22166 ;;		_ECANSetOperationMode
 22167 ;; This function is called by:
 22168 ;;		_init
 22169 ;; This function uses a non-reentrant model
 22170 ;;
 22171                           
 22172                           	psect	text72
 22173  005DB4                     __ptext72:
 22174                           	opt stack 0
 22175  005DB4                     _ECANInitialize:
 22176                           	opt stack 25
 22177                           
 22178                           ;ECAN.c: 171: ECANSetOperationMode(ECAN_OP_MODE_CONFIG);
 22179                           
 22180                           ;incstack = 0
 22181                           ;incstack = 0
 22182  005DB4  6E17               	movwf	??_ECANInitialize& (0+255),c
 22183  005DB6  0E80               	movlw	128
 22184  005DB8  6E16               	movwf	?_ECANSetOperationMode,c
 22185  005DBA  5017               	movf	??_ECANInitialize& (0+255),w,c
 22186  005DBC  ECBD  F036         	call	_ECANSetOperationMode	;wreg free
 22187                           
 22188                           ;ECAN.c: 175: BRGCON1 = ((1-1) << 6) | (10-1);
 22189  005DC0  0E09               	movlw	9
 22190  005DC2  6E70               	movwf	3952,c	;volatile
 22191                           
 22192                           ;ECAN.c: 176: BRGCON2 = (1 << 7) | (1 << 6) | ((8-1) << 3) | (5-1);
 22193  005DC4  0EFC               	movlw	252
 22194  005DC6  6E71               	movwf	3953,c	;volatile
 22195                           
 22196                           ;ECAN.c: 180: BRGCON3 = (0 << 7) |
 22197                           ;ECAN.c: 181: (0 << 6) |
 22198                           ;ECAN.c: 182: (2-1);
 22199  005DC8  0E01               	movlw	1
 22200  005DCA  6E72               	movwf	3954,c	;volatile
 22201                           
 22202                           ;ECAN.c: 185: CIOCON = 0 << 7 | 0 << 6 | 1 << 5 | 0;
 22203  005DCC  0E20               	movlw	32
 22204  005DCE  6E73               	movwf	3955,c	;volatile
 22205                           
 22206                           ;ECAN.c: 192: MDSEL1 = 0x80 >> 7;
 22207  005DD0  8E77               	bsf	3959,7,c	;volatile
 22208                           
 22209                           ;ECAN.c: 193: MDSEL0 = 0x80 >> 6;
 22210  005DD2  9C77               	bcf	3959,6,c	;volatile
 22211                           
 22212                           ;ECAN.c: 205: RXB0CON = 0;
 22213  005DD4  0E00               	movlw	0
 22214  005DD6  6E60               	movwf	3936,c	;volatile
 22215                           
 22216                           ;ECAN.c: 211: RXB1CON = 0;
 22217  005DD8  0E00               	movlw	0
 22218  005DDA  010F               	movlb	15	; () banked
 22219  005DDC  010F               	movlb	15	; () banked
 22220  005DDE  6F50               	movwf	80,b	;volatile
 22221                           
 22222                           ; BSR set to: 15
 22223                           ;ECAN.c: 221: B0CON = 0;
 22224  005DE0  0E00               	movlw	0
 22225  005DE2  010E               	movlb	14	; () banked
 22226  005DE4  010E               	movlb	14	; () banked
 22227  005DE6  6F20               	movwf	32,b	;volatile
 22228                           
 22229                           ; BSR set to: 14
 22230                           ;ECAN.c: 231: B1CON = 0;
 22231  005DE8  0E00               	movlw	0
 22232  005DEA  010E               	movlb	14	; () banked
 22233  005DEC  010E               	movlb	14	; () banked
 22234  005DEE  6F30               	movwf	48,b	;volatile
 22235                           
 22236                           ; BSR set to: 14
 22237                           ;ECAN.c: 241: B2CON = 0;
 22238  005DF0  0E00               	movlw	0
 22239  005DF2  010E               	movlb	14	; () banked
 22240  005DF4  010E               	movlb	14	; () banked
 22241  005DF6  6F40               	movwf	64,b	;volatile
 22242                           
 22243                           ; BSR set to: 14
 22244                           ;ECAN.c: 254: B3CON = 0 << 2;
 22245  005DF8  0E00               	movlw	0
 22246  005DFA  010E               	movlb	14	; () banked
 22247  005DFC  010E               	movlb	14	; () banked
 22248  005DFE  6F50               	movwf	80,b	;volatile
 22249                           
 22250                           ; BSR set to: 14
 22251                           ;ECAN.c: 264: B4CON = 0 << 2;
 22252  005E00  0E00               	movlw	0
 22253  005E02  010E               	movlb	14	; () banked
 22254  005E04  010E               	movlb	14	; () banked
 22255  005E06  6F60               	movwf	96,b	;volatile
 22256                           
 22257                           ; BSR set to: 14
 22258                           ;ECAN.c: 274: B5CON = 0 << 2;
 22259  005E08  0E00               	movlw	0
 22260  005E0A  010E               	movlb	14	; () banked
 22261  005E0C  010E               	movlb	14	; () banked
 22262  005E0E  6F70               	movwf	112,b	;volatile
 22263                           
 22264                           ; BSR set to: 14
 22265                           ;ECAN.c: 278: BSEL0 = 1 << 7 | 1 << 6 | 1 << 5 | 0 << 4 | 0 << 3 | 0 << 2;
 22266  005E10  0EE0               	movlw	224
 22267  005E12  010D               	movlb	13	; () banked
 22268  005E14  010D               	movlb	13	; () banked
 22269  005E16  6FF8               	movwf	248,b	;volatile
 22270                           
 22271                           ; BSR set to: 13
 22272                           ;ECAN.c: 295: RXF0SIDH = (long)0x00000000L >> 21L;RXF0SIDL = (((long)0x00000000L >> 13L)
      +                           & 0xe0) | ((long)(0x00000000L) & 0x03L) | 0x08;RXF0EIDH = (long)0x00000000L >> 8L;RXF0E
      +                          IDL = 0x00000000L;;
 22273  005E18  0E00               	movlw	0
 22274  005E1A  010F               	movlb	15	; () banked
 22275  005E1C  010F               	movlb	15	; () banked
 22276  005E1E  6F00               	movwf	0,b	;volatile
 22277                           
 22278                           ; BSR set to: 15
 22279  005E20  0E08               	movlw	8
 22280  005E22  010F               	movlb	15	; () banked
 22281  005E24  010F               	movlb	15	; () banked
 22282  005E26  6F01               	movwf	1,b	;volatile
 22283                           
 22284                           ; BSR set to: 15
 22285  005E28  0E00               	movlw	0
 22286  005E2A  010F               	movlb	15	; () banked
 22287  005E2C  010F               	movlb	15	; () banked
 22288  005E2E  6F02               	movwf	2,b	;volatile
 22289                           
 22290                           ; BSR set to: 15
 22291  005E30  0E00               	movlw	0
 22292  005E32  010F               	movlb	15	; () banked
 22293  005E34  010F               	movlb	15	; () banked
 22294  005E36  6F03               	movwf	3,b	;volatile
 22295                           
 22296                           ; BSR set to: 15
 22297                           ;ECAN.c: 303: RXF1SIDH = (long)0x001E1A00L >> 21L;RXF1SIDL = (((long)0x001E1A00L >> 13L)
      +                           & 0xe0) | ((long)(0x001E1A00L) & 0x03L) | 0x08;RXF1EIDH = (long)0x001E1A00L >> 8L;RXF1E
      +                          IDL = 0x001E1A00L;;
 22298  005E38  0E00               	movlw	0
 22299  005E3A  010F               	movlb	15	; () banked
 22300  005E3C  010F               	movlb	15	; () banked
 22301  005E3E  6F04               	movwf	4,b	;volatile
 22302                           
 22303                           ; BSR set to: 15
 22304  005E40  0EE8               	movlw	232
 22305  005E42  010F               	movlb	15	; () banked
 22306  005E44  010F               	movlb	15	; () banked
 22307  005E46  6F05               	movwf	5,b	;volatile
 22308                           
 22309                           ; BSR set to: 15
 22310  005E48  0E1A               	movlw	26
 22311  005E4A  010F               	movlb	15	; () banked
 22312  005E4C  010F               	movlb	15	; () banked
 22313  005E4E  6F06               	movwf	6,b	;volatile
 22314                           
 22315                           ; BSR set to: 15
 22316  005E50  0E00               	movlw	0
 22317  005E52  010F               	movlb	15	; () banked
 22318  005E54  010F               	movlb	15	; () banked
 22319  005E56  6F07               	movwf	7,b	;volatile
 22320                           
 22321                           ; BSR set to: 15
 22322                           ;ECAN.c: 428: RXFCON0 = (0 << 7) | (0 << 6) | (0 << 5) | (0 << 4) | (0 << 3) | (0 << 2) 
      +                          | (1 << 1) | (1);
 22323  005E58  0E03               	movlw	3
 22324  005E5A  010D               	movlb	13	; () banked
 22325  005E5C  010D               	movlb	13	; () banked
 22326  005E5E  6FD4               	movwf	212,b	;volatile
 22327                           
 22328                           ; BSR set to: 13
 22329                           ;ECAN.c: 436: RXFCON1 = (0 << 7) | (0 << 6) | (0 << 5) | (0 << 4) | (0 << 3) | (0 << 2) 
      +                          | (0 << 1) | (0);
 22330  005E60  0E00               	movlw	0
 22331  005E62  010D               	movlb	13	; () banked
 22332  005E64  010D               	movlb	13	; () banked
 22333  005E66  6FD5               	movwf	213,b	;volatile
 22334                           
 22335                           ; BSR set to: 13
 22336                           ;ECAN.c: 449: RXFBCON0 = (0 << 4) | 0;
 22337  005E68  0E00               	movlw	0
 22338  005E6A  010D               	movlb	13	; () banked
 22339  005E6C  010D               	movlb	13	; () banked
 22340  005E6E  6FE0               	movwf	224,b	;volatile
 22341                           
 22342                           ; BSR set to: 13
 22343                           ;ECAN.c: 450: RXFBCON1 = (1 << 4) | 1;
 22344  005E70  0E11               	movlw	17
 22345  005E72  010D               	movlb	13	; () banked
 22346  005E74  010D               	movlb	13	; () banked
 22347  005E76  6FE1               	movwf	225,b	;volatile
 22348                           
 22349                           ; BSR set to: 13
 22350                           ;ECAN.c: 451: RXFBCON2 = (1 << 4) | 1;
 22351  005E78  0E11               	movlw	17
 22352  005E7A  010D               	movlb	13	; () banked
 22353  005E7C  010D               	movlb	13	; () banked
 22354  005E7E  6FE2               	movwf	226,b	;volatile
 22355                           
 22356                           ; BSR set to: 13
 22357                           ;ECAN.c: 452: RXFBCON3 = (0 << 4) | 0;
 22358  005E80  0E00               	movlw	0
 22359  005E82  010D               	movlb	13	; () banked
 22360  005E84  010D               	movlb	13	; () banked
 22361  005E86  6FE3               	movwf	227,b	;volatile
 22362                           
 22363                           ; BSR set to: 13
 22364                           ;ECAN.c: 453: RXFBCON4 = (0 << 4) | 0;
 22365  005E88  0E00               	movlw	0
 22366  005E8A  010D               	movlb	13	; () banked
 22367  005E8C  010D               	movlb	13	; () banked
 22368  005E8E  6FE4               	movwf	228,b	;volatile
 22369                           
 22370                           ; BSR set to: 13
 22371                           ;ECAN.c: 454: RXFBCON5 = (0 << 4) | 0;
 22372  005E90  0E00               	movlw	0
 22373  005E92  010D               	movlb	13	; () banked
 22374  005E94  010D               	movlb	13	; () banked
 22375  005E96  6FE5               	movwf	229,b	;volatile
 22376                           
 22377                           ; BSR set to: 13
 22378                           ;ECAN.c: 455: RXFBCON6 = (0 << 4) | 0;
 22379  005E98  0E00               	movlw	0
 22380  005E9A  010D               	movlb	13	; () banked
 22381  005E9C  010D               	movlb	13	; () banked
 22382  005E9E  6FE6               	movwf	230,b	;volatile
 22383                           
 22384                           ; BSR set to: 13
 22385                           ;ECAN.c: 456: RXFBCON7 = (0 << 4) | 0;
 22386  005EA0  0E00               	movlw	0
 22387  005EA2  010D               	movlb	13	; () banked
 22388  005EA4  010D               	movlb	13	; () banked
 22389  005EA6  6FE7               	movwf	231,b	;volatile
 22390                           
 22391                           ; BSR set to: 13
 22392                           ;ECAN.c: 458: MSEL0 = 1 << 6 | 1 << 4 | 1 << 2 | 0;;
 22393  005EA8  0E54               	movlw	84
 22394  005EAA  010D               	movlb	13	; () banked
 22395  005EAC  010D               	movlb	13	; () banked
 22396  005EAE  6FF0               	movwf	240,b	;volatile
 22397                           
 22398                           ; BSR set to: 13
 22399                           ;ECAN.c: 462: MSEL1 = 0 << 6 | 0 << 4 | 1 << 2 | 1;;
 22400  005EB0  0E05               	movlw	5
 22401  005EB2  010D               	movlb	13	; () banked
 22402  005EB4  010D               	movlb	13	; () banked
 22403  005EB6  6FF1               	movwf	241,b	;volatile
 22404                           
 22405                           ; BSR set to: 13
 22406                           ;ECAN.c: 466: MSEL2 = 0 << 6 | 0 << 4 | 0 << 2 | 0;;
 22407  005EB8  0E00               	movlw	0
 22408  005EBA  010D               	movlb	13	; () banked
 22409  005EBC  010D               	movlb	13	; () banked
 22410  005EBE  6FF2               	movwf	242,b	;volatile
 22411                           
 22412                           ; BSR set to: 13
 22413                           ;ECAN.c: 470: MSEL2 = 0 << 6 | 0 << 4 | 0 << 2 | 0;;
 22414  005EC0  0E00               	movlw	0
 22415  005EC2  010D               	movlb	13	; () banked
 22416  005EC4  010D               	movlb	13	; () banked
 22417  005EC6  6FF2               	movwf	242,b	;volatile
 22418                           
 22419                           ; BSR set to: 13
 22420                           ;ECAN.c: 481: RXM0SIDH = (long)0x01FF0000L >> 21L; RXM0SIDL = (((long)0x01FF0000L >> 13L
      +                          ) & 0xe0) | ((long)(0x01FF0000L) & 0x03L); RXM0EIDH = (long)0x01FF0000L >> 8L; RXM0EIDL 
      +                          = 0x01FF0000L;;
 22421  005EC8  0E0F               	movlw	15
 22422  005ECA  010F               	movlb	15	; () banked
 22423  005ECC  010F               	movlb	15	; () banked
 22424  005ECE  6F18               	movwf	24,b	;volatile
 22425                           
 22426                           ; BSR set to: 15
 22427  005ED0  0EE0               	movlw	224
 22428  005ED2  010F               	movlb	15	; () banked
 22429  005ED4  010F               	movlb	15	; () banked
 22430  005ED6  6F19               	movwf	25,b	;volatile
 22431                           
 22432                           ; BSR set to: 15
 22433  005ED8  0E00               	movlw	0
 22434  005EDA  010F               	movlb	15	; () banked
 22435  005EDC  010F               	movlb	15	; () banked
 22436  005EDE  6F1A               	movwf	26,b	;volatile
 22437                           
 22438                           ; BSR set to: 15
 22439  005EE0  0E00               	movlw	0
 22440  005EE2  010F               	movlb	15	; () banked
 22441  005EE4  010F               	movlb	15	; () banked
 22442  005EE6  6F1B               	movwf	27,b	;volatile
 22443                           
 22444                           ; BSR set to: 15
 22445                           ;ECAN.c: 482: RXM0EXIDM = 1;
 22446  005EE8  010F               	movlb	15
 22447  005EEA  010F               	movlb	15	; () banked
 22448  005EEC  8719               	bsf	25,3,b	;volatile
 22449                           
 22450                           ; BSR set to: 15
 22451                           ;ECAN.c: 489: RXM1SIDH = (long)0x01FFFF00L >> 21L; RXM1SIDL = (((long)0x01FFFF00L >> 13L
      +                          ) & 0xe0) | ((long)(0x01FFFF00L) & 0x03L); RXM1EIDH = (long)0x01FFFF00L >> 8L; RXM1EIDL 
      +                          = 0x01FFFF00L;;
 22452  005EEE  0E0F               	movlw	15
 22453  005EF0  010F               	movlb	15	; () banked
 22454  005EF2  010F               	movlb	15	; () banked
 22455  005EF4  6F1C               	movwf	28,b	;volatile
 22456                           
 22457                           ; BSR set to: 15
 22458  005EF6  0EE0               	movlw	224
 22459  005EF8  010F               	movlb	15	; () banked
 22460  005EFA  010F               	movlb	15	; () banked
 22461  005EFC  6F1D               	movwf	29,b	;volatile
 22462                           
 22463                           ; BSR set to: 15
 22464  005EFE  010F               	movlb	15	; () banked
 22465  005F00  010F               	movlb	15	; () banked
 22466  005F02  691E               	setf	30,b	;volatile
 22467                           
 22468                           ; BSR set to: 15
 22469  005F04  0E00               	movlw	0
 22470  005F06  010F               	movlb	15	; () banked
 22471  005F08  010F               	movlb	15	; () banked
 22472  005F0A  6F1F               	movwf	31,b	;volatile
 22473                           
 22474                           ; BSR set to: 15
 22475                           ;ECAN.c: 490: RXM1EXIDEN = 1;
 22476  005F0C  010F               	movlb	15
 22477  005F0E  010F               	movlb	15	; () banked
 22478  005F10  871D               	bsf	29,3,b	;volatile
 22479                           
 22480                           ;ECAN.c: 498: ECANSetOperationMode(0x00);
 22481  005F12  6E17               	movwf	??_ECANInitialize& (0+255),c
 22482  005F14  0E00               	movlw	0
 22483  005F16  6E16               	movwf	?_ECANSetOperationMode,c
 22484  005F18  5017               	movf	??_ECANInitialize& (0+255),w,c
 22485  005F1A  ECBD  F036         	call	_ECANSetOperationMode	;wreg free
 22486  005F1E  0012               	return	
 22487  005F20                     __end_of_ECANInitialize:
 22488                           	opt stack 0
 22489                           tblptru	equ	0xFF8
 22490                           tblptrh	equ	0xFF7
 22491                           tblptrl	equ	0xFF6
 22492                           tablat	equ	0xFF5
 22493                           prodh	equ	0xFF4
 22494                           prodl	equ	0xFF3
 22495                           intcon	equ	0xFF2
 22496                           intcon2	equ	0xFF1
 22497                           postinc0	equ	0xFEE
 22498                           wreg	equ	0xFE8
 22499                           indf1	equ	0xFE7
 22500                           fsr1h	equ	0xFE2
 22501                           fsr1l	equ	0xFE1
 22502                           indf2	equ	0xFDF
 22503                           postinc2	equ	0xFDE
 22504                           postdec2	equ	0xFDD
 22505                           plusw2	equ	0xFDB
 22506                           fsr2h	equ	0xFDA
 22507                           fsr2l	equ	0xFD9
 22508                           status	equ	0xFD8
 22509                           
 22510 ;; *************** function _ECANSetOperationMode *****************
 22511 ;; Defined at:
 22512 ;;		line 1012 in file "../ECAN.c"
 22513 ;; Parameters:    Size  Location     Type
 22514 ;;  mode            1   21[COMRAM] enum E16346
 22515 ;; Auto vars:     Size  Location     Type
 22516 ;;		None
 22517 ;; Return value:  Size  Location     Type
 22518 ;;		None               void
 22519 ;; Registers used:
 22520 ;;		wreg, status,2, status,0
 22521 ;; Tracked objects:
 22522 ;;		On entry : 0/0
 22523 ;;		On exit  : 0/0
 22524 ;;		Unchanged: 0/0
 22525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22526 ;;      Params:         1       0       0       0       0       0       0
 22527 ;;      Locals:         0       0       0       0       0       0       0
 22528 ;;      Temps:          0       0       0       0       0       0       0
 22529 ;;      Totals:         1       0       0       0       0       0       0
 22530 ;;Total ram usage:        1 bytes
 22531 ;; Hardware stack levels used:    1
 22532 ;; Hardware stack levels required when called:    2
 22533 ;; This function calls:
 22534 ;;		Nothing
 22535 ;; This function is called by:
 22536 ;;		_ECANInitialize
 22537 ;;		_calculateSetFilterMask
 22538 ;; This function uses a non-reentrant model
 22539 ;;
 22540                           
 22541                           	psect	text73
 22542  006D7A                     __ptext73:
 22543                           	opt stack 0
 22544  006D7A                     _ECANSetOperationMode:
 22545                           	opt stack 23
 22546                           
 22547                           ;ECAN.c: 1013: CANCON &= 0x1F;
 22548                           
 22549                           ;incstack = 0
 22550                           ;incstack = 0
 22551  006D7A  0E1F               	movlw	31
 22552  006D7C  166F               	andwf	3951,f,c	;volatile
 22553                           
 22554                           ;ECAN.c: 1014: CANCON |= mode;
 22555  006D7E  5016               	movf	ECANSetOperationMode@mode,w,c
 22556  006D80  126F               	iorwf	3951,f,c	;volatile
 22557  006D82                     l8647:
 22558  006D82  506F               	movf	3951,w,c	;volatile
 22559  006D84  0BE0               	andlw	224
 22560  006D86  1816               	xorwf	ECANSetOperationMode@mode,w,c
 22561  006D88  B4D8               	btfsc	status,2,c
 22562  006D8A  0012               	return	
 22563  006D8C  D7FA               	goto	l8647
 22564  006D8E                     __end_of_ECANSetOperationMode:
 22565                           	opt stack 0
 22566                           tblptru	equ	0xFF8
 22567                           tblptrh	equ	0xFF7
 22568                           tblptrl	equ	0xFF6
 22569                           tablat	equ	0xFF5
 22570                           prodh	equ	0xFF4
 22571                           prodl	equ	0xFF3
 22572                           intcon	equ	0xFF2
 22573                           intcon2	equ	0xFF1
 22574                           postinc0	equ	0xFEE
 22575                           wreg	equ	0xFE8
 22576                           indf1	equ	0xFE7
 22577                           fsr1h	equ	0xFE2
 22578                           fsr1l	equ	0xFE1
 22579                           indf2	equ	0xFDF
 22580                           postinc2	equ	0xFDE
 22581                           postdec2	equ	0xFDD
 22582                           plusw2	equ	0xFDB
 22583                           fsr2h	equ	0xFDA
 22584                           fsr2l	equ	0xFD9
 22585                           status	equ	0xFD8
 22586                           
 22587 ;; *************** function _vscp_readAppReg *****************
 22588 ;; Defined at:
 22589 ;;		line 1008 in file "../main.c"
 22590 ;; Parameters:    Size  Location     Type
 22591 ;;  reg             1   23[COMRAM] unsigned char 
 22592 ;; Auto vars:     Size  Location     Type
 22593 ;;  rv              1   25[COMRAM] unsigned char 
 22594 ;; Return value:  Size  Location     Type
 22595 ;;                  1    wreg      unsigned char 
 22596 ;; Registers used:
 22597 ;;		wreg, status,2, status,0, cstack
 22598 ;; Tracked objects:
 22599 ;;		On entry : 0/0
 22600 ;;		On exit  : 0/0
 22601 ;;		Unchanged: 0/0
 22602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22603 ;;      Params:         1       0       0       0       0       0       0
 22604 ;;      Locals:         1       0       0       0       0       0       0
 22605 ;;      Temps:          1       0       0       0       0       0       0
 22606 ;;      Totals:         3       0       0       0       0       0       0
 22607 ;;Total ram usage:        3 bytes
 22608 ;; Hardware stack levels used:    1
 22609 ;; Hardware stack levels required when called:    3
 22610 ;; This function calls:
 22611 ;;		_Read_b_eep
 22612 ;; This function is called by:
 22613 ;;		_vscp_readRegister
 22614 ;;		_vscp_handleProtocolEvent
 22615 ;; This function uses a non-reentrant model
 22616 ;;
 22617                           
 22618                           	psect	text74
 22619  00607E                     __ptext74:
 22620                           	opt stack 0
 22621  00607E                     _vscp_readAppReg:
 22622                           	opt stack 24
 22623                           
 22624                           ;main.c: 1009: uint8_t rv;
 22625                           ;main.c: 1011: rv = 0x00;
 22626                           
 22627                           ;incstack = 0
 22628                           ;incstack = 0
 22629  00607E  6E19               	movwf	??_vscp_readAppReg& (0+255),c
 22630  006080  0E00               	movlw	0
 22631  006082  6E1A               	movwf	vscp_readAppReg@rv,c
 22632  006084  5019               	movf	??_vscp_readAppReg& (0+255),w,c
 22633                           
 22634                           ;main.c: 1014: if ( 0 == vscp_page_select ) {
 22635  006086  5037               	movf	_vscp_page_select+1,w,c
 22636  006088  1036               	iorwf	_vscp_page_select,w,c
 22637  00608A  A4D8               	btfss	status,2,c
 22638  00608C  D07B               	goto	l10225
 22639                           
 22640                           ;main.c: 1017: if ( reg == 0 ) {
 22641  00608E  6618               	tstfsz	vscp_readAppReg@reg,c
 22642  006090  D007               	goto	l10179
 22643                           
 22644                           ;main.c: 1018: rv = Read_b_eep(0x43 + 0);
 22645  006092  0E00               	movlw	0
 22646  006094  6E17               	movwf	?_Read_b_eep+1,c
 22647  006096  0E43               	movlw	67
 22648  006098  6E16               	movwf	?_Read_b_eep,c
 22649  00609A  ECFD  F036         	call	_Read_b_eep	;wreg free
 22650  00609E  D092               	goto	L160
 22651  0060A0                     l10179:
 22652                           
 22653                           ;main.c: 1020: else if ( reg == 1 ) {
 22654  0060A0  0418               	decf	vscp_readAppReg@reg,w,c
 22655  0060A2  A4D8               	btfss	status,2,c
 22656  0060A4  D007               	goto	l10183
 22657                           
 22658                           ;main.c: 1021: rv = Read_b_eep(0x43 + 1);
 22659  0060A6  0E00               	movlw	0
 22660  0060A8  6E17               	movwf	?_Read_b_eep+1,c
 22661  0060AA  0E44               	movlw	68
 22662  0060AC  6E16               	movwf	?_Read_b_eep,c
 22663  0060AE  ECFD  F036         	call	_Read_b_eep	;wreg free
 22664  0060B2  D088               	goto	L160
 22665  0060B4                     l10183:
 22666                           
 22667                           ;main.c: 1023: else if ( ( reg >= 2 ) &&
 22668                           ;main.c: 1024: ( reg <= 11 ) ) {
 22669  0060B4  0E01               	movlw	1
 22670  0060B6  6418               	cpfsgt	vscp_readAppReg@reg,c
 22671  0060B8  D00C               	goto	l10189
 22672  0060BA  0E0C               	movlw	12
 22673  0060BC  6018               	cpfslt	vscp_readAppReg@reg,c
 22674  0060BE  D009               	goto	l10189
 22675                           
 22676                           ;main.c: 1025: rv = Read_b_eep(0x43 + 2 + ( reg - 2 ));
 22677  0060C0  0E43               	movlw	67
 22678  0060C2  2418               	addwf	vscp_readAppReg@reg,w,c
 22679  0060C4  6E16               	movwf	?_Read_b_eep,c
 22680  0060C6  6A17               	clrf	?_Read_b_eep+1,c
 22681  0060C8  0E00               	movlw	0
 22682  0060CA  2217               	addwfc	?_Read_b_eep+1,f,c
 22683  0060CC  ECFD  F036         	call	_Read_b_eep	;wreg free
 22684  0060D0  D079               	goto	L160
 22685  0060D2                     l10189:
 22686                           
 22687                           ;main.c: 1029: else if ( ( reg >= 14 ) &&
 22688                           ;main.c: 1030: ( reg <= 23 ) ) {
 22689  0060D2  0E0D               	movlw	13
 22690  0060D4  6418               	cpfsgt	vscp_readAppReg@reg,c
 22691  0060D6  D045               	goto	l10219
 22692  0060D8  0E18               	movlw	24
 22693  0060DA  6018               	cpfslt	vscp_readAppReg@reg,c
 22694  0060DC  D042               	goto	l10219
 22695  0060DE  D021               	goto	l10217
 22696  0060E0                     l10195:
 22697                           
 22698                           ;main.c: 1036: rv = LATBbits.LATB0;
 22699  0060E0  0E00               	movlw	0
 22700  0060E2  B08A               	btfsc	3978,0,c	;volatile
 22701  0060E4  0E01               	movlw	1
 22702  0060E6  D06E               	goto	L160
 22703  0060E8                     l10197:
 22704                           
 22705                           ;main.c: 1041: rv = LATBbits.LATB1;
 22706  0060E8  0E00               	movlw	0
 22707  0060EA  B28A               	btfsc	3978,1,c	;volatile
 22708  0060EC  0E01               	movlw	1
 22709  0060EE  D06A               	goto	L160
 22710  0060F0                     l10199:
 22711                           
 22712                           ;main.c: 1046: rv = LATCbits.LATC3;
 22713  0060F0  0E00               	movlw	0
 22714  0060F2  B68B               	btfsc	3979,3,c	;volatile
 22715  0060F4  0E01               	movlw	1
 22716  0060F6  D066               	goto	L160
 22717  0060F8                     l10201:
 22718                           
 22719                           ;main.c: 1051: rv = LATCbits.LATC4;
 22720  0060F8  0E00               	movlw	0
 22721  0060FA  B88B               	btfsc	3979,4,c	;volatile
 22722  0060FC  0E01               	movlw	1
 22723  0060FE  D062               	goto	L160
 22724  006100                     l10203:
 22725                           
 22726                           ;main.c: 1056: rv = LATCbits.LATC5;
 22727  006100  0E00               	movlw	0
 22728  006102  BA8B               	btfsc	3979,5,c	;volatile
 22729  006104  0E01               	movlw	1
 22730  006106  D05E               	goto	L160
 22731  006108                     l10205:
 22732                           
 22733                           ;main.c: 1061: rv = LATCbits.LATC6;
 22734  006108  0E00               	movlw	0
 22735  00610A  BC8B               	btfsc	3979,6,c	;volatile
 22736  00610C  0E01               	movlw	1
 22737  00610E  D05A               	goto	L160
 22738  006110                     l10207:
 22739                           
 22740                           ;main.c: 1066: rv = LATCbits.LATC7;
 22741  006110  0E00               	movlw	0
 22742  006112  BE8B               	btfsc	3979,7,c	;volatile
 22743  006114  0E01               	movlw	1
 22744  006116  D056               	goto	L160
 22745  006118                     l10213:
 22746                           
 22747                           ;main.c: 1081: rv = 0;
 22748  006118  6E19               	movwf	??_vscp_readAppReg& (0+255),c
 22749  00611A  0E00               	movlw	0
 22750  00611C  6E1A               	movwf	vscp_readAppReg@rv,c
 22751  00611E  5019               	movf	??_vscp_readAppReg& (0+255),w,c
 22752                           
 22753                           ;main.c: 1082: break;
 22754  006120  D052               	goto	l10237
 22755  006122                     l10217:
 22756  006122  5018               	movf	vscp_readAppReg@reg,w,c
 22757                           
 22758                           ; Switch size 1, requested type "space"
 22759                           ; Number of cases is 10, Range of values is 14 to 23
 22760                           ; switch strategies available:
 22761                           ; Name         Instructions Cycles
 22762                           ; simple_byte           31    16 (average)
 22763                           ;	Chosen strategy is simple_byte
 22764  006124  0A0E               	xorlw	14	; case 14
 22765  006126  B4D8               	btfsc	status,2,c
 22766  006128  D7DB               	goto	l10195
 22767  00612A  0A01               	xorlw	1	; case 15
 22768  00612C  B4D8               	btfsc	status,2,c
 22769  00612E  D7DC               	goto	l10197
 22770  006130  0A1F               	xorlw	31	; case 16
 22771  006132  B4D8               	btfsc	status,2,c
 22772  006134  D7DD               	goto	l10199
 22773  006136  0A01               	xorlw	1	; case 17
 22774  006138  B4D8               	btfsc	status,2,c
 22775  00613A  D7DE               	goto	l10201
 22776  00613C  0A03               	xorlw	3	; case 18
 22777  00613E  B4D8               	btfsc	status,2,c
 22778  006140  D7DF               	goto	l10203
 22779  006142  0A01               	xorlw	1	; case 19
 22780  006144  B4D8               	btfsc	status,2,c
 22781  006146  D7E0               	goto	l10205
 22782  006148  0A07               	xorlw	7	; case 20
 22783  00614A  B4D8               	btfsc	status,2,c
 22784  00614C  D7E1               	goto	l10207
 22785  00614E  0A01               	xorlw	1	; case 21
 22786  006150  B4D8               	btfsc	status,2,c
 22787  006152  D7E2               	goto	l10213
 22788  006154  0A03               	xorlw	3	; case 22
 22789  006156  B4D8               	btfsc	status,2,c
 22790  006158  D7DF               	goto	l10213
 22791  00615A  0A01               	xorlw	1	; case 23
 22792  00615C  B4D8               	btfsc	status,2,c
 22793  00615E  D7DC               	goto	l10213
 22794  006160  D032               	goto	l10237
 22795  006162                     l10219:
 22796                           
 22797                           ;main.c: 1086: else if ( ( reg >= 24 ) &&
 22798                           ;main.c: 1087: ( reg < 46 ) ) {
 22799  006162  0E17               	movlw	23
 22800  006164  6418               	cpfsgt	vscp_readAppReg@reg,c
 22801  006166  D02F               	goto	l10237
 22802  006168  0E2E               	movlw	46
 22803  00616A  6018               	cpfslt	vscp_readAppReg@reg,c
 22804  00616C  D02C               	goto	l10237
 22805                           
 22806                           ;main.c: 1088: rv = Read_b_eep(0x43 + reg);
 22807  00616E  0E43               	movlw	67
 22808  006170  2418               	addwf	vscp_readAppReg@reg,w,c
 22809  006172  6E16               	movwf	?_Read_b_eep,c
 22810  006174  6A17               	clrf	?_Read_b_eep+1,c
 22811  006176  0E00               	movlw	0
 22812  006178  2217               	addwfc	?_Read_b_eep+1,f,c
 22813  00617A  ECFD  F036         	call	_Read_b_eep	;wreg free
 22814  00617E  6E1A               	movwf	vscp_readAppReg@rv,c
 22815  006180  F000               	nop		;# 
 22816  006182  D021               	goto	l10237
 22817  006184                     l10225:
 22818                           
 22819                           ;main.c: 1095: else if ( 1 == vscp_page_select ) {
 22820  006184  0436               	decf	_vscp_page_select,w,c
 22821  006186  1037               	iorwf	_vscp_page_select+1,w,c
 22822  006188  A4D8               	btfss	status,2,c
 22823  00618A  D00C               	goto	l10231
 22824                           
 22825                           ;main.c: 1096: if ( reg < 40 ) {
 22826  00618C  0E28               	movlw	40
 22827  00618E  6018               	cpfslt	vscp_readAppReg@reg,c
 22828  006190  D01A               	goto	l10237
 22829                           
 22830                           ;main.c: 1097: rv = Read_b_eep(0x43 + 46 + reg);
 22831  006192  0E71               	movlw	113
 22832  006194  2418               	addwf	vscp_readAppReg@reg,w,c
 22833  006196  6E16               	movwf	?_Read_b_eep,c
 22834  006198  6A17               	clrf	?_Read_b_eep+1,c
 22835  00619A  0E00               	movlw	0
 22836  00619C  2217               	addwfc	?_Read_b_eep+1,f,c
 22837  00619E  ECFD  F036         	call	_Read_b_eep	;wreg free
 22838  0061A2  D010               	goto	L160
 22839  0061A4                     l10231:
 22840                           
 22841                           ;main.c: 1101: else if ( 2 == vscp_page_select ) {
 22842  0061A4  5036               	movf	_vscp_page_select,w,c
 22843  0061A6  0A02               	xorlw	2
 22844  0061A8  1037               	iorwf	_vscp_page_select+1,w,c
 22845  0061AA  A4D8               	btfss	status,2,c
 22846  0061AC  D00C               	goto	l10237
 22847                           
 22848                           ;main.c: 1102: if ( reg < 8*8 ) {
 22849  0061AE  0E40               	movlw	64
 22850  0061B0  6018               	cpfslt	vscp_readAppReg@reg,c
 22851  0061B2  D009               	goto	l10237
 22852                           
 22853                           ;main.c: 1103: rv = Read_b_eep(0x43 + 46 + 40 + reg);
 22854  0061B4  0E99               	movlw	153
 22855  0061B6  2418               	addwf	vscp_readAppReg@reg,w,c
 22856  0061B8  6E16               	movwf	?_Read_b_eep,c
 22857  0061BA  6A17               	clrf	?_Read_b_eep+1,c
 22858  0061BC  0E00               	movlw	0
 22859  0061BE  2217               	addwfc	?_Read_b_eep+1,f,c
 22860  0061C0  ECFD  F036         	call	_Read_b_eep	;wreg free
 22861  0061C4                     L160:
 22862  0061C4  6E1A               	movwf	vscp_readAppReg@rv,c
 22863  0061C6                     l10237:
 22864                           
 22865                           ;main.c: 1104: }
 22866                           ;main.c: 1105: }
 22867                           ;main.c: 1107: return rv;
 22868  0061C6  501A               	movf	vscp_readAppReg@rv,w,c
 22869  0061C8  0012               	return	
 22870  0061CA                     __end_of_vscp_readAppReg:
 22871                           	opt stack 0
 22872                           tblptru	equ	0xFF8
 22873                           tblptrh	equ	0xFF7
 22874                           tblptrl	equ	0xFF6
 22875                           tablat	equ	0xFF5
 22876                           prodh	equ	0xFF4
 22877                           prodl	equ	0xFF3
 22878                           intcon	equ	0xFF2
 22879                           intcon2	equ	0xFF1
 22880                           postinc0	equ	0xFEE
 22881                           wreg	equ	0xFE8
 22882                           indf1	equ	0xFE7
 22883                           fsr1h	equ	0xFE2
 22884                           fsr1l	equ	0xFE1
 22885                           indf2	equ	0xFDF
 22886                           postinc2	equ	0xFDE
 22887                           postdec2	equ	0xFDD
 22888                           plusw2	equ	0xFDB
 22889                           fsr2h	equ	0xFDA
 22890                           fsr2l	equ	0xFD9
 22891                           status	equ	0xFD8
 22892                           
 22893 ;; *************** function _Read_b_eep *****************
 22894 ;; Defined at:
 22895 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\EEP\read_B.c"
 22896 ;; Parameters:    Size  Location     Type
 22897 ;;  badd            2   21[COMRAM] unsigned int 
 22898 ;; Auto vars:     Size  Location     Type
 22899 ;;		None
 22900 ;; Return value:  Size  Location     Type
 22901 ;;                  1    wreg      unsigned char 
 22902 ;; Registers used:
 22903 ;;		wreg, status,2
 22904 ;; Tracked objects:
 22905 ;;		On entry : 0/0
 22906 ;;		On exit  : 0/0
 22907 ;;		Unchanged: 0/0
 22908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22909 ;;      Params:         2       0       0       0       0       0       0
 22910 ;;      Locals:         0       0       0       0       0       0       0
 22911 ;;      Temps:          0       0       0       0       0       0       0
 22912 ;;      Totals:         2       0       0       0       0       0       0
 22913 ;;Total ram usage:        2 bytes
 22914 ;; Hardware stack levels used:    1
 22915 ;; Hardware stack levels required when called:    2
 22916 ;; This function calls:
 22917 ;;		Nothing
 22918 ;; This function is called by:
 22919 ;;		_init
 22920 ;;		_init_app_ram
 22921 ;;		_doApplicationOneSecondWork
 22922 ;;		_vscp_readNicknamePermanent
 22923 ;;		_vscp_getZone
 22924 ;;		_vscp_getSubzone
 22925 ;;		_vscp_readAppReg
 22926 ;;		_vscp_writeAppReg
 22927 ;;		_SendInformationEvent
 22928 ;;		_doDM
 22929 ;;		_doActionOn
 22930 ;;		_doActionOff
 22931 ;;		_doActionPulse
 22932 ;;		_doActionStatus
 22933 ;;		_doActionToggle
 22934 ;;		_vscp_getGUID
 22935 ;;		_vscp_getUserID
 22936 ;;		_vscp_getManufacturerId
 22937 ;;		_vscp_getSegmentCRC
 22938 ;;		_calculateSetFilterMask
 22939 ;;		_doActionDisable
 22940 ;;		_vscp_getNickname
 22941 ;;		_vscp_getControlByte
 22942 ;; This function uses a non-reentrant model
 22943 ;;
 22944                           
 22945                           	psect	text75
 22946  006DFA                     __ptext75:
 22947                           	opt stack 0
 22948  006DFA                     _Read_b_eep:
 22949                           	opt stack 24
 22950                           
 22951                           ;incstack = 0
 22952                           ;incstack = 0
 22953  006DFA  C016  FFA9         	movff	Read_b_eep@badd,4009	;volatile
 22954  006DFE  9CA6               	bcf	4006,6,c	;volatile
 22955  006E00  9EA6               	bcf	4006,7,c	;volatile
 22956  006E02  80A6               	bsf	4006,0,c	;volatile
 22957  006E04  F000               	nop		;# 
 22958  006E06  F000               	nop		;# 
 22959  006E08  50A8               	movf	4008,w,c	;volatile
 22960  006E0A  0012               	return	
 22961  006E0C                     __end_of_Read_b_eep:
 22962                           	opt stack 0
 22963                           tblptru	equ	0xFF8
 22964                           tblptrh	equ	0xFF7
 22965                           tblptrl	equ	0xFF6
 22966                           tablat	equ	0xFF5
 22967                           prodh	equ	0xFF4
 22968                           prodl	equ	0xFF3
 22969                           intcon	equ	0xFF2
 22970                           intcon2	equ	0xFF1
 22971                           postinc0	equ	0xFEE
 22972                           wreg	equ	0xFE8
 22973                           indf1	equ	0xFE7
 22974                           fsr1h	equ	0xFE2
 22975                           fsr1l	equ	0xFE1
 22976                           indf2	equ	0xFDF
 22977                           postinc2	equ	0xFDE
 22978                           postdec2	equ	0xFDD
 22979                           plusw2	equ	0xFDB
 22980                           fsr2h	equ	0xFDA
 22981                           fsr2l	equ	0xFD9
 22982                           status	equ	0xFD8
 22983                           
 22984 ;; *************** function _interrupt_at_low_vector *****************
 22985 ;; Defined at:
 22986 ;;		line 132 in file "../main.c"
 22987 ;; Parameters:    Size  Location     Type
 22988 ;;		None
 22989 ;; Auto vars:     Size  Location     Type
 22990 ;;		None
 22991 ;; Return value:  Size  Location     Type
 22992 ;;		None               void
 22993 ;; Registers used:
 22994 ;;		wreg, status,2, status,0, cstack
 22995 ;; Tracked objects:
 22996 ;;		On entry : 0/0
 22997 ;;		On exit  : 0/0
 22998 ;;		Unchanged: 0/0
 22999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23000 ;;      Params:         0       0       0       0       0       0       0
 23001 ;;      Locals:         0       0       0       0       0       0       0
 23002 ;;      Temps:         17       0       0       0       0       0       0
 23003 ;;      Totals:        17       0       0       0       0       0       0
 23004 ;;Total ram usage:       17 bytes
 23005 ;; Hardware stack levels used:    1
 23006 ;; Hardware stack levels required when called:    1
 23007 ;; This function calls:
 23008 ;;		i1_WriteTimer0
 23009 ;; This function is called by:
 23010 ;;		Interrupt level 1
 23011 ;; This function uses a non-reentrant model
 23012 ;;
 23013                           
 23014                           	psect	intcodelo
 23015  000018                     __pintcodelo:
 23016                           	opt stack 0
 23017  000018                     _interrupt_at_low_vector:
 23018                           	opt stack 20
 23019                           
 23020                           ;incstack = 0
 23021  000018  CFD8 F005          	movff	status,??_interrupt_at_low_vector
 23022  00001C  CFE8 F006          	movff	wreg,??_interrupt_at_low_vector+1
 23023  000020  CFE0 F007          	movff	bsr,??_interrupt_at_low_vector+2
 23024  000024  CFFA F008          	movff	pclath,??_interrupt_at_low_vector+3
 23025  000028  CFFB F009          	movff	pclatu,??_interrupt_at_low_vector+4
 23026  00002C  CFE9 F00A          	movff	fsr0l,??_interrupt_at_low_vector+5
 23027  000030  CFEA F00B          	movff	fsr0h,??_interrupt_at_low_vector+6
 23028  000034  CFE1 F00C          	movff	fsr1l,??_interrupt_at_low_vector+7
 23029  000038  CFE2 F00D          	movff	fsr1h,??_interrupt_at_low_vector+8
 23030  00003C  CFD9 F00E          	movff	fsr2l,??_interrupt_at_low_vector+9
 23031  000040  CFDA F00F          	movff	fsr2h,??_interrupt_at_low_vector+10
 23032  000044  CFF3 F010          	movff	prodl,??_interrupt_at_low_vector+11
 23033  000048  CFF4 F011          	movff	prodh,??_interrupt_at_low_vector+12
 23034  00004C  CFF6 F012          	movff	tblptrl,??_interrupt_at_low_vector+13
 23035  000050  CFF7 F013          	movff	tblptrh,??_interrupt_at_low_vector+14
 23036  000054  CFF8 F014          	movff	tblptru,??_interrupt_at_low_vector+15
 23037  000058  CFF5 F015          	movff	tablat,??_interrupt_at_low_vector+16
 23038  00005C                     
 23039                           ;main.c: 134: if ( INTCONbits.TMR0IF ) {
 23040  00005C  A4F2               	btfss	intcon,2,c	;volatile
 23041  00005E  D001               	goto	i1u974_21
 23042  000060  D001               	goto	i1u974_20
 23043  000062                     i1u974_21:
 23044  000062  D052               	goto	i1l403
 23045  000064                     i1u974_20:
 23046  000064                     
 23047                           ;main.c: 137: WriteTimer0(0xfb1d);
 23048  000064  0EFB               	movlw	251
 23049  000066  6E02               	movwf	?i1_WriteTimer0+1,c
 23050  000068  0E1D               	movlw	29
 23051  00006A  6E01               	movwf	?i1_WriteTimer0,c
 23052  00006C  EC06  F037         	call	i1_WriteTimer0	;wreg free
 23053  000070                     
 23054                           ;main.c: 139: vscp_timer++;
 23055  000070  4A38               	infsnz	_vscp_timer,f,c	;volatile
 23056  000072  2A39               	incf	_vscp_timer+1,f,c	;volatile
 23057  000074                     
 23058                           ;main.c: 140: vscp_configtimer++;
 23059  000074  0100               	movlb	0	; () banked
 23060  000076  0100               	movlb	0	; () banked
 23061  000078  4BD9               	infsnz	_vscp_configtimer& (0+255),f,b	;volatile
 23062  00007A  2BDA               	incf	(_vscp_configtimer+1)& (0+255),f,b	;volatile
 23063  00007C                     
 23064                           ; BSR set to: 0
 23065                           ;main.c: 141: measurement_clock++;
 23066  00007C  0E01               	movlw	1
 23067  00007E  0100               	movlb	0	; () banked
 23068  000080  0100               	movlb	0	; () banked
 23069  000082  27D1               	addwf	_measurement_clock& (0+255),f,b	;volatile
 23070  000084  0E00               	movlw	0
 23071  000086  0100               	movlb	0	; () banked
 23072  000088  23D2               	addwfc	(_measurement_clock+1)& (0+255),f,b	;volatile
 23073  00008A  0E00               	movlw	0
 23074  00008C  0100               	movlb	0	; () banked
 23075  00008E  23D3               	addwfc	(_measurement_clock+2)& (0+255),f,b	;volatile
 23076  000090  0E00               	movlw	0
 23077  000092  0100               	movlb	0	; () banked
 23078  000094  23D4               	addwfc	(_measurement_clock+3)& (0+255),f,b	;volatile
 23079  000096                     
 23080                           ; BSR set to: 0
 23081                           ;main.c: 144: if ( PORTCbits.RC0 ) {
 23082  000096  A082               	btfss	3970,0,c	;volatile
 23083  000098  D001               	goto	i1u975_21
 23084  00009A  D001               	goto	i1u975_20
 23085  00009C                     i1u975_21:
 23086  00009C  D005               	goto	i1l8485
 23087  00009E                     i1u975_20:
 23088  00009E                     
 23089                           ; BSR set to: 0
 23090                           ;main.c: 145: vscp_initbtncnt = 0;
 23091  00009E  0E00               	movlw	0
 23092  0000A0  0100               	movlb	0	; () banked
 23093  0000A2  0100               	movlb	0	; () banked
 23094  0000A4  6FEA               	movwf	_vscp_initbtncnt& (0+255),b	;volatile
 23095                           
 23096                           ;main.c: 146: }
 23097  0000A6  D003               	goto	i1l395
 23098  0000A8                     i1l8485:
 23099                           
 23100                           ; BSR set to: 0
 23101                           ;main.c: 147: else {
 23102                           ;main.c: 149: vscp_initbtncnt++;
 23103  0000A8  0100               	movlb	0	; () banked
 23104  0000AA  0100               	movlb	0	; () banked
 23105  0000AC  2BEA               	incf	_vscp_initbtncnt& (0+255),f,b	;volatile
 23106  0000AE                     i1l395:
 23107                           
 23108                           ; BSR set to: 0
 23109                           ;main.c: 150: }
 23110                           ;main.c: 153: vscp_statuscnt++;
 23111  0000AE  2A3D               	incf	_vscp_statuscnt,f,c	;volatile
 23112  0000B0                     
 23113                           ; BSR set to: 0
 23114                           ;main.c: 154: if ( ( 0x02 == vscp_initledfunc ) &&
 23115                           ;main.c: 155: ( vscp_statuscnt > 100 ) ) {
 23116  0000B0  503B               	movf	_vscp_initledfunc,w,c
 23117  0000B2  0A02               	xorlw	2
 23118  0000B4  A4D8               	btfss	status,2,c
 23119  0000B6  D001               	goto	i1u976_21
 23120  0000B8  D001               	goto	i1u976_20
 23121  0000BA                     i1u976_21:
 23122  0000BA  D010               	goto	i1l8497
 23123  0000BC                     i1u976_20:
 23124  0000BC                     
 23125                           ; BSR set to: 0
 23126  0000BC  0E64               	movlw	100
 23127  0000BE  643D               	cpfsgt	_vscp_statuscnt,c	;volatile
 23128  0000C0  D001               	goto	i1u977_21
 23129  0000C2  D001               	goto	i1u977_20
 23130  0000C4                     i1u977_21:
 23131  0000C4  D00B               	goto	i1l8497
 23132  0000C6                     i1u977_20:
 23133  0000C6                     
 23134                           ; BSR set to: 0
 23135                           ;main.c: 157: if ( PORTCbits.RC1 ) {
 23136  0000C6  A282               	btfss	3970,1,c	;volatile
 23137  0000C8  D001               	goto	i1u978_21
 23138  0000CA  D001               	goto	i1u978_20
 23139  0000CC                     i1u978_21:
 23140  0000CC  D002               	goto	i1l397
 23141  0000CE                     i1u978_20:
 23142  0000CE                     
 23143                           ; BSR set to: 0
 23144                           ;main.c: 158: PORTCbits.RC1 = 0;
 23145  0000CE  9282               	bcf	3970,1,c	;volatile
 23146                           
 23147                           ;main.c: 159: }
 23148  0000D0  D002               	goto	i1l8495
 23149  0000D2                     i1l397:
 23150                           
 23151                           ; BSR set to: 0
 23152                           ;main.c: 160: else {
 23153                           ;main.c: 161: PORTCbits.RC1 = 1;
 23154  0000D2  8282               	bsf	3970,1,c	;volatile
 23155  0000D4  D000               	goto	i1l8495
 23156  0000D6                     i1l8495:
 23157                           
 23158                           ; BSR set to: 0
 23159                           ;main.c: 162: }
 23160                           ;main.c: 164: vscp_statuscnt = 0;
 23161  0000D6  0E00               	movlw	0
 23162  0000D8  6E3D               	movwf	_vscp_statuscnt,c	;volatile
 23163                           
 23164                           ;main.c: 166: }
 23165  0000DA  D013               	goto	i1l8507
 23166  0000DC                     i1l8497:
 23167                           
 23168                           ; BSR set to: 0
 23169                           ;main.c: 167: else if (0x01 == vscp_initledfunc) {
 23170  0000DC  043B               	decf	_vscp_initledfunc,w,c
 23171  0000DE  A4D8               	btfss	status,2,c
 23172  0000E0  D001               	goto	i1u979_21
 23173  0000E2  D001               	goto	i1u979_20
 23174  0000E4                     i1u979_21:
 23175  0000E4  D004               	goto	i1l400
 23176  0000E6                     i1u979_20:
 23177  0000E6                     
 23178                           ; BSR set to: 0
 23179                           ;main.c: 168: PORTCbits.RC1 = 1;
 23180  0000E6  8282               	bsf	3970,1,c	;volatile
 23181  0000E8                     
 23182                           ; BSR set to: 0
 23183                           ;main.c: 169: vscp_statuscnt = 0;
 23184  0000E8  0E00               	movlw	0
 23185  0000EA  6E3D               	movwf	_vscp_statuscnt,c	;volatile
 23186                           
 23187                           ;main.c: 170: }
 23188  0000EC  D00A               	goto	i1l8507
 23189  0000EE                     i1l400:
 23190                           
 23191                           ; BSR set to: 0
 23192                           ;main.c: 171: else if (0x00 == vscp_initledfunc) {
 23193  0000EE  663B               	tstfsz	_vscp_initledfunc,c
 23194  0000F0  D001               	goto	i1u980_21
 23195  0000F2  D001               	goto	i1u980_20
 23196  0000F4                     i1u980_21:
 23197  0000F4  D006               	goto	i1l8507
 23198  0000F6                     i1u980_20:
 23199  0000F6                     
 23200                           ; BSR set to: 0
 23201                           ;main.c: 172: PORTCbits.RC1 = 0;
 23202  0000F6  9282               	bcf	3970,1,c	;volatile
 23203  0000F8                     
 23204                           ; BSR set to: 0
 23205                           ;main.c: 173: vscp_statuscnt = 0;
 23206  0000F8  0E00               	movlw	0
 23207  0000FA  6E3D               	movwf	_vscp_statuscnt,c	;volatile
 23208  0000FC  D002               	goto	i1l8507
 23209  0000FE                     
 23210                           ; BSR set to: 0
 23211  0000FE  D001               	goto	i1l8507
 23212  000100                     
 23213                           ; BSR set to: 0
 23214  000100  D000               	goto	i1l8507
 23215  000102                     i1l8507:
 23216                           
 23217                           ; BSR set to: 0
 23218                           ;main.c: 174: }
 23219                           ;main.c: 176: INTCONbits.TMR0IF = 0;
 23220  000102  94F2               	bcf	intcon,2,c	;volatile
 23221  000104  D001               	goto	i1l403
 23222  000106                     
 23223                           ; BSR set to: 0
 23224  000106  D000               	goto	i1l403
 23225  000108                     i1l403:
 23226  000108  C015  FFF5         	movff	??_interrupt_at_low_vector+16,tablat
 23227  00010C  C014  FFF8         	movff	??_interrupt_at_low_vector+15,tblptru
 23228  000110  C013  FFF7         	movff	??_interrupt_at_low_vector+14,tblptrh
 23229  000114  C012  FFF6         	movff	??_interrupt_at_low_vector+13,tblptrl
 23230  000118  C011  FFF4         	movff	??_interrupt_at_low_vector+12,prodh
 23231  00011C  C010  FFF3         	movff	??_interrupt_at_low_vector+11,prodl
 23232  000120  C00F  FFDA         	movff	??_interrupt_at_low_vector+10,fsr2h
 23233  000124  C00E  FFD9         	movff	??_interrupt_at_low_vector+9,fsr2l
 23234  000128  C00D  FFE2         	movff	??_interrupt_at_low_vector+8,fsr1h
 23235  00012C  C00C  FFE1         	movff	??_interrupt_at_low_vector+7,fsr1l
 23236  000130  C00B  FFEA         	movff	??_interrupt_at_low_vector+6,fsr0h
 23237  000134  C00A  FFE9         	movff	??_interrupt_at_low_vector+5,fsr0l
 23238  000138  C009  FFFB         	movff	??_interrupt_at_low_vector+4,pclatu
 23239  00013C  C008  FFFA         	movff	??_interrupt_at_low_vector+3,pclath
 23240  000140  C007  FFE0         	movff	??_interrupt_at_low_vector+2,bsr
 23241  000144  C006  FFE8         	movff	??_interrupt_at_low_vector+1,wreg
 23242  000148  C005  FFD8         	movff	??_interrupt_at_low_vector,status
 23243  00014C  0010               	retfie	
 23244  00014E                     __end_of_interrupt_at_low_vector:
 23245                           	opt stack 0
 23246                           pclatu	equ	0xFFB
 23247                           pclath	equ	0xFFA
 23248                           tblptru	equ	0xFF8
 23249                           tblptrh	equ	0xFF7
 23250                           tblptrl	equ	0xFF6
 23251                           tablat	equ	0xFF5
 23252                           prodh	equ	0xFF4
 23253                           prodl	equ	0xFF3
 23254                           intcon	equ	0xFF2
 23255                           intcon2	equ	0xFF1
 23256                           postinc0	equ	0xFEE
 23257                           fsr0h	equ	0xFEA
 23258                           fsr0l	equ	0xFE9
 23259                           wreg	equ	0xFE8
 23260                           indf1	equ	0xFE7
 23261                           fsr1h	equ	0xFE2
 23262                           fsr1l	equ	0xFE1
 23263                           bsr	equ	0xFE0
 23264                           indf2	equ	0xFDF
 23265                           postinc2	equ	0xFDE
 23266                           postdec2	equ	0xFDD
 23267                           plusw2	equ	0xFDB
 23268                           fsr2h	equ	0xFDA
 23269                           fsr2l	equ	0xFD9
 23270                           status	equ	0xFD8
 23271                           
 23272 ;; *************** function i1_WriteTimer0 *****************
 23273 ;; Defined at:
 23274 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.21\sources\pic18\plib\Timers\t0write.c"
 23275 ;; Parameters:    Size  Location     Type
 23276 ;;  timer0          2    0[COMRAM] unsigned int 
 23277 ;; Auto vars:     Size  Location     Type
 23278 ;;  WriteTimer0     2    2[COMRAM] struct Timers
 23279 ;; Return value:  Size  Location     Type
 23280 ;;		None               void
 23281 ;; Registers used:
 23282 ;;		None
 23283 ;; Tracked objects:
 23284 ;;		On entry : 0/0
 23285 ;;		On exit  : 0/0
 23286 ;;		Unchanged: 0/0
 23287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23288 ;;      Params:         2       0       0       0       0       0       0
 23289 ;;      Locals:         2       0       0       0       0       0       0
 23290 ;;      Temps:          0       0       0       0       0       0       0
 23291 ;;      Totals:         4       0       0       0       0       0       0
 23292 ;;Total ram usage:        4 bytes
 23293 ;; Hardware stack levels used:    1
 23294 ;; This function calls:
 23295 ;;		Nothing
 23296 ;; This function is called by:
 23297 ;;		_interrupt_at_low_vector
 23298 ;; This function uses a non-reentrant model
 23299 ;;
 23300                           
 23301                           	psect	text77
 23302  006E0C                     __ptext77:
 23303                           	opt stack 0
 23304  006E0C                     i1_WriteTimer0:
 23305                           	opt stack 20
 23306                           
 23307                           ;incstack = 0
 23308                           ;incstack = 0
 23309  006E0C  C001  F003         	movff	i1WriteTimer0@timer0,i1WriteTimer0@timer
 23310  006E10  C002  F004         	movff	i1WriteTimer0@timer0+1,i1WriteTimer0@timer+1
 23311  006E14  C004  FFD7         	movff	i1WriteTimer0@timer+1,4055	;volatile
 23312  006E18  C003  FFD6         	movff	i1WriteTimer0@timer,4054	;volatile
 23313  006E1C  0012               	return	
 23314  006E1E                     __end_ofi1_WriteTimer0:
 23315                           	opt stack 0
 23316                           pclatu	equ	0xFFB
 23317                           pclath	equ	0xFFA
 23318                           tblptru	equ	0xFF8
 23319                           tblptrh	equ	0xFF7
 23320                           tblptrl	equ	0xFF6
 23321                           tablat	equ	0xFF5
 23322                           prodh	equ	0xFF4
 23323                           prodl	equ	0xFF3
 23324                           intcon	equ	0xFF2
 23325                           intcon2	equ	0xFF1
 23326                           postinc0	equ	0xFEE
 23327                           fsr0h	equ	0xFEA
 23328                           fsr0l	equ	0xFE9
 23329                           wreg	equ	0xFE8
 23330                           indf1	equ	0xFE7
 23331                           fsr1h	equ	0xFE2
 23332                           fsr1l	equ	0xFE1
 23333                           bsr	equ	0xFE0
 23334                           indf2	equ	0xFDF
 23335                           postinc2	equ	0xFDE
 23336                           postdec2	equ	0xFDD
 23337                           plusw2	equ	0xFDB
 23338                           fsr2h	equ	0xFDA
 23339                           fsr2l	equ	0xFD9
 23340                           status	equ	0xFD8
 23341                           pclatu	equ	0xFFB
 23342                           pclath	equ	0xFFA
 23343                           tblptru	equ	0xFF8
 23344                           tblptrh	equ	0xFF7
 23345                           tblptrl	equ	0xFF6
 23346                           tablat	equ	0xFF5
 23347                           prodh	equ	0xFF4
 23348                           prodl	equ	0xFF3
 23349                           intcon	equ	0xFF2
 23350                           intcon2	equ	0xFF1
 23351                           postinc0	equ	0xFEE
 23352                           fsr0h	equ	0xFEA
 23353                           fsr0l	equ	0xFE9
 23354                           wreg	equ	0xFE8
 23355                           indf1	equ	0xFE7
 23356                           fsr1h	equ	0xFE2
 23357                           fsr1l	equ	0xFE1
 23358                           bsr	equ	0xFE0
 23359                           indf2	equ	0xFDF
 23360                           postinc2	equ	0xFDE
 23361                           postdec2	equ	0xFDD
 23362                           plusw2	equ	0xFDB
 23363                           fsr2h	equ	0xFDA
 23364                           fsr2l	equ	0xFD9
 23365                           status	equ	0xFD8
 23366                           
 23367                           	psect	rparam
 23368  0000                     pclatu	equ	0xFFB
 23369                           pclath	equ	0xFFA
 23370                           tblptru	equ	0xFF8
 23371                           tblptrh	equ	0xFF7
 23372                           tblptrl	equ	0xFF6
 23373                           tablat	equ	0xFF5
 23374                           prodh	equ	0xFF4
 23375                           prodl	equ	0xFF3
 23376                           intcon	equ	0xFF2
 23377                           intcon2	equ	0xFF1
 23378                           postinc0	equ	0xFEE
 23379                           fsr0h	equ	0xFEA
 23380                           fsr0l	equ	0xFE9
 23381                           wreg	equ	0xFE8
 23382                           indf1	equ	0xFE7
 23383                           fsr1h	equ	0xFE2
 23384                           fsr1l	equ	0xFE1
 23385                           bsr	equ	0xFE0
 23386                           indf2	equ	0xFDF
 23387                           postinc2	equ	0xFDE
 23388                           postdec2	equ	0xFDD
 23389                           plusw2	equ	0xFDB
 23390                           fsr2h	equ	0xFDA
 23391                           fsr2l	equ	0xFD9
 23392                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    32
    Data        0
    BSS         107
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     53      74
    BANK0           160     93     160
    BANK1           256     38      58
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    vscp_getMatrixInfo@pData	PTR unsigned char  size(2) Largest target is 13
		 -> vscp_omsg(COMRAM[13]), 

    ?___awmod	int  size(2) Largest target is 0

    ?__ECANPointBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    getCANFrame@pdlc	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    getCANFrame@pdata	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    getCANFrame@pid	PTR unsigned long  size(2) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), 

    sendCANFrame@pdata	PTR unsigned char  size(2) Largest target is 13
		 -> SendInformationEvent@data(BANK0[3]), vscp_omsg(COMRAM[13]), 

    getVSCPFrame@pPriority	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    getVSCPFrame@pvscpclass	PTR unsigned short  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    getVSCPFrame@pvscptype	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    getVSCPFrame@pNodeId	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    getVSCPFrame@pData	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    getVSCPFrame@pSize	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    sendVSCPFrame@pData	PTR unsigned char  size(2) Largest target is 13
		 -> SendInformationEvent@data(BANK0[3]), vscp_omsg(COMRAM[13]), 

    _ECANPointBuffer@pt	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    _RegsToCANID@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    _RegsToCANID@val	PTR unsigned long  size(2) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), 

    _RegsToCANID@Value	PTR struct _CAN_MESSAGE_ID size(2) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), 

    _CANIDToRegs@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), RXM1SIDH(ABS[1]), 
		 -> RXF1SIDH(ABS[1]), B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), 
		 -> B2CON(ABS[1]), B1CON(ABS[1]), B0CON(ABS[1]), 

    _CANIDToRegs@Value	PTR struct _CAN_MESSAGE_ID size(2) Largest target is 4
		 -> _CANIDToRegs@val(COMRAM[4]), 

    ECANReceiveMessage@data	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    ECANReceiveMessage@id	PTR unsigned long  size(2) Largest target is 4
		 -> getVSCPFrame@id(BANK0[4]), 

    ECANReceiveMessage@dataLen	PTR unsigned char  size(2) Largest target is 14
		 -> vscp_imsg(BANK0[14]), 

    ECANReceiveMessage@savedPtr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    sp___ECANPointBuffer	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ECANReceiveMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> B5CON(ABS[1]), B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), 
		 -> B1CON(ABS[1]), B0CON(ABS[1]), RXB1CON(ABS[1]), RXB0CON(ABS[1]), 

    ECANReceiveMessage@msgFlags	PTR enum E16333 size(2) Largest target is 1
		 -> getCANFrame@flags(COMRAM[1]), 

    ECANSendMessage@data	PTR unsigned char  size(2) Largest target is 13
		 -> SendInformationEvent@data(BANK0[3]), vscp_omsg(COMRAM[13]), 

    ECANSendMessage@tempPtr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    ECANSendMessage@ptr	PTR unsigned char  size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 

    ECANSendMessage@pb	PTR unsigned char [9] size(2) Largest target is 1
		 -> TXB2CON(ABS[1]), TXB1CON(ABS[1]), TXB0CON(ABS[1]), B5CON(ABS[1]), 
		 -> B4CON(ABS[1]), B3CON(ABS[1]), B2CON(ABS[1]), B1CON(ABS[1]), 
		 -> B0CON(ABS[1]), 


Critical Paths under _main in COMRAM

    _doApplicationOneSecondWork->_SendInformationEvent
    _vscp_doOneSecondWork->_vscp_sendHeartBeat
    _vscp_sendHeartBeat->_vscp_sendEvent
    _vscp_getSubzone->_Read_b_eep
    _vscp_getZone->_Read_b_eep
    _doActionToggle->_SendInformationEvent
    _doActionStatus->_SendInformationEvent
    _doActionPulse->_Read_b_eep
    _doActionOn->_SendInformationEvent
    _doActionOff->_SendInformationEvent
    _vscp_restoreDefaults->_init_app_eeprom
    _init_app_eeprom->_Write_b_eep
    _vscp_setUserID->_Write_b_eep
    _vscp_setManufacturerId->_Write_b_eep
    _vscp_setGUID->_Write_b_eep
    _vscp_writeAppReg->_SendInformationEvent
    _calculateSetFilterMask->__CANIDToRegs
    _SendInformationEvent->_sendVSCPFrame
    _vscp_readRegister->_vscp_readStdReg
    _vscp_readStdReg->_vscp_getFamilyCode
    _vscp_readStdReg->_vscp_getFamilyType
    _vscp_getManufacturerId->_Read_b_eep
    _vscp_getUserID->_Read_b_eep
    _vscp_getGUID->_Read_b_eep
    _vscp_newNodeOnline->_vscp_sendEvent
    _vscp_handleDropNickname->_vscp_writeNicknamePermanent
    _vscp_readNicknamePermanent->_Read_b_eep
    _vscp_handleSetNickname->_vscp_writeNicknamePermanent
    _vscp_handleSetNickname->_vscp_setSegmentCRC
    _vscp_handleHeartbeat->_vscp_writeNicknamePermanent
    _vscp_handleHeartbeat->_vscp_setSegmentCRC
    _vscp_goBootloaderMode->_Write_b_eep
    _vscp_handleProbeState->_vscp_goActiveState
    _vscp_goActiveState->_vscp_sendEvent
    _vscp_sendEvent->_sendVSCPFrame
    _sendVSCPFrame->_sendCANFrame
    _sendCANFrame->_ECANSendMessage
    _ECANSendMessage->__CANIDToRegs
    _getVSCPFrame->_getCANFrame
    _getCANFrame->_ECANReceiveMessage
    _ECANReceiveMessage->__RegsToCANID
    _vscp_check_pstorage->_vscp_writeNicknamePermanent
    _vscp_check_pstorage->_vscp_setSegmentCRC
    _vscp_check_pstorage->_vscp_setControlByte
    _vscp_setControlByte->_Write_b_eep
    _vscp_setSegmentCRC->_Write_b_eep
    _vscp_getSegmentCRC->_Read_b_eep
    _vscp_writeNicknamePermanent->_Write_b_eep
    _init->_WriteTimer0
    _init_app_ram->_Read_b_eep
    _ECANInitialize->_ECANSetOperationMode
    _vscp_readAppReg->_Read_b_eep

Critical Paths under _interrupt_at_low_vector in COMRAM

    _interrupt_at_low_vector->i1_WriteTimer0

Critical Paths under _main in BANK0

    _main->_doDM
    _doApplicationOneSecondWork->_doActionOff
    _doDM->_doActionOn
    _doActionToggle->_SendInformationEvent
    _doActionStatus->_SendInformationEvent
    _doActionOn->_SendInformationEvent
    _doActionOff->_SendInformationEvent
    _vscp_handleProtocolEvent->_vscp_writeRegister
    _vscp_writeRegister->_vscp_writeAppReg
    _vscp_restoreDefaults->_init_app_ram
    _vscp_writeAppReg->_SendInformationEvent
    _SendInformationEvent->_sendVSCPFrame
    _vscp_sendEvent->_sendVSCPFrame
    _sendVSCPFrame->_sendCANFrame
    _sendCANFrame->_ECANSendMessage
    _vscp_getEvent->_getVSCPFrame
    _init->_init_app_ram

Critical Paths under _interrupt_at_low_vector in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_doApplicationOneSecondWork

Critical Paths under _interrupt_at_low_vector in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_at_low_vector in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_at_low_vector in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_at_low_vector in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_at_low_vector in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   69461
                                             37 BANK1      1     1      0
                               _init
                _vscp_check_pstorage
                    _init_app_eeprom
                       _init_app_ram
                          _vscp_init
                           _Busy_eep
                        _Write_b_eep
                      _vscp_getEvent
                 _vscp_goActiveState
              _vscp_handleProbeState
           _vscp_handleProtocolEvent
                               _doDM
                         _vscp_error
               _vscp_doOneSecondWork
         _doApplicationOneSecondWork
                             _doWork
 ---------------------------------------------------------------------------------
 (1) _doWork                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _doApplicationOneSecondWork                          42    42      0    7137
                                             72 BANK0      5     5      0
                                              0 BANK1     37    37      0
                         _Read_b_eep
               _SendInformationEvent
                        _doActionOff
 ---------------------------------------------------------------------------------
 (1) _vscp_doOneSecondWork                                 1     1      0    2370
                                             51 COMRAM     1     1      0
                       _vscp_getZone
                    _vscp_getSubzone
                 _vscp_sendHeartBeat
 ---------------------------------------------------------------------------------
 (2) _vscp_sendHeartBeat                                   3     1      2    2308
                                             48 COMRAM     3     1      2
                       _vscp_getZone (ARG)
                    _vscp_getSubzone (ARG)
                     _vscp_sendEvent
 ---------------------------------------------------------------------------------
 (2) _vscp_getSubzone                                      0     0      0      31
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (2) _vscp_getZone                                         0     0      0      31
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (1) _vscp_error                                           1     1      0       0
                                             21 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _doDM                                                19    19      0   13192
                                             74 BANK0     19    19      0
                         _Read_b_eep
                        _doActionOff
                         _doActionOn
                      _doActionPulse
                     _doActionStatus
                     _doActionToggle
 ---------------------------------------------------------------------------------
 (2) _doActionToggle                                       7     5      2    3008
                                             66 BANK0      7     5      2
                         _Read_b_eep
               _SendInformationEvent
 ---------------------------------------------------------------------------------
 (2) _doActionStatus                                       7     5      2    2978
                                             66 BANK0      7     5      2
                         _Read_b_eep
               _SendInformationEvent
 ---------------------------------------------------------------------------------
 (2) _doActionPulse                                        8     6      2     319
                                             23 COMRAM     8     6      2
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (2) _doActionOn                                           8     6      2    2883
                                             66 BANK0      8     6      2
                         _Read_b_eep
               _SendInformationEvent
 ---------------------------------------------------------------------------------
 (2) _doActionOff                                          6     4      2    2883
                                             66 BANK0      6     4      2
                         _Read_b_eep
               _SendInformationEvent
 ---------------------------------------------------------------------------------
 (1) _vscp_handleProtocolEvent                            29    29      0   34694
                                             78 BANK0      9     9      0
                                              0 BANK1     20    20      0
                          _vscp_init
                    _vscp_readAppReg
                   _vscp_writeAppReg
                     _vscp_sendEvent
                       _vscp_getGUID
                    _vscp_getMDF_URL
              _vscp_goBootloaderMode
                 _vscp_getMatrixInfo
               _vscp_handleHeartbeat
             _vscp_handleSetNickname
            _vscp_handleDropNickname
                 _vscp_newNodeOnline
                  _vscp_readRegister
                    _vscp_readStdReg
                 _vscp_writeRegister
                   _vscp_writeStdReg
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     433
                                             21 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _vscp_writeRegister                                   2     0      2   11362
                                             76 BANK0      2     0      2
                   _vscp_writeAppReg
                   _vscp_writeStdReg
 ---------------------------------------------------------------------------------
 (2) _vscp_writeStdReg                                     7     5      2    2904
                                             29 COMRAM     7     5      2
                       _vscp_setGUID
             _vscp_setManufacturerId
                       _vscp_getGUID
                     _vscp_getUserID
                     _vscp_setUserID
             _vscp_getManufacturerId
               _vscp_restoreDefaults
 ---------------------------------------------------------------------------------
 (3) _vscp_restoreDefaults                                 0     0      0    1300
                    _init_app_eeprom
                       _init_app_ram
 ---------------------------------------------------------------------------------
 (4) _init_app_eeprom                                      3     3      0     792
                                             26 COMRAM     3     3      0
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_setUserID                                       2     0      2     161
                                             26 COMRAM     2     0      2
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_setManufacturerId                               2     0      2     192
                                             26 COMRAM     2     0      2
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_setGUID                                         2     0      2     192
                                             26 COMRAM     2     0      2
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_writeAppReg                                    10     8      2    8303
                                             66 BANK0     10     8      2
                           _Busy_eep
                        _Write_b_eep
                         _Read_b_eep
               _SendInformationEvent
                    _vscp_readAppReg (ARG)
             _calculateSetFilterMask
 ---------------------------------------------------------------------------------
 (4) _calculateSetFilterMask                              51    51      0    1863
                                             32 COMRAM    19    19      0
                                              0 BANK0     32    32      0
               _ECANSetOperationMode
                       __CANIDToRegs
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (3) _SendInformationEvent                                 8     5      3    2502
                                             47 COMRAM     5     2      3
                                             63 BANK0      3     3      0
                         _Read_b_eep
                      _sendVSCPFrame
 ---------------------------------------------------------------------------------
 (2) _vscp_readRegister                                    1     0      1    2014
                                             42 COMRAM     1     0      1
                    _vscp_readAppReg
                    _vscp_readStdReg
 ---------------------------------------------------------------------------------
 (2) _vscp_readStdReg                                     17    16      1    1343
                                             25 COMRAM    17    16      1
               _vscp_getMajorVersion
               _vscp_getMinorVersion
            _vscp_getSubMinorVersion
                       _vscp_getGUID
                    _vscp_getMDF_URL
                     _vscp_getUserID
             _vscp_getManufacturerId
        _vscp_getBootLoaderAlgorithm
                 _vscp_getBufferSize
                 _vscp_getFamilyCode
                 _vscp_getFamilyType
          _vscp_getRegisterPagesUsed
 ---------------------------------------------------------------------------------
 (3) _vscp_getRegisterPagesUsed                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _vscp_getFamilyType                                   4     0      4       0
                                             21 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _vscp_getFamilyCode                                   4     0      4       0
                                             21 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _vscp_getBufferSize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _vscp_getBootLoaderAlgorithm                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _vscp_getManufacturerId                               1     0      1      62
                                             23 COMRAM     1     0      1
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_getUserID                                       1     0      1      62
                                             23 COMRAM     1     0      1
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_getMDF_URL                                      1     0      1      31
                                             21 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (3) _vscp_getGUID                                         1     0      1      62
                                             23 COMRAM     1     0      1
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_getSubMinorVersion                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _vscp_getMinorVersion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _vscp_getMajorVersion                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _vscp_newNodeOnline                                   1     1      0    2246
                                             48 COMRAM     1     1      0
                     _vscp_sendEvent
 ---------------------------------------------------------------------------------
 (2) _vscp_handleDropNickname                              2     2      0     257
                                             27 COMRAM     2     2      0
                          _vscp_init
        _vscp_writeNicknamePermanent
 ---------------------------------------------------------------------------------
 (3) _vscp_init                                            1     1      0      31
                                             23 COMRAM     1     1      0
         _vscp_readNicknamePermanent
 ---------------------------------------------------------------------------------
 (4) _vscp_readNicknamePermanent                           0     0      0      31
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (2) _vscp_handleSetNickname                               1     1      0     260
                                             27 COMRAM     1     1      0
        _vscp_writeNicknamePermanent
                 _vscp_setSegmentCRC
 ---------------------------------------------------------------------------------
 (2) _vscp_handleHeartbeat                                 1     1      0     291
                                             27 COMRAM     1     1      0
        _vscp_writeNicknamePermanent
                 _vscp_getSegmentCRC
                 _vscp_setSegmentCRC
 ---------------------------------------------------------------------------------
 (2) _vscp_getMatrixInfo                                   4     2      2      99
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _vscp_goBootloaderMode                                2     1      1     130
                                             26 COMRAM     2     1      1
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (1) _vscp_handleProbeState                                1     1      0    4752
                                             49 COMRAM     1     1      0
                 _vscp_goActiveState
        _vscp_writeNicknamePermanent
                     _vscp_sendEvent
                 _vscp_setSegmentCRC
 ---------------------------------------------------------------------------------
 (2) _vscp_goActiveState                                   1     1      0    2246
                                             48 COMRAM     1     1      0
                     _vscp_sendEvent
 ---------------------------------------------------------------------------------
 (3) _vscp_sendEvent                                       1     1      0    2246
                                             47 COMRAM     1     1      0
                      _sendVSCPFrame
 ---------------------------------------------------------------------------------
 (4) _sendVSCPFrame                                       32    24      8    2236
                                             43 COMRAM     4     4      0
                                             35 BANK0     28    20      8
                       _sendCANFrame
 ---------------------------------------------------------------------------------
 (5) _sendCANFrame                                         9     2      7    2016
                                             41 COMRAM     2     2      0
                                             28 BANK0      7     0      7
                    _ECANSendMessage
 ---------------------------------------------------------------------------------
 (6) _ECANSendMessage                                     37    29      8    1886
                                             32 COMRAM     9     1      8
                                              0 BANK0     28    28      0
                       __CANIDToRegs
 ---------------------------------------------------------------------------------
 (7) __CANIDToRegs                                        11     4      7     693
                                             21 COMRAM    11     4      7
 ---------------------------------------------------------------------------------
 (1) _vscp_getEvent                                        1     1      0    2371
                                             20 BANK0      1     1      0
                       _getVSCPFrame
 ---------------------------------------------------------------------------------
 (2) _getVSCPFrame                                        20     8     12    2361
                                              0 BANK0     20     8     12
                        _getCANFrame
 ---------------------------------------------------------------------------------
 (3) _getCANFrame                                          7     1      6    1954
                                             46 COMRAM     7     1      6
                 _ECANReceiveMessage
 ---------------------------------------------------------------------------------
 (4) _ECANReceiveMessage                                  16     8      8    1720
                                             30 COMRAM    16     8      8
                   __ECANPointBuffer
                       __RegsToCANID
 ---------------------------------------------------------------------------------
 (5) __RegsToCANID                                         9     4      5     697
                                             21 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (5) __ECANPointBuffer                                     4     2      2      86
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _vscp_check_pstorage                                  1     1      0     421
                                             27 COMRAM     1     1      0
        _vscp_writeNicknamePermanent
                 _vscp_getSegmentCRC
                 _vscp_setSegmentCRC
                _vscp_setControlByte
 ---------------------------------------------------------------------------------
 (2) _vscp_setControlByte                                  1     0      1     130
                                             26 COMRAM     1     0      1
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_setSegmentCRC                                   1     0      1     130
                                             26 COMRAM     1     0      1
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_getSegmentCRC                                   0     0      0      31
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (3) _vscp_writeNicknamePermanent                          1     0      1     130
                                             26 COMRAM     1     0      1
                           _Busy_eep
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (5) _Write_b_eep                                          5     2      3      99
                                             21 COMRAM     5     2      3
 ---------------------------------------------------------------------------------
 (5) _Busy_eep                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init                                                 2     2      0     848
                                             25 COMRAM     2     2      0
                     _ECANInitialize
                        _WriteTimer0
                       _init_app_ram
                         _Read_b_eep
                         _OpenTimer0
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     0      1      44
                                             21 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (4) _init_app_ram                                        38    38      0     508
                                             23 COMRAM     1     1      0
                                              0 BANK0     37    37      0
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2      70
                                             21 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ECANInitialize                                       1     1      0      62
                                             22 COMRAM     1     1      0
               _ECANSetOperationMode
 ---------------------------------------------------------------------------------
 (5) _ECANSetOperationMode                                 1     0      1      62
                                             21 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (3) _vscp_readAppReg                                      3     2      1     578
                                             23 COMRAM     3     2      1
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (4) _Read_b_eep                                           2     0      2      31
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _Read_b_eep                                           2     0      2      31
                                             21 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _interrupt_at_low_vector                             17    17      0     221
                                              4 COMRAM    17    17      0
                      i1_WriteTimer0
 ---------------------------------------------------------------------------------
 (10) i1_WriteTimer0                                       4     2      2     221
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _ECANInitialize
       _ECANSetOperationMode
     _WriteTimer0
     _init_app_ram
       _Read_b_eep
     _Read_b_eep
     _OpenTimer0
   _vscp_check_pstorage
     _vscp_writeNicknamePermanent
       _Busy_eep
       _Write_b_eep
     _vscp_getSegmentCRC
       _Read_b_eep
     _vscp_setSegmentCRC
       _Busy_eep
       _Write_b_eep
     _vscp_setControlByte
       _Busy_eep
       _Write_b_eep
   _init_app_eeprom
     _Busy_eep
     _Write_b_eep
   _init_app_ram
     _Read_b_eep
   _vscp_init
     _vscp_readNicknamePermanent
       _Read_b_eep
   _Busy_eep
   _Write_b_eep
   _vscp_getEvent
     _getVSCPFrame
       _getCANFrame
         _ECANReceiveMessage
           __ECANPointBuffer
           __RegsToCANID
   _vscp_goActiveState
     _vscp_sendEvent
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
   _vscp_handleProbeState
     _vscp_goActiveState
       _vscp_sendEvent
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
     _vscp_writeNicknamePermanent
       _Busy_eep
       _Write_b_eep
     _vscp_sendEvent
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
     _vscp_setSegmentCRC
       _Busy_eep
       _Write_b_eep
   _vscp_handleProtocolEvent
     _vscp_init
       _vscp_readNicknamePermanent
         _Read_b_eep
     _vscp_readAppReg
       _Read_b_eep
     _vscp_writeAppReg
       _Busy_eep
       _Write_b_eep
       _Read_b_eep
       _SendInformationEvent
         _Read_b_eep
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
       _vscp_readAppReg (ARG)
         _Read_b_eep
       _calculateSetFilterMask (ARG)
         _ECANSetOperationMode
         __CANIDToRegs
         _Read_b_eep
     _vscp_sendEvent
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
     _vscp_getGUID
       _Read_b_eep
     _vscp_getMDF_URL
     _vscp_goBootloaderMode
       _Busy_eep
       _Write_b_eep
     _vscp_getMatrixInfo
     _vscp_handleHeartbeat
       _vscp_writeNicknamePermanent
         _Busy_eep
         _Write_b_eep
       _vscp_getSegmentCRC
         _Read_b_eep
       _vscp_setSegmentCRC
         _Busy_eep
         _Write_b_eep
     _vscp_handleSetNickname
       _vscp_writeNicknamePermanent
         _Busy_eep
         _Write_b_eep
       _vscp_setSegmentCRC
         _Busy_eep
         _Write_b_eep
     _vscp_handleDropNickname
       _vscp_init
         _vscp_readNicknamePermanent
           _Read_b_eep
       _vscp_writeNicknamePermanent
         _Busy_eep
         _Write_b_eep
     _vscp_newNodeOnline
       _vscp_sendEvent
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
     _vscp_readRegister
       _vscp_readAppReg
         _Read_b_eep
       _vscp_readStdReg
         _vscp_getMajorVersion
         _vscp_getMinorVersion
         _vscp_getSubMinorVersion
         _vscp_getGUID
           _Read_b_eep
         _vscp_getMDF_URL
         _vscp_getUserID
           _Read_b_eep
         _vscp_getManufacturerId
           _Read_b_eep
         _vscp_getBootLoaderAlgorithm
         _vscp_getBufferSize
         _vscp_getFamilyCode
         _vscp_getFamilyType
         _vscp_getRegisterPagesUsed
     _vscp_readStdReg
       _vscp_getMajorVersion
       _vscp_getMinorVersion
       _vscp_getSubMinorVersion
       _vscp_getGUID
         _Read_b_eep
       _vscp_getMDF_URL
       _vscp_getUserID
         _Read_b_eep
       _vscp_getManufacturerId
         _Read_b_eep
       _vscp_getBootLoaderAlgorithm
       _vscp_getBufferSize
       _vscp_getFamilyCode
       _vscp_getFamilyType
       _vscp_getRegisterPagesUsed
     _vscp_writeRegister
       _vscp_writeAppReg
         _Busy_eep
         _Write_b_eep
         _Read_b_eep
         _SendInformationEvent
           _Read_b_eep
           _sendVSCPFrame
             _sendCANFrame
               _ECANSendMessage
                 __CANIDToRegs
         _vscp_readAppReg (ARG)
           _Read_b_eep
         _calculateSetFilterMask (ARG)
           _ECANSetOperationMode
           __CANIDToRegs
           _Read_b_eep
       _vscp_writeStdReg
         _vscp_setGUID
           _Busy_eep
           _Write_b_eep
         _vscp_setManufacturerId
           _Busy_eep
           _Write_b_eep
         _vscp_getGUID
           _Read_b_eep
         _vscp_getUserID
           _Read_b_eep
         _vscp_setUserID
           _Busy_eep
           _Write_b_eep
         _vscp_getManufacturerId
           _Read_b_eep
         _vscp_restoreDefaults
           _init_app_eeprom
             _Busy_eep
             _Write_b_eep
           _init_app_ram
             _Read_b_eep
     _vscp_writeStdReg
       _vscp_setGUID
         _Busy_eep
         _Write_b_eep
       _vscp_setManufacturerId
         _Busy_eep
         _Write_b_eep
       _vscp_getGUID
         _Read_b_eep
       _vscp_getUserID
         _Read_b_eep
       _vscp_setUserID
         _Busy_eep
         _Write_b_eep
       _vscp_getManufacturerId
         _Read_b_eep
       _vscp_restoreDefaults
         _init_app_eeprom
           _Busy_eep
           _Write_b_eep
         _init_app_ram
           _Read_b_eep
     ___awmod
   _doDM
     _Read_b_eep
     _doActionOff
       _Read_b_eep
       _SendInformationEvent
         _Read_b_eep
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
     _doActionOn
       _Read_b_eep
       _SendInformationEvent
         _Read_b_eep
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
     _doActionPulse
       _Read_b_eep
     _doActionStatus
       _Read_b_eep
       _SendInformationEvent
         _Read_b_eep
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
     _doActionToggle
       _Read_b_eep
       _SendInformationEvent
         _Read_b_eep
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
   _vscp_error
   _vscp_doOneSecondWork
     _vscp_getZone
       _Read_b_eep
     _vscp_getSubzone
       _Read_b_eep
     _vscp_sendHeartBeat
       _vscp_getZone (ARG)
         _Read_b_eep
       _vscp_getSubzone (ARG)
         _Read_b_eep
       _vscp_sendEvent (ARG)
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
   _doApplicationOneSecondWork
     _Read_b_eep
     _SendInformationEvent
       _Read_b_eep
       _sendVSCPFrame
         _sendCANFrame
           _ECANSendMessage
             __CANIDToRegs
     _doActionOff
       _Read_b_eep
       _SendInformationEvent
         _Read_b_eep
         _sendVSCPFrame
           _sendCANFrame
             _ECANSendMessage
               __CANIDToRegs
   _doWork

 _interrupt_at_low_vector (ROOT)
   i1_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     26      3A       6       22.7%
BITBANK5            EF      0       0      13        0.0%
BANK5               EF      0       0      14        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     5D      A0       4      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     35      4A       1       77.9%
BITSFR_8             0      0       0      40        0.0%
SFR_8                0      0       0      40        0.0%
BITSFR_7             0      0       0      40        0.0%
SFR_7                0      0       0      40        0.0%
BITSFR_6             0      0       0      40        0.0%
SFR_6                0      0       0      40        0.0%
BITSFR_5             0      0       0      40        0.0%
SFR_5                0      0       0      40        0.0%
BITSFR_4             0      0       0      40        0.0%
SFR_4                0      0       0      40        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       C       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     124      15        0.0%
DATA                 0      0     130      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Wed Jun 24 15:48:04 2015

                      doActionToggle@val 00A6                  __end_of_vscp_readAppReg 61CA  
                  __end_of_sendVSCPFrame 640A             ?_vscp_writeNicknamePermanent 001B  
            ??_vscp_getRegisterPagesUsed 0016                                       bsr 000FE0  
    vscp_writeNicknamePermanent@nickname 001B                              __CFG_BORV$3 000000  
                __end_of_vscp_readStdReg 5246                    doActionToggle@dmflags 00A2  
                                    l200 4C92                                      l202 4CA8  
                                    l212 4D5C                                      l204 4CBE  
                                    l230 607C                                      l240 677C  
                                    l235 5C40                                      l181 4BD4  
                                    l501 3026                                      l510 304A  
                                    l502 302E                                      l191 4CD8  
                                    l511 3052                                      l407 57BE  
                                    l192 4C36                                      l176 505E  
                                    l168 4F7A                                      l504 3032  
                                    l416 5844                                      l513 3056  
                                    l505 303A                       vscp_readStdReg@idx 0028  
                                    l194 4C4A                                      l514 305E  
                                    l507 303E                                      l196 4C62  
                                    l188 4E12                                      l620 08DA  
                                    l516 3062                                      l508 3046  
                                    l517 306A                                      l198 4C7A  
                                    l630 0A12                                      l542 6C8A  
                                    l615 083E                                      l519 322E  
                                    l640 0B4A                                      l625 0976  
                                    l609 07A2                                      l730 1D12  
                                    l650 0C82                                      l538 6CAC  
                                    l810 625A                                      l635 0AAE  
                                    l811 625E                                      l812 6262  
                                    l492 2FFC                                      l645 0BE6  
                                    l813 6266                                      l901 5318  
                                    l493 300A                                      l814 626A  
                                    l830 48D8                                      l910 533C  
                                    l902 5320                                      l750 4114  
                                    l655 0D1E                                      l815 626E  
                                    l807 6252                                      l911 5344  
                                    l495 300E                                      l816 6272  
                                    l808 62BC                                      l840 4B06  
                                    l832 4916                                      l904 5324  
                                    l744 44C8                                      l496 3016  
                                    l488 2FF0                                      l817 6276  
                                    l809 6256                                      l833 4954  
                                    l913 5348                                      l905 532C  
                                    l489 2FF8                                      l834 4992  
                                    l914 5350                                      l498 301A  
                                    l835 49D0                                      l907 5330  
                                    l499 3022                        doActionStatus@bOn 00A7  
                                    l836 4A0E                                      l916 53DA  
                                    l908 5338                                      l748 40EC  
                                    l781 3D30                                      l837 4A4C  
                                    l774 3C16                                      l838 4A8A  
                                    l862 55A6                       vscp_readStdReg@reg 001A  
                                    l791 3F06                                      l783 3D8E  
                                    l839 4AC8                                      l776 4004  
                                    l793 3F64                                      l785 3DEC  
                                    l777 3C74                                      l890 52F0  
                                    l787 3E4A                                      l779 3CD2  
                                    l892 52F4                                      l789 3EA8  
                                    l893 52FC                                      l885 52D6  
                                    l886 52DE                                      l975 6CCE  
                                    l895 5300                                      l896 5308  
                                    l889 52E2                                      l898 530C  
                                    l899 5314                                      l996 6408  
                           __CFG_CPB$OFF 000000           __size_of_vscp_handleProbeState 0172  
                      doActionStatus@arg 00A3                           getVSCPFrame@id 0070  
                      doActionStatus@val 00A6            __end_of_vscp_handleProbeState 5DB4  
                  ?_vscp_restoreDefaults 0001                     __size_of_WriteTimer0 0012  
                   __size_of_Write_b_eep 003C                             ___awmod@sign 001C  
                                    prod 000FF3                   _calculateSetFilterMask 34BC  
                                    wreg 000FE8              ?_doApplicationOneSecondWork 0001  
                           __CFG_LVP$OFF 000000                             __CFG_WDT$OFF 000000  
                                   l1000 6658                                     l1011 6A8A  
                                   l1200 6A4A                                     l1213 6D20  
                   __size_of_doActionOff 012C                                     l1142 6BAC  
                                   l1161 5D3E                                     l1153 5CB2  
                                   l1209 66F0                                     l1343 255C  
                                   l1432 6CE8                                     l1416 6AF4  
                                   l1433 6CEA                                     l1185 69BA  
                                   l1353 268A                                     l1258 6C68  
                                   l1195 69F0                                     l1196 6A06  
                                   l1381 6AC8                                     l1189 6B3C  
                                   l1366 285E                                     l1391 6E6A  
                                   l1385 6812                                     l1377 2B22  
                    vscp_readStdReg@code 0020                vscp_getManufacturerId@idx 0018  
                                   l9023 594A                                     l9007 58F0  
                                   l9105 561A                                     l9123 5678  
                                   l9019 5930                                     l9221 457E  
                                   l9231 469A                                     l9135 56A6  
                                   l9209 4530                                     l9153 5704  
                                   l9401 1D62                                     l9227 4626  
                                   l9403 1D6A                                     l9245 642A  
                                   l9165 5732                                     l9501 2026  
                                   l9405 1D72                                     l9087 6B86  
                                   l9335 5C7E                                     l9319 5C44  
                                   l9183 576A                                     l9511 2092  
                                   l9407 1D7A                                     l8713 5042  
                                   l9361 5CFC                                     l9177 5760  
                                   l9521 20FE                                     l9441 1E2A  
                                   l8707 501A                                     l9355 5CEC  
                                   l9531 216A                                     l9427 1DE8  
                                   l8901 6708                                     l8717 5046  
                                   l9541 21C2                                     l9461 1E9C  
                                   l8647 6D82                                     l8911 6740  
                                   l8903 6714                                     l8735 5FA0  
                                   l8663 4EF6                                     l8719 504C  
                                   l9391 5D8E                                     l9623 248E  
                                   l9607 2428                                     l9535 2178  
                                   l8905 6720                                     l8833 4CF4  
                                   l8657 4ECE                                     l9393 5DA6  
                                   l9801 29FE                                     l9713 26A0  
                                   l9561 22CC                                     l9537 21AE  
                                   l8907 672C                                     l8915 674E  
                                   l8931 5B6E                                     l8843 4D1A  
                                   l8691 4FA0                                     l8675 4F3A  
                                   l9387 5D80                                     l9643 250E  
                                   l9555 227E                                     l9491 1FBA  
                                   l9475 1EE2                                     l8909 6736  
                                   l8861 4D82                                     l8829 4CF0  
                                   l8781 4C14                                     l8765 4BBA  
                                   l8685 4F7E                                     l9549 21FE  
                                   l8871 4DC4                                     l8775 4BF0  
                                   l9751 2798                                     l9727 26EA  
                                   l9671 25BA                                     l9639 24F4  
                                   l9559 22AE                                     l9575 2304  
                                   l9399 1D5A                                     l9823 2AAA  
                                   l9681 25DA                                     l9593 23DC  
                                   l9577 230A                                     l9841 405C  
                                   l8953 57BA                                     l8699 4FF4  
                                   l9771 284A                                     l9739 2738  
                                   l9691 262A                                     l9675 25C6  
                                   l9667 25AA                                     l9659 2572  
                                   l9587 2354                                     l9579 231E  
                                   l9915 66B4                                     l8971 5810  
                                   l8885 4DFC                                     l8789 4C22  
                                   l9749 2788                                     l9909 6698  
                                   l8981 583E                                     l8879 4DE2  
                                   l9775 2888                                     l9767 27F8  
                                   l9687 25EC                                     l9871 42E6  
                                   l9863 413C                                     l9919 66CA  
                                   l9951 2C5A                                     l8975 5822  
                                   l8967 57FA                                     l8897 66F4  
                                   l9881 43CA                                     l9961 2CEA  
                                   l9953 2C7A                                     l9937 2B8A  
                                   l8993 5878                                     l8899 66FC  
                                   l9779 28CE                                     l9875 4332  
                                   l9891 4462                                     l9971 2D76  
                                   l9963 2D0A                                     l8987 5860  
                                   l8979 5838                                     l8995 589E  
                                   l9797 294C                                     l9789 290A  
                                   l9885 4416                                     l9893 44B8  
                                   l8989 5866                                     l9879 437E  
                                   l9979 2DE4                                     l9997 2EE4  
                                   l9999 2EEC              __size_of_vscp_getMatrixInfo 0038  
                         sendCANFrame@id 007C                           sendCANFrame@rv 002B  
                                   u9925 5F62                                     u9935 5F8A  
                                   u9945 5FB4                                     u9985 4BC6  
                                   u9987 4BCC                         ??_ECANInitialize 0017  
                           __CFG_PWRT$ON 000000                vscp_setManufacturerId@idx 001B  
                                   ___IT 000101                                     _doDM 403E  
                  __size_of_vscp_getGUID 0012                         ?_vscp_getMDF_URL 0016  
                                   _main 57A4                                     _init 6504  
                                   fsr0h 000FEA                                     fsr1h 000FE2  
                                   fsr0l 000FE9                                     fsr2h 000FDA  
                                   indf1 000FE7                                     fsr1l 000FE1  
                                   indf2 000FDF                                     fsr2l 000FD9  
                                   pclat 000FFA                    __size_of_vscp_getZone 000E  
                    i1WriteTimer0@timer0 0001                         _vscp_writeAppReg 0622  
                            _vscp_minute 00EB                              _vscp_second 00F0  
                                   prodh 000FF4                                     prodl 000FF3  
                                   start 014E                     doActionPulse@dmflags 0018  
          __size_of_vscp_doOneSecondWork 0098                        vscp_getUserID@idx 0018  
                  __size_of_vscp_setGUID 0022                         _vscp_writeStdReg 5950  
              ECANReceiveMessage@dataLen 0023                    getVSCPFrame@pPriority 0066  
                   __end_of_getVSCPFrame 665A              __size_of_vscp_getSegmentCRC 000E  
                       __RegsToCANID@val 0018                         __RegsToCANID@ptr 0016  
                   __size_of_getCANFrame 0040                                    l10001 2F52  
                                  l10201 60F8                                    l10203 6100  
                                  l10131 627A                                    l10123 622E  
                                  l10115 61DC                                    l10213 6118  
                                  l10205 6108                                    l10301 07CE  
                                  l10231 61A4                                    l10207 6110  
                                  l10143 6C94                                    l10151 6C72  
                                  l10135 62E4                                    l10071 307E  
                                  l10217 6122                                    l10225 6184  
                                  l10401 0ADA                                    l10321 086A  
                                  l10081 3204                                    l10073 30C0  
                                  l10219 6162                                    l11027 4B44  
                                  l11051 54B2                                    l10237 61C6  
                                  l10421 0B76                                    l10341 0906  
                                  l11029 4B82                                    l11061 54F8  
                                  l11053 54C0                                    l10183 60B4  
                                  l10511 0E6A                                    l10263 06B4  
                                  l10255 0686                                    l11063 5506  
                                  l11055 54CE                                    l11071 5530  
                                  l11047 5488                                    l11039 5436  
                                  l10087 3258                                    _B0CON 000E20  
                                  l11321 694E                                    l10441 0C12  
                                  l10361 09A2                                    l10281 0732  
                                  l10273 06FC                                    l11065 5514  
                                  l11057 54DC                                    l11073 5572  
                                  l11049 54A4                                    l11081 55CE  
                                  l10089 32D4                                    l10195 60E0  
                                  l10179 60A0                                    l11323 6958  
                                  l10611 123E                                    l10531 0F2E  
                                  l10507 0E40                                    l11067 5522  
                                  l11059 54EA                                    l11163 5364  
                                  l11091 5268                                    l10197 60E8  
                                  l10189 60D2                                    l11317 6916  
                                  l11501 50EC                                    l10461 0CAE  
                                  l10381 0A3E                                    l11165 53A6  
                                  l11173 5402                                    l10199 60F0  
                                  l11335 65DA                                    l11511 5112  
                                  l10631 1302                                    l10607 1214  
                                  l10551 0FF2                                    l10527 0F04  
                                  _B1CON 000E30                                    l11417 69B2  
                                  l10721 16EC                                    l10705 15D0  
                                  ?_doDM 0001                                    l11531 5156  
                                  l11523 513A                                    l11515 5120  
                                  l11507 5104                                    l10731 184A  
                                  l10723 1732                                    l10715 161A  
                                  l10651 13C4                                    l10627 12D8  
                                  l10571 10B6                                    l10547 0FC8  
                                  l10491 0DA6                                    l10483 0D4A  
                                  l11099 52BA                                    l11293 6B58  
                                  l11541 51B6                                    l11461 6D18  
                                  l10733 1890                                    l10725 1778  
                                  l10717 1660                                    l10485 0D90  
                                  l11621 5A72                                    l10901 3BA0  
                                  l11367 6A88                                    l11551 5218  
                                  l11527 5148                                    l11519 512C  
                                  l10751 19AC                                    l10727 17BE  
                                  l10719 16A6                                    l10671 1486  
                                  l10647 139C                                    l10591 117A  
                                  l10567 108C                                    _B2CON 000E40  
                                  l11481 50A0                                    l11561 5242  
                                  l11473 5080                                    l10825 387E  
                                  l10817 3860                                    l10809 34E2  
                                  l10761 1B0A                                    l10753 19F2  
                                  l10729 1804                                    l10737 18D6  
                                  l11609 5A1E                                    l11641 5ACA  
                                  l10843 39CA                                    l10851 3AD0  
                                  l10763 1B50                                    l10755 1A38  
                                  l10771 1C22                                    l10739 191A  
                                  l10667 145E                                    l10587 1150  
                                  l11557 5230                                    l11493 50CC  
                                  l11485 50B0                                    l11477 5092  
                                  l10829 399E                                    l10853 3B06  
                                  l10765 1B96                                    l10757 1A7E  
                                  l10749 1966                                    l10773 1C66  
                                  l10693 1546                                    l11637 5ABA  
                                  l11629 5A96                                    l11573 6C5C  
                                  l11661 684E                                    l11653 6830  
                                  l10909 3BF2                                    l10847 3A92  
                                  l10767 1BDC                                    l10759 1AC4  
                                  l10687 1520                                    l10695 158A  
                                  l11639 5AC4                                    l11591 59A6  
                                  l11663 6856                                    _B3CON 000E50  
                                  l11497 50DA                                    l11489 50BE  
                                  l10785 1CB4                                    l11585 597C  
                                  l11665 685A                                    l11673 6878  
                                  l11657 683C                                    l10961 402C  
                                  l10891 6406                                    l10971 4884  
                                  l10797 1D40                                    l11597 59CA  
                                  l11677 6886                                    l11669 686E  
                                  l10957 3FC2                                    _B4CON 000E60  
          __size_of_SendInformationEvent 0070                                    l10979 48C0  
          __size_of_vscp_getMajorVersion 0004                                    _B5CON 000E70  
             __end_of_vscp_goActiveState 6C16            ??_vscp_writeNicknamePermanent 001C  
                                  ?_main 0001                                    ?_init 0001  
                 ?_vscp_goBootloaderMode 001B                            i1_WriteTimer0 6E0C  
                                  _EEADR 000FA9                          __end_of___awmod 6890  
                _vscp_handleDropNickname 69BC                                    _BSEL0 000DF8  
                                  u10255 5B18                                    _T0CON 000FD5  
                                  u10265 5B38                                    u12105 33D4  
                                  u10275 5B8A                                    u12124 61F2  
                                  u12125 61EC                                    u13110 38A0  
                                  u13120 38EE                                    u10625 4734  
                                  u10635 474E                                    u13115 3894  
                                  u12075 3376                                    u10645 4768  
                                  u13125 38E2                                    u12085 3390  
                                  u13214 3A60                                    u10655 4792  
                                  u13215 3A58                                    u13135 3940  
                                  u12095 33AA                                    u13144 395E  
                                  u13145 3956                                    u10594 45B2  
                                  u10595 45AA                                    u11804 2D98  
                                  u13085 3612                                    u11805 2D90  
                                  u11734 2C9C                                    u11654 2BA4  
                                  u10695 6B00                                    u13255 634E  
                                  u11735 2C94                                    u11655 2B9C  
                                  u10696 6B02                                    u13184 3A12  
                                  u13185 3A0C                                    u14330 51B0  
                                  u13194 3A32                                    u13195 3A2C  
                                  u13284 3BB6                                    u13285 3BB0  
                                  u13534 544C                                    u11774 2D2C  
                                  u11694 2C0C                                    u14335 51A6  
                                  u13535 5446                                    u11775 2D24  
                                  u11695 2C04                                    u14360 5210  
                                  u13464 4894                                    u13624 527E  
                                  u11864 2EA8                                    u13465 4890  
                                  u13625 5278                                    u11865 2EA2  
                                  u11884 2F6C                                    u14365 5206  
                                  u11885 2F64                                    u13920 6642  
                                  u13925 6636                                    i1l400 00EE  
                                  i1l401 0100                                    i1l402 00FE  
                                  i1l403 0108                                    i1l393 0106  
                                  i1l394 00A8                                    i1l395 00AE  
                                  i1l396 00DC                                    i1l397 00D2  
                                  i1l398 00D6                                    i1l399 0102  
                        sendCANFrame@dlc 0080                                    _MSEL0 000DF0  
                                  _MSEL1 000DF1                                    _MSEL2 000DF2  
                                  _IRXIF 007D27                                    _TMR0H 000FD7  
                                  _TMR0L 000FD6       __end_of_vscp_readNicknamePermanent 6E48  
             _vscp_readNicknamePermanent 6E3A                                    _PORTA 000F80  
                                  _PORTB 000F81                                    _PORTC 000F82  
                                  _TRISA 000F92                                    _TRISB 000F93  
                                  _TRISC 000F94                         ?_vscp_getSubzone 0001  
                         __CFG_EBTR0$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                           _vscp_getGUID 6DD6                                    doDM@i 00BC  
                          __CFG_WRTD$OFF 000000                           Read_b_eep@badd 0016  
                         __CFG_EBTRB$OFF 000000                   Write_b_eep@GIE_BIT_VAL 001A  
                           _vscp_getZone 6E2C                       vscp_writeAppReg@rv 00AB  
                                  _hours 00E3                _vscp_getRegisterPagesUsed 6E70  
                 __size_of_vscp_getEvent 008E                             _vscp_setGUID 6C8C  
                                  tablat 000FF5                  _vscp_getSubMinorVersion 6E7C  
                                  plusw2 000FDB                                    status 000FD8  
             __end_of_vscp_sendHeartBeat 6BE4                     _ECANSetOperationMode 6D7A  
                        __initialization 6C16                             __end_of_doDM 44CA  
                           __end_of_main 5950                             __end_of_init 65B0  
                       ?_vscp_readAppReg 0018                               _Read_b_eep 6DFA  
                _interrupt_at_low_vector 0018                         __end_of_Busy_eep 6E70  
                         doDM@class_mask 00B2                           __CFG_OSC$HSPLL 000000  
                      ??_ECANSendMessage 0029                           ?i1_WriteTimer0 0001  
                                 ??_doDM 00AA                         ?_vscp_readStdReg 001A  
                  getVSCPFrame@pvscptype 0062                   ??_vscp_restoreDefaults 001E  
                                 ??_main 0125                                   ??_init 001A  
          __size_of_vscp_handleHeartbeat 0058                 ??_vscp_getManufacturerId 0019  
               ??_vscp_setManufacturerId 001D                 _vscp_handleProtocolEvent 1D48  
                          __activetblptr 000002                        __RegsToCANID@type 001A  
             ECANReceiveMessage@msgFlags 0025            doApplicationOneSecondWork@bOn 00AA  
              __size_of__ECANPointBuffer 0094                                   _B0TXEN 006FC2  
                                 _B1TXEN 006FC3                                   _B2TXEN 006FC4  
                                 _B3TXEN 006FC5                                   _B4TXEN 006FC6  
                                 _B5TXEN 006FC7                   __size_of_doActionPulse 0312  
             ECANReceiveMessage@savedPtr 0028                                   _CANCON 000F6F  
                                 _EEDATA 000FA8                                   _EECON2 000FA7  
                                 _CIOCON 000F73                            doDM@type_mask 00B5  
                    _channel_pulse_flags 00D5                       vscp_writeStdReg@rv 0024  
                          ?_init_app_ram 0001                                   _MDSEL0 007BBE  
                                 _MDSEL1 007BBF                               _OpenTimer0 6CD0  
                                 i1l8501 00E8                                   i1l8503 00F6  
                                 i1l8505 00F8                                   i1l8507 0102  
                                 i1l8509 0108                                   i1l8471 005C  
                                 i1l8481 0096                                   i1l8473 0064  
                                 i1l8491 00C6                                   i1l8483 009E  
                                 i1l8475 0070                                   i1l8493 00CE  
                                 i1l8485 00A8                                   i1l8477 0074  
                                 i1l8495 00D6                                   i1l8487 00B0  
                                 i1l8479 007C                                   i1l8489 00BC  
                                 i1l8497 00DC                                   i1l8499 00E6  
                        _init_app_eeprom 55E0                      _channel_pulse_timer 0126  
                                 _RXB0IF 007D20                                   _RXB1IF 007D21  
                                 _RXF1EN 006EA1                   ECANReceiveMessage@data 0021  
                 ECANReceiveMessage@mode 002B                   ECANReceiveMessage@temp 002C  
                      getVSCPFrame@pData 006A                        getVSCPFrame@pSize 0068  
                                 __IT_ID 00DD                       _vscp_newNodeOnline 6A08  
                  ?_ECANSetOperationMode 0016                       __CANIDToRegs@Value 001F  
 vscp_handleProtocolEvent@page_save_1403 0102                           getCANFrame@pid 002F  
                         __CFG_STVREN$ON 000000                                ??___awmod 001A  
                          _vscp_getEvent 6786                                   _doWork 6E88  
                       OpenTimer0@config 0016                      ?_vscp_newNodeOnline 0001  
              ??_vscp_handleDropNickname 001C                      vscp_writeAppReg@bOn 00AA  
        calculateSetFilterMask@rowfilter 002E               calculateSetFilterMask@mask 0026  
                    vscp_writeAppReg@reg 00A2               __end_of_vscp_setSegmentCRC 6D64  
                    vscp_writeAppReg@val 00A3                                   clear_0 6C1C  
                                 clear_1 6C28                                   clear_2 6C34  
                        ___awmod@divisor 0018                          ___awmod@counter 001B  
                          ?_sendCANFrame 007C             vscp_handleProtocolEvent@byte 0110  
                __size_of_vscp_getUserID 0012                            _vscp_nickname 00EC  
                          _vscp_errorcnt 00E8                             __mediumconst 0000  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                    vscp_setSegmentCRC@crc 001B  
              ??_vscp_getSubMinorVersion 0016     __size_of_vscp_getBootLoaderAlgorithm 0004  
                         ??_init_app_ram 0060                     ??_vscp_newNodeOnline 0031  
                        doActionToggle@i 00A8                               __accesstop 0060  
                __end_of__initialization 6C3A            __size_of_vscp_getMinorVersion 0004  
                        doActionStatus@i 00A8                          _current_iostate 00D7  
                  __size_of_getVSCPFrame 00AA                       _vscp_writeRegister 6C44  
              ??_interrupt_at_low_vector 0005                  __size_of_vscp_sendEvent 003E  
                         __pcstackCOMRAM 0001                           ?_vscp_getEvent 0001  
                          _doActionPulse 487A              __end_of_vscp_check_pstorage 6BAE  
                __size_of_vscp_setUserID 001A                              ?_Read_b_eep 0016  
                        ??i1_WriteTimer0 0003                      ?_vscp_writeRegister 00AC  
                         ??_sendCANFrame 002A                               _doActionOn 3B8E  
                ?_calculateSetFilterMask 0001            calculateSetFilterMask@lastOID 0025  
             __end_of_vscp_getFamilyCode 6DB2                            ?__RegsToCANID 0016  
            __size_of_ECANReceiveMessage 0288                       sendVSCPFrame@pData 0089  
             __end_of_vscp_getFamilyType 6DA0          __size_of_vscp_getManufacturerId 0012  
                vscp_writeRegister@value 00AD          __size_of_vscp_setManufacturerId 0022  
               __end_of_vscp_writeAppReg 1D48                   getVSCPFrame@pvscpclass 0060  
                __end_of_init_app_eeprom 57A4              __end_of_vscp_setControlByte 6D4E  
               __end_of_vscp_writeStdReg 5ACE            calculateSetFilterMask@rowmask 0021  
                     __RegsToCANID@Value 001D                     ??_vscp_writeRegister 0035  
        __end_of_vscp_handleDropNickname 6A08                             _getVSCPFrame 65B0  
                             __pbssBANK0 00BD                               __pbssBANK1 0126  
                            ?_OpenTimer0 0016               __end_of_vscp_getBufferSize 6E78  
                              ?_Busy_eep 0001                    vscp_writeRegister@reg 00AC  
                 ??_ECANSetOperationMode 0017                             __IT_INT_MASK 00DE  
                           __IT_SAVE_BSR 00DF       __size_of_vscp_getRegisterPagesUsed 0004  
                         ?_doActionPulse 0018          __end_of_vscp_getSubMinorVersion 6E80  
               ECANSetOperationMode@mode 0016                                  _B0RXFUL 007107  
                                _B1RXFUL 007187                     __ECANRxFilterHitInfo 00DB  
                                _B2RXFUL 007207                                  _B3RXFUL 007287  
                                _B4RXFUL 007307                                  ?_doWork 0001  
                ??_vscp_goBootloaderMode 001C                                  _B5RXFUL 007387  
         __end_of_calculateSetFilterMask 3B8E                  __size_of_doActionToggle 01CE  
                       WriteTimer0@timer 0018                  __size_of_doActionStatus 01CC  
                                _ECANCON 000F77                            ??_WriteTimer0 0018  
                         ??__RegsToCANID 001B                            ??_Write_b_eep 0019  
                  sendVSCPFrame@priority 0087                                  _BRGCON1 000F70  
                                _BRGCON2 000F71                                  _BRGCON3 000F72  
         SendInformationEvent@eventClass 0031                      vscp_writeStdReg@reg 001E  
           __end_of_vscp_doOneSecondWork 66F2              ?_vscp_readNicknamePermanent 0001  
                  sendVSCPFrame@vscptype 0085                            ??_doActionOff 00A4  
        __end_of_interrupt_at_low_vector 014E                 vscp_readStdReg@code_1376 0024  
                      sendCANFrame@pdata 0081                    _vscp_handleProbeState 5C42  
                                _RXB0CON 000F60                                  _RXB1CON 000F50  
                                _RXB0FUL 007B07                         __ECANPointBuffer 66F2  
             __end_of_vscp_getMatrixInfo 6B76                                  _TXB0CON 000F40  
                                _TXB1CON 000F30                                  _TXB2CON 000F20  
                                _RXFCON0 000DD4                                  _RXFCON1 000DD5  
                  doActionStatus@dmflags 00A2                       _vscp_goActiveState 6BE4  
                 __size_of_sendVSCPFrame 0114             __end_of_SendInformationEvent 6900  
           __end_of_vscp_getMajorVersion 6E88                      __size_of_Read_b_eep 0012  
                     __size_of_vscp_init 00FA                               ??_Busy_eep 0016  
                SendInformationEvent@idx 0030                   _vscp_getManufacturerId 6DB2  
                 _vscp_setManufacturerId 6C6A                          _ECANSendMessage 4E14  
                    ?_vscp_goActiveState 0001                                  __Hparam 0000  
                        ??_vscp_getEvent 0036                                  __Lparam 0000  
                     _vscp_node_substate 00EE               __end_of_vscp_getSegmentCRC 6E56  
             ??_vscp_handleProtocolEvent 00AE                            ??_getCANFrame 0035  
                           doActionOff@i 00A7        __end_of_vscp_getRegisterPagesUsed 6E74  
               __size_of_vscp_getMDF_URL 0016                                  ___awmod 6814  
                        getCANFrame@pdlc 0031                                _FIFOEMPTY 007BA7  
                        __size_of_doWork 0002                             __psmallconst 0600  
                   __end_of_init_app_ram 487A                       _vscp_sendHeartBeat 6BAE  
                                __pcinit 6C16                           _vscp_deviceURL 0600  
                            ?_doActionOn 00A2                                  __ramtop 0600  
                    __size_of_OpenTimer0 001E                                  __ptext0 57A4  
                                __ptext1 6E88                                  __ptext2 2B24  
                                __ptext3 665A                                  __ptext4 6BAE  
                                __ptext5 6E1E                                  __ptext6 6E2C  
                                __ptext7 6E56                                  __ptext8 403E  
                                __ptext9 5246                           _vscp_getUserID 6DC4  
                              _T0CONbits 000FD5                     ??_vscp_goActiveState 0031  
                       ___awmod@dividend 0016                    vscp_writeStdReg@value 001F  
                    ?_vscp_sendHeartBeat 0031                 ??_vscp_handleSetNickname 001C  
                                _minutes 00E4                                  _seconds 00E5  
                    __end_of_WriteTimer0 6DFA                         ?_init_app_eeprom 0001  
                    __end_of_Write_b_eep 6B06                        vscp_readAppReg@rv 001A  
                     vscp_getMDF_URL@idx 0016            vscp_handleProtocolEvent@bytes 0106  
                   end_of_initialization 6C3A                                  init@dir 001B  
                    __end_of_doActionOff 62F6             __end_of_vscp_handleHeartbeat 69BC  
               __size_of_vscp_getSubzone 000E                            __Lmediumconst 0000  
                   __end_of_sendCANFrame 6964                vscp_handleProtocolEvent@i 0112  
              vscp_handleProtocolEvent@j 0113                vscp_handleProtocolEvent@k 010D  
                        ??_doActionPulse 001A                     ??_vscp_sendHeartBeat 0033  
                         _vscp_sendEvent 6A8C                        ECANSendMessage@id 0021  
                      ECANSendMessage@pb 0060                                  postdec2 000FDD  
                __size_of_ECANInitialize 016C                           _vscp_setUserID 6CEE  
                                postinc0 000FEE                                  postinc2 000FDE  
                 __end_of_vscp_deviceURL 0620      __end_of_vscp_writeNicknamePermanent 6D7A  
            _vscp_writeNicknamePermanent 6D64                       __ECANPointBuffer@b 0016  
                          _sendVSCPFrame 62F6                   __end_of_vscp_getUserID 6DD6  
           ?_vscp_getBootLoaderAlgorithm 0001                                _RXM0EXIDM 0078CB  
                      __end_of_vscp_init 6504                           _vscp_probe_cnt 00EF  
                              _PORTCbits 000F82                      __end_of_getCANFrame 6A8C  
          __size_of_vscp_restoreDefaults 000A                   ?_vscp_handleProbeState 0001  
               __size_of_vscp_readAppReg 014C                         doActionPulse@arg 0019  
                         _vscp_statuscnt 003D                 __size_of_vscp_readStdReg 01E6  
                       doActionPulse@val 001E                       _vscp_setSegmentCRC 6D4E  
             vscp_handleProtocolEvent@cb 010B                  __end_of_ECANSendMessage 5060  
                      vscp_readStdReg@rv 002A                            ?__CANIDToRegs 0016  
                            doDM@dmflags 00BB                     __end_of__RegsToCANID 5C42  
                    __size_of_doActionOn 04B0                      ?_vscp_setSegmentCRC 001B  
                 __end_of_vscp_sendEvent 6ACA                               _vscp_error 6E56  
                   _vscp_doOneSecondWork 665A                       i1WriteTimer0@timer 0003  
                             _vscp_timer 0038                   __end_of_vscp_setUserID 6D08  
                 vscp_sendHeartBeat@zone 0031                             ??_Read_b_eep 0018  
                         ?_sendVSCPFrame 0083              doApplicationOneSecondWork@i 00AC  
                         _doActionToggle 5246                           _doActionStatus 5414  
                        ?_vscp_getUserID 0018                           __end_of_doWork 6E8A  
           __end_of_vscp_getMinorVersion 6E84                              _WriteTimer0 6DE8  
                   _SendInformationEvent 6890                     _vscp_getMajorVersion 6E84  
                            _Write_b_eep 6ACA                     ??_vscp_setSegmentCRC 001C  
                      ??_vscp_getMDF_URL 0017            ??_vscp_getBootLoaderAlgorithm 0016  
                              ___DCDelay 00FF                        ?_vscp_writeAppReg 00A2  
                    start_initialization 6C16                              _doActionOff 61CA  
        __size_of_vscp_handleSetNickname 0038                       ??_vscp_writeAppReg 00A4  
                      ?_vscp_writeStdReg 001E                      __CFG_BOREN$BOACTIVE 000000  
            __size_of_vscp_newNodeOnline 0044                             ??_OpenTimer0 0017  
                     ??_vscp_writeStdReg 0020                       _vscp_getFamilyCode 6DA0  
                         ??__CANIDToRegs 001D                       _vscp_getFamilyType 6D8E  
               _channel_protection_timer 00BD                         doDM@class_filter 00B0  
                     __end_of_Read_b_eep 6E0C                      sendVSCPFrame@nodeid 0086  
                      _vscp_readRegister 6D08                          ?_vscp_sendEvent 0001  
vscp_handleProtocolEvent@bytes_this_time 010A                    ?_vscp_doOneSecondWork 0001  
                      __size_of_Busy_eep 0006                    ECANReceiveMessage@ptr 002D  
                    ?_vscp_getFamilyCode 0016                       ?_vscp_readRegister 002B  
       __end_of_vscp_handleProtocolEvent 2B24                          ?_vscp_setUserID 001B  
                              _doDM$2281 00B6                                _doDM$2282 00B7  
                              _doDM$2283 00B8                                _doDM$2284 00B9  
                              _doDM$2285 00BA                      ?_vscp_getFamilyType 0016  
                  __size_of_init_app_ram 03B0                 ?_vscp_handleDropNickname 0001  
                 __end_of_doActionToggle 5414                        ??_vscp_getSubzone 0018  
                 __end_of_doActionStatus 55E0                 __end_of__ECANPointBuffer 6786  
                      __CANIDToRegs@type 001C                              _getCANFrame 6A4C  
                               ??_doWork 0016                       _vscp_getBufferSize 6E74  
            vscp_handleProtocolEvent@len 0107                           doActionOff@arg 00A3  
            vscp_handleProtocolEvent@pos 0105               __end_of_ECANReceiveMessage 4E14  
                         doActionOff@val 00A6                      ??_vscp_readRegister 002C  
         __size_of_vscp_goBootloaderMode 0022                    ?_SendInformationEvent 0030  
                  ?_vscp_getMajorVersion 0001                    __end_ofi1_WriteTimer0 6E1E  
          __end_of_vscp_goBootloaderMode 6CD0                     _vscp_handleHeartbeat 6964  
                     __end_of_OpenTimer0 6CEE      __size_of_doApplicationOneSecondWork 0998  
                    ?_vscp_getBufferSize 0001                           doActionPulse@i 001F  
           __size_of_vscp_check_pstorage 0038                     ??_vscp_getFamilyCode 001A  
               ?_vscp_getSubMinorVersion 0001                              __pbssCOMRAM 0036  
                   ??_vscp_getFamilyType 001A                          __IT_SAVE_STATUS 00E0  
                          ?_vscp_getGUID 0018                            __pcstackBANK0 0060  
                          __pcstackBANK1 0100                         _vscp_alarmstatus 00E7  
                          ?_vscp_getZone 0001                    __size_of_sendCANFrame 0064  
                ?_vscp_getManufacturerId 0018                  ?_vscp_setManufacturerId 001B  
                          ?_vscp_setGUID 001B              __size_of_vscp_writeRegister 0026  
                       ?_ECANSendMessage 0021                        ??_vscp_readAppReg 0019  
                      sendVSCPFrame@size 0088                __end_of_vscp_readRegister 6D22  
                           _init_app_ram 44CA             __size_of_vscp_setControlByte 0016  
               ?_interrupt_at_low_vector 0001                        ??_vscp_readStdReg 001B  
                   ??_vscp_getBufferSize 0016                                __pnvBANK0 00FF  
                          __IT_SAVE_WREG 00E1                              ?_vscp_error 0001  
                     _vscp_getMatrixInfo 6B3E                   _vscp_handleSetNickname 6B06  
          __size_of_ECANSetOperationMode 0014                          ??_sendVSCPFrame 008B  
                        ?_doActionToggle 00A2                           _ECANInitialize 5DB4  
                        ?_doActionStatus 00A2                                 ?___awmod 0016  
                    ?_vscp_getMatrixInfo 0016                  calculateSetFilterMask@i 0033  
                calculateSetFilterMask@j 0032                          vscp_getGUID@idx 0018  
                            __pintcodelo 0018                             ??_doActionOn 00A4  
                  ?_vscp_handleHeartbeat 0001         vscp_handleProtocolEvent@len_1393 0109  
                vscp_readStdReg@idx_1377 0029               vscp_setManufacturerId@data 001C  
                           _sendCANFrame 6900                              __smallconst 0600  
                      WriteTimer0@timer0 0016                       _vscp_getSegmentCRC 6E48  
                         ??_vscp_getGUID 0019                           ??_vscp_getZone 0018  
                            doActionOn@i 00A9           __end_of_vscp_getManufacturerId 6DC4  
         __end_of_vscp_setManufacturerId 6C8C                    __size_of__RegsToCANID 0174  
       vscp_handleProtocolEvent@pos_1392 0108                          doDM@type_filter 00B4  
                         ??_vscp_setGUID 001D                      ?_vscp_getSegmentCRC 0001  
                   ??_vscp_getMatrixInfo 0018                         _vscp_configtimer 00D9  
        SendInformationEvent@eventTypeId 0032                   ??_vscp_doOneSecondWork 0034  
                 sendVSCPFrame@vscpclass 0083                                 _LATAbits 000F89  
                               _LATBbits 000F8A                     _vscp_getMinorVersion 6E80  
                               _LATCbits 000F8B                                _sendTimer 00E6  
                     __end_of_doActionOn 403E                   __end_of_ECANInitialize 5F20  
                               i1u980_20 00F6                                 i1u980_21 00F4  
                       ECANSendMessage@i 0079                         ECANSendMessage@j 0074  
                               i1u974_20 0064                                 i1u974_21 0062  
                               i1u975_20 009E                                 i1u975_21 009C  
                               i1u976_20 00BC                                 i1u976_21 00BA  
                               i1u977_20 00C6                                 i1u977_21 00C4  
                               i1u978_20 00CE                                 i1u978_21 00CC  
                               i1u979_20 00E6                                 i1u979_21 00E4  
                  __end_of_vscp_getEvent 6814                                 _RXF0EIDH 000F02  
                               _RXF0EIDL 000F03                                 _RXB0OVFL 007BA7  
                               _RXF1EIDH 000F06                                 _RXF1EIDL 000F07  
                               _RXB1OVFL 007BA6                                 _RXF0SIDH 000F00  
                               _RXF0SIDL 000F01                                 _RXF1SIDH 000F04  
                               _RXF1SIDL 000F05                                 _RXM0EIDH 000F1A  
                               _RXM0EIDL 000F1B                          vscp_getEvent@rv 0074  
                               _RXM1EIDH 000F1E                                 _RXM1EIDL 000F1F  
                   ??_vscp_getSegmentCRC 0018                                 _RXFBCON0 000DE0  
                               _RXFBCON1 000DE1                                 _RXFBCON2 000DE2  
                               _RXFBCON3 000DE3                                 _RXFBCON4 000DE4  
                               _RXFBCON5 000DE5                                 _RXFBCON6 000DE6  
                               _RXFBCON7 000DE7                                 _RXM0SIDH 000F18  
                               _RXM0SIDL 000F19                   ??_SendInformationEvent 0033  
                               _RXM1SIDH 000F1C                   ??_vscp_getMajorVersion 0016  
                               _RXM1SIDL 000F1D               ?_vscp_getRegisterPagesUsed 0001  
                ??_vscp_handleProbeState 0032                       vscp_setUserID@data 001C  
                   __end_of__CANIDToRegs 607E                             __RegsToCANID 5ACE  
                     _vscp_probe_address 003C                          Write_b_eep@badd 0016  
                        Write_b_eep@bdat 0018                       doActionOff@dmflags 00A2  
            __size_of_vscp_goActiveState 0032                      getVSCPFrame@pNodeId 0064  
                              _vscp_init 640A                                _vscp_imsg 00F1  
                              _vscp_hour 00E9                                _vscp_omsg 003E  
                       vscp_setGUID@data 001C        __size_of_vscp_handleProtocolEvent 0DDC  
                    __size_of_vscp_error 000A                ?_vscp_handleProtocolEvent 0001  
               SendInformationEvent@data 009F                                 __IT_DATA 00DC  
   __size_of_vscp_writeNicknamePermanent 0016       __end_of_doApplicationOneSecondWork 34BC  
             _doApplicationOneSecondWork 2B24                         _vscp_page_select 0036  
                            _INTCON2bits 000FF1               __size_of_vscp_readRegister 001A  
                               ___DCByte 00E2                        _measurement_clock 00D1  
                               _Busy_eep 6E6A                    ?_vscp_getMinorVersion 0001  
               __size_of_init_app_eeprom 01C4             __end_of_vscp_restoreDefaults 6E6A  
                             _EECON1bits 000FA6                          ?_ECANInitialize 0001  
               ??_calculateSetFilterMask 0060                                 __Hrparam 0000  
                   ECANReceiveMessage@id 001F              __size_of_vscp_sendHeartBeat 0036  
                       ??_vscp_getUserID 0019                          _vscp_getMDF_URL 6D22  
                               __Lrparam 0000                    __end_of_doActionPulse 4B8C  
                       __CANIDToRegs@val 0018                         __CANIDToRegs@ptr 0016  
                          doActionOn@arg 00A3                            doActionOn@val 00A8  
 doApplicationOneSecondWork@iodirections 00A8                         _vscp_initledfunc 003B  
                       __size_of___awmod 007C                   ??_vscp_handleHeartbeat 001C  
                       getCANFrame@flags 0035                             ?_WriteTimer0 0016  
               vscp_writeAppReg@val_1165 00A8                         getCANFrame@pdata 0033  
                           ?_Write_b_eep 0016               vscp_writeAppReg@bInfoEvent 00A9  
                             ?_vscp_init 0001                             ?_doActionOff 00A2  
                               __ptext10 5414                                 __ptext11 487A  
                               __ptext20 6CEE                                 __ptext12 3B8E  
                               __ptext21 6C6A                                 __ptext13 61CA  
                               __ptext30 6DA0                                 __ptext22 6C8C  
                               __ptext14 1D48                                 __ptext31 6E74  
                               __ptext23 0622                                 __ptext15 6814  
                               __ptext40 6A08                                 __ptext32 6E78  
                               __ptext24 34BC                                 __ptext16 6C44  
                               __ptext41 69BC                                 __ptext33 6DB2  
                               __ptext25 6890                                 __ptext17 5950  
                               __ptext50 6A8C                                 __ptext42 640A  
                               __ptext34 6DC4                                 __ptext26 6D08  
                               __ptext18 6E60                                 __ptext51 62F6  
                               __ptext43 6E3A                                 __ptext35 6D22  
                               __ptext27 5060                                 __ptext19 55E0  
                               __ptext60 66F2                                 __ptext52 6900  
                               __ptext44 6B06                                 __ptext36 6DD6  
                               __ptext28 6E70                                 __ptext61 6B76  
                               __ptext53 4E14                                 __ptext45 6964  
                               __ptext37 6E7C                                 __ptext29 6D8E  
                               __ptext70 44CA                                 __ptext62 6D38  
                               __ptext54 5F20                                 __ptext46 6B3E  
                               __ptext38 6E80                                 __ptext71 6DE8  
                               __ptext63 6D4E                                 __ptext55 6786  
                               __ptext47 6CAE                                 __ptext39 6E84  
                               __ptext72 5DB4                                 __ptext64 6E48  
                               __ptext56 65B0                                 __ptext48 5C42  
                               __ptext73 6D7A                                 __ptext65 6D64  
                               __ptext57 6A4C                                 __ptext49 6BE4  
                               __ptext74 607E                                 __ptext66 6ACA  
                               __ptext58 4B8C                                 __ptext75 6DFA  
                               __ptext67 6E6A                                 __ptext59 5ACE  
                               __ptext68 6504                                 __ptext77 6E0C  
                               __ptext69 6CD0           vscp_goBootloaderMode@algorithm 001B  
              vscp_sendHeartBeat@subzone 0032                            ?_getVSCPFrame 0060  
                       ??_vscp_sendEvent 0030                          _vscp_getSubzone 6E1E  
           calculateSetFilterMask@filter 002A                         ??_vscp_setUserID 001D  
                          __size_of_doDM 048C                            __size_of_main 01AC  
                          __size_of_init 00AC                __size_of_vscp_writeAppReg 1726  
                    _vscp_check_pstorage 6B76                            init_app_ram@i 0018  
         vscp_handleProtocolEvent@i_1402 010C           vscp_handleProtocolEvent@i_1391 010F  
         vscp_handleProtocolEvent@i_1394 0111                     __end_of_vscp_getGUID 6DE8  
              __size_of_vscp_writeStdReg 017E                      ECANSendMessage@data 0025  
               ECANSendMessage@tempBSEL0 0075                             ?_getCANFrame 002F  
                    ECANSendMessage@mode 0072                     __end_of_vscp_getZone 6E3A  
                    ECANSendMessage@temp 0078                        ?__ECANPointBuffer 0016  
                      doActionOn@dmflags 00A2                        vscp_setUserID@idx 001B  
                   __end_of_vscp_setGUID 6CAE                       vscp_readAppReg@reg 0018  
                       vscp_sendEvent@rv 0030                       ??__ECANPointBuffer 0018  
         vscp_handleProtocolEvent@offset 0104                              _RXB0FILHIT0 007B00  
                        vscp_setGUID@idx 001B                         init_app_eeprom@i 001D  
                       init_app_eeprom@j 001C                      _vscp_setControlByte 6D38  
            __size_of_vscp_setSegmentCRC 0016                          _vscp_readAppReg 607E  
                   ?_vscp_check_pstorage 0001                              _RXB1CONbits 000F50  
       __size_of_vscp_handleDropNickname 004C                               _INTCONbits 000FF2  
           ??_vscp_readNicknamePermanent 0018                      ECANReceiveMessage@i 002A  
                        _vscp_guid_reset 003A                          _vscp_readStdReg 5060  
           vscp_handleDropNickname@bytes 001D               __end_of_vscp_newNodeOnline 6A4C  
                     _ECANReceiveMessage 4B8C                           ??_getVSCPFrame 006C  
                        _vscp_initbtncnt 00EA                          sendVSCPFrame@id 002C  
                               intlevel1 0000                   ??_vscp_getMinorVersion 0016  
                vscp_getMatrixInfo@pData 0016                  __end_of_vscp_getMDF_URL 6D38  
                   ?_vscp_setControlByte 001B                      ?_ECANReceiveMessage 001F  
                ?_vscp_handleSetNickname 0001                         ??_doActionToggle 00A4  
       __size_of_vscp_getSubMinorVersion 0004                         ??_doActionStatus 00A4  
                        _vscp_node_state 00ED                             ??_vscp_error 0016  
                ECANSendMessage@msgFlags 0028                      vscp_getMatrixInfo@i 0019  
        __size_of_calculateSetFilterMask 06D2                  vscp_setControlByte@ctrl 001B  
                     ECANSendMessage@ptr 007A                        ??_init_app_eeprom 001B  
                  __size_of__CANIDToRegs 015E      __size_of_vscp_readNicknamePermanent 000E  
    __end_of_vscp_getBootLoaderAlgorithm 6E7C              _vscp_getBootLoaderAlgorithm 6E78  
       __size_of_interrupt_at_low_vector 0136                   ECANSendMessage@dataLen 0027  
                    __ECANPointBuffer@pt 0018                     ??_ECANReceiveMessage 0027  
                  ??_vscp_check_pstorage 001C                   ECANSendMessage@buffers 0073  
                  _vscp_goBootloaderMode 6CAE             __end_of_ECANSetOperationMode 6D8E  
                   _vscp_restoreDefaults 6E60              __size_of_vscp_getFamilyCode 0012  
                            ??_vscp_init 0018                  __end_of_vscp_getSubzone 6E2C  
            __size_of_vscp_getFamilyType 0012                               _RXM1EXIDEN 0078EB  
             __end_of_vscp_writeRegister 6C6A                       __end_of_vscp_error 6E60  
                 ECANSendMessage@tempPtr 0076           __end_of_vscp_handleSetNickname 6B3E  
     vscp_handleProtocolEvent@bytes_1399 010E                    ??_vscp_setControlByte 001C  
                   vscp_readRegister@reg 002B             ??_doApplicationOneSecondWork 0100  
                           __CANIDToRegs 5F20                   __size_ofi1_WriteTimer0 0012  
      vscp_handleProtocolEvent@page_save 0100              __size_of_vscp_getBufferSize 0004  
      doApplicationOneSecondWork@ctrlreg 00AB                 __size_of_ECANSendMessage 024C  
                      doActionToggle@bOn 00A7                        doActionToggle@arg 00A3  
